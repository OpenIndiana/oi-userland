From 3c737a75d8f74ef34f520c31090d184ba62400d9 Mon Sep 17 00:00:00 2001
From: Mike Fleetwood <mike.fleetwood@googlemail.com>
Date: Sat, 15 Nov 2014 12:07:31 +0000
Subject: [PATCH] Stop executing external commands via a shell process (#740161)

[This patch applies to GParted 0.4.2..0.8.0]

Executing external commands via a shell process is slower, wasteful and
requires care to avoid dangers with shell expansion.  GParted 0.15.0
and later stopped executing external commands via a shell process as
part of the following commit.  Apply similar change to earlier code.

    Reduce threading (#685740)
    52a2a9b00a32996921ace055e71d0e09fb33c5fe

The GParted team thanks Wolfgang Ettlinger (discovery, analysis) from
the SEC Consult Vulnerability Lab (https://www.sec-consult.com/) for
responsibly reporting the identified issues and working with us as we
addressed them.

Also includes the change from the following commit released in GParted
0.8.1 to allow back porting of this fix to earlier code.

    Remove one level of quoting when spawning commands
    ba28423e7625629eb5e72f7f57e4c40dae191c1e

Bug #740161 - GParted 0.14.1 and earlier is susceptible to command
              injection
---
 src/Utils.cc |   38 ++++++++++++++++++++++++--------------
 1 files changed, 24 insertions(+), 14 deletions(-)

diff --git a/src/Utils.cc b/src/Utils.cc
index 95cb3fc..76e0b88 100644
--- a/src/Utils.cc
+++ b/src/Utils.cc
@@ -255,27 +255,37 @@ int Utils::execute_command( const Glib::ustring & command,
 
 	try
 	{
+		const Glib::ArrayHandle< std::string >& argv = Glib::shell_parse_argv( command );
+
 		if ( use_C_locale )
 		{
-			std::vector<std::string> envp, argv;
+			//Spawn command using the C language environment
+			std::vector<std::string> envp ;
 			envp .push_back( "LC_ALL=C" ) ;
 			envp .push_back( "PATH=" + Glib::getenv( "PATH" ) ) ;
 
-			argv .push_back( "sh" ) ;
-			argv .push_back( "-c" ) ;
-			argv .push_back( command ) ;
-
-			Glib::spawn_sync( ".",
-					  argv,
-					  envp,
-					  Glib::SPAWN_SEARCH_PATH,
-					  sigc::slot<void>(),
-					  &std_out,
-					  &std_error,
-					  &exit_status ) ;
+			Glib::spawn_sync( "."
+			                , argv
+			                , envp
+			                , Glib::SPAWN_SEARCH_PATH
+			                , sigc::slot<void>()
+			                , &std_out
+			                , &std_error
+			                , &exit_status
+			                ) ;
 		}
 		else
-			Glib::spawn_command_line_sync( "sh -c '" + command + "'", &std_out, &std_error, &exit_status ) ;
+		{
+			//Spawn command inheriting the parent's environment
+			Glib::spawn_sync( "."
+			                , argv
+			                , Glib::SPAWN_SEARCH_PATH
+			                , sigc::slot<void>()
+			                , &std_out
+			                , &std_error
+			                , &exit_status
+			                ) ;
+		}
 	}
 	catch ( Glib::Exception & e )
 	{
-- 
1.7.1

