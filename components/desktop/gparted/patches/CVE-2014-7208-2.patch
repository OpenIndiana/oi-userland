From e186db7cdf710f3491a8ba1edd5457dd196c45ea Mon Sep 17 00:00:00 2001
From: Mike Fleetwood <mike.fleetwood@googlemail.com>
Date: Wed, 12 Nov 2014 22:10:08 +0000
Subject: [PATCH] Resolve dependencies which relied on shell execution (#740161)

[This patch applies to GParted 0.4.2..0.11.0]

Resolve occurrences where file system specific actions were implemented
using mechanisms which depended on being executed via a shell process.
Adapt most to be implemented without using a shell process with the
remaining cases explicitly using the shell when needed.

Bug #740161 - GParted 0.14.1 and earlier is susceptible to command
              injection
---
 src/Utils.cc    |    1 +
 src/fat16.cc    |    8 +++++---
 src/fat32.cc    |    8 +++++---
 src/jfs.cc      |    2 +-
 src/reiserfs.cc |    2 +-
 src/xfs.cc      |    2 +-
 6 files changed, 14 insertions(+), 9 deletions(-)

diff --git a/src/Utils.cc b/src/Utils.cc
index 76e0b88..e1ca53a 100644
--- a/src/Utils.cc
+++ b/src/Utils.cc
@@ -263,6 +263,7 @@ int Utils::execute_command( const Glib::ustring & command,
 			std::vector<std::string> envp ;
 			envp .push_back( "LC_ALL=C" ) ;
 			envp .push_back( "PATH=" + Glib::getenv( "PATH" ) ) ;
+			envp .push_back( "MTOOLSRC=" + Glib::getenv( "MTOOLSRC" ) );
 
 			Glib::spawn_sync( "."
 			                , argv
diff --git a/src/fat16.cc b/src/fat16.cc
index 43c913a..19da949 100644
--- a/src/fat16.cc
+++ b/src/fat16.cc
@@ -101,7 +101,8 @@ void fat16::read_label( Partition & partition )
 	if( err_msg.length() != 0 )
 		partition .messages .push_back( err_msg );
 
-	Glib::ustring cmd = String::ucompose( "export MTOOLSRC=%1 && mlabel -s %2:", fname, dletter ) ;
+	setenv( "MTOOLSRC", fname, 1 );
+	Glib::ustring cmd = String::ucompose( "mlabel -s %1:", dletter );
 
 	if ( ! Utils::execute_command( cmd, output, error, true ) )
 	{
@@ -128,11 +129,12 @@ bool fat16::write_label( const Partition & partition, OperationDetail & operatio
 	Glib::ustring err_msg = "" ;
 	err_msg = Utils::create_mtoolsrc_file( fname, dletter, partition.get_path() ) ;
 
+	setenv( "MTOOLSRC", fname, 1 );
 	Glib::ustring cmd = "" ;
 	if( partition .label .empty() )
-		cmd = String::ucompose( "export MTOOLSRC=%1 && mlabel -c %2:", fname, dletter ) ;
+		cmd = String::ucompose( "mlabel -c %1:", dletter );
 	else
-		cmd = String::ucompose( "export MTOOLSRC=%1 && mlabel %2:\"%3\"", fname, dletter, Utils::fat_compliant_label( partition .label ) ) ;
+		cmd = String::ucompose( "mlabel %1:\"%2\"", dletter, Utils::fat_compliant_label( partition.label ) );
 	
 	operationdetail .add_child( OperationDetail( cmd, STATUS_NONE, FONT_BOLD_ITALIC ) ) ;
 	
diff --git a/src/fat32.cc b/src/fat32.cc
index 5c11a5b..01ca194 100644
--- a/src/fat32.cc
+++ b/src/fat32.cc
@@ -101,7 +101,8 @@ void fat32::read_label( Partition & partition )
 	if( err_msg.length() != 0 )
 		partition .messages .push_back( err_msg );
 
-	Glib::ustring cmd = String::ucompose( "export MTOOLSRC=%1 && mlabel -s %2:", fname, dletter ) ;
+	setenv( "MTOOLSRC", fname, 1 );
+	Glib::ustring cmd = String::ucompose( "mlabel -s %1:", dletter );
 
 	if ( ! Utils::execute_command( cmd, output, error, true ) )
 	{
@@ -128,11 +129,12 @@ bool fat32::write_label( const Partition & partition, OperationDetail & operatio
 	Glib::ustring err_msg = "" ;
 	err_msg = Utils::create_mtoolsrc_file( fname, dletter, partition.get_path() ) ;
 
+	setenv( "MTOOLSRC", fname, 1 );
 	Glib::ustring cmd = "" ;
 	if( partition .label .empty() )
-		cmd = String::ucompose( "export MTOOLSRC=%1 && mlabel -c %2:", fname, dletter ) ;
+		cmd = String::ucompose( "mlabel -c %1:", dletter );
 	else
-		cmd = String::ucompose( "export MTOOLSRC=%1 && mlabel %2:\"%3\"", fname, dletter, Utils::fat_compliant_label( partition .label ) ) ;
+		cmd = String::ucompose( "mlabel %1:\"%2\"", dletter, Utils::fat_compliant_label( partition.label ) );
 	operationdetail .add_child( OperationDetail( cmd, STATUS_NONE, FONT_BOLD_ITALIC ) ) ;
 	
 	int exit_status = Utils::execute_command( cmd, output, error ) ;
diff --git a/src/jfs.cc b/src/jfs.cc
index f6ac24a..64d0e36 100644
--- a/src/jfs.cc
+++ b/src/jfs.cc
@@ -77,7 +77,7 @@ FS jfs::get_filesystem_support()
 
 void jfs::set_used_sectors( Partition & partition ) 
 {
-	if ( ! Utils::execute_command( "echo dm | jfs_debugfs " + partition .get_path(), output, error, true ) )
+	if ( ! Utils::execute_command( "sh -c 'echo dm | jfs_debugfs " + partition.get_path() + "'", output, error, true ) )
 	{
 		//blocksize
 		index = output .find( "Block Size:" ) ;
diff --git a/src/reiserfs.cc b/src/reiserfs.cc
index 28c3c8b..9b55391 100644
--- a/src/reiserfs.cc
+++ b/src/reiserfs.cc
@@ -126,7 +126,7 @@ bool reiserfs::resize( const Partition & partition_new, OperationDetail & operat
 				partition_new .get_length(), GParted::UNIT_BYTE ) ) -1, true ) ;
 	}
 
-	exit_status = execute_command( str_temp, operationdetail ) ;
+	exit_status = execute_command( "sh -c '" + str_temp + "'", operationdetail );
 
 	return ( exit_status == 0 || exit_status == 256 ) ;
 }
diff --git a/src/xfs.cc b/src/xfs.cc
index a72e2ee..288ce54 100644
--- a/src/xfs.cc
+++ b/src/xfs.cc
@@ -275,7 +275,7 @@ bool xfs::copy( const Glib::ustring & src_part_path,
 						operationdetail .add_child( OperationDetail( _("copy file system") ) ) ;
 						
 						if ( ! execute_command( 
-							 "xfsdump -J - " + SRC + " | xfsrestore -J - " + DST,
+							 "sh -c 'xfsdump -J - " + SRC + " | xfsrestore -J - " + DST + "'",
 							 operationdetail .get_last_child() ) )
 						{
 							operationdetail .get_last_child() .set_status( STATUS_SUCCES ) ;
-- 
1.7.1

