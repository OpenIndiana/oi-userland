--- mate-applets-1.20.2/multiload/linux-proc.c	2018-05-29 14:01:21.000000000 +0000
+++ mate-applets-1.20.2/multiload/linux-proc.c.new	2018-06-07 20:35:00.109496448 +0000
@@ -115,6 +115,13 @@ GetDiskLoad (int Maximum, int data [3],
 
     read = write = 0;
 
+
+    /*
+      At the moment, Solaris can't get the read/write information for filesystem
+      so we would like to use disk to get them, later when some unstable interfaces
+      become stable or public, will use them
+    */
+    /*
     mountentries = glibtop_get_mountlist (&mountlist, FALSE);
 
     for (i = 0; i < mountlist.number; i++)
@@ -130,6 +137,10 @@ GetDiskLoad (int Maximum, int data [3],
         read += fsusage.read; write += fsusage.write;
     }
 
+    */
+    glibtop_fsusage fsusage;
+    glibtop_get_fsusage(&fsusage,"/"); /* "/" will not use, just as a input */
+    read = fsusage.read; write = fsusage.write;
     g_free(mountentries);
 
     readdiff  = read - lastread;
@@ -327,6 +338,7 @@ GetNet (int Maximum, int data [4], LoadG
         autoscaler_init(&scaler, 60, 501);
     }
 
+    netlist.flags = 1;
     devices = glibtop_get_netlist(&netlist);
 
     for(i = 0; i < netlist.number; ++i)
@@ -336,7 +348,12 @@ GetNet (int Maximum, int data [4], LoadG
 
         glibtop_get_netload(&netload, devices[i]);
 
-        g_return_if_fail((netload.flags & needed_netload_flags) == needed_netload_flags);
+        /* this is not correct, because after run get netlist, there are lots of net devices,
+           not all of them meet the requirement of needed_netload_flags, but we don't need to
+           exit, we can just ignore them, and try to continue with the next one */
+        if ((netload.flags & needed_netload_flags) != needed_netload_flags)
+            continue;
+
 
         if (!(netload.if_flags & (1L << GLIBTOP_IF_FLAGS_UP)))
             continue;
