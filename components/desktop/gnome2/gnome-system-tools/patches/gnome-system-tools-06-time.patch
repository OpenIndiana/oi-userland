diff -ru /jds/packages/BUILD/SUNWgnome-system-tools-2.14.0/gnome-system-tools-2.14.0/src/time/tz-map.c trunk/src/time/tz-map.c
--- /jds/packages/BUILD/SUNWgnome-system-tools-2.14.0/gnome-system-tools-2.14.0/src/time/tz-map.c	Mon Aug  8 20:00:04 2005
+++ trunk/src/time/tz-map.c	Fri Feb 17 14:29:27 2006
@@ -172,7 +172,7 @@
 	{
 		tz_loc = g_ptr_array_index (locs, i);
 
-		if (!strcmp(tz_location_get_zone(tz_loc), name))
+		if (tz_loc && !strcmp(tz_location_get_zone(tz_loc), name))
 		{
 			tz_location_get_position (tz_loc,
 						  &l_longitude, &l_latitude);
diff -ru /jds/packages/BUILD/SUNWgnome-system-tools-2.14.0/gnome-system-tools-2.14.0/src/time/tz.h trunk/src/time/tz.h
--- /jds/packages/BUILD/SUNWgnome-system-tools-2.14.0/gnome-system-tools-2.14.0/src/time/tz.h	Thu Oct 11 09:10:09 2001
+++ trunk/src/time/tz.h	Fri Feb 17 14:29:27 2006
@@ -27,7 +27,7 @@
 #define _E_TZ_H
 
 
-#define TZ_DATA_FILE "/usr/share/zoneinfo/zone.tab"
+#define TZ_DATA_FILE "/usr/share/lib/zoneinfo/tab/zone_sun.tab"
 
 
 typedef struct _TzDB TzDB;
--- /jds/packages/BUILD/SUNWgnome-system-tools-2.14.0/gnome-system-tools-2.14.0/interfaces/time.glade.in	Mon Jan 30 22:40:32 2006
+++ trunk-clean/interfaces/time.glade.in	Fri Mar  3 11:39:46 2006
@@ -16,8 +16,6 @@
   <property name="skip_pager_hint">False</property>
   <property name="type_hint">GDK_WINDOW_TYPE_HINT_NORMAL</property>
   <property name="gravity">GDK_GRAVITY_NORTH_WEST</property>
-  <property name="focus_on_map">True</property>
-  <property name="urgency_hint">False</property>
 
   <child>
     <widget class="GtkVBox" id="time_admin">
@@ -177,7 +175,7 @@
 	    <widget class="GtkCheckButton" id="ntp_use">
 	      <property name="visible">True</property>
 	      <property name="can_focus">True</property>
-	      <property name="label" translatable="yes">S_ynchronize clock with Internet servers:</property>
+	      <property name="label" translatable="yes" comments="SUN_BRANDING">Periodically s_ynchronize clock with Internet servers:</property>
 	      <property name="use_underline">True</property>
 	      <property name="relief">GTK_RELIEF_NORMAL</property>
 	      <property name="focus_on_click">True</property>
@@ -472,6 +470,106 @@
 	      <property name="y_options"></property>
 	    </packing>
 	  </child>
+
+	  <child>
+	    <widget class="GtkButton" id="synchronize_button">
+	      <property name="visible">True</property>
+	      <property name="can_focus">True</property>
+	      <property name="relief">GTK_RELIEF_NORMAL</property>
+	      <property name="focus_on_click">True</property>
+
+	      <child>
+		<widget class="GtkAlignment" id="alignment10">
+		  <property name="visible">True</property>
+		  <property name="xalign">0.5</property>
+		  <property name="yalign">0.5</property>
+		  <property name="xscale">0</property>
+		  <property name="yscale">0</property>
+		  <property name="top_padding">0</property>
+		  <property name="bottom_padding">0</property>
+		  <property name="left_padding">0</property>
+		  <property name="right_padding">0</property>
+
+		  <child>
+		    <widget class="GtkHBox" id="hbox50">
+		      <property name="visible">True</property>
+		      <property name="homogeneous">False</property>
+		      <property name="spacing">2</property>
+
+		      <child>
+			<widget class="GtkImage" id="image13">
+			  <property name="visible">True</property>
+			  <property name="stock">gnome-stock-timer</property>
+			  <property name="icon_size">4</property>
+			  <property name="xalign">0.5</property>
+			  <property name="yalign">0.5</property>
+			  <property name="xpad">0</property>
+			  <property name="ypad">0</property>
+			</widget>
+			<packing>
+			  <property name="padding">0</property>
+			  <property name="expand">False</property>
+			  <property name="fill">False</property>
+			</packing>
+		      </child>
+
+		      <child>
+			<widget class="GtkLabel" id="label114">
+			  <property name="visible">True</property>
+			  <property name="label" translatable="yes" comments="SUN_BRANDING">Synchronize _Now</property>
+			  <property name="use_underline">True</property>
+			  <property name="use_markup">False</property>
+			  <property name="justify">GTK_JUSTIFY_LEFT</property>
+			  <property name="wrap">False</property>
+			  <property name="selectable">False</property>
+			  <property name="xalign">0.5</property>
+			  <property name="yalign">0.5</property>
+			  <property name="xpad">0</property>
+			  <property name="ypad">0</property>
+			</widget>
+			<packing>
+			  <property name="padding">0</property>
+			  <property name="expand">False</property>
+			  <property name="fill">False</property>
+			</packing>
+		      </child>
+		    </widget>
+		  </child>
+		</widget>
+	      </child>
+	    </widget>
+	    <packing>
+	      <property name="left_attach">2</property>
+	      <property name="right_attach">3</property>
+	      <property name="top_attach">4</property>
+	      <property name="bottom_attach">5</property>
+	      <property name="x_options">fill</property>
+	      <property name="y_options"></property>
+	    </packing>
+	  </child>
+
+	  <child>
+	    <widget class="GtkLabel" id="synchronize_label">
+	      <property name="visible">True</property>
+	      <property name="label" translatable="yes" comments="SUN_BRANDING">Synchronize only once with Internet servers:</property>
+	      <property name="use_underline">False</property>
+	      <property name="use_markup">False</property>
+	      <property name="justify">GTK_JUSTIFY_LEFT</property>
+	      <property name="wrap">True</property>
+	      <property name="selectable">False</property>
+	      <property name="xalign">0</property>
+	      <property name="yalign">0.5</property>
+	      <property name="xpad">0</property>
+	      <property name="ypad">0</property>
+	    </widget>
+	    <packing>
+	      <property name="left_attach">0</property>
+	      <property name="right_attach">2</property>
+	      <property name="top_attach">4</property>
+	      <property name="bottom_attach">5</property>
+	      <property name="y_options"></property>
+	    </packing>
+	  </child>
 	</widget>
 	<packing>
 	  <property name="padding">0</property>
@@ -495,8 +593,6 @@
   <property name="skip_pager_hint">False</property>
   <property name="type_hint">GDK_WINDOW_TYPE_HINT_DIALOG</property>
   <property name="gravity">GDK_GRAVITY_NORTH_WEST</property>
-  <property name="focus_on_map">True</property>
-  <property name="urgency_hint">False</property>
   <property name="has_separator">False</property>
 
   <child internal-child="vbox">
@@ -776,8 +872,6 @@
   <property name="skip_pager_hint">False</property>
   <property name="type_hint">GDK_WINDOW_TYPE_HINT_DIALOG</property>
   <property name="gravity">GDK_GRAVITY_NORTH_WEST</property>
-  <property name="focus_on_map">True</property>
-  <property name="urgency_hint">False</property>
   <property name="has_separator">False</property>
 
   <child internal-child="vbox">

--- gnome-system-tools-2.14.0/src/time/transfer.c.orig	2006-11-19 19:49:43.553274000 +0800
+++ gnome-system-tools-2.14.0/src/time/transfer.c	2006-11-20 00:03:22.906784000 +0800
@@ -163,13 +163,31 @@ transfer_servers_xml_to_gui (GstTool *to
 	GtkListStore *store;
 	GtkTreeIter iter;
 	GtkTreeSelection *selection;
-	xmlNodePtr node;
+	xmlNodePtr node, node1;
 	char *s;
 	
 	ntp_list = gst_dialog_get_widget (tool->main_dialog, "ntp_list2");
 	store = GTK_LIST_STORE (gtk_tree_view_get_model (GTK_TREE_VIEW (ntp_list)));
 	selection = gtk_tree_view_get_selection (GTK_TREE_VIEW (ntp_list));
 	
+	/*  retrieve the ntp server added by user zhua */
+	node = gst_xml_element_find_first (root, "profiledb");
+	if (node) {
+	
+	for (node = gst_xml_element_find_first(node, "profile");
+	     node;
+	     node = gst_xml_element_find_next(node, "profile"))
+	{
+		node1 = gst_xml_element_find_first(node, "server");
+		s = gst_xml_element_get_content (node1);
+		
+		gtk_list_store_append (store, &iter);
+		gtk_list_store_set (store, &iter, 0, FALSE, 1, s, -1);
+		
+		g_free (s);
+	}
+	}
+	
 	node = gst_xml_element_find_first (root, "sync");
 	if (!node) return;
 	
@@ -189,6 +207,7 @@ transfer_servers_xml_to_gui (GstTool *to
 		
 		g_free (s);
 	}
+	
 }
 
 static void
@@ -239,6 +258,9 @@ transfer_misc_xml_to_tool (GstTool *tool
 	}
 
 	g_object_set_data (G_OBJECT (tool), "ntpinstalled", (gpointer) res);
+	node = gst_xml_element_find_first (root, "ntpinstalled");
+	g_object_set_data (G_OBJECT (tool), "ntpdate",
+			   (gpointer) (node != NULL));
 }
 
 void

--- gnome-system-tools-2.14.0.orig/src/time/main.c	Wed Aug 20 09:37:14 2008
+++ gnome-system-tools-2.14.0/src/time/main.c	Wed Aug 20 09:43:12 2008
@@ -56,9 +56,13 @@
 static void on_server_list_element_toggled (GtkCellRendererToggle*, gchar*, gpointer);
 static void on_timezone_help_button_clicked (GtkWidget*, gpointer);
 static void on_time_server_help_button_clicked (GtkWidget*, gpointer);
+static void on_synchronize_button_clicked (GtkWidget*, gpointer);
 
 static char *ntp_servers[] =
 {
+/*	comment all of the ntp servers here, because we have not get the approval to use them.
+	and our time.sun.com server is being setup, and are not available at the moment. 
+	
 	"time.nrc.ca (Canada)",
 	"ntp1.cmc.ec.gc.ca (Eastern Canada)",
 	"ntp2.cmc.ec.gc.ca (Eastern Canada)",
@@ -117,7 +121,7 @@
 	"vega.cbk.poznan.pl (Borowiec, Poland)",
 	"time1.stupi.se (Stockholm, Sweden)",
 	"goodtime.ijs.si (Ljubljana, Slovenia)",
-	"ntp2.ja.net (UK)",
+	"ntp2.ja.net (UK)",*/
 	NULL
 };
 
@@ -127,11 +131,13 @@
 	{ "timezone_button",         "clicked",         G_CALLBACK (timezone_button_clicked) },
 	{ "ntp_use",                 "toggled",         G_CALLBACK (ntp_use_toggled) },
 	{ "timeserver_button",       "clicked",         G_CALLBACK (server_button_clicked) },
-	{ "location_combo",          "set_focus_child", G_CALLBACK (gst_dialog_modify_cb) },
 	{ "ntp_add_server",          "clicked",         G_CALLBACK (on_ntp_addserver) },
 	{ "ntp_add_server",          "clicked",         G_CALLBACK (gst_dialog_modify_cb) },
 	{ "time_zone_help_button",   "clicked",         G_CALLBACK (on_timezone_help_button_clicked) },
 	{ "time_server_help_button", "clicked",         G_CALLBACK (on_time_server_help_button_clicked) },
+#ifndef __sun
+	{ "synchronize_button",      "clicked",         G_CALLBACK (on_synchronize_button_clicked) },
+#endif
 	{ NULL }
 };
 
@@ -146,10 +152,14 @@
 	GtkTreeViewColumn *column;
 	GtkTreeIter iter;
 	int i;
+        GtkWidget *ntp_add_server_button;/* zhua */
 
-
 	/* ntp_list is a GtkTreeView */
 	ntp_list = gst_dialog_get_widget (tool->main_dialog, "ntp_list2");
+	
+	/* used for add ntp server zhua */	
+        ntp_add_server_button = gst_dialog_get_widget (tool->main_dialog, "ntp_add_server");
+        g_object_set_data (G_OBJECT (ntp_add_server_button), "tool", tool);
 
 	/* set the model */
 	store = gtk_list_store_new (2, G_TYPE_BOOLEAN, G_TYPE_STRING);
@@ -444,6 +454,44 @@
 }
 
 static void
+on_synchronize_button_clicked (GtkWidget *w, gpointer data)
+{
+#ifdef __sun
+	GstTimeTool *tool = (GstTimeTool *)data;
+	xmlDoc      *doc,*ret_doc;
+        xmlNodePtr   root, sync_now_node;
+        xmlNodePtr   tool_config_root, tool_config_sync_node;
+	/* SUN_BRANDING */
+	gchar	    *report = g_strdup(_("Synchronzing clock now..."));
+	g_return_if_fail (GST_IS_TIME_TOOL (tool));
+        doc = gst_xml_doc_create("time");
+	root = gst_xml_doc_get_root (doc);
+        sync_now_node = gst_xml_element_add (root, "sync_now");
+        /* Look for configured servers, if any */
+	tool_config_root = gst_xml_doc_get_root (GST_TOOL(tool)->config);
+	tool_config_sync_node = gst_xml_element_find_first (tool_config_root, "sync");
+	if (tool_config_sync_node) {
+                xmlNodePtr server_node, sync_now_server_node;
+                /* Copy server nodes as configured */
+		for (server_node = gst_xml_element_find_first (tool_config_sync_node, "server"); 
+                     server_node != NULL; 
+                     server_node = gst_xml_element_find_next (server_node, "server")) {
+                        sync_now_server_node=  gst_xml_element_add (sync_now_node, "server");
+			gst_xml_element_set_content (sync_now_server_node, gst_xml_element_get_content (server_node));
+		}
+        }
+	ret_doc = gst_tool_run_set_directive(GST_TOOL(tool), doc, report, "set", NULL );
+	gst_xml_doc_destroy( doc );
+	gst_xml_doc_destroy( ret_doc );
+	g_free( report );
+	gst_time_set_from_localtime (tool, 0);
+#else
+	g_spawn_command_line_async ("/etc/init.d/ntpdate restart", NULL);
+#endif
+
+}
+
+static void
 ntp_use_toggled (GtkWidget *w, GstDialog *dialog)
 {
 	gboolean active, configured, ntp_installed;
@@ -454,7 +502,8 @@
 	
 	if (configured && !ntp_installed && active) {
 		GtkWidget *message;
-		
+		gint       response_id;
+
 		gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (w), FALSE);
 
 		message = gtk_message_dialog_new (GTK_WINDOW (dialog),
@@ -466,7 +515,21 @@ ntp_use_toggled (GtkWidget *w, GstDialog
 							  _("Please install and activate NTP support in the system to enable "
 							    "synchronization of your local time server with "
 							    "Internet time servers."));
-		gtk_dialog_run (GTK_DIALOG (message));
+#if 0		
+                if (gst_package_is_installer_available ())
+                        gtk_dialog_add_button (GTK_DIALOG (message),
+                                               /* SUN_BRANDING */
+                                               _("Install NTP support"),
+                                               GTK_RESPONSE_OK);
+		
+                response_id = gtk_dialog_run (GTK_DIALOG (message));
+		
+
+                if (response_id == GTK_RESPONSE_OK)  {
+			char *package[] = {"ntp-simple", NULL};
+                        gst_packages_install (dialog, package);
+		}
+#endif		
 		gtk_widget_destroy (message);
 		return;
 	}
@@ -475,6 +538,7 @@
 		gst_dialog_modify (dialog);
 	
 	gtk_widget_set_sensitive (gst_dialog_get_widget (dialog, "timeserver_button"), active);
+        gtk_widget_set_sensitive (gst_dialog_get_widget (dialog, "synchronize_button"), !active);
 }
 
 GST_TOOL_MAKE_TYPE(time,Time)
@@ -764,6 +828,12 @@
 	gst_tool_set_xml_funcs (tool, transfer_xml_to_gui, transfer_gui_to_xml, NULL);
 	gst_dialog_connect_signals (tool->main_dialog, signals);
 	gst_time_connect_calendar_signals (GST_TIME_TOOL (tool));
+#ifdef __sun
+	/* Doing this since we need to pass the tool as data to the callback
+	 */
+	g_signal_connect ( G_OBJECT (gst_dialog_get_widget (tool->main_dialog, "synchronize_button")), 
+		"clicked", G_CALLBACK (on_synchronize_button_clicked), tool);
+#endif
 
 	gst_time_load_widgets (GST_TIME_TOOL (tool));
 	gst_time_populate_ntp_list (GST_TIME_TOOL (tool));
@@ -770,6 +840,13 @@
 	gst_time_init_timezone (GST_TIME_TOOL (tool));
 	gst_tool_main (tool, TRUE);
 
+	if (!(gboolean) g_object_get_data (G_OBJECT (tool), "ntpdate")) {
+		gtk_widget_hide (gst_dialog_get_widget (tool->main_dialog,
+							"synchronize_label"));
+		gtk_widget_hide (gst_dialog_get_widget (tool->main_dialog,
+							"synchronize_button"));
+	}
+
 	gst_time_clock_start (GST_TIME_TOOL (tool));
 	gtk_main ();
 
--- gnome-system-tools-2.14.0/src/time/timeserv.c.orig	2006-11-20 01:26:46.816264000 +0800
+++ gnome-system-tools-2.14.0/src/time/timeserv.c	2006-11-20 19:42:18.043899000 +0800
@@ -25,7 +25,7 @@ on_ntp_addserver (GtkButton *button, Gst
 	ntp_entry = GTK_EDITABLE (gst_dialog_get_widget (dialog, "ntp_entry"));
 	ntp_list = GTK_TREE_VIEW (gst_dialog_get_widget (dialog, "ntp_list2"));
         store = GTK_LIST_STORE (gtk_tree_view_get_model (ntp_list));
-	
+		
 	text = gtk_editable_get_chars (ntp_entry, 0, -1);
 	g_strstrip (text);
 	
@@ -43,7 +43,24 @@ on_ntp_addserver (GtkButton *button, Gst
 	
 		gtk_list_store_append (store, &iter);
 		gtk_list_store_set (store, &iter, 0, FALSE, 1, text, -1);
+		
+		/* zhua */
+       		xmlNodePtr root, node, node1;
+			
+        	GstTool *tool = g_object_get_data (G_OBJECT (button), "tool");
 
+        	root = gst_xml_doc_get_root (tool->config);
+        	node = gst_xml_element_find_first (root, "profiledb");
+        	if (!node)
+               		node = gst_xml_element_add (root, "profiledb");
+	       
+       		node = gst_xml_element_add (node, "profile");
+	       
+        	node = gst_xml_element_add (node, "server");
+		
+        	gst_xml_element_set_content (node, text);
+		/* end zhua */
+		
 		g_free (text);
 	}
 }
