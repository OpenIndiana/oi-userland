--- polkit-0.113/src/polkit/Makefile.am.1	2016-08-02 13:12:20.633054473 +0300
+++ polkit-0.113/src/polkit/Makefile.am	2016-08-02 13:13:09.075367192 +0300
@@ -97,6 +97,7 @@
 
 libpolkit_gobject_1_la_LIBADD =                               		\
         $(GLIB_LIBS)							\
+	-lproc								\
 	$(LIBSYSTEMD_LIBS)						\
         $(NULL)
 
--- polkit-0.113/src/polkit/polkitunixprocess.c.~1~	2014-01-15 02:42:25.000000000 +0400
+++ polkit-0.113/src/polkit/polkitunixprocess.c	2016-08-02 13:41:57.917673832 +0300
@@ -29,6 +29,9 @@
 #include <sys/sysctl.h>
 #include <sys/user.h>
 #endif
+#ifdef HAVE_SOLARIS
+#include <libproc.h>
+#endif 
 #include <stdlib.h>
 #include <string.h>
 #include <errno.h>
@@ -559,7 +540,37 @@
                         GError **error)
 {
   guint64 start_time;
-#ifndef HAVE_FREEBSD
+#ifdef HAVE_FREEBSD
+  struct kinfo_proc p;
+
+  start_time = 0;
+
+  if (! get_kinfo_proc (pid, &p))
+    {
+      g_set_error (error,
+                   POLKIT_ERROR,
+                   POLKIT_ERROR_FAILED,
+                   "Error obtaining start time for %d (%s)",
+                   (gint) pid,
+                   g_strerror (errno));
+      goto out;
+    }
+
+  start_time = (guint64) p.ki_start.tv_sec;
+
+out:
+#elif defined(HAVE_SOLARIS)
+  psinfo_t psinfo;
+
+  start_time = 0;
+  
+  if (proc_get_psinfo(pid, &psinfo) < 0)
+    goto out;
+
+  start_time = psinfo.pr_start.tv_sec;
+
+  out:
+#else
   gchar *filename;
   gchar *contents;
   size_t length;
@@ -631,25 +642,6 @@
  out:
   g_free (filename);
   g_free (contents);
-#else
-  struct kinfo_proc p;
-
-  start_time = 0;
-
-  if (! get_kinfo_proc (pid, &p))
-    {
-      g_set_error (error,
-                   POLKIT_ERROR,
-                   POLKIT_ERROR_FAILED,
-                   "Error obtaining start time for %d (%s)",
-                   (gint) pid,
-                   g_strerror (errno));
-      goto out;
-    }
-
-  start_time = (guint64) p.ki_start.tv_sec;
-
-out:
 #endif
 
   return start_time;
