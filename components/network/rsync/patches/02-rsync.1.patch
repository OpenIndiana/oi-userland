Remove groffisms from the man page.  This changes "\(dq" to a double-quote
character ("), "\(cq" to a single-quote character ('), and eliminates the
use of "\&" except where it's needed at the beginning of the line.

--- rsync-3.1.2/rsync.1.~1~	2015-12-21 23:22:41.000000000 +0300
+++ rsync-3.1.2/rsync.1	2015-12-22 21:50:50.042129186 +0300
@@ -35,11 +35,11 @@
 destination.  Rsync is widely used for backups and mirroring and as an
 improved copy command for everyday use.
 .PP 
-Rsync finds files that need to be transferred using a \(dq\&quick check\(dq\&
+Rsync finds files that need to be transferred using a "quick check"
 algorithm (by default) that looks for files that have changed in size or
 in last\-modified time.  Any changes in the other preserved attributes (as
 requested by options) are made on the destination file directly when the
-quick check indicates that the file\(cq\&s data does not need to be updated.
+quick check indicates that the file's data does not need to be updated.
 .PP 
 Some of the additional features of rsync are:
 .PP 
@@ -73,17 +73,17 @@
 a host specification.  Contacting an rsync daemon directly happens when the
 source or destination path contains a double colon (::) separator after a
 host specification, OR when an rsync:// URL is specified (see also the
-\(dq\&USING RSYNC\-DAEMON FEATURES VIA A REMOTE\-SHELL CONNECTION\(dq\& section for
+"USING RSYNC\-DAEMON FEATURES VIA A REMOTE\-SHELL CONNECTION" section for
 an exception to this latter rule).
 .PP 
 As a special case, if a single source arg is specified without a
-destination, the files are listed in an output format similar to \(dq\&ls \-l\(dq\&.
+destination, the files are listed in an output format similar to "ls \-l".
 .PP 
 As expected, if neither the source or destination path specify a remote
 host, the copy occurs locally (see also the \fB\-\-list\-only\fP option).
 .PP 
-Rsync refers to the local side as the \(dq\&client\(dq\& and the remote side as the
-\(dq\&server\(dq\&.  Don\(cq\&t confuse \(dq\&server\(dq\& with an rsync daemon \-\- a daemon is always a
+Rsync refers to the local side as the "client" and the remote side as the
+"server".  Don't confuse "server" with an rsync daemon \-\- a daemon is always a
 server, but a server can be either a daemon or a remote\-shell spawned process.
 .PP 
 .SH "SETUP"
@@ -132,7 +132,7 @@
 .PP 
 This would recursively transfer all files from the directory src/bar on the
 machine foo into the /data/tmp/bar directory on the local machine. The
-files are transferred in \(dq\&archive\(dq\& mode, which ensures that symbolic
+files are transferred in "archive" mode, which ensures that symbolic
 links, devices, attributes, permissions, ownerships, etc. are preserved
 in the transfer.  Additionally, compression will be used to reduce the
 size of data portions of the transfer.
@@ -144,8 +144,8 @@
 .PP 
 A trailing slash on the source changes this behavior to avoid creating an
 additional directory level at the destination.  You can think of a trailing
-/ on a source as meaning \(dq\&copy the contents of this directory\(dq\& as opposed
-to \(dq\&copy the directory by name\(dq\&, but in both cases the attributes of the
+/ on a source as meaning "copy the contents of this directory" as opposed
+to "copy the directory by name", but in both cases the attributes of the
 containing directory are transferred to the containing directory on the
 destination.  In other words, each of the following commands copies the
 files in the same way, including their setting of the attributes of
@@ -159,9 +159,9 @@
 .RE
 
 .PP 
-Note also that host and module references don\(cq\&t require a trailing slash to
+Note also that host and module references don't require a trailing slash to
 copy the contents of the default directory.  For example, both of these
-copy the remote directory\(cq\&s contents into \(dq\&/dest\(dq\&:
+copy the remote directory's contents into "/dest":
 .PP 
 .RS 
 \f(CWrsync \-av host: /dest\fP
@@ -172,7 +172,7 @@
 
 .PP 
 You can also use rsync in local\-only mode, where both the source and
-destination don\(cq\&t have a \(cq\&:\(cq\& in the name. In this case it behaves like
+destination don't have a ':' in the name. In this case it behaves like
 an improved copy command.
 .PP 
 Finally, you can list all the (listable) modules available from a
@@ -205,9 +205,9 @@
 examples:
 .PP 
 .RS 
-\f(CWrsync \-av host:'\&dir1/file1 dir2/file2'\& /dest\fP
+\f(CWrsync \-av host:'dir1/file1 dir2/file2' /dest\fP
 .br 
-\f(CWrsync host::'\&modname/dir1/file1 modname/dir2/file2'\& /dest\fP
+\f(CWrsync host::'modname/dir1/file1 modname/dir2/file2' /dest\fP
 .RE
 
 .PP 
@@ -215,12 +215,12 @@
 not as easy to use as the first method.
 .PP 
 If you need to transfer a filename that contains whitespace, you can either
-specify the \fB\-\-protect\-args\fP (\fB\-s\fP) option, or you\(cq\&ll need to escape
+specify the \fB\-\-protect\-args\fP (\fB\-s\fP) option, or you'll need to escape
 the whitespace in a way that the remote shell will understand.  For
 instance:
 .PP 
 .RS 
-\f(CWrsync \-av host:'\&file\e name\e with\e spaces'\& /dest\fP
+\f(CWrsync \-av host:'file\e name\e with\e spaces' /dest\fP
 .RE
 
 .PP 
@@ -240,7 +240,7 @@
 you either use a double colon :: instead of a single colon to
 separate the hostname from the path, or you use an rsync:// URL.
 .IP o 
-the first word of the \(dq\&path\(dq\& is actually a module name.
+the first word of the "path" is actually a module name.
 .IP o 
 the remote daemon may print a message of the day when you
 connect.
@@ -254,7 +254,7 @@
 you must not specify the \fB\-\-rsh\fP (\fB\-e\fP) option.
 
 .PP 
-An example that copies all the files in a remote module named \(dq\&src\(dq\&:
+An example that copies all the files in a remote module named "src":
 .PP 
 .nf 
     rsync \-av host::src /dest
@@ -272,18 +272,18 @@
 .PP 
 You may establish the connection via a web proxy by setting the
 environment variable RSYNC_PROXY to a hostname:port pair pointing to
-your web proxy.  Note that your web proxy\(cq\&s configuration must support
+your web proxy.  Note that your web proxy's configuration must support
 proxy connections to port 873.
 .PP 
 You may also establish a daemon connection using a program as a proxy by
 setting the environment variable RSYNC_CONNECT_PROG to the commands you
 wish to run in place of making a direct socket connection.  The string may
-contain the escape \(dq\&%H\(dq\& to represent the hostname specified in the rsync
-command (so use \(dq\&%%\(dq\& if you need a single \(dq\&%\(dq\& in your string).  For
+contain the escape "%H" to represent the hostname specified in the rsync
+command (so use "%%" if you need a single "%" in your string).  For
 example:
 .PP 
 .nf 
-  export RSYNC_CONNECT_PROG='\&ssh proxyhost nc %H 873'\&
+  export RSYNC_CONNECT_PROG='ssh proxyhost nc %H 873'
   rsync \-av targethost1::module/src/ /dest/
   rsync \-av rsync:://targethost2/module/src/ /dest/ 
 .fi 
@@ -300,16 +300,16 @@
 named modules) without actually allowing any new socket connections into a
 system (other than what is already required to allow remote\-shell access).
 Rsync supports connecting to a host using a remote shell and then spawning
-a single\-use \(dq\&daemon\(dq\& server that expects to read its config file in the
+a single\-use "daemon" server that expects to read its config file in the
 home dir of the remote user.  This can be useful if you want to encrypt a
-daemon\-style transfer\(cq\&s data, but since the daemon is started up fresh by
+daemon\-style transfer's data, but since the daemon is started up fresh by
 the remote user, you may not be able to use features such as chroot or
 change the uid used by the daemon.  (For another way to encrypt a daemon
 transfer, consider using ssh to tunnel a local port to a remote machine and
 configure a normal rsync daemon on that remote host to only allow
-connections from \(dq\&localhost\(dq\&.)
+connections from "localhost".)
 .PP 
-From the user\(cq\&s perspective, a daemon transfer via a remote\-shell
+From the user's perspective, a daemon transfer via a remote\-shell
 connection uses nearly the same command\-line syntax as a normal
 rsync\-daemon transfer, with the only exception being that you must
 explicitly set the remote shell program on the command\-line with the
@@ -324,20 +324,24 @@
 If you need to specify a different remote\-shell user, keep in mind that the
 user@ prefix in front of the host is specifying the rsync\-user value (for a
 module that requires user\-based authentication).  This means that you must
-give the \(cq\&\-l user\(cq\& option to ssh when specifying the remote\-shell, as in
+give the '\-l user' option to ssh when specifying the remote\-shell, as in
 this example that uses the short version of the \fB\-\-rsh\fP option:
 .PP 
 .nf 
-    rsync \-av \-e \(dq\&ssh \-l ssh\-user\(dq\& rsync\-user@host::module /dest
+    rsync \-av \-e "ssh \-l ssh\-user" rsync\-user@host::module /dest
 .fi 
 
 .PP 
-The \(dq\&ssh\-user\(dq\& will be used at the ssh level; the \(dq\&rsync\-user\(dq\& will be
-used to log\-in to the \(dq\&module\(dq\&.
+The "ssh\-user" will be used at the ssh level; the "rsync\-user" will be
+used to log\-in to the "module".
 .PP 
 .SH "STARTING AN RSYNC DAEMON TO ACCEPT CONNECTIONS"
 
 .PP 
+WARNING: Daemon mode does not participate in the core Solaris security
+policies, including Authentication, limit of privileges, Audit and Audit
+of any subprocessing.
+.PP 
 In order to connect to an rsync daemon, the remote system needs to have a
 daemon already running (or it needs to have configured something like inetd
 to spawn an rsync daemon for incoming connections on a particular port).
@@ -346,7 +350,7 @@
 file for the daemon, and it contains the full details for how to run the
 daemon (including stand\-alone and inetd configurations).
 .PP 
-If you\(cq\&re using one of the remote\-shell transports for the transfer, there is
+If you're using one of the remote\-shell transports for the transfer, there is
 no need to manually start an rsync daemon.
 .PP 
 .SH "SORTED TRANSFER ORDER"
@@ -360,7 +364,7 @@
 .PP 
 If you need a particular file to be transferred prior to another, either
 separate the files into different rsync calls, or consider using
-\fB\-\-delay\-updates\fP (which doesn\(cq\&t affect the sorted transfer order, but
+\fB\-\-delay\-updates\fP (which doesn't affect the sorted transfer order, but
 does make the final file\-updating phase happen much more rapidly).
 .PP 
 .SH "EXAMPLES"
@@ -368,7 +372,7 @@
 .PP 
 Here are some examples of how I use rsync.
 .PP 
-To backup my wife\(cq\&s home directory, which consists of large MS Word
+To backup my wife's home directory, which consists of large MS Word
 files and mail folders, I use a cron job that runs
 .PP 
 .RS 
@@ -377,14 +381,14 @@
 
 .PP 
 each night over a PPP connection to a duplicate directory on my machine
-\(dq\&arvidsjaur\(dq\&.
+"arvidsjaur".
 .PP 
 To synchronize my samba source trees I use the following Makefile
 targets:
 .PP 
 .nf 
     get:
-            rsync \-avuzb \-\-exclude '\&*~'\& samba:samba/ .
+            rsync \-avuzb \-\-exclude '*~' samba:samba/ .
     put:
             rsync \-Cavuzb . samba:samba/
     sync: get put
@@ -393,12 +397,12 @@
 .PP 
 this allows me to sync with a CVS directory at the other end of the
 connection. I then do CVS operations on the remote machine, which saves a
-lot of time as the remote CVS protocol isn\(cq\&t very efficient.
+lot of time as the remote CVS protocol isn't very efficient.
 .PP 
-I mirror a directory between my \(dq\&old\(dq\& and \(dq\&new\(dq\& ftp sites with the
+I mirror a directory between my "old" and "new" ftp sites with the
 command:
 .PP 
-\f(CWrsync \-az \-e ssh \-\-delete ~ftp/pub/samba nimbus:\(dq\&~ftp/pub/tridge\(dq\&\fP
+\f(CWrsync \-az \-e ssh \-\-delete ~ftp/pub/samba nimbus:"~ftp/pub/tridge"\fP
 .PP 
 This is launched from cron every few hours.
 .PP 
@@ -420,7 +424,7 @@
      \-\-no\-OPTION             turn off an implied OPTION (e.g. \-\-no\-D)
  \-r, \-\-recursive             recurse into directories
  \-R, \-\-relative              use relative path names
-     \-\-no\-implied\-dirs       don'\&t send implied dirs with \-\-relative
+     \-\-no\-implied\-dirs       don't send implied dirs with \-\-relative
  \-b, \-\-backup                make backups (see \-\-suffix & \-\-backup\-dir)
      \-\-backup\-dir=DIR        make backups into hierarchy based in DIR
      \-\-suffix=SUFFIX         backup suffix (default ~ w/o \-\-backup\-dir)
@@ -431,7 +435,7 @@
  \-d, \-\-dirs                  transfer directories without recursing
  \-l, \-\-links                 copy symlinks as symlinks
  \-L, \-\-copy\-links            transform symlink into referent file/dir
-     \-\-copy\-unsafe\-links     only \(dq\&unsafe\(dq\& symlinks are transformed
+     \-\-copy\-unsafe\-links     only "unsafe" symlinks are transformed
      \-\-safe\-links            ignore symlinks that point outside the tree
      \-\-munge\-links           munge symlinks to make them safer
  \-k, \-\-copy\-dirlinks         transform symlink to dir into referent dir
@@ -456,7 +460,7 @@
      \-\-preallocate           allocate dest files before writing
  \-n, \-\-dry\-run               perform a trial run with no changes made
  \-W, \-\-whole\-file            copy files whole (w/o delta\-xfer algorithm)
- \-x, \-\-one\-file\-system       don'\&t cross filesystem boundaries
+ \-x, \-\-one\-file\-system       don't cross filesystem boundaries
  \-B, \-\-block\-size=SIZE       force a fixed checksum block\-size
  \-e, \-\-rsh=COMMAND           specify the remote shell to use
      \-\-rsync\-path=PROGRAM    specify the rsync to run on remote machine
@@ -474,20 +478,20 @@
      \-\-delete\-missing\-args   delete missing source args from destination
      \-\-ignore\-errors         delete even if there are I/O errors
      \-\-force                 force deletion of dirs even if not empty
-     \-\-max\-delete=NUM        don'\&t delete more than NUM files
-     \-\-max\-size=SIZE         don'\&t transfer any file larger than SIZE
-     \-\-min\-size=SIZE         don'\&t transfer any file smaller than SIZE
+     \-\-max\-delete=NUM        don't delete more than NUM files
+     \-\-max\-size=SIZE         don't transfer any file larger than SIZE
+     \-\-min\-size=SIZE         don't transfer any file smaller than SIZE
      \-\-partial               keep partially transferred files
      \-\-partial\-dir=DIR       put a partially transferred file into DIR
      \-\-delay\-updates         put all updated files into place at end
  \-m, \-\-prune\-empty\-dirs      prune empty directory chains from file\-list
-     \-\-numeric\-ids           don'\&t map uid/gid values by user/group name
+     \-\-numeric\-ids           don't map uid/gid values by user/group name
      \-\-usermap=STRING        custom username mapping
      \-\-groupmap=STRING       custom groupname mapping
      \-\-chown=USER:GROUP      simple username/groupname mapping
      \-\-timeout=SECONDS       set I/O timeout in seconds
      \-\-contimeout=SECONDS    set daemon connection timeout in seconds
- \-I, \-\-ignore\-times          don'\&t skip files that match size and time
+ \-I, \-\-ignore\-times          don't skip files that match size and time
      \-\-size\-only             skip files that match in size
      \-\-modify\-window=NUM     compare mod\-times with reduced accuracy
  \-T, \-\-temp\-dir=DIR          create temporary files in directory DIR
@@ -500,11 +504,11 @@
      \-\-skip\-compress=LIST    skip compressing files with suffix in LIST
  \-C, \-\-cvs\-exclude           auto\-ignore files in the same way CVS does
  \-f, \-\-filter=RULE           add a file\-filtering RULE
- \-F                          same as \-\-filter='\&dir\-merge /.rsync\-filter'\&
-                             repeated: \-\-filter='\&\- .rsync\-filter'\&
+ \-F                          same as \-\-filter='dir\-merge /.rsync\-filter'
+                             repeated: \-\-filter='\- .rsync\-filter'
      \-\-exclude=PATTERN       exclude files matching PATTERN
      \-\-exclude\-from=FILE     read exclude patterns from FILE
-     \-\-include=PATTERN       don'\&t exclude files matching PATTERN
+     \-\-include=PATTERN       don't exclude files matching PATTERN
      \-\-include\-from=FILE     read include patterns from FILE
      \-\-files\-from=FILE       read list of source\-file names from FILE
  \-0, \-\-from0                 all *from/filter files are delimited by 0s
@@ -522,7 +526,7 @@
  \-i, \-\-itemize\-changes       output a change\-summary for all updates
  \-M, \-\-remote\-option=OPTION  send OPTION to the remote side only
      \-\-out\-format=FORMAT     output updates using the specified FORMAT
-     \-\-log\-file=FILE         log what we'\&re doing to the specified FILE
+     \-\-log\-file=FILE         log what we're doing to the specified FILE
      \-\-log\-file\-format=FMT   log updates using the specified FMT
      \-\-password\-file=FILE    read daemon\-access password from FILE
      \-\-list\-only             list the files instead of copying them
@@ -551,8 +555,8 @@
  \-M, \-\-dparam=OVERRIDE       override global daemon config parameter
      \-\-no\-detach             do not detach from the parent
      \-\-port=PORT             listen on alternate port number
-     \-\-log\-file=FILE         override the \(dq\&log file\(dq\& setting
-     \-\-log\-file\-format=FMT   override the \(dq\&log format\(dq\& setting
+     \-\-log\-file=FILE         override the "log file" setting
+     \-\-log\-file\-format=FMT   override the "log format" setting
      \-\-sockopts=OPTIONS      specify custom TCP options
  \-v, \-\-verbose               increase verbosity
  \-4, \-\-ipv4                  prefer IPv4
@@ -570,11 +574,11 @@
 Some options only have a long variant, not a short.  If the option takes a
 parameter, the parameter is only listed after the long variant, even though it
 must also be specified for the short.  When specifying a parameter, you can
-either use the form \-\-option=param or replace the \(cq\&=\(cq\& with whitespace.  The
-parameter may need to be quoted in some manner for it to survive the shell\(cq\&s
+either use the form \-\-option=param or replace the '=' with whitespace.  The
+parameter may need to be quoted in some manner for it to survive the shell's
 command\-line parsing.  Keep in mind that a leading tilde (~) in a filename is
 substituted by your shell, so \-\-option=~/foo will not change the tilde into
-your home directory (remove the \(cq\&=\(cq\& for that).
+your home directory (remove the '=' for that).
 .PP 
 .IP "\fB\-\-help\fP"
 Print a short help page describing the options
@@ -601,11 +605,11 @@
 \fB\-\-info\fP and \fB\-\-debug\fP have a way to ask for help that tells you
 exactly what flags are set for each increase in verbosity.
 .IP 
-However, do keep in mind that a daemon\(cq\&s \(dq\&max verbosity\(dq\& setting will limit how
+However, do keep in mind that a daemon's "max verbosity" setting will limit how
 high of a level the various individual flags can be set on the daemon side.
 For instance, if the max is 2, then any info and/or debug flag that is set to
 a higher value than what would be set by \fB\-vv\fP will be downgraded to the
-\fB\-vv\fP level in the daemon\(cq\&s logging.
+\fB\-vv\fP level in the daemon's logging.
 .IP 
 .IP "\fB\-\-info=FLAGS\fP"
 This option lets you have fine\-grained control over the
@@ -624,14 +628,14 @@
 .fi 
 
 .IP 
-Note that \fB\-\-info=name\fP\(cq\&s output is affected by the \fB\-\-out\-format\fP and
+Note that \fB\-\-info=name\fP's output is affected by the \fB\-\-out\-format\fP and
 \fB\-\-itemize\-changes\fP (\fB\-i\fP) options.  See those options for more
 information on what is output and when.
 .IP 
 This option was added to 3.1.0, so an older rsync on the server side might
 reject your attempts at fine\-grained control (if one or more flags needed
 to be send to the server and the server was too old to understand them).
-See also the \(dq\&max verbosity\(dq\& caveat above when dealing with a daemon.
+See also the "max verbosity" caveat above when dealing with a daemon.
 .IP 
 .IP "\fB\-\-debug=FLAGS\fP"
 This option lets you have fine\-grained control over the debug
@@ -655,7 +659,7 @@
 This option was added to 3.1.0, so an older rsync on the server side might
 reject your attempts at fine\-grained control (if one or more flags needed
 to be send to the server and the server was too old to understand them).
-See also the \(dq\&max verbosity\(dq\& caveat above when dealing with a daemon.
+See also the "max verbosity" caveat above when dealing with a daemon.
 .IP 
 .IP "\fB\-\-msgs2stderr\fP"
 This option changes rsync to send all its output
@@ -683,18 +687,18 @@
 This option affects the information that is output
 by the client at the start of a daemon transfer.  This suppresses the
 message\-of\-the\-day (MOTD) text, but it also affects the list of modules
-that the daemon sends in response to the \(dq\&rsync host::\(dq\& request (due to
+that the daemon sends in response to the "rsync host::" request (due to
 a limitation in the rsync protocol), so omit this option if you want to
 request the list of modules from the daemon.
 .IP 
 .IP "\fB\-I, \-\-ignore\-times\fP"
 Normally rsync will skip any files that are
 already the same size and have the same modification timestamp.
-This option turns off this \(dq\&quick check\(dq\& behavior, causing all files to
+This option turns off this "quick check" behavior, causing all files to
 be updated.
 .IP 
 .IP "\fB\-\-size\-only\fP"
-This modifies rsync\(cq\&s \(dq\&quick check\(dq\& algorithm for
+This modifies rsync's "quick check" algorithm for
 finding files that need to be transferred, changing it from the default of
 transferring files with either a changed size or a changed last\-modified
 time to just looking for files that have changed in size.  This is useful
@@ -713,7 +717,7 @@
 .IP "\fB\-c, \-\-checksum\fP"
 This changes the way rsync checks if the files have
 been changed and are in need of a transfer.  Without this option, rsync
-uses a \(dq\&quick check\(dq\& that (by default) checks if each file\(cq\&s size and time
+uses a "quick check" that (by default) checks if each file's size and time
 of last modification match between the sender and receiver.  This option
 changes this to compare a 128\-bit checksum for each file that has a
 matching size.  Generating the checksums means that both sides will expend
@@ -724,14 +728,14 @@
 The sending side generates its checksums while it is doing the file\-system
 scan that builds the list of the available files.  The receiver generates
 its checksums when it is scanning for changed files, and will checksum any
-file that has the same size as the corresponding sender\(cq\&s file:  files with
+file that has the same size as the corresponding sender's file:  files with
 either a changed size or a changed checksum are selected for transfer.
 .IP 
 Note that rsync always verifies that each \fItransferred\fP file was
 correctly reconstructed on the receiving side by checking a whole\-file
 checksum that is generated as the file is transferred, but that
 automatic after\-the\-transfer verification has nothing to do with this
-option\(cq\&s before\-the\-transfer \(dq\&Does this file need to be updated?\(dq\& check.
+option's before\-the\-transfer "Does this file need to be updated?" check.
 .IP 
 For protocol 30 and beyond (first supported in 3.0.0), the checksum used is
 MD5.  For older protocols, the checksum used is MD4.
@@ -749,14 +753,14 @@
 .IP 
 .IP "\-\-no\-OPTION"
 You may turn off one or more implied options by prefixing
-the option name with \(dq\&no\-\(dq\&.  Not all options may be prefixed with a \(dq\&no\-\(dq\&:
+the option name with "no\-".  Not all options may be prefixed with a "no\-":
 only options that are implied by other options (e.g. \fB\-\-no\-D\fP,
 \fB\-\-no\-perms\fP) or have different defaults in various circumstances
 (e.g. \fB\-\-no\-whole\-file\fP, \fB\-\-no\-blocking\-io\fP, \fB\-\-no\-dirs\fP).  You may
-specify either the short or the long option name after the \(dq\&no\-\(dq\& prefix
+specify either the short or the long option name after the "no\-" prefix
 (e.g. \fB\-\-no\-R\fP is the same as \fB\-\-no\-relative\fP).
 .IP 
-For example: if you want to use \fB\-a\fP (\fB\-\-archive\fP) but don\(cq\&t want
+For example: if you want to use \fB\-a\fP (\fB\-\-archive\fP) but don't want
 \fB\-o\fP (\fB\-\-owner\fP), instead of converting \fB\-a\fP into \fB\-rlptgD\fP, you
 could specify \fB\-a \-\-no\-o\fP (or \fB\-a \-\-no\-owner\fP).
 .IP 
@@ -812,16 +816,16 @@
 .IP 
 then a file named /tmp/foo/bar/baz.c would be created on the remote
 machine, preserving its full path.  These extra path elements are called
-\(dq\&implied directories\(dq\& (i.e. the \(dq\&foo\(dq\& and the \(dq\&foo/bar\(dq\& directories in the
+"implied directories" (i.e. the "foo" and the "foo/bar" directories in the
 above example).
 .IP 
 Beginning with rsync 3.0.0, rsync always sends these implied directories as
 real directories in the file list, even if a path element is really a
 symlink on the sending side.  This prevents some really unexpected
-behaviors when copying the full path of a file that you didn\(cq\&t realize had
+behaviors when copying the full path of a file that you didn't realize had
 a symlink in its path.  If you want to duplicate a server\-side symlink,
 include both the symlink via its path, and referent directory via its real
-path.  If you\(cq\&re dealing with an older rsync on the sending side, you may
+path.  If you're dealing with an older rsync on the sending side, you may
 need to use the \fB\-\-no\-implied\-dirs\fP option.
 .IP 
 It is also possible to limit the amount of path information that is sent as
@@ -835,7 +839,7 @@
 
 .IP 
 That would create /tmp/bar/baz.c on the remote machine.  (Note that the
-dot must be followed by a slash, so \(dq\&/foo/.\(dq\& would not be abbreviated.)
+dot must be followed by a slash, so "/foo/." would not be abbreviated.)
 For older rsync versions, you would need to use a chdir to limit the
 source path.  For example, when pushing files:
 .IP 
@@ -845,12 +849,12 @@
 
 .IP 
 (Note that the parens put the two commands into a sub\-shell, so that the
-\(dq\&cd\(dq\& command doesn\(cq\&t remain in effect for future commands.)
-If you\(cq\&re pulling files from an older rsync, use this idiom (but only
+"cd" command doesn't remain in effect for future commands.)
+If you're pulling files from an older rsync, use this idiom (but only
 for a non\-daemon transfer):
 .IP 
 .RS 
-\f(CW   rsync \-avR \-\-rsync\-path=\(dq\&cd /foo; rsync\(dq\& \e \fP
+\f(CW   rsync \-avR \-\-rsync\-path="cd /foo; rsync" \e \fP
 .br 
 \f(CW       remote:bar/baz.c /tmp/\fP
 .RE
@@ -867,13 +871,13 @@
 the receiving side.
 .IP 
 For instance, if a command\-line arg or a files\-from entry told rsync to
-transfer the file \(dq\&path/foo/file\(dq\&, the directories \(dq\&path\(dq\& and \(dq\&path/foo\(dq\&
-are implied when \fB\-\-relative\fP is used.  If \(dq\&path/foo\(dq\& is a symlink to
-\(dq\&bar\(dq\& on the destination system, the receiving rsync would ordinarily
-delete \(dq\&path/foo\(dq\&, recreate it as a directory, and receive the file into
+transfer the file "path/foo/file", the directories "path" and "path/foo"
+are implied when \fB\-\-relative\fP is used.  If "path/foo" is a symlink to
+"bar" on the destination system, the receiving rsync would ordinarily
+delete "path/foo", recreate it as a directory, and receive the file into
 the new directory.  With \fB\-\-no\-implied\-dirs\fP, the receiving rsync updates
-\(dq\&path/foo/file\(dq\& using the existing path elements, which means that the file
-ends up being created in \(dq\&path/bar\(dq\&.  Another way to accomplish this link
+"path/foo/file" using the existing path elements, which means that the file
+ends up being created in "path/bar".  Another way to accomplish this link
 preservation is to use the \fB\-\-keep\-dirlinks\fP option (which will also
 affect symlinks to directories in the rest of the transfer).
 .IP 
@@ -887,15 +891,15 @@
 backup file goes and what (if any) suffix gets appended using the
 \fB\-\-backup\-dir\fP and \fB\-\-suffix\fP options.
 .IP 
-Note that if you don\(cq\&t specify \fB\-\-backup\-dir\fP, (1) the
+Note that if you don't specify \fB\-\-backup\-dir\fP, (1) the
 \fB\-\-omit\-dir\-times\fP option will be implied, and (2) if \fB\-\-delete\fP is
-also in effect (without \fB\-\-delete\-excluded\fP), rsync will add a \(dq\&protect\(dq\&
+also in effect (without \fB\-\-delete\-excluded\fP), rsync will add a "protect"
 filter\-rule for the backup suffix to the end of all your existing excludes
-(e.g. \fB\-f \(dq\&P *~\(dq\&\fP).  This will prevent previously backed\-up files from being
+(e.g. \fB\-f "P *~"\fP).  This will prevent previously backed\-up files from being
 deleted.  Note that if you are supplying your own filter rules, you may
 need to manually insert your own exclude/protect rule somewhere higher up
 in the list so that it has a high enough priority to be effective (e.g., if
-your rules specify a trailing inclusion/exclusion of \(cq\&*\(cq\&, the auto\-added
+your rules specify a trailing inclusion/exclusion of '*', the auto\-added
 rule would never be reached).
 .IP 
 .IP "\fB\-\-backup\-dir=DIR\fP"
@@ -908,8 +912,8 @@
 .IP 
 Note that if you specify a relative path, the backup directory will be
 relative to the destination directory, so you probably want to specify
-either an absolute path or a path that starts with \(dq\&../\(dq\&.  If an rsync
-daemon is the receiver, the backup dir cannot go outside the module\(cq\&s path
+either an absolute path or a path that starts with "../".  If an rsync
+daemon is the receiver, the backup dir cannot go outside the module's path
 hierarchy, so take extra care not to delete it or copy into it.
 .IP 
 .IP "\fB\-\-suffix=SUFFIX\fP"
@@ -921,7 +925,7 @@
 This forces rsync to skip any files which exist on
 the destination and have a modified time that is newer than the source
 file.  (If an existing destination file has a modification time equal to the
-source file\(cq\&s, it will be updated if the sizes are different.)
+source file's, it will be updated if the sizes are different.)
 .IP 
 Note that this does not affect the copying of dirs, symlinks, or other special
 files.  Also, a difference of file format between the sender and receiver
@@ -930,8 +934,8 @@
 where the destination has a file, the transfer would occur regardless of
 the timestamps.
 .IP 
-This option is a transfer rule, not an exclude, so it doesn\(cq\&t affect the
-data that goes into the file\-lists, and thus it doesn\(cq\&t affect deletions.
+This option is a transfer rule, not an exclude, so it doesn't affect the
+data that goes into the file\-lists, and thus it doesn't affect deletions.
 It just limits the files that the receiver requests to be transferred.
 .IP 
 .IP "\fB\-\-inplace\fP"
@@ -947,13 +951,13 @@
 Hard links are not broken.  This means the new data will be visible
 through other hard links to the destination file.  Moreover, attempts to
 copy differing source files onto a multiply\-linked destination file will
-result in a \(dq\&tug of war\(dq\& with the destination data changing back and forth.
+result in a "tug of war" with the destination data changing back and forth.
 .IP o 
 In\-use binaries cannot be updated (either the OS will prevent this from
 happening, or binaries that attempt to swap\-in their data will misbehave or
 crash).
 .IP o 
-The file\(cq\&s data will be in an inconsistent state during the transfer
+The file's data will be in an inconsistent state during the transfer
 and will be left that way if the transfer is interrupted or if an update
 fails.
 .IP o 
@@ -961,7 +965,7 @@
 can update any file, a normal user needs to be granted write permission for
 the open of the file for writing to be successful.
 .IP o 
-The efficiency of rsync\(cq\&s delta\-transfer algorithm may be reduced if
+The efficiency of rsync's delta\-transfer algorithm may be reduced if
 some data in the destination file is overwritten before it can be copied to
 a position later in the file.  This does not apply if you use \fB\-\-backup\fP,
 since rsync is smart enough to use the backup file as the basis file for the
@@ -988,14 +992,14 @@
 the receiving side is identical with the start of the file on the sending
 side.  If a file needs to be transferred and its size on the receiver is
 the same or longer than the size on the sender, the file is skipped.  This
-does not interfere with the updating of a file\(cq\&s non\-content attributes
+does not interfere with the updating of a file's non\-content attributes
 (e.g. permissions, ownership, etc.) when the file does not need to be
 transferred, nor does it affect the updating of any non\-regular files.
 Implies \fB\-\-inplace\fP,
 but does not conflict with \fB\-\-sparse\fP (since it is always extending a
-file\(cq\&s length).
+file's length).
 .IP 
-The use of \fB\-\-append\fP can be dangerous if you aren\(cq\&t 100% sure that the files
+The use of \fB\-\-append\fP can be dangerous if you aren't 100% sure that the files
 that are longer have only grown by the appending of data onto the end.  You
 should thus use include/exclude/filter rules to ensure that such a transfer is
 only affecting files that you know to be growing via appended data.
@@ -1014,21 +1018,21 @@
 .IP 
 .IP "\fB\-d, \-\-dirs\fP"
 Tell the sending side to include any directories that
-are encountered.  Unlike \fB\-\-recursive\fP, a directory\(cq\&s contents are not copied
-unless the directory name specified is \(dq\&.\(dq\& or ends with a trailing slash
-(e.g. \(dq\&.\(dq\&, \(dq\&dir/.\(dq\&, \(dq\&dir/\(dq\&, etc.).  Without this option or the
+are encountered.  Unlike \fB\-\-recursive\fP, a directory's contents are not copied
+unless the directory name specified is "." or ends with a trailing slash
+(e.g. ".", "dir/.", "dir/", etc.).  Without this option or the
 \fB\-\-recursive\fP option, rsync will skip all directories it encounters (and
 output a message to that effect for each one).  If you specify both
 \fB\-\-dirs\fP and \fB\-\-recursive\fP, \fB\-\-recursive\fP takes precedence.
 .IP 
 The \fB\-\-dirs\fP option is implied by the \fB\-\-files\-from\fP option
 or the \fB\-\-list\-only\fP option (including an implied
-\fB\-\-list\-only\fP usage) if \fB\-\-recursive\fP wasn\(cq\&t specified (so that
+\fB\-\-list\-only\fP usage) if \fB\-\-recursive\fP wasn't specified (so that
 directories are seen in the listing).  Specify \fB\-\-no\-dirs\fP (or \fB\-\-no\-d\fP)
 if you want to turn this off.
 .IP 
 There is also a backward\-compatibility helper option, \fB\-\-old\-dirs\fP (or
-\fB\-\-old\-d\fP) that tells rsync to use a hack of \(dq\&\-r \-\-exclude=\(cq\&/*/*\(cq\&\(dq\& to get
+\fB\-\-old\-d\fP) that tells rsync to use a hack of "\-r \-\-exclude='/*/*'" to get
 an older rsync to list a single directory without recursing.
 .IP 
 .IP "\fB\-l, \-\-links\fP"
@@ -1040,7 +1044,7 @@
 they point to (the referent) is copied, rather than the symlink.  In older
 versions of rsync, this option also had the side\-effect of telling the
 receiving side to follow symlinks, such as symlinks to directories.  In a
-modern rsync such as this one, you\(cq\&ll need to specify \fB\-\-keep\-dirlinks\fP (\fB\-K\fP)
+modern rsync such as this one, you'll need to specify \fB\-\-keep\-dirlinks\fP (\fB\-K\fP)
 to get this extra behavior.  The only exception is when sending files to
 an rsync that is too old to understand \fB\-K\fP \-\- in that case, the \fB\-L\fP option
 will still have the side\-effect of \fB\-K\fP on that older receiving rsync.
@@ -1062,11 +1066,11 @@
 This option tells rsync to (1) modify all symlinks on
 the receiving side in a way that makes them unusable but recoverable (see
 below), or (2) to unmunge symlinks on the sending side that had been stored in
-a munged state.  This is useful if you don\(cq\&t quite trust the source of the data
+a munged state.  This is useful if you don't quite trust the source of the data
 to not try to slip in a symlink to a unexpected place.
 .IP 
 The way rsync disables the use of symlinks is to prefix each one with the
-string \(dq\&/rsyncd\-munged/\(dq\&.  This prevents the links from being used as long as
+string "/rsyncd\-munged/".  This prevents the links from being used as long as
 that directory does not exist.  When this option is enabled, rsync will refuse
 to run if that path is a directory or a symlink to a directory.
 .IP 
@@ -1075,13 +1079,13 @@
 transfer, the client side is the sender.)
 .IP 
 This option has no affect on a daemon, since the daemon configures whether it
-wants munged symlinks via its \(dq\&munge symlinks\(dq\& parameter.  See also the
-\(dq\&munge\-symlinks\(dq\& perl script in the support directory of the source code.
+wants munged symlinks via its "munge symlinks" parameter.  See also the
+"munge\-symlinks" perl script in the support directory of the source code.
 .IP 
 .IP "\fB\-k, \-\-copy\-dirlinks\fP"
 This option causes the sending side to treat
 a symlink to a directory as though it were a real directory.  This is
-useful if you don\(cq\&t want symlinks to non\-directories to be affected, as
+useful if you don't want symlinks to non\-directories to be affected, as
 they would be using \fB\-\-copy\-links\fP.
 .IP 
 Without this option, if the sending side has replaced a directory with a
@@ -1104,20 +1108,20 @@
 .IP 
 This works because rsync calls \fBlstat\fP(2) on the source arg as given, and the
 trailing slash makes \fBlstat\fP(2) follow the symlink, giving rise to a directory
-in the file\-list which overrides the symlink found during the scan of \(dq\&src/./\(dq\&.
+in the file\-list which overrides the symlink found during the scan of "src/./".
 .IP 
 .IP "\fB\-K, \-\-keep\-dirlinks\fP"
 This option causes the receiving side to treat
 a symlink to a directory as though it were a real directory, but only if it
 matches a real directory from the sender.  Without this option, the
-receiver\(cq\&s symlink would be deleted and replaced with a real directory.
+receiver's symlink would be deleted and replaced with a real directory.
 .IP 
-For example, suppose you transfer a directory \(dq\&foo\(dq\& that contains a file
-\(dq\&file\(dq\&, but \(dq\&foo\(dq\& is a symlink to directory \(dq\&bar\(dq\& on the receiver.  Without
-\fB\-\-keep\-dirlinks\fP, the receiver deletes symlink \(dq\&foo\(dq\&, recreates it as a
+For example, suppose you transfer a directory "foo" that contains a file
+"file", but "foo" is a symlink to directory "bar" on the receiver.  Without
+\fB\-\-keep\-dirlinks\fP, the receiver deletes symlink "foo", recreates it as a
 directory, and receives the file into the new directory.  With
-\fB\-\-keep\-dirlinks\fP, the receiver keeps the symlink and \(dq\&file\(dq\& ends up in
-\(dq\&bar\(dq\&.
+\fB\-\-keep\-dirlinks\fP, the receiver keeps the symlink and "file" ends up in
+"bar".
 .IP 
 One note of caution:  if you use \fB\-\-keep\-dirlinks\fP, you must trust all
 the symlinks in the copy!  If it is possible for an untrusted user to
@@ -1185,24 +1189,24 @@
 permissions, though the \fB\-\-executability\fP option might change just
 the execute permission for the file.
 .IP o 
-New files get their \(dq\&normal\(dq\& permission bits set to the source
-file\(cq\&s permissions masked with the receiving directory\(cq\&s default
-permissions (either the receiving process\(cq\&s umask, or the permissions
-specified via the destination directory\(cq\&s default ACL), and
+New files get their "normal" permission bits set to the source
+file's permissions masked with the receiving directory's default
+permissions (either the receiving process's umask, or the permissions
+specified via the destination directory's default ACL), and
 their special permission bits disabled except in the case where a new
 directory inherits a setgid bit from its parent directory.
 .RE
 
 .IP 
 Thus, when \fB\-\-perms\fP and \fB\-\-executability\fP are both disabled,
-rsync\(cq\&s behavior is the same as that of other file\-copy utilities,
+rsync's behavior is the same as that of other file\-copy utilities,
 such as \fBcp\fP(1) and \fBtar\fP(1).
 .IP 
 In summary: to give destination files (both old and new) the source
 permissions, use \fB\-\-perms\fP.  To give new files the destination\-default
 permissions (while leaving existing files unchanged), make sure that the
 \fB\-\-perms\fP option is off and use \fB\-\-chmod=ugo=rwX\fP (which ensures that
-all non\-masked bits get enabled).  If you\(cq\&d care to make this latter
+all non\-masked bits get enabled).  If you'd care to make this latter
 behavior easier to type, you could define a popt alias for it, such as
 putting this line in the file ~/.popt (the following defines the \fB\-Z\fP option,
 and includes \-\-no\-g to use the default group of the destination dir):
@@ -1220,13 +1224,13 @@
 
 .IP 
 (Caveat: make sure that \fB\-a\fP does not follow \fB\-Z\fP, or it will re\-enable
-the two \(dq\&\-\-no\-*\(dq\& options mentioned above.)
+the two "\-\-no\-*" options mentioned above.)
 .IP 
-The preservation of the destination\(cq\&s setgid bit on newly\-created
+The preservation of the destination's setgid bit on newly\-created
 directories when \fB\-\-perms\fP is off was added in rsync 2.6.7.  Older rsync
 versions erroneously preserved the three special permission bits for
 newly\-created files when \fB\-\-perms\fP was off, while overriding the
-destination\(cq\&s setgid bit setting on a newly\-created directory.  Default ACL
+destination's setgid bit setting on a newly\-created directory.  Default ACL
 observance was added to the ACL patch for rsync 2.6.7, so older (or
 non\-ACL\-enabled) rsyncs use the umask even if default ACLs are present.
 (Keep in mind that it is the version of the receiving rsync that affects
@@ -1236,17 +1240,17 @@
 This option causes rsync to preserve the
 executability (or non\-executability) of regular files when \fB\-\-perms\fP is
 not enabled.  A regular file is considered to be executable if at least one
-\(cq\&x\(cq\& is turned on in its permissions.  When an existing destination file\(cq\&s
+\&'x' is turned on in its permissions.  When an existing destination file's
 executability differs from that of the corresponding source file, rsync
-modifies the destination file\(cq\&s permissions as follows:
+modifies the destination file's permissions as follows:
 .IP 
 .RS 
 .IP o 
-To make a file non\-executable, rsync turns off all its \(cq\&x\(cq\&
+To make a file non\-executable, rsync turns off all its 'x'
 permissions.
 .IP o 
-To make a file executable, rsync turns on each \(cq\&x\(cq\& permission that
-has a corresponding \(cq\&r\(cq\& permission enabled.
+To make a file executable, rsync turns on each 'x' permission that
+has a corresponding 'r' permission enabled.
 .RE
 
 .IP 
@@ -1272,19 +1276,19 @@
 .IP 
 Note that this option does not copy rsyncs special xattr values (e.g. those
 used by \fB\-\-fake\-super\fP) unless you repeat the option (e.g. \-XX).  This
-\(dq\&copy all xattrs\(dq\& mode cannot be used with \fB\-\-fake\-super\fP.
+"copy all xattrs" mode cannot be used with \fB\-\-fake\-super\fP.
 .IP 
 .IP "\fB\-\-chmod\fP"
 This option tells rsync to apply one or more
-comma\-separated \(dq\&chmod\(dq\& modes to the permission of the files in the
+comma\-separated "chmod" modes to the permission of the files in the
 transfer.  The resulting value is treated as though it were the permissions
 that the sending side supplied for the file, which means that this option
 can seem to have no effect on existing files if \fB\-\-perms\fP is not enabled.
 .IP 
 In addition to the normal parsing rules specified in the \fBchmod\fP(1)
 manpage, you can specify an item that should only apply to a directory by
-prefixing it with a \(cq\&D\(cq\&, or specify an item that should only apply to a
-file by prefixing it with a \(cq\&F\(cq\&.  For example, the following will ensure
+prefixing it with a 'D', or specify an item that should only apply to a
+file by prefixing it with a 'F'.  For example, the following will ensure
 that all directories get marked set\-gid, that no files are other\-writable,
 that both are user\-writable and group\-writable, and that both have
 consistent executability across all bits:
@@ -1351,8 +1355,8 @@
 option is not used, the optimization that excludes files that have not been
 modified cannot be effective; in other words, a missing \fB\-t\fP or \fB\-a\fP will
 cause the next transfer to behave as if it used \fB\-I\fP, causing all files to be
-updated (though rsync\(cq\&s delta\-transfer algorithm will make the update fairly efficient
-if the files haven\(cq\&t actually changed, you\(cq\&re much better off using \fB\-t\fP).
+updated (though rsync's delta\-transfer algorithm will make the update fairly efficient
+if the files haven't actually changed, you're much better off using \fB\-t\fP).
 .IP 
 .IP "\fB\-O, \-\-omit\-dir\-times\fP"
 This tells rsync to omit directories when
@@ -1367,7 +1371,7 @@
 directory right away (without having to delay that until a bunch of recursive
 copying has finished).  This early\-create idiom is not necessary if directory
 modify times are not being preserved, so it is skipped.  Since early\-create
-directories don\(cq\&t have accurate mode, mtime, or ownership, the use of this
+directories don't have accurate mode, mtime, or ownership, the use of this
 option can help when someone wants to avoid these partially\-finished
 directories.
 .IP 
@@ -1377,12 +1381,12 @@
 .IP 
 .IP "\fB\-\-super\fP"
 This tells the receiving side to attempt super\-user
-activities even if the receiving rsync wasn\(cq\&t run by the super\-user.  These
+activities even if the receiving rsync wasn't run by the super\-user.  These
 activities include: preserving users via the \fB\-\-owner\fP option, preserving
-all groups (not just the current user\(cq\&s groups) via the \fB\-\-groups\fP
+all groups (not just the current user's groups) via the \fB\-\-groups\fP
 option, and copying devices via the \fB\-\-devices\fP option.  This is useful
 for systems that allow such activities without being the super\-user, and
-also for ensuring that you will get errors if the receiving side isn\(cq\&t
+also for ensuring that you will get errors if the receiving side isn't
 being run as the super\-user.  To turn off super\-user activities, the
 super\-user can use \fB\-\-no\-super\fP.
 .IP 
@@ -1390,10 +1394,10 @@
 When this option is enabled, rsync simulates
 super\-user activities by saving/restoring the privileged attributes via
 special extended attributes that are attached to each file (as needed).  This
-includes the file\(cq\&s owner and group (if it is not the default), the file\(cq\&s
+includes the file's owner and group (if it is not the default), the file's
 device info (device & special files are created as empty text files), and
-any permission bits that we won\(cq\&t allow to be set on the real file (e.g.
-the real file gets u\-s,g\-s,o\-t for safety) or that would limit the owner\(cq\&s
+any permission bits that we won't allow to be set on the real file (e.g.
+the real file gets u\-s,g\-s,o\-t for safety) or that would limit the owner's
 access (since the real super\-user can always access/change a file, the
 files we create can always be accessed/changed by the creating user).
 This option also handles ACLs (if \fB\-\-acls\fP was specified) and non\-user
@@ -1419,18 +1423,18 @@
 .IP 
 This option is overridden by both \fB\-\-super\fP and \fB\-\-no\-super\fP.
 .IP 
-See also the \(dq\&fake super\(dq\& setting in the daemon\(cq\&s rsyncd.conf file.
+See also the "fake super" setting in the daemon's rsyncd.conf file.
 .IP 
 .IP "\fB\-S, \-\-sparse\fP"
 Try to handle sparse files efficiently so they take
-up less space on the destination.  Conflicts with \fB\-\-inplace\fP because it\(cq\&s
+up less space on the destination.  Conflicts with \fB\-\-inplace\fP because it's
 not possible to overwrite data in a sparse fashion.
 .IP 
 .IP "\fB\-\-preallocate\fP"
 This tells the receiver to allocate each destination
 file to its eventual size before writing data to the file.  Rsync will only use
-the real filesystem\-level preallocation support provided by Linux\(cq\&s
-\fBfallocate\fP(2) system call or Cygwin\(cq\&s \fBposix_fallocate\fP(3), not the slow
+the real filesystem\-level preallocation support provided by Linux's
+\fBfallocate\fP(2) system call or Cygwin's \fBposix_fallocate\fP(3), not the slow
 glibc implementation that writes a zero byte into each block.
 .IP 
 Without this option, larger files may not be entirely contiguous on the
@@ -1439,7 +1443,7 @@
 etc.), this option may have no positive effect at all.
 .IP 
 .IP "\fB\-n, \-\-dry\-run\fP"
-This makes rsync perform a trial run that doesn\(cq\&t
+This makes rsync perform a trial run that doesn't
 make any changes (and produces mostly the same output as a real run).  It
 is most commonly used in combination with the \fB\-v, \-\-verbose\fP and/or
 \fB\-i, \-\-itemize\-changes\fP options to see what an rsync command is going
@@ -1447,29 +1451,29 @@
 .IP 
 The output of \fB\-\-itemize\-changes\fP is supposed to be exactly the same on a
 dry run and a subsequent real run (barring intentional trickery and system
-call failures); if it isn\(cq\&t, that\(cq\&s a bug.  Other output should be mostly
+call failures); if it isn't, that's a bug.  Other output should be mostly
 unchanged, but may differ in some areas.  Notably, a dry run does not
 send the actual data for file transfers, so \fB\-\-progress\fP has no effect,
-the \(dq\&bytes sent\(dq\&, \(dq\&bytes received\(dq\&, \(dq\&literal data\(dq\&, and \(dq\&matched data\(dq\&
-statistics are too small, and the \(dq\&speedup\(dq\& value is equivalent to a run
+the "bytes sent", "bytes received", "literal data", and "matched data"
+statistics are too small, and the "speedup" value is equivalent to a run
 where no file transfers were needed.
 .IP 
 .IP "\fB\-W, \-\-whole\-file\fP"
-With this option rsync\(cq\&s delta\-transfer algorithm
+With this option rsync's delta\-transfer algorithm
 is not used and the whole file is sent as\-is instead.  The transfer may be
 faster if this option is used when the bandwidth between the source and
 destination machines is higher than the bandwidth to disk (especially when the
-\(dq\&disk\(dq\& is actually a networked filesystem).  This is the default when both
+"disk" is actually a networked filesystem).  This is the default when both
 the source and destination are specified as local paths, but only if no
 batch\-writing option is in effect.
 .IP 
 .IP "\fB\-x, \-\-one\-file\-system\fP"
 This tells rsync to avoid crossing a
-filesystem boundary when recursing.  This does not limit the user\(cq\&s ability
-to specify items to copy from multiple filesystems, just rsync\(cq\&s recursion
+filesystem boundary when recursing.  This does not limit the user's ability
+to specify items to copy from multiple filesystems, just rsync's recursion
 through the hierarchy of each directory that the user specified, and also
 the analogous recursion on the receiving side during deletion.  Also keep
-in mind that rsync treats a \(dq\&bind\(dq\& mount to the same device as being on the
+in mind that rsync treats a "bind" mount to the same device as being on the
 same filesystem.
 .IP 
 If this option is repeated, rsync omits all mount\-point directories from
@@ -1489,8 +1493,8 @@
 combined with the \fB\-\-ignore\-existing\fP option, no files will be updated
 (which can be useful if all you want to do is delete extraneous files).
 .IP 
-This option is a transfer rule, not an exclude, so it doesn\(cq\&t affect the
-data that goes into the file\-lists, and thus it doesn\(cq\&t affect deletions.
+This option is a transfer rule, not an exclude, so it doesn't affect the
+data that goes into the file\-lists, and thus it doesn't affect deletions.
 It just limits the files that the receiver requests to be transferred.
 .IP 
 .IP "\fB\-\-ignore\-existing\fP"
@@ -1498,15 +1502,15 @@
 already exist on the destination (this does \fInot\fP ignore existing
 directories, or nothing would get done).  See also \fB\-\-existing\fP.
 .IP 
-This option is a transfer rule, not an exclude, so it doesn\(cq\&t affect the
-data that goes into the file\-lists, and thus it doesn\(cq\&t affect deletions.
+This option is a transfer rule, not an exclude, so it doesn't affect the
+data that goes into the file\-lists, and thus it doesn't affect deletions.
 It just limits the files that the receiver requests to be transferred.
 .IP 
 This option can be useful for those doing backups using the \fB\-\-link\-dest\fP
 option when they need to continue a backup run that got interrupted.  Since
 a \fB\-\-link\-dest\fP run is copied into a new directory hierarchy (when it is
 used properly), using \fB\-\-ignore existing\fP will ensure that the
-already\-handled files don\(cq\&t get tweaked (which avoids a change in
+already\-handled files don't get tweaked (which avoids a change in
 permissions on the hard\-linked files).  This does mean that this option
 is only looking at the existing files in the destination hierarchy itself.
 .IP 
@@ -1518,24 +1522,24 @@
 Note that you should only use this option on source files that are quiescent.
 If you are using this to move files that show up in a particular directory over
 to another host, make sure that the finished files get renamed into the source
-directory, not directly written into it, so that rsync can\(cq\&t possibly transfer
-a file that is not yet fully written.  If you can\(cq\&t first write the files into
+directory, not directly written into it, so that rsync can't possibly transfer
+a file that is not yet fully written.  If you can't first write the files into
 a different directory, you should use a naming idiom that lets rsync avoid
-transferring files that are not yet finished (e.g. name the file \(dq\&foo.new\(dq\& when
-it is written, rename it to \(dq\&foo\(dq\& when it is done, and then use the option
-\fB\-\-exclude='\&*.new'\&\fP for the rsync transfer).
+transferring files that are not yet finished (e.g. name the file "foo.new" when
+it is written, rename it to "foo" when it is done, and then use the option
+\fB\-\-exclude='*.new'\fP for the rsync transfer).
 .IP 
 Starting with 3.1.0, rsync will skip the sender\-side removal (and output an
-error) if the file\(cq\&s size or modify time has not stayed unchanged.
+error) if the file's size or modify time has not stayed unchanged.
 .IP 
 .IP "\fB\-\-delete\fP"
 This tells rsync to delete extraneous files from the
-receiving side (ones that aren\(cq\&t on the sending side), but only for the
+receiving side (ones that aren't on the sending side), but only for the
 directories that are being synchronized.  You must have asked rsync to
-send the whole directory (e.g. \(dq\&dir\(dq\& or \(dq\&dir/\(dq\&) without using a wildcard
-for the directory\(cq\&s contents (e.g. \(dq\&dir/*\(dq\&) since the wildcard is expanded
+send the whole directory (e.g. "dir" or "dir/") without using a wildcard
+for the directory's contents (e.g. "dir/*") since the wildcard is expanded
 by the shell and rsync thus gets a request to transfer individual files, not
-the files\(cq\& parent directory.  Files that are excluded from the transfer are
+the files' parent directory.  Files that are excluded from the transfer are
 also excluded from being deleted unless you use the \fB\-\-delete\-excluded\fP
 option or mark the rules as only matching on the sending side (see the
 include/exclude modifiers in the FILTER RULES section).
@@ -1592,7 +1596,7 @@
 computes the deletions in a separate pass after all updates are done).
 If the number of removed files overflows an internal buffer, a
 temporary file will be created on the receiving side to hold the names (it
-is removed while open, so you shouldn\(cq\&t see it during the transfer).  If
+is removed while open, so you shouldn't see it during the transfer).  If
 the creation of the temporary file fails, rsync will try to fall back to
 using \fB\-\-delete\-after\fP (which it cannot do if \fB\-\-recursive\fP is doing an
 incremental scan).
@@ -1634,7 +1638,7 @@
 that, this option is independent of any other type of delete processing.
 .IP 
 The missing source files are represented by special file\-list entries which
-display as a \(dq\&*missing\(dq\& entry in the \fB\-\-list\-only\fP output.
+display as a "*missing" entry in the \fB\-\-list\-only\fP output.
 .IP 
 .IP "\fB\-\-ignore\-errors\fP"
 Tells \fB\-\-delete\fP to go ahead and delete files
@@ -1658,27 +1662,27 @@
 .IP 
 Beginning with version 3.0.0, you may specify \fB\-\-max\-delete=0\fP to be warned
 about any extraneous files in the destination without removing any of them.
-Older clients interpreted this as \(dq\&unlimited\(dq\&, so if you don\(cq\&t know what
+Older clients interpreted this as "unlimited", so if you don't know what
 version the client is, you can use the less obvious \fB\-\-max\-delete=\-1\fP as
 a backward\-compatible way to specify that no deletions be allowed (though
-really old versions didn\(cq\&t warn when the limit was exceeded).
+really old versions didn't warn when the limit was exceeded).
 .IP 
 .IP "\fB\-\-max\-size=SIZE\fP"
 This tells rsync to avoid transferring any
 file that is larger than the specified SIZE. The SIZE value can be
 suffixed with a string to indicate a size multiplier, and
-may be a fractional value (e.g. \(dq\&\fB\-\-max\-size=1.5m\fP\(dq\&).
+may be a fractional value (e.g. "\fB\-\-max\-size=1.5m\fP").
 .IP 
-This option is a transfer rule, not an exclude, so it doesn\(cq\&t affect the
-data that goes into the file\-lists, and thus it doesn\(cq\&t affect deletions.
+This option is a transfer rule, not an exclude, so it doesn't affect the
+data that goes into the file\-lists, and thus it doesn't affect deletions.
 It just limits the files that the receiver requests to be transferred.
 .IP 
-The suffixes are as follows: \(dq\&K\(dq\& (or \(dq\&KiB\(dq\&) is a kibibyte (1024),
-\(dq\&M\(dq\& (or \(dq\&MiB\(dq\&) is a mebibyte (1024*1024), and \(dq\&G\(dq\& (or \(dq\&GiB\(dq\&) is a
+The suffixes are as follows: "K" (or "KiB") is a kibibyte (1024),
+"M" (or "MiB") is a mebibyte (1024*1024), and "G" (or "GiB") is a
 gibibyte (1024*1024*1024).
-If you want the multiplier to be 1000 instead of 1024, use \(dq\&KB\(dq\&,
-\(dq\&MB\(dq\&, or \(dq\&GB\(dq\&.  (Note: lower\-case is also accepted for all values.)
-Finally, if the suffix ends in either \(dq\&+1\(dq\& or \(dq\&\-1\(dq\&, the value will
+If you want the multiplier to be 1000 instead of 1024, use "KB",
+"MB", or "GB".  (Note: lower\-case is also accepted for all values.)
+Finally, if the suffix ends in either "+1" or "\-1", the value will
 be offset by one byte in the indicated direction.
 .IP 
 Examples: \-\-max\-size=1.5mb\-1 is 1499999 bytes, and \-\-max\-size=2g+1 is
@@ -1696,7 +1700,7 @@
 .IP 
 .IP "\fB\-B, \-\-block\-size=BLOCKSIZE\fP"
 This forces the block size used in
-rsync\(cq\&s delta\-transfer algorithm to a fixed value.  It is normally selected based on
+rsync's delta\-transfer algorithm to a fixed value.  It is normally selected based on
 the size of each file being updated.  See the technical report for details.
 .IP 
 .IP "\fB\-e, \-\-rsh=COMMAND\fP"
@@ -1709,8 +1713,8 @@
 remote shell \fICOMMAND\fP will be used to run an rsync daemon on the
 remote host, and all data will be transmitted through that remote
 shell connection, rather than through a direct socket connection to a
-running rsync daemon on the remote host.  See the section \(dq\&USING
-RSYNC\-DAEMON FEATURES VIA A REMOTE\-SHELL CONNECTION\(dq\& above.
+running rsync daemon on the remote host.  See the section "USING
+RSYNC\-DAEMON FEATURES VIA A REMOTE\-SHELL CONNECTION" above.
 .IP 
 Command\-line arguments are permitted in COMMAND provided that COMMAND is
 presented to rsync as a single argument.  You must use spaces (not tabs
@@ -1722,9 +1726,9 @@
 shell is parsing and which quotes rsync is parsing).  Some examples:
 .IP 
 .RS 
-\f(CW    \-e '\&ssh \-p 2234'\&\fP
+\f(CW    \-e 'ssh \-p 2234'\fP
 .br 
-\f(CW    \-e '\&ssh \-o \(dq\&ProxyCommand nohup ssh firewall nc \-w1 %h %p\(dq\&'\&\fP
+\f(CW    \-e 'ssh \-o "ProxyCommand nohup ssh firewall nc \-w1 %h %p"'\fP
 .br 
 .RE
 
@@ -1740,9 +1744,9 @@
 .IP "\fB\-\-rsync\-path=PROGRAM\fP"
 Use this to specify what program is to be run
 on the remote machine to start\-up rsync.  Often used when rsync is not in
-the default remote\-shell\(cq\&s path (e.g. \-\-rsync\-path=/usr/local/bin/rsync).
+the default remote\-shell's path (e.g. \-\-rsync\-path=/usr/local/bin/rsync).
 Note that PROGRAM is run with the help of a shell, so it can be any
-program, script, or command sequence you\(cq\&d care to run, so long as it does
+program, script, or command sequence you'd care to run, so long as it does
 not corrupt the standard\-in & standard\-out that rsync is using to
 communicate.
 .IP 
@@ -1750,7 +1754,7 @@
 machine for use with the \fB\-\-relative\fP option.  For instance:
 .IP 
 .RS 
-\f(CW    rsync \-avR \-\-rsync\-path=\(dq\&cd /a/b && rsync\(dq\& host:c/d /e/\fP
+\f(CW    rsync \-avR \-\-rsync\-path="cd /a/b && rsync" host:c/d /e/\fP
 .RE
 
 .IP 
@@ -1783,8 +1787,8 @@
 option.  If that option is off, any spaces in your remote options will be split
 by the remote shell unless you take steps to protect them.
 .IP 
-When performing a local transfer, the \(dq\&local\(dq\& side is the sender and the
-\(dq\&remote\(dq\& side is the receiver.
+When performing a local transfer, the "local" side is the sender and the
+"remote" side is the receiver.
 .IP 
 Note some versions of the popt option\-parsing library have a bug in them that
 prevents you from using an adjacent arg with an equal in it next to a short
@@ -1793,7 +1797,7 @@
 .IP 
 .IP "\fB\-C, \-\-cvs\-exclude\fP"
 This is a useful shorthand for excluding a
-broad range of files that you often don\(cq\&t want to transfer between
+broad range of files that you often don't want to transfer between
 systems. It uses a similar algorithm to CVS to determine if
 a file should be ignored.
 .IP 
@@ -1815,17 +1819,17 @@
 .IP 
 Finally, any file is ignored if it is in the same directory as a
 \&.cvsignore file and matches one of the patterns listed therein.  Unlike
-rsync\(cq\&s filter/exclude files, these patterns are split on whitespace.
+rsync's filter/exclude files, these patterns are split on whitespace.
 See the \fBcvs\fP(1) manual for more information.
 .IP 
-If you\(cq\&re combining \fB\-C\fP with your own \fB\-\-filter\fP rules, you should
+If you're combining \fB\-C\fP with your own \fB\-\-filter\fP rules, you should
 note that these CVS excludes are appended at the end of your own rules,
 regardless of where the \fB\-C\fP was placed on the command\-line.  This makes them
 a lower priority than any rules you specified explicitly.  If you want to
 control where these CVS excludes get inserted into your filter rules, you
 should omit the \fB\-C\fP as a command\-line option and use a combination of
 \fB\-\-filter=:C\fP and \fB\-\-filter=\-C\fP (either on your command\-line or by
-putting the \(dq\&:C\(dq\& and \(dq\&\-C\(dq\& rules into a filter file with your other rules).
+putting the ":C" and "\-C" rules into a filter file with your other rules).
 The first option turns on the per\-directory scanning for the .cvsignore
 file.  The second option does a one\-time import of the CVS excludes
 mentioned above.
@@ -1848,7 +1852,7 @@
 your command.  The first time it is used is a shorthand for this rule:
 .IP 
 .RS 
-\f(CW   \-\-filter='\&dir\-merge /.rsync\-filter'\&\fP
+\f(CW   \-\-filter='dir\-merge /.rsync\-filter'\fP
 .RE
 
 .IP 
@@ -1858,7 +1862,7 @@
 rule:
 .IP 
 .RS 
-\f(CW   \-\-filter='\&exclude .rsync\-filter'\&\fP
+\f(CW   \-\-filter='exclude .rsync\-filter'\fP
 .RE
 
 .IP 
@@ -1877,7 +1881,7 @@
 .IP "\fB\-\-exclude\-from=FILE\fP"
 This option is related to the \fB\-\-exclude\fP
 option, but it specifies a FILE that contains exclude patterns (one per line).
-Blank lines in the file and lines starting with \(cq\&;\(cq\& or \(cq\&#\(cq\& are ignored.
+Blank lines in the file and lines starting with ';' or '#' are ignored.
 If \fIFILE\fP is \fB\-\fP, the list will be read from standard input.
 .IP 
 .IP "\fB\-\-include=PATTERN\fP"
@@ -1890,7 +1894,7 @@
 .IP "\fB\-\-include\-from=FILE\fP"
 This option is related to the \fB\-\-include\fP
 option, but it specifies a FILE that contains include patterns (one per line).
-Blank lines in the file and lines starting with \(cq\&;\(cq\& or \(cq\&#\(cq\& are ignored.
+Blank lines in the file and lines starting with ';' or '#' are ignored.
 If \fIFILE\fP is \fB\-\fP, the list will be read from standard input.
 .IP 
 .IP "\fB\-\-files\-from=FILE\fP"
@@ -1909,7 +1913,7 @@
 specified in the list on the destination rather than noisily skipping
 them (use \fB\-\-no\-dirs\fP or \fB\-\-no\-d\fP if you want to turn that off).
 .IP o 
-The \fB\-\-archive\fP (\fB\-a\fP) option\(cq\&s behavior does not imply \fB\-\-recursive\fP
+The \fB\-\-archive\fP (\fB\-a\fP) option's behavior does not imply \fB\-\-recursive\fP
 (\fB\-r\fP), so specify it explicitly, if you want it.
 .IP o 
 These side\-effects change the default state of rsync, so the position
@@ -1920,7 +1924,7 @@
 
 .IP 
 The filenames that are read from the FILE are all relative to the
-source dir \-\- any leading slashes are removed and no \(dq\&..\(dq\& references are
+source dir \-\- any leading slashes are removed and no ".." references are
 allowed to go higher than the source dir.  For example, take this
 command:
 .IP 
@@ -1929,12 +1933,12 @@
 .RE
 
 .IP 
-If /tmp/foo contains the string \(dq\&bin\(dq\& (or even \(dq\&/bin\(dq\&), the /usr/bin
+If /tmp/foo contains the string "bin" (or even "/bin"), the /usr/bin
 directory will be created as /backup/bin on the remote host.  If it
-contains \(dq\&bin/\(dq\& (note the trailing slash), the immediate contents of
+contains "bin/" (note the trailing slash), the immediate contents of
 the directory would also be sent (without needing to be explicitly
 mentioned in the file \-\- this began in version 2.6.4).  In both cases,
-if the \fB\-r\fP option was enabled, that dir\(cq\&s entire hierarchy would
+if the \fB\-r\fP option was enabled, that dir's entire hierarchy would
 also be transferred (keep in mind that \fB\-r\fP needs to be specified
 explicitly with \fB\-\-files\-from\fP, since it is not implied by \fB\-a\fP).
 Also note
@@ -1943,10 +1947,10 @@
 force the duplication of the source\-spec path (/usr in this case).
 .IP 
 In addition, the \fB\-\-files\-from\fP file can be read from the remote host
-instead of the local host if you specify a \(dq\&host:\(dq\& in front of the file
+instead of the local host if you specify a "host:" in front of the file
 (the host must match one end of the transfer).  As a short\-cut, you can
-specify just a prefix of \(dq\&:\(dq\& to mean \(dq\&use the remote end of the
-transfer\(dq\&.  For example:
+specify just a prefix of ":" to mean "use the remote end of the
+transfer".  For example:
 .IP 
 .RS 
 \f(CW   rsync \-a \-\-files\-from=:/path/file\-list src:/ /tmp/copy\fP
@@ -1954,12 +1958,12 @@
 
 .IP 
 This would copy all the files specified in the /path/file\-list file that
-was located on the remote \(dq\&src\(dq\& host.
+was located on the remote "src" host.
 .IP 
 If the \fB\-\-iconv\fP and \fB\-\-protect\-args\fP options are specified and the
 \fB\-\-files\-from\fP filenames are being sent from one host to another, the
-filenames will be translated from the sending host\(cq\&s charset to the
-receiving host\(cq\&s charset.
+filenames will be translated from the sending host's charset to the
+receiving host's charset.
 .IP 
 NOTE: sorting the list of files in the \-\-files\-from input helps rsync to be
 more efficient, as it will avoid re\-visiting the path elements that are shared
@@ -1969,7 +1973,7 @@
 .IP 
 .IP "\fB\-0, \-\-from0\fP"
 This tells rsync that the rules/filenames it reads from a
-file are terminated by a null (\(cq\&\e0\(cq\&) character, not a NL, CR, or CR+LF.
+file are terminated by a null ('\e0') character, not a NL, CR, or CR+LF.
 This affects \fB\-\-exclude\-from\fP, \fB\-\-include\-from\fP, \fB\-\-files\-from\fP, and any
 merged files specified in a \fB\-\-filter\fP rule.
 It does not affect \fB\-\-cvs\-exclude\fP (since all names read from a .cvsignore
@@ -1992,7 +1996,7 @@
 by default, otherwise it will be disabled by default.  Either state is
 overridden by a manually specified positive or negative version of this option
 (note that \fB\-\-no\-s\fP and \fB\-\-no\-protect\-args\fP are the negative versions).
-Since this option was first introduced in 3.0.0, you\(cq\&ll need to make sure it\(cq\&s
+Since this option was first introduced in 3.0.0, you'll need to make sure it's
 disabled if you ever need to interact with a remote rsync that is older than
 that.
 .IP 
@@ -2027,9 +2031,9 @@
 If you are using this option for reasons other than a shortage of disk
 space, you may wish to combine it with the \fB\-\-delay\-updates\fP option,
 which will ensure that all copied files get put into subdirectories in the
-destination hierarchy, awaiting the end of the transfer.  If you don\(cq\&t
+destination hierarchy, awaiting the end of the transfer.  If you don't
 have enough room to duplicate all the arriving files on the destination
-partition, another way to tell rsync that you aren\(cq\&t overly concerned
+partition, another way to tell rsync that you aren't overly concerned
 about disk space is to use the \fB\-\-partial\-dir\fP option with a relative
 path; because this tells rsync that it is OK to stash off a copy of a
 single file in a subdir in the destination hierarchy, rsync will use the
@@ -2057,7 +2061,7 @@
 the destination machine as an additional hierarchy to compare destination
 files against doing transfers (if the files are missing in the destination
 directory).  If a file is found in \fIDIR\fP that is identical to the
-sender\(cq\&s file, the file will NOT be transferred to the destination
+sender's file, the file will NOT be transferred to the destination
 directory.  This is useful for creating a sparse backup of just files that
 have changed from an earlier backup.
 This option is typically used to copy into an empty (or newly created)
@@ -2106,10 +2110,10 @@
 .RE
 
 .IP 
-If file\(cq\&s aren\(cq\&t linking, double\-check their attributes.  Also check if some
-attributes are getting forced outside of rsync\(cq\&s control, such a mount option
+If file's aren't linking, double\-check their attributes.  Also check if some
+attributes are getting forced outside of rsync's control, such a mount option
 that squishes root to a single user, or mounts a removable drive with generic
-ownership (such as OS X\(cq\&s \(dq\&Ignore ownership on this volume\(dq\& option).
+ownership (such as OS X's "Ignore ownership on this volume" option).
 .IP 
 Beginning in version 2.6.4, multiple \fB\-\-link\-dest\fP directories may be
 provided, which will cause rsync to search the list in the order specified
@@ -2179,11 +2183,11 @@
 .IP 
 Simple character\-class matching is supported: each must consist of a list
 of letters inside the square brackets (e.g. no special classes, such as
-\(dq\&[:alpha:]\(dq\&, are supported, and \(cq\&\-\(cq\& has no special meaning).
+"[:alpha:]", are supported, and '\-' has no special meaning).
 .IP 
 The characters asterisk (*) and question\-mark (?) have no special meaning.
 .IP 
-Here\(cq\&s an example that specifies 6 suffixes to skip (since 1 of the 5 rules
+Here's an example that specifies 6 suffixes to skip (since 1 of the 5 rules
 matches 2 suffixes):
 .IP 
 .nf 
@@ -2241,8 +2245,8 @@
 If a user or group has no name on the source system or it has no match
 on the destination system, then the numeric ID
 from the source system is used instead.  See also the comments on the
-\(dq\&use chroot\(dq\& setting in the rsyncd.conf manpage for information on how
-the chroot setting affects rsync\(cq\&s ability to look up the names of the
+"use chroot" setting in the rsyncd.conf manpage for information on how
+the chroot setting affects rsync's ability to look up the names of the
 users and groups and what you can do about it.
 .IP 
 .IP "\fB\-\-usermap=STRING, \-\-groupmap=STRING\fP"
@@ -2252,9 +2256,9 @@
 values separated by commas.  Any matching \fBFROM\fP value from the sender is
 replaced with a \fBTO\fP value from the receiver.  You may specify usernames
 or user IDs for the \fBFROM\fP and \fBTO\fP values, and the \fBFROM\fP value may
-also be a wild\-card string, which will be matched against the sender\(cq\&s
+also be a wild\-card string, which will be matched against the sender's
 names (wild\-cards do NOT match against ID numbers, though see below for
-why a \(cq\&*\(cq\& matches everything).  You may instead specify a range of ID
+why a '*' matches everything).  You may instead specify a range of ID
 numbers via an inclusive range: LOW\-HIGH.  For example:
 .IP 
 .nf 
@@ -2266,15 +2270,15 @@
 all your user mappings using a single \fB\-\-usermap\fP option, and/or all
 your group mappings using a single \fB\-\-groupmap\fP option.
 .IP 
-Note that the sender\(cq\&s name for the 0 user and group are not transmitted
+Note that the sender's name for the 0 user and group are not transmitted
 to the receiver, so you should either match these values using a 0, or use
-the names in effect on the receiving side (typically \(dq\&root\(dq\&).  All other
+the names in effect on the receiving side (typically "root").  All other
 \fBFROM\fP names match those in use on the sending side.  All \fBTO\fP names
 match those in use on the receiving side.
 .IP 
 Any IDs that do not have a name on the sending side are treated as having an
 empty name for the purpose of matching.  This allows them to be matched via
-a \(dq\&*\(dq\& or using an empty name.  For instance:
+a "*" or using an empty name.  For instance:
 .IP 
 .nf 
   \-\-usermap=:nobody \-\-groupmap=*:nobody
@@ -2301,8 +2305,8 @@
 the omitted user/group will occur.  If GROUP is empty, the trailing colon may
 be omitted, but if USER is empty, a leading colon must be supplied.
 .IP 
-If you specify \(dq\&\-\-chown=foo:bar, this is exactly the same as specifying
-\(dq\&\-\-usermap=*:foo \-\-groupmap=*:bar\(dq\&, only easier.
+If you specify "\-\-chown=foo:bar, this is exactly the same as specifying
+"\-\-usermap=*:foo \-\-groupmap=*:bar", only easier.
 .IP 
 .IP "\fB\-\-timeout=TIMEOUT\fP"
 This option allows you to set a maximum I/O
@@ -2352,18 +2356,18 @@
 as a single letter for the mode, and use upper or lower case.
 .IP 
 The main use of this option is to change Full buffering to Line buffering
-when rsync\(cq\&s output is going to a file or pipe.
+when rsync's output is going to a file or pipe.
 .IP 
 .IP "\fB\-i, \-\-itemize\-changes\fP"
 Requests a simple itemized list of the
 changes that are being made to each file, including attribute changes.
-This is exactly the same as specifying \fB\-\-out\-format='\&%i %n%L'\&\fP.
+This is exactly the same as specifying \fB\-\-out\-format='%i %n%L'\fP.
 If you repeat the option, unchanged files will also be output, but only
 if the receiving rsync is at least version 2.6.7 (you can use \fB\-vv\fP
 with older versions of rsync, but that also turns on the output of other
 verbose messages).
 .IP 
-The \(dq\&%i\(dq\& escape has a cryptic output that is 11 letters long.  The general
+The "%i" escape has a cryptic output that is 11 letters long.  The general
 format is like the string \fBYXcstpoguax\fP, where \fBY\fP is replaced by the
 type of update being done, \fBX\fP is replaced by the file\-type, and the
 other letters represent attributes that may be output if they are being
@@ -2389,7 +2393,7 @@
 have attributes that are being modified).
 .IP o 
 A \fB*\fP means that the rest of the itemized\-output area contains
-a message (e.g. \(dq\&deleting\(dq\&).
+a message (e.g. "deleting").
 .RE
 
 .IP 
@@ -2399,10 +2403,10 @@
 .IP 
 The other letters in the string above are the actual letters that
 will be output if the associated attribute for the item is being updated or
-a \(dq\&.\(dq\& for no change.  Three exceptions to this are: (1) a newly created
-item replaces each letter with a \(dq\&+\(dq\&, (2) an identical item replaces the
+a "." for no change.  Three exceptions to this are: (1) a newly created
+item replaces each letter with a "+", (2) an identical item replaces the
 dots with spaces, and (3) an unknown attribute replaces each letter with
-a \(dq\&?\(dq\& (this can happen when talking to an older rsync).
+a "?" (this can happen when talking to an older rsync).
 .IP 
 The attribute that is associated with each letter is as follows:
 .IP 
@@ -2418,21 +2422,21 @@
 by the file transfer.
 .IP o 
 A \fBt\fP means the modification time is different and is being updated
-to the sender\(cq\&s value (requires \fB\-\-times\fP).  An alternate value of \fBT\fP
+to the sender's value (requires \fB\-\-times\fP).  An alternate value of \fBT\fP
 means that the modification time will be set to the transfer time, which happens
 when a file/symlink/device is updated without \fB\-\-times\fP and when a
-symlink is changed and the receiver can\(cq\&t set its time.
+symlink is changed and the receiver can't set its time.
 (Note: when using an rsync 3.0.0 client, you might see the \fBs\fP flag combined
 with \fBt\fP instead of the proper \fBT\fP flag for this time\-setting failure.)
 .IP o 
 A \fBp\fP means the permissions are different and are being updated to
-the sender\(cq\&s value (requires \fB\-\-perms\fP).
+the sender's value (requires \fB\-\-perms\fP).
 .IP o 
 An \fBo\fP means the owner is different and is being updated to the
-sender\(cq\&s value (requires \fB\-\-owner\fP and super\-user privileges).
+sender's value (requires \fB\-\-owner\fP and super\-user privileges).
 .IP o 
 A \fBg\fP means the group is different and is being updated to the
-sender\(cq\&s value (requires \fB\-\-group\fP and the authority to set the group).
+sender's value (requires \fB\-\-group\fP and the authority to set the group).
 .IP o 
 The \fBu\fP slot is reserved for future use.
 .IP o 
@@ -2442,8 +2446,8 @@
 .RE
 
 .IP 
-One other output is possible:  when deleting files, the \(dq\&%i\(dq\& will output
-the string \(dq\&*deleting\(dq\& for each item that is being removed (assuming that
+One other output is possible:  when deleting files, the "%i" will output
+the string "*deleting" for each item that is being removed (assuming that
 you are talking to a recent enough rsync that it logs deletions instead of
 outputting them as a verbose message).
 .IP 
@@ -2451,10 +2455,10 @@
 This allows you to specify exactly what the
 rsync client outputs to the user on a per\-update basis.  The format is a
 text string containing embedded single\-character escape sequences prefixed
-with a percent (%) character.   A default format of \(dq\&%n%L\(dq\& is assumed if
+with a percent (%) character.   A default format of "%n%L" is assumed if
 either \fB\-\-info=name\fP or \fB\-v\fP is specified (this tells you just the name
 of the file and, if the item is a link, where it points).  For a full list
-of the possible escape characters, see the \(dq\&log format\(dq\& setting in the
+of the possible escape characters, see the "log format" setting in the
 rsyncd.conf manpage.
 .IP 
 Specifying the \fB\-\-out\-format\fP option implies the \fB\-\-info=name\fP option,
@@ -2464,11 +2468,11 @@
 the string (e.g. if the \fB\-\-itemize\-changes\fP option was used), the logging
 of names increases to mention any item that is changed in any way (as long
 as the receiving side is at least 2.6.4).  See the \fB\-\-itemize\-changes\fP
-option for a description of the output of \(dq\&%i\(dq\&.
+option for a description of the output of "%i".
 .IP 
-Rsync will output the out\-format string prior to a file\(cq\&s transfer unless
+Rsync will output the out\-format string prior to a file's transfer unless
 one of the transfer\-statistic escapes is requested, in which case the
-logging is done at the end of the file\(cq\&s transfer.  When this late logging
+logging is done at the end of the file's transfer.  When this late logging
 is in effect and \fB\-\-progress\fP is also specified, rsync will also output
 the name of the file being transferred prior to its progress information
 (followed, of course, by the out\-format output).
@@ -2478,10 +2482,10 @@
 to a file.  This is similar to the logging that a daemon does, but can be
 requested for the client side and/or the server side of a non\-daemon
 transfer.  If specified as a client option, transfer logging will be
-enabled with a default format of \(dq\&%i %n%L\(dq\&.  See the \fB\-\-log\-file\-format\fP
+enabled with a default format of "%i %n%L".  See the \fB\-\-log\-file\-format\fP
 option if you wish to override this.
 .IP 
-Here\(cq\&s a example command that requests the remote side to log what is
+Here's a example command that requests the remote side to log what is
 happening:
 .IP 
 .nf 
@@ -2497,15 +2501,15 @@
 per\-update logging is put into the file specified by the \fB\-\-log\-file\fP option
 (which must also be specified for this option to have any effect).  If you
 specify an empty string, updated files will not be mentioned in the log file.
-For a list of the possible escape characters, see the \(dq\&log format\(dq\& setting
+For a list of the possible escape characters, see the "log format" setting
 in the rsyncd.conf manpage.
 .IP 
 The default FORMAT used if \fB\-\-log\-file\fP is specified and this option is not
-is \(cq\&%i %n%L\(cq\&.
+is '%i %n%L'.
 .IP 
 .IP "\fB\-\-stats\fP"
 This tells rsync to print a verbose set of statistics
-on the file transfer, allowing you to tell how effective rsync\(cq\&s delta\-transfer
+on the file transfer, allowing you to tell how effective rsync's delta\-transfer
 algorithm is for your data.  This option is equivalent to \fB\-\-info=stats2\fP
 if combined with 0 or 1 \fB\-v\fP options, or \fB\-\-info=stats3\fP if combined
 with 2 or more \fB\-v\fP options.
@@ -2513,27 +2517,27 @@
 The current statistics are as follows: 
 .RS 
 .IP o 
-\fBNumber of files\fP is the count of all \(dq\&files\(dq\& (in the generic
+\fBNumber of files\fP is the count of all "files" (in the generic
 sense), which includes directories, symlinks, etc.  The total count will
 be followed by a list of counts by filetype (if the total is non\-zero).
-For example: \(dq\&(reg: 5, dir: 3, link: 2, dev: 1, special: 1)\(dq\& lists the
+For example: "(reg: 5, dir: 3, link: 2, dev: 1, special: 1)" lists the
 totals for regular files, directories, symlinks, devices, and special
 files.  If any of value is 0, it is completely omitted from the list.
 .IP o 
-\fBNumber of created files\fP is the count of how many \(dq\&files\(dq\& (generic
+\fBNumber of created files\fP is the count of how many "files" (generic
 sense) were created (as opposed to updated).  The total count will be
 followed by a list of counts by filetype (if the total is non\-zero).
 .IP o 
-\fBNumber of deleted files\fP is the count of how many \(dq\&files\(dq\& (generic
+\fBNumber of deleted files\fP is the count of how many "files" (generic
 sense) were created (as opposed to updated).  The total count will be
 followed by a list of counts by filetype (if the total is non\-zero).
 Note that this line is only output if deletions are in effect, and only
 if protocol 31 is being used (the default for rsync 3.1.x).
 .IP o 
 \fBNumber of regular files transferred\fP is the count of normal files
-that were updated via rsync\(cq\&s delta\-transfer algorithm, which does not
+that were updated via rsync's delta\-transfer algorithm, which does not
 include dirs, symlinks, etc.  Note that rsync 3.1.0 added the word
-\(dq\&regular\(dq\& into this heading.
+"regular" into this heading.
 .IP o 
 \fBTotal file size\fP is the total sum of all file sizes in the transfer.
 This does not count any size for directories or special files, but does
@@ -2564,22 +2568,22 @@
 from the client side to the server side.
 .IP o 
 \fBTotal bytes received\fP is the count of all non\-message bytes that
-rsync received by the client side from the server side.  \(dq\&Non\-message\(dq\&
-bytes means that we don\(cq\&t count the bytes for a verbose message that the
+rsync received by the client side from the server side.  "Non\-message"
+bytes means that we don't count the bytes for a verbose message that the
 server sent to us, which makes the stats more consistent.
 .RE
 
 .IP 
 .IP "\fB\-8, \-\-8\-bit\-output\fP"
 This tells rsync to leave all high\-bit characters
-unescaped in the output instead of trying to test them to see if they\(cq\&re
+unescaped in the output instead of trying to test them to see if they're
 valid in the current locale and escaping the invalid ones.  All control
-characters (but never tabs) are always escaped, regardless of this option\(cq\&s
+characters (but never tabs) are always escaped, regardless of this option's
 setting.
 .IP 
 The escape idiom that started in 2.6.7 is to output a literal backslash (\e)
 and a hash (#), followed by exactly 3 octal digits.  For example, a newline
-would output as \(dq\&\e#012\(dq\&.  A literal backslash that is in a filename is not
+would output as "\e#012".  A literal backslash that is in a filename is not
 escaped unless it is followed by a hash and 3 digits (0\-9).
 .IP 
 .IP "\fB\-h, \-\-human\-readable\fP"
@@ -2601,7 +2605,7 @@
 Backward compatibility note:  versions of rsync prior to 3.1.0 do not support
 human\-readable level 1, and they default to level 0.  Thus, specifying one or
 two \fB\-h\fP options will behave in a comparable manner in old and new versions
-as long as you didn\(cq\&t specify a \fB\-\-no\-h\fP option prior to one or more \fB\-h\fP
+as long as you didn't specify a \fB\-\-no\-h\fP option prior to one or more \fB\-h\fP
 options.  See the \fB\-\-list\-only\fP option for one difference.
 .IP 
 .IP "\fB\-\-partial\fP"
@@ -2622,12 +2626,12 @@
 Note that if \fB\-\-whole\-file\fP is specified (or implied), any partial\-dir
 file that is found for a file that is being updated will simply be removed
 (since
-rsync is sending files without using rsync\(cq\&s delta\-transfer algorithm).
+rsync is sending files without using rsync's delta\-transfer algorithm).
 .IP 
 Rsync will create the \fIDIR\fP if it is missing (just the last dir \-\- not
 the whole path).  This makes it easy to use a relative path (such as
-\(dq\&\fB\-\-partial\-dir=.rsync\-partial\fP\(dq\&) to have rsync create the
-partial\-directory in the destination file\(cq\&s directory when needed, and then
+"\fB\-\-partial\-dir=.rsync\-partial\fP") to have rsync create the
+partial\-directory in the destination file's directory when needed, and then
 remove it again when the partial file is deleted.
 .IP 
 If the partial\-dir value is not an absolute path, rsync will add an exclude
@@ -2635,21 +2639,21 @@
 sending of any partial\-dir files that may exist on the sending side, and
 will also prevent the untimely deletion of partial\-dir items on the
 receiving side.  An example: the above \fB\-\-partial\-dir\fP option would add
-the equivalent of \(dq\&\fB\-f '\&\-p .rsync\-partial/'\&\fP\(dq\& at the end of any other
+the equivalent of "\fB\-f '\-p .rsync\-partial/'\fP" at the end of any other
 filter rules.
 .IP 
 If you are supplying your own exclude rules, you may need to add your own
 exclude/hide/protect rule for the partial\-dir because (1) the auto\-added
 rule may be ineffective at the end of your other rules, or (2) you may wish
-to override rsync\(cq\&s exclude choice.  For instance, if you want to make
+to override rsync's exclude choice.  For instance, if you want to make
 rsync clean\-up any left\-over partial\-dirs that may be lying around, you
-should specify \fB\-\-delete\-after\fP and add a \(dq\&risk\(dq\& filter rule, e.g.
-\fB\-f '\&R .rsync\-partial/'\&\fP.  (Avoid using \fB\-\-delete\-before\fP or
-\fB\-\-delete\-during\fP unless you don\(cq\&t need rsync to use any of the
+should specify \fB\-\-delete\-after\fP and add a "risk" filter rule, e.g.
+\fB\-f 'R .rsync\-partial/'\fP.  (Avoid using \fB\-\-delete\-before\fP or
+\fB\-\-delete\-during\fP unless you don't need rsync to use any of the
 left\-over partial\-dir data during the current run.)
 .IP 
 IMPORTANT: the \fB\-\-partial\-dir\fP should not be writable by other users or it
-is a security risk.  E.g. AVOID \(dq\&/tmp\(dq\&.
+is a security risk.  E.g. AVOID "/tmp".
 .IP 
 You can also set the partial\-dir value the RSYNC_PARTIAL_DIR environment
 variable.  Setting this in the environment does not force \fB\-\-partial\fP to be
@@ -2662,7 +2666,7 @@
 specified (since \fB\-\-inplace\fP conflicts with \fB\-\-partial\-dir\fP), and (2) when
 \fB\-\-delay\-updates\fP was specified (see below).
 .IP 
-For the purposes of the daemon\-config\(cq\&s \(dq\&refuse options\(dq\& setting,
+For the purposes of the daemon\-config's "refuse options" setting,
 \fB\-\-partial\-dir\fP does \fInot\fP imply \fB\-\-partial\fP.  This is so that a
 refusal of the \fB\-\-partial\fP option can be used to disallow the overwriting
 of destination files with a partial transfer, while still allowing the
@@ -2673,12 +2677,12 @@
 updated file into a holding directory until the end of the
 transfer, at which time all the files are renamed into place in rapid
 succession.  This attempts to make the updating of the files a little more
-atomic.  By default the files are placed into a directory named \(dq\&.~tmp~\(dq\& in
-each file\(cq\&s destination directory, but if you\(cq\&ve specified the
+atomic.  By default the files are placed into a directory named ".~tmp~" in
+each file's destination directory, but if you've specified the
 \fB\-\-partial\-dir\fP option, that directory will be used instead.  See the
 comments in the \fB\-\-partial\-dir\fP section for a discussion of how this
-\(dq\&.~tmp~\(dq\& dir will be excluded from the transfer, and what you can do if
-you want rsync to cleanup old \(dq\&.~tmp~\(dq\& dirs that might be lying around.
+".~tmp~" dir will be excluded from the transfer, and what you can do if
+you want rsync to cleanup old ".~tmp~" dirs that might be lying around.
 Conflicts with \fB\-\-inplace\fP and \fB\-\-append\fP.
 .IP 
 This option uses more memory on the receiving side (one bit per file
@@ -2690,9 +2694,9 @@
 the updated files will be put into a single directory if the path is
 absolute)
 and (2) there are no mount points in the hierarchy (since the
-delayed updates will fail if they can\(cq\&t be renamed into place).
+delayed updates will fail if they can't be renamed into place).
 .IP 
-See also the \(dq\&atomic\-rsync\(dq\& perl script in the \(dq\&support\(dq\& subdir for an
+See also the "atomic\-rsync" perl script in the "support" subdir for an
 update algorithm that is even more atomic (it uses \fB\-\-link\-dest\fP and a
 parallel hierarchy of files).
 .IP 
@@ -2716,26 +2720,26 @@
 this.
 .IP 
 You can prevent the pruning of certain empty directories from the file\-list
-by using a global \(dq\&protect\(dq\& filter.  For instance, this option would ensure
-that the directory \(dq\&emptydir\(dq\& was kept in the file\-list:
+by using a global "protect" filter.  For instance, this option would ensure
+that the directory "emptydir" was kept in the file\-list:
 .IP 
 .RS 
-\-\-filter \(cq\&protect emptydir/\(cq\&
+\-\-filter 'protect emptydir/'
 .RE
 
 .IP 
-Here\(cq\&s an example that copies all .pdf files in a hierarchy, only creating
+Here's an example that copies all .pdf files in a hierarchy, only creating
 the necessary destination directories to hold the .pdf files, and ensures
 that any superfluous files and directories in the destination are removed
 (note the hide filter of non\-directories being used instead of an exclude):
 .IP 
 .RS 
-rsync \-avm \-\-del \-\-include=\(cq\&*.pdf\(cq\& \-f \(cq\&hide,! */\(cq\& src/ dest
+rsync \-avm \-\-del \-\-include='*.pdf' \-f 'hide,! */' src/ dest
 .RE
 
 .IP 
-If you didn\(cq\&t want to remove superfluous destination files, the more
-time\-honored options of \(dq\&\fB\-\-include='\&*/'\& \-\-exclude='\&*'\&\fP\(dq\& would work fine
+If you didn't want to remove superfluous destination files, the more
+time\-honored options of "\fB\-\-include='*/' \-\-exclude='*'\fP" would work fine
 in place of the hide\-filter (if that is more natural to you).
 .IP 
 .IP "\fB\-\-progress\fP"
@@ -2744,7 +2748,7 @@
 something to watch.
 With a modern rsync this is the same as specifying
 \fB\-\-info=flist2,name,progress\fP, but any user\-supplied settings for those
-info flags takes precedence (e.g. \(dq\&\-\-info=flist0 \-\-progress\(dq\&).
+info flags takes precedence (e.g. "\-\-info=flist0 \-\-progress").
 .IP 
 While rsync is transferring a regular file, it updates a progress line that
 looks like this:
@@ -2755,12 +2759,12 @@
 
 .IP 
 In this example, the receiver has reconstructed 782448 bytes or 63% of the
-sender\(cq\&s file, which is being reconstructed at a rate of 110.64 kilobytes
+sender's file, which is being reconstructed at a rate of 110.64 kilobytes
 per second, and the transfer will finish in 4 seconds if the current rate
 is maintained until the end.
 .IP 
-These statistics can be misleading if rsync\(cq\&s delta\-transfer algorithm is
-in use.  For example, if the sender\(cq\&s file consists of the basis file
+These statistics can be misleading if rsync's delta\-transfer algorithm is
+in use.  For example, if the sender's file consists of the basis file
 followed by additional data, the reported rate will probably drop
 dramatically when the receiver gets to the literal data, and the transfer
 will probably take much longer to finish than the receiver estimated as it
@@ -2781,12 +2785,12 @@
 receiver to check (to see if they are up\-to\-date or not) remaining out of
 the 396 total files in the file\-list.
 .IP 
-In an incremental recursion scan, rsync won\(cq\&t know the total number of files
+In an incremental recursion scan, rsync won't know the total number of files
 in the file\-list until it reaches the ends of the scan, but since it starts to
-transfer files during the scan, it will display a line with the text \(dq\&ir\-chk\(dq\&
-(for incremental recursion check) instead of \(dq\&to\-chk\(dq\& until the point that it
+transfer files during the scan, it will display a line with the text "ir\-chk"
+(for incremental recursion check) instead of "to\-chk" until the point that it
 knows the full size of the list, at which point it will switch to using
-\(dq\&to\-chk\(dq\&.  Thus, seeing \(dq\&ir\-chk\(dq\& lets you know that the total count of files
+"to\-chk".  Thus, seeing "ir\-chk" lets you know that the total count of files
 in the file list is still going to increase (and each time it does, the count
 of files left to check  will increase by the number of the files added to the
 list).
@@ -2800,7 +2804,7 @@
 on the whole transfer, rather than individual files.  Use this flag without
 outputting a filename (e.g. avoid \fB\-v\fP or specify \fB\-\-info=name0\fP) if you
 want to see how the transfer is doing without scrolling the screen with a
-lot of names.  (You don\(cq\&t need to specify the \fB\-\-progress\fP option in
+lot of names.  (You don't need to specify the \fB\-\-progress\fP option in
 order to use \fB\-\-info=progress2\fP.)
 .IP 
 .IP "\fB\-\-password\-file=FILE\fP"
@@ -2811,10 +2815,10 @@
 readable or if a root\-run rsync command finds a non\-root\-owned file.
 .IP 
 This option does not supply a password to a remote shell transport such as
-ssh; to learn how to do that, consult the remote shell\(cq\&s documentation.
+ssh; to learn how to do that, consult the remote shell's documentation.
 When accessing an rsync daemon using a remote shell as the transport, this
 option only comes into effect after the remote shell finishes its
-authentication (i.e. if you have also specified a password in the daemon\(cq\&s
+authentication (i.e. if you have also specified a password in the daemon's
 config file).
 .IP 
 .IP "\fB\-\-list\-only\fP"
@@ -2844,17 +2848,17 @@
 Compatibility note:  when requesting a remote listing of files from an rsync
 that is version 2.6.3 or older, you may encounter an error if you ask for a
 non\-recursive listing.  This is because a file listing implies the \fB\-\-dirs\fP
-option w/o \fB\-\-recursive\fP, and older rsyncs don\(cq\&t have that option.  To
-avoid this problem, either specify the \fB\-\-no\-dirs\fP option (if you don\(cq\&t
-need to expand a directory\(cq\&s content), or turn on recursion and exclude
-the content of subdirectories: \fB\-r \-\-exclude='\&/*/*'\&\fP.
+option w/o \fB\-\-recursive\fP, and older rsyncs don't have that option.  To
+avoid this problem, either specify the \fB\-\-no\-dirs\fP option (if you don't
+need to expand a directory's content), or turn on recursion and exclude
+the content of subdirectories: \fB\-r \-\-exclude='/*/*'\fP.
 .IP 
 .IP "\fB\-\-bwlimit=RATE\fP"
 This option allows you to specify the maximum transfer
 rate for the data sent over the socket, specified in units per second.  The
 RATE value can be suffixed with a string to indicate a size multiplier, and may
-be a fractional value (e.g.  \(dq\&\fB\-\-bwlimit=1.5m\fP\(dq\&).  If no suffix is specified,
-the value will be assumed to be in units of 1024 bytes (as if \(dq\&K\(dq\& or \(dq\&KiB\(dq\& had
+be a fractional value (e.g.  "\fB\-\-bwlimit=1.5m\fP").  If no suffix is specified,
+the value will be assumed to be in units of 1024 bytes (as if "K" or "KiB" had
 been appended).  See the \fB\-\-max\-size\fP option for a description of all the
 available suffixes. A value of zero specifies no limit.
 .IP 
@@ -2863,7 +2867,7 @@
 .IP 
 Rsync writes data over the socket in blocks, and this option both limits the
 size of the blocks that rsync writes, and tries to keep the average transfer
-rate at the requested limit.  Some \(dq\&burstiness\(dq\& may be seen where rsync writes
+rate at the requested limit.  Some "burstiness" may be seen where rsync writes
 out a block of data and then sleeps to bring the average rate into compliance.
 .IP 
 Due to the internal buffering of data, the \fB\-\-progress\fP option may not be an
@@ -2874,7 +2878,7 @@
 .IP 
 .IP "\fB\-\-write\-batch=FILE\fP"
 Record a file that can later be applied to
-another identical destination with \fB\-\-read\-batch\fP. See the \(dq\&BATCH MODE\(dq\&
+another identical destination with \fB\-\-read\-batch\fP. See the "BATCH MODE"
 section for details, and also the \fB\-\-only\-write\-batch\fP option.
 .IP 
 .IP "\fB\-\-only\-write\-batch=FILE\fP"
@@ -2886,58 +2890,58 @@
 Note that you can feel free to write the batch directly to some portable
 media: if this media fills to capacity before the end of the transfer, you
 can just apply that partial transfer to the destination and repeat the
-whole process to get the rest of the changes (as long as you don\(cq\&t mind a
+whole process to get the rest of the changes (as long as you don't mind a
 partially updated destination system while the multi\-update cycle is
 happening).
 .IP 
 Also note that you only save bandwidth when pushing changes to a remote
 system because this allows the batched data to be diverted from the sender
 into the batch file without having to flow over the wire to the receiver
-(when pulling, the sender is remote, and thus can\(cq\&t write the batch).
+(when pulling, the sender is remote, and thus can't write the batch).
 .IP 
 .IP "\fB\-\-read\-batch=FILE\fP"
 Apply all of the changes stored in FILE, a
 file previously generated by \fB\-\-write\-batch\fP.
 If \fIFILE\fP is \fB\-\fP, the batch data will be read from standard input.
-See the \(dq\&BATCH MODE\(dq\& section for details.
+See the "BATCH MODE" section for details.
 .IP 
 .IP "\fB\-\-protocol=NUM\fP"
 Force an older protocol version to be used.  This
 is useful for creating a batch file that is compatible with an older
 version of rsync.  For instance, if rsync 2.6.4 is being used with the
 \fB\-\-write\-batch\fP option, but rsync 2.6.3 is what will be used to run the
-\fB\-\-read\-batch\fP option, you should use \(dq\&\-\-protocol=28\(dq\& when creating the
+\fB\-\-read\-batch\fP option, you should use "\-\-protocol=28" when creating the
 batch file to force the older protocol version to be used in the batch
-file (assuming you can\(cq\&t upgrade the rsync on the reading system).
+file (assuming you can't upgrade the rsync on the reading system).
 .IP 
 .IP "\fB\-\-iconv=CONVERT_SPEC\fP"
 Rsync can convert filenames between character
-sets using this option.  Using a CONVERT_SPEC of \(dq\&.\(dq\& tells rsync to look up
+sets using this option.  Using a CONVERT_SPEC of "." tells rsync to look up
 the default character\-set via the locale setting.  Alternately, you can
 fully specify what conversion to do by giving a local and a remote charset
 separated by a comma in the order \fB\-\-iconv=LOCAL,REMOTE\fP, e.g.
 \fB\-\-iconv=utf8,iso88591\fP.  This order ensures that the option
-will stay the same whether you\(cq\&re pushing or pulling files.
-Finally, you can specify either \fB\-\-no\-iconv\fP or a CONVERT_SPEC of \(dq\&\-\(dq\&
+will stay the same whether you're pushing or pulling files.
+Finally, you can specify either \fB\-\-no\-iconv\fP or a CONVERT_SPEC of "\-"
 to turn off any conversion.
 The default setting of this option is site\-specific, and can also be
 affected via the RSYNC_ICONV environment variable.
 .IP 
 For a list of what charset names your local iconv library supports, you can
-run \(dq\&iconv \-\-list\(dq\&.
+run "iconv \-\-list".
 .IP 
 If you specify the \fB\-\-protect\-args\fP option (\fB\-s\fP), rsync will translate
 the filenames you specify on the command\-line that are being sent to the
 remote host.  See also the \fB\-\-files\-from\fP option.
 .IP 
 Note that rsync does not do any conversion of names in filter files
-(including include/exclude files).  It is up to you to ensure that you\(cq\&re
+(including include/exclude files).  It is up to you to ensure that you're
 specifying matching rules that can match on both sides of the transfer.
 For instance, you can specify extra include/exclude rules if there are
 filename differences on the two sides that need to be accounted for.
 .IP 
 When you pass an \fB\-\-iconv\fP option to an rsync daemon that allows it, the
-daemon uses the charset specified in its \(dq\&charset\(dq\& configuration parameter
+daemon uses the charset specified in its "charset" configuration parameter
 regardless of the remote charset you actually pass.  Thus, you may feel free to
 specify just the local charset for a daemon transfer (e.g. \fB\-\-iconv=utf8\fP).
 .IP 
@@ -2954,10 +2958,10 @@
 .IP "\fB\-\-checksum\-seed=NUM\fP"
 Set the checksum seed to the integer NUM.  This 4
 byte checksum seed is included in each block and MD4 file checksum calculation
-(the more modern MD5 file checksums don\(cq\&t use a seed).  By default the checksum
+(the more modern MD5 file checksums don't use a seed).  By default the checksum
 seed is generated by the server and defaults to the current 
-\f(CWtime()\fP
-\&.  This
+\f(CWtime().\fP
+This
 option is used to set a specific checksum seed, which is useful for
 applications that want repeatable block checksums, or in the case where the
 user wants a more random checksum seed.  Setting NUM to 0 causes rsync to use
@@ -2987,7 +2991,7 @@
 run as a daemon with the \fB\-\-daemon\fP option.  The \fB\-\-address\fP option
 allows you to specify a specific IP address (or hostname) to bind to.  This
 makes virtual hosting possible in conjunction with the \fB\-\-config\fP option.
-See also the \(dq\&address\(dq\& global option in the rsyncd.conf manpage.
+See also the "address" global option in the rsyncd.conf manpage.
 .IP 
 .IP "\fB\-\-bwlimit=RATE\fP"
 This option allows you to specify the maximum transfer
@@ -3005,7 +3009,7 @@
 .IP "\fB\-M, \-\-dparam=OVERRIDE\fP"
 This option can be used to set a daemon\-config
 parameter when starting up rsync in daemon mode.  It is equivalent to adding
-the parameter at the end of the global settings prior to the first module\(cq\&s
+the parameter at the end of the global settings prior to the first module's
 definition.  The parameter names can be specified without spaces, if you so
 desire.  For instance:
 .IP 
@@ -3019,25 +3023,25 @@
 rsync to not detach itself and become a background process.  This
 option is required when running as a service on Cygwin, and may also
 be useful when rsync is supervised by a program such as
-\fBdaemontools\fP or AIX\(cq\&s \fBSystem Resource Controller\fP.
+\fBdaemontools\fP or AIX's \fBSystem Resource Controller\fP.
 \fB\-\-no\-detach\fP is also recommended when rsync is run under a
 debugger.  This option has no effect if rsync is run from inetd or
 sshd.
 .IP 
 .IP "\fB\-\-port=PORT\fP"
 This specifies an alternate TCP port number for the
-daemon to listen on rather than the default of 873.  See also the \(dq\&port\(dq\&
+daemon to listen on rather than the default of 873.  See also the "port"
 global option in the rsyncd.conf manpage.
 .IP 
 .IP "\fB\-\-log\-file=FILE\fP"
 This option tells the rsync daemon to use the
-given log\-file name instead of using the \(dq\&log file\(dq\& setting in the config
+given log\-file name instead of using the "log file" setting in the config
 file.
 .IP 
 .IP "\fB\-\-log\-file\-format=FORMAT\fP"
 This option tells the rsync daemon to use the
-given FORMAT string instead of using the \(dq\&log format\(dq\& setting in the config
-file.  It also enables \(dq\&transfer logging\(dq\& unless the string is empty, in which
+given FORMAT string instead of using the "log format" setting in the config
+file.  It also enables "transfer logging" unless the string is empty, in which
 case transfer logging is turned off.
 .IP 
 .IP "\fB\-\-sockopts\fP"
@@ -3047,15 +3051,15 @@
 .IP "\fB\-v, \-\-verbose\fP"
 This option increases the amount of information the
 daemon logs during its startup phase.  After the client connects, the
-daemon\(cq\&s verbosity level will be controlled by the options that the client
-used and the \(dq\&max verbosity\(dq\& setting in the module\(cq\&s config section.
+daemon's verbosity level will be controlled by the options that the client
+used and the "max verbosity" setting in the module's config section.
 .IP 
 .IP "\fB\-4, \-\-ipv4\fP or \fB\-6, \-\-ipv6\fP"
 Tells rsync to prefer IPv4/IPv6
 when creating the incoming sockets that the rsync daemon will use to
 listen for connections.  One of these options may be required in older
 versions of Linux to work around an IPv6 bug in the kernel (if you see
-an \(dq\&address already in use\(dq\& error when nothing else is using the port,
+an "address already in use" error when nothing else is using the port,
 try specifying \fB\-\-ipv6\fP or \fB\-\-ipv4\fP when starting the daemon).
 .IP 
 If rsync was complied without support for IPv6, the \fB\-\-ipv6\fP option
@@ -3094,7 +3098,7 @@
 
 .PP 
 You have your choice of using either short or long RULE names, as described
-below.  If you use a short\-named rule, the \(cq\&,\(cq\& separating the RULE from the
+below.  If you use a short\-named rule, the ',' separating the RULE from the
 MODIFIERS is optional.  The PATTERN or FILENAME that follows (when present)
 must come after either a single space or an underscore (_).
 Here are the available rule prefixes:
@@ -3122,15 +3126,15 @@
 
 .PP 
 When rules are being read from a file, empty lines are ignored, as are
-comment lines that start with a \(dq\&#\(dq\&.
+comment lines that start with a "#".
 .PP 
 Note that the \fB\-\-include\fP/\fB\-\-exclude\fP command\-line options do not allow the
 full range of rule parsing as described above \-\- they only allow the
-specification of include/exclude patterns plus a \(dq\&!\(dq\& token to clear the
+specification of include/exclude patterns plus a "!" token to clear the
 list (and the normal comment parsing when rules are read from a file).
 If a pattern
-does not begin with \(dq\&\- \(dq\& (dash, space) or \(dq\&+ \(dq\& (plus, space), then the
-rule will be interpreted as if \(dq\&+ \(dq\& (for an include option) or \(dq\&\- \(dq\& (for
+does not begin with "\- " (dash, space) or "+ " (plus, space), then the
+rule will be interpreted as if "+ " (for an include option) or "\- " (for
 an exclude option) were prefixed to the string.  A \fB\-\-filter\fP option, on
 the other hand, must always contain either a short or long rule name at the
 start of the rule.
@@ -3143,8 +3147,8 @@
 .SH "INCLUDE/EXCLUDE PATTERN RULES"
 
 .PP 
-You can include and exclude files by specifying patterns using the \(dq\&+\(dq\&,
-\(dq\&\-\(dq\&, etc. filter rules (as introduced in the FILTER RULES section above).
+You can include and exclude files by specifying patterns using the "+",
+"\-", etc. filter rules (as introduced in the FILTER RULES section above).
 The include/exclude rules each specify a pattern that is matched against
 the names of the files that are going to be transferred.  These patterns
 can take several forms:
@@ -3154,15 +3158,15 @@
 particular spot in the hierarchy of files, otherwise it is matched
 against the end of the pathname.  This is similar to a leading ^ in
 regular expressions.
-Thus \(dq\&/foo\(dq\& would match a name of \(dq\&foo\(dq\& at either the \(dq\&root of the
-transfer\(dq\& (for a global rule) or in the merge\-file\(cq\&s directory (for a
+Thus "/foo" would match a name of "foo" at either the "root of the
+transfer" (for a global rule) or in the merge\-file's directory (for a
 per\-directory rule).
-An unqualified \(dq\&foo\(dq\& would match a name of \(dq\&foo\(dq\& anywhere in the
+An unqualified "foo" would match a name of "foo" anywhere in the
 tree because the algorithm is applied recursively from the
 top down; it behaves as if each path component gets a turn at being the
-end of the filename.  Even the unanchored \(dq\&sub/foo\(dq\& would match at
-any point in the hierarchy where a \(dq\&foo\(dq\& was found within a directory
-named \(dq\&sub\(dq\&.  See the section on ANCHORING INCLUDE/EXCLUDE PATTERNS for
+end of the filename.  Even the unanchored "sub/foo" would match at
+any point in the hierarchy where a "foo" was found within a directory
+named "sub".  See the section on ANCHORING INCLUDE/EXCLUDE PATTERNS for
 a full discussion of how to specify a pattern that matches at the root
 of the transfer.
 .IP o 
@@ -3171,48 +3175,48 @@
 .IP o 
 rsync chooses between doing a simple string match and wildcard
 matching by checking if the pattern contains one of these three wildcard
-characters: \(cq\&*\(cq\&, \(cq\&?\(cq\&, and \(cq\&[\(cq\& .
+characters: '*', '?', and '[' .
 .IP o 
-a \(cq\&*\(cq\& matches any path component, but it stops at slashes.
+a '*' matches any path component, but it stops at slashes.
 .IP o 
-use \(cq\&**\(cq\& to match anything, including slashes.
+use '**' to match anything, including slashes.
 .IP o 
-a \(cq\&?\(cq\& matches any character except a slash (/).
+a '?' matches any character except a slash (/).
 .IP o 
-a \(cq\&[\(cq\& introduces a character class, such as [a\-z] or [[:alpha:]].
+a '[' introduces a character class, such as [a\-z] or [[:alpha:]].
 .IP o 
 in a wildcard pattern, a backslash can be used to escape a wildcard
 character, but it is matched literally when no wildcards are present.
 This means that there is an extra level of backslash removal when a
 pattern contains wildcard characters compared to a pattern that has none.
-e.g. if you add a wildcard to \(dq\&foo\ebar\(dq\& (which matches the backslash) you
-would need to use \(dq\&foo\e\ebar*\(dq\& to avoid the \(dq\&\eb\(dq\& becoming just \(dq\&b\(dq\&.
+e.g. if you add a wildcard to "foo\ebar" (which matches the backslash) you
+would need to use "foo\e\ebar*" to avoid the "\eb" becoming just "b".
 .IP o 
-if the pattern contains a / (not counting a trailing /) or a \(dq\&**\(dq\&,
+if the pattern contains a / (not counting a trailing /) or a "**",
 then it is matched against the full pathname, including any leading
-directories. If the pattern doesn\(cq\&t contain a / or a \(dq\&**\(dq\&, then it is
+directories. If the pattern doesn't contain a / or a "**", then it is
 matched only against the final component of the filename.
-(Remember that the algorithm is applied recursively so \(dq\&full filename\(dq\&
+(Remember that the algorithm is applied recursively so "full filename"
 can actually be any portion of a path from the starting directory on
 down.)
 .IP o 
-a trailing \(dq\&dir_name/***\(dq\& will match both the directory (as if
-\(dq\&dir_name/\(dq\& had been specified) and everything in the directory
-(as if \(dq\&dir_name/**\(dq\& had been specified).  This behavior was added in
+a trailing "dir_name/***" will match both the directory (as if
+"dir_name/" had been specified) and everything in the directory
+(as if "dir_name/**" had been specified).  This behavior was added in
 version 2.6.7.
 
 .PP 
 Note that, when using the \fB\-\-recursive\fP (\fB\-r\fP) option (which is implied by
 \fB\-a\fP), every subcomponent of every path is visited from the top down, so
-include/exclude patterns get applied recursively to each subcomponent\(cq\&s
-full name (e.g. to include \(dq\&/foo/bar/baz\(dq\& the subcomponents \(dq\&/foo\(dq\& and
-\(dq\&/foo/bar\(dq\& must not be excluded).
+include/exclude patterns get applied recursively to each subcomponent's
+full name (e.g. to include "/foo/bar/baz" the subcomponents "/foo" and
+"/foo/bar" must not be excluded).
 The exclude patterns actually short\-circuit the directory traversal stage
 when rsync finds the files to send.  If a pattern excludes a particular
 parent directory, it can render a deeper include pattern ineffectual
 because rsync did not descend through that excluded section of the
-hierarchy.  This is particularly important when using a trailing \(cq\&*\(cq\& rule.
-For instance, this won\(cq\&t work:
+hierarchy.  This is particularly important when using a trailing '*' rule.
+For instance, this won't work:
 .PP 
 .RS 
 \f(CW+ /some/path/this\-file\-will\-not\-be\-found\fP
@@ -3224,11 +3228,11 @@
 .RE
 
 .PP 
-This fails because the parent directory \(dq\&some\(dq\& is excluded by the \(cq\&*\(cq\&
-rule, so rsync never visits any of the files in the \(dq\&some\(dq\& or \(dq\&some/path\(dq\&
+This fails because the parent directory "some" is excluded by the '*'
+rule, so rsync never visits any of the files in the "some" or "some/path"
 directories.  One solution is to ask for all directories in the hierarchy
-to be included by using a single rule: \(dq\&+ */\(dq\& (put it somewhere before the
-\(dq\&\- *\(dq\& rule), and perhaps use the \fB\-\-prune\-empty\-dirs\fP option.  Another
+to be included by using a single rule: "+ */" (put it somewhere before the
+"\- *" rule), and perhaps use the \fB\-\-prune\-empty\-dirs\fP option.  Another
 solution is to add specific include rules for all
 the parent dirs that need to be visited.  For instance, this set of rules
 works fine:
@@ -3250,44 +3254,44 @@
 Here are some examples of exclude/include matching:
 .PP 
 .IP o 
-\(dq\&\- *.o\(dq\& would exclude all names matching *.o
+"\- *.o" would exclude all names matching *.o
 .IP o 
-\(dq\&\- /foo\(dq\& would exclude a file (or directory) named foo in the
+"\- /foo" would exclude a file (or directory) named foo in the
 transfer\-root directory
 .IP o 
-\(dq\&\- foo/\(dq\& would exclude any directory named foo
+"\- foo/" would exclude any directory named foo
 .IP o 
-\(dq\&\- /foo/*/bar\(dq\& would exclude any file named bar which is at two
+"\- /foo/*/bar" would exclude any file named bar which is at two
 levels below a directory named foo in the transfer\-root directory
 .IP o 
-\(dq\&\- /foo/**/bar\(dq\& would exclude any file named bar two
+"\- /foo/**/bar" would exclude any file named bar two
 or more levels below a directory named foo in the transfer\-root directory
 .IP o 
-The combination of \(dq\&+ */\(dq\&, \(dq\&+ *.c\(dq\&, and \(dq\&\- *\(dq\& would include all
+The combination of "+ */", "+ *.c", and "\- *" would include all
 directories and C source files but nothing else (see also the
 \fB\-\-prune\-empty\-dirs\fP option)
 .IP o 
-The combination of \(dq\&+ foo/\(dq\&, \(dq\&+ foo/bar.c\(dq\&, and \(dq\&\- *\(dq\& would include
+The combination of "+ foo/", "+ foo/bar.c", and "\- *" would include
 only the foo directory and foo/bar.c (the foo directory must be
-explicitly included or it would be excluded by the \(dq\&*\(dq\&)
+explicitly included or it would be excluded by the "*")
 
 .PP 
-The following modifiers are accepted after a \(dq\&+\(dq\& or \(dq\&\-\(dq\&:
+The following modifiers are accepted after a "+" or "\-":
 .PP 
 .IP o 
 A \fB/\fP specifies that the include/exclude rule should be matched
 against the absolute pathname of the current item.  For example,
-\(dq\&\-/ /etc/passwd\(dq\& would exclude the passwd file any time the transfer
-was sending files from the \(dq\&/etc\(dq\& directory, and \(dq\&\-/ subdir/foo\(dq\&
-would always exclude \(dq\&foo\(dq\& when it is in a dir named \(dq\&subdir\(dq\&, even
-if \(dq\&foo\(dq\& is at the root of the current transfer.
+"\-/ /etc/passwd" would exclude the passwd file any time the transfer
+was sending files from the "/etc" directory, and "\-/ subdir/foo"
+would always exclude "foo" when it is in a dir named "subdir", even
+if "foo" is at the root of the current transfer.
 .IP o 
 A \fB!\fP specifies that the include/exclude should take effect if
-the pattern fails to match.  For instance, \(dq\&\-! */\(dq\& would exclude all
+the pattern fails to match.  For instance, "\-! */" would exclude all
 non\-directories.
 .IP o 
 A \fBC\fP is used to indicate that all the global CVS\-exclude rules
-should be inserted as excludes in place of the \(dq\&\-C\(dq\&.  No arg should
+should be inserted as excludes in place of the "\-C".  No arg should
 follow.
 .IP o 
 An \fBs\fP is used to indicate that the rule applies to the sending
@@ -3305,7 +3309,7 @@
 .IP o 
 A \fBp\fP indicates that a rule is perishable, meaning that it is
 ignored in directories that are being deleted.  For instance, the \fB\-C\fP
-option\(cq\&s default rules that exclude things like \(dq\&CVS\(dq\& and \(dq\&*.o\(dq\& are
+option's default rules that exclude things like "CVS" and "*.o" are
 marked as perishable, and will not prevent a directory that was removed
 on the source from being deleted on the destination.
 
@@ -3317,16 +3321,16 @@
 merge (.) or a dir\-merge (:) filter rule (as introduced in the FILTER RULES
 section above).
 .PP 
-There are two kinds of merged files \-\- single\-instance (\(cq\&.\(cq\&) and
-per\-directory (\(cq\&:\(cq\&).  A single\-instance merge file is read one time, and
-its rules are incorporated into the filter list in the place of the \(dq\&.\(dq\&
+There are two kinds of merged files \-\- single\-instance ('.') and
+per\-directory (':').  A single\-instance merge file is read one time, and
+its rules are incorporated into the filter list in the place of the "."
 rule.  For per\-directory merge files, rsync will scan every directory that
 it traverses for the named file, merging its contents when the file exists
 into the current list of inherited rules.  These per\-directory rule files
 must be created on the sending side because it is the sending side that is
 being scanned for the available files to transfer.  These rule files may
 also need to be transferred to the receiving side if you want them to
-affect what files don\(cq\&t get deleted (see PER\-DIRECTORY RULES AND DELETE
+affect what files don't get deleted (see PER\-DIRECTORY RULES AND DELETE
 below).
 .PP 
 Some examples:
@@ -3355,27 +3359,27 @@
 patterns, with no other rule\-parsing except for in\-file comments.
 .IP o 
 A \fBC\fP is a way to specify that the file should be read in a
-CVS\-compatible manner.  This turns on \(cq\&n\(cq\&, \(cq\&w\(cq\&, and \(cq\&\-\(cq\&, but also
+CVS\-compatible manner.  This turns on 'n', 'w', and '\-', but also
 allows the list\-clearing token (!) to be specified.  If no filename is
-provided, \(dq\&.cvsignore\(dq\& is assumed.
+provided, ".cvsignore" is assumed.
 .IP o 
 A \fBe\fP will exclude the merge\-file name from the transfer; e.g.
-\(dq\&dir\-merge,e .rules\(dq\& is like \(dq\&dir\-merge .rules\(dq\& and \(dq\&\- .rules\(dq\&.
+"dir\-merge,e .rules" is like "dir\-merge .rules" and "\- .rules".
 .IP o 
 An \fBn\fP specifies that the rules are not inherited by subdirectories.
 .IP o 
 A \fBw\fP specifies that the rules are word\-split on whitespace instead
 of the normal line\-splitting.  This also turns off comments.  Note: the
 space that separates the prefix from the rule is treated specially, so
-\(dq\&\- foo + bar\(dq\& is parsed as two rules (assuming that prefix\-parsing wasn\(cq\&t
+"\- foo + bar" is parsed as two rules (assuming that prefix\-parsing wasn't
 also disabled).
 .IP o 
-You may also specify any of the modifiers for the \(dq\&+\(dq\& or \(dq\&\-\(dq\& rules
+You may also specify any of the modifiers for the "+" or "\-" rules
 (above) in order to have the rules that are read in from the file
 default to having that modifier set (except for the \fB!\fP modifier, which
-would not be useful).  For instance, \(dq\&merge,\-/ .excl\(dq\& would
+would not be useful).  For instance, "merge,\-/ .excl" would
 treat the contents of .excl as absolute\-path excludes,
-while \(dq\&dir\-merge,s .filt\(dq\& and \(dq\&:sC\(dq\& would each make all their
+while "dir\-merge,s .filt" and ":sC" would each make all their
 per\-directory rules apply only on the sending side.  If the merge rule
 specifies sides to affect (via the \fBs\fP or \fBr\fP modifier or both),
 then the rules in the file must not specify sides (via a modifier or
@@ -3383,22 +3387,22 @@
 
 .PP 
 Per\-directory rules are inherited in all subdirectories of the directory
-where the merge\-file was found unless the \(cq\&n\(cq\& modifier was used.  Each
-subdirectory\(cq\&s rules are prefixed to the inherited per\-directory rules
+where the merge\-file was found unless the 'n' modifier was used.  Each
+subdirectory's rules are prefixed to the inherited per\-directory rules
 from its parents, which gives the newest rules a higher priority than the
 inherited rules.  The entire set of dir\-merge rules are grouped together in
 the spot where the merge\-file was specified, so it is possible to override
 dir\-merge rules via a rule that got specified earlier in the list of global
-rules.  When the list\-clearing rule (\(dq\&!\(dq\&) is read from a per\-directory
+rules.  When the list\-clearing rule ("!") is read from a per\-directory
 file, it only clears the inherited rules for the current merge file.
 .PP 
 Another way to prevent a single rule from a dir\-merge file from being inherited is to
 anchor it with a leading slash.  Anchored rules in a per\-directory
-merge\-file are relative to the merge\-file\(cq\&s directory, so a pattern \(dq\&/foo\(dq\&
-would only match the file \(dq\&foo\(dq\& in the directory where the dir\-merge filter
+merge\-file are relative to the merge\-file's directory, so a pattern "/foo"
+would only match the file "foo" in the directory where the dir\-merge filter
 file was found.
 .PP 
-Here\(cq\&s an example filter file which you\(cq\&d specify via \fB\-\-filter=\(dq\&. file\(dq\&:\fP
+Here's an example filter file which you'd specify via \fB\-\-filter=". file":\fP
 .PP 
 .RS 
 \f(CWmerge /home/user/.global\-filter\fP
@@ -3415,7 +3419,7 @@
 
 .PP 
 This will merge the contents of the /home/user/.global\-filter file at the
-start of the list and also turns the \(dq\&.rules\(dq\& filename into a per\-directory
+start of the list and also turns the ".rules" filename into a per\-directory
 filter file.  All rules read in prior to the start of the directory scan
 follow the global anchoring rules (i.e. a leading slash matches at the root
 of the transfer).
@@ -3426,7 +3430,7 @@
 per\-directory file.  For instance, here is a common filter (see \fB\-F\fP):
 .PP 
 .RS 
-\f(CW\-\-filter='\&: /.rsync\-filter'\&\fP
+\f(CW\-\-filter=': /.rsync\-filter'\fP
 .RE
 
 .PP 
@@ -3434,38 +3438,38 @@
 directories from the root down through the parent directory of the
 transfer prior to the start of the normal directory scan of the file in
 the directories that are sent as a part of the transfer.  (Note: for an
-rsync daemon, the root is always the same as the module\(cq\&s \(dq\&path\(dq\&.)
+rsync daemon, the root is always the same as the module's "path".)
 .PP 
 Some examples of this pre\-scanning for per\-directory files:
 .PP 
 .RS 
 \f(CWrsync \-avF /src/path/ /dest/dir\fP
 .br 
-\f(CWrsync \-av \-\-filter='\&: ../../.rsync\-filter'\& /src/path/ /dest/dir\fP
+\f(CWrsync \-av \-\-filter=': ../../.rsync\-filter' /src/path/ /dest/dir\fP
 .br 
-\f(CWrsync \-av \-\-filter='\&: .rsync\-filter'\& /src/path/ /dest/dir\fP
+\f(CWrsync \-av \-\-filter=': .rsync\-filter' /src/path/ /dest/dir\fP
 .br 
 .RE
 
 .PP 
-The first two commands above will look for \(dq\&.rsync\-filter\(dq\& in \(dq\&/\(dq\& and
-\(dq\&/src\(dq\& before the normal scan begins looking for the file in \(dq\&/src/path\(dq\&
+The first two commands above will look for ".rsync\-filter" in "/" and
+"/src" before the normal scan begins looking for the file in "/src/path"
 and its subdirectories.  The last command avoids the parent\-dir scan
-and only looks for the \(dq\&.rsync\-filter\(dq\& files in each directory that is
+and only looks for the ".rsync\-filter" files in each directory that is
 a part of the transfer.
 .PP 
-If you want to include the contents of a \(dq\&.cvsignore\(dq\& in your patterns,
-you should use the rule \(dq\&:C\(dq\&, which creates a dir\-merge of the .cvsignore
+If you want to include the contents of a ".cvsignore" in your patterns,
+you should use the rule ":C", which creates a dir\-merge of the .cvsignore
 file, but parsed in a CVS\-compatible manner.  You can
-use this to affect where the \fB\-\-cvs\-exclude\fP (\fB\-C\fP) option\(cq\&s inclusion of the
+use this to affect where the \fB\-\-cvs\-exclude\fP (\fB\-C\fP) option's inclusion of the
 per\-directory .cvsignore file gets placed into your rules by putting the
-\(dq\&:C\(dq\& wherever you like in your filter rules.  Without this, rsync would
+":C" wherever you like in your filter rules.  Without this, rsync would
 add the dir\-merge rule for the .cvsignore file at the end of all your other
 rules (giving it a lower priority than your command\-line rules).  For
 example:
 .PP 
 .RS 
-\f(CWcat <<EOT | rsync \-avC \-\-filter='\&. \-'\& a/ b\fP
+\f(CWcat <<EOT | rsync \-avC \-\-filter='. \-' a/ b\fP
 .br 
 \f(CW+ foo.o\fP
 .br 
@@ -3475,7 +3479,7 @@
 .br 
 \f(CWEOT\fP
 .br 
-\f(CWrsync \-avC \-\-include=foo.o \-f :C \-\-exclude='\&*.old'\& a/ b\fP
+\f(CWrsync \-avC \-\-include=foo.o \-f :C \-\-exclude='*.old' a/ b\fP
 .br 
 .RE
 
@@ -3486,25 +3490,25 @@
 that follow the :C instead of being subservient to all your rules.  To
 affect the other CVS exclude rules (i.e. the default list of exclusions,
 the contents of $HOME/.cvsignore, and the value of $CVSIGNORE) you should
-omit the \fB\-C\fP command\-line option and instead insert a \(dq\&\-C\(dq\& rule into
-your filter rules; e.g. \(dq\&\fB\-\-filter=\-C\fP\(dq\&.
+omit the \fB\-C\fP command\-line option and instead insert a "\-C" rule into
+your filter rules; e.g. "\fB\-\-filter=\-C\fP".
 .PP 
 .SH "LIST\-CLEARING FILTER RULE"
 
 .PP 
-You can clear the current include/exclude list by using the \(dq\&!\(dq\& filter
-rule (as introduced in the FILTER RULES section above).  The \(dq\&current\(dq\&
+You can clear the current include/exclude list by using the "!" filter
+rule (as introduced in the FILTER RULES section above).  The "current"
 list is either the global list of rules (if the rule is encountered while
 parsing the filter options) or a set of per\-directory rules (which are
 inherited in their own sub\-list, so a subdirectory can use this to clear
-out the parent\(cq\&s rules).
+out the parent's rules).
 .PP 
 .SH "ANCHORING INCLUDE/EXCLUDE PATTERNS"
 
 .PP 
 As mentioned earlier, global include/exclude patterns are anchored at the
-\(dq\&root of the transfer\(dq\& (as opposed to per\-directory patterns, which are
-anchored at the merge\-file\(cq\&s directory).  If you think of the transfer as
+"root of the transfer" (as opposed to per\-directory patterns, which are
+anchored at the merge\-file's directory).  If you think of the transfer as
 a subtree of names that are being sent from sender to receiver, the
 transfer\-root is where the tree starts to be duplicated in the destination
 directory.  This root governs where patterns that start with a / match.
@@ -3515,8 +3519,8 @@
 changing how much of the file tree is duplicated on the destination
 host).  The following examples demonstrate this.
 .PP 
-Let\(cq\&s say that we want to match two source files, one with an absolute
-path of \(dq\&/home/me/foo/bar\(dq\&, and one with a path of \(dq\&/home/you/bar/baz\(dq\&.
+Let's say that we want to match two source files, one with an absolute
+path of "/home/me/foo/bar", and one with a path of "/home/you/bar/baz".
 Here is how the various command choices differ for a 2\-source transfer:
 .PP 
 .RS 
@@ -3536,9 +3540,9 @@
 .RS 
 Example cmd: rsync \-a /home/me/ /home/you/ /dest 
 .br 
-+/\- pattern: /foo/bar               (note missing \(dq\&me\(dq\&) 
++/\- pattern: /foo/bar               (note missing "me") 
 .br 
-+/\- pattern: /bar/baz               (note missing \(dq\&you\(dq\&) 
++/\- pattern: /bar/baz               (note missing "you") 
 .br 
 Target file: /dest/foo/bar 
 .br 
@@ -3577,26 +3581,26 @@
 .PP 
 The easiest way to see what name you should filter is to just
 look at the output when using \fB\-\-verbose\fP and put a / in front of the name
-(use the \fB\-\-dry\-run\fP option if you\(cq\&re not yet ready to copy any files).
+(use the \fB\-\-dry\-run\fP option if you're not yet ready to copy any files).
 .PP 
 .SH "PER\-DIRECTORY RULES AND DELETE"
 
 .PP 
 Without a delete option, per\-directory rules are only relevant on the
 sending side, so you can feel free to exclude the merge files themselves
-without affecting the transfer.  To make this easy, the \(cq\&e\(cq\& modifier adds
+without affecting the transfer.  To make this easy, the 'e' modifier adds
 this exclude for you, as seen in these two equivalent commands:
 .PP 
 .RS 
-\f(CWrsync \-av \-\-filter='\&: .excl'\& \-\-exclude=.excl host:src/dir /dest\fP
+\f(CWrsync \-av \-\-filter=': .excl' \-\-exclude=.excl host:src/dir /dest\fP
 .br 
-\f(CWrsync \-av \-\-filter='\&:e .excl'\& host:src/dir /dest\fP
+\f(CWrsync \-av \-\-filter=':e .excl' host:src/dir /dest\fP
 .br 
 .RE
 
 .PP 
 However, if you want to do a delete on the receiving side AND you want some
-files to be excluded from being deleted, you\(cq\&ll need to be sure that the
+files to be excluded from being deleted, you'll need to be sure that the
 receiving side knows what files to exclude.  The easiest way is to include
 the per\-directory merge files in the transfer and use \fB\-\-delete\-after\fP,
 because this ensures that the receiving side gets all the same exclude
@@ -3607,14 +3611,14 @@
 .RE
 
 .PP 
-However, if the merge files are not a part of the transfer, you\(cq\&ll need to
+However, if the merge files are not a part of the transfer, you'll need to
 either specify some global exclude rules (i.e. specified on the command
-line), or you\(cq\&ll need to maintain your own per\-directory merge files on
+line), or you'll need to maintain your own per\-directory merge files on
 the receiving side.  An example of the first is this (assume that the
 remote .rules files exclude themselves):
 .PP 
 .nf 
-rsync \-av \-\-filter=\(cq\&: .rules\(cq\& \-\-filter=\(cq\&. /my/extra.rules\(cq\&
+rsync \-av \-\-filter=': .rules' \-\-filter='. /my/extra.rules'
    \-\-delete host:src/dir /dest
 .fi 
 
@@ -3627,12 +3631,12 @@
 In one final example, the remote side is excluding the .rsync\-filter
 files from the transfer, but we want to use our own .rsync\-filter files
 to control what gets deleted on the receiving side.  To do this we must
-specifically exclude the per\-directory merge files (so that they don\(cq\&t get
+specifically exclude the per\-directory merge files (so that they don't get
 deleted) and then put rules into the local files to control what else
 should not get deleted.  Like one of these commands:
 .PP 
 .nf 
-    rsync \-av \-\-filter='\&:e /.rsync\-filter'\& \-\-delete \e 
+    rsync \-av \-\-filter=':e /.rsync\-filter' \-\-delete \e 
         host:src/dir /dest
     rsync \-avFF \-\-delete host:src/dir /dest
 .fi 
@@ -3648,7 +3652,7 @@
 hosts. In order to do this using batch mode, rsync is run with the
 write\-batch option to apply the changes made to the source tree to one
 of the destination trees.  The write\-batch option causes the rsync
-client to store in a \(dq\&batch file\(dq\& all the information needed to repeat
+client to store in a "batch file" all the information needed to repeat
 this operation against other, identical destination trees.
 .PP 
 Generating the batch file once saves having to perform the file
@@ -3663,7 +3667,7 @@
 using the information stored in the batch file.
 .PP 
 For your convenience, a script file is also created when the write\-batch
-option is used:  it will be named the same as the batch file with \(dq\&.sh\(dq\&
+option is used:  it will be named the same as the batch file with ".sh"
 appended.  This script file contains a command\-line suitable for updating a
 destination tree using the associated batch file. It can be executed using
 a Bourne (or Bourne\-like) shell, optionally passing in an alternate
@@ -3692,25 +3696,25 @@
 
 .PP 
 In these examples, rsync is used to update /adest/dir/ from /source/dir/
-and the information to repeat this operation is stored in \(dq\&foo\(dq\& and
-\(dq\&foo.sh\(dq\&.  The host \(dq\&remote\(dq\& is then updated with the batched data going
+and the information to repeat this operation is stored in "foo" and
+"foo.sh".  The host "remote" is then updated with the batched data going
 into the directory /bdest/dir.  The differences between the two examples
 reveals some of the flexibility you have in how you deal with batches:
 .PP 
 .IP o 
-The first example shows that the initial copy doesn\(cq\&t have to be
+The first example shows that the initial copy doesn't have to be
 local \-\- you can push or pull data to/from a remote host using either the
 remote\-shell syntax or rsync daemon syntax, as desired.
 .IP o 
-The first example uses the created \(dq\&foo.sh\(dq\& file to get the right
+The first example uses the created "foo.sh" file to get the right
 rsync options when running the read\-batch command on the remote host.
 .IP o 
 The second example reads the batch data via standard input so that
-the batch file doesn\(cq\&t need to be copied to the remote machine first.
+the batch file doesn't need to be copied to the remote machine first.
 This example avoids the foo.sh script because it needed to use a modified
 \fB\-\-read\-batch\fP option, but you could edit the script file if you wished to
 make use of it (just be sure that no other option is trying to use
-standard input, such as the \(dq\&\fB\-\-exclude\-from=\-\fP\(dq\& option).
+standard input, such as the "\fB\-\-exclude\-from=\-\fP" option).
 
 .PP 
 Caveats:
@@ -3723,7 +3727,7 @@
 and then, if the file fails to verify, the update discarded with an
 error.  This means that it should be safe to re\-run a read\-batch operation
 if the command got interrupted.  If you wish to force the batched\-update to
-always be attempted regardless of the file\(cq\&s size and date, use the \fB\-I\fP
+always be attempted regardless of the file's size and date, use the \fB\-I\fP
 option (when reading the batch).
 If an error occurs, the destination tree will probably be in a
 partially updated state. In that case, rsync can
@@ -3739,7 +3743,7 @@
 older than that with newer versions will not work.)
 .PP 
 When reading a batch file, rsync will force the value of certain options
-to match the data in the batch file if you didn\(cq\&t set them to the same
+to match the data in the batch file if you didn't set them to the same
 as the batch\-writing command.  Other options can (and should) be changed.
 For instance \fB\-\-write\-batch\fP changes to \fB\-\-read\-batch\fP,
 \fB\-\-files\-from\fP is dropped, and the
@@ -3747,13 +3751,13 @@
 one of the \fB\-\-delete\fP options is specified.
 .PP 
 The code that creates the BATCH.sh file transforms any filter/include/exclude
-options into a single list that is appended as a \(dq\&here\(dq\& document to the
+options into a single list that is appended as a "here" document to the
 shell script file.  An advanced user can use this to modify the exclude
 list if a change in what gets deleted by \fB\-\-delete\fP is desired.  A normal
 user can ignore this detail and just use the shell script as an easy way
 to run the appropriate \fB\-\-read\-batch\fP command for the batched data.
 .PP 
-The original batch mode in rsync was based on \(dq\&rsync+\(dq\&, but the latest
+The original batch mode in rsync was based on "rsync+", but the latest
 version uses a new implementation.
 .PP 
 .SH "SYMBOLIC LINKS"
@@ -3763,16 +3767,16 @@
 link in the source directory.
 .PP 
 By default, symbolic links are not transferred at all.  A message
-\(dq\&skipping non\-regular\(dq\& file is emitted for any symlinks that exist.
+"skipping non\-regular" file is emitted for any symlinks that exist.
 .PP 
 If \fB\-\-links\fP is specified, then symlinks are recreated with the same
 target on the destination.  Note that \fB\-\-archive\fP implies
 \fB\-\-links\fP.
 .PP 
-If \fB\-\-copy\-links\fP is specified, then symlinks are \(dq\&collapsed\(dq\& by
+If \fB\-\-copy\-links\fP is specified, then symlinks are "collapsed" by
 copying their referent, rather than the symlink.
 .PP 
-Rsync can also distinguish \(dq\&safe\(dq\& and \(dq\&unsafe\(dq\& symbolic links.  An
+Rsync can also distinguish "safe" and "unsafe" symbolic links.  An
 example where this might be used is a web site mirror that wishes to
 ensure that the rsync module that is copied does not include symbolic links to
 \fB/etc/passwd\fP in the public section of the site.  Using
@@ -3782,11 +3786,11 @@
 \fB\-\-links\fP for \fB\-\-safe\-links\fP to have any effect.)
 .PP 
 Symbolic links are considered unsafe if they are absolute symlinks
-(start with \fB/\fP), empty, or if they contain enough \(dq\&..\(dq\&
+(start with \fB/\fP), empty, or if they contain enough ".."
 components to ascend from the directory being copied.
 .PP 
-Here\(cq\&s a summary of how the symlink options are interpreted.  The list is
-in order of precedence, so if your combination of options isn\(cq\&t mentioned,
+Here's a summary of how the symlink options are interpreted.  The list is
+in order of precedence, so if your combination of options isn't mentioned,
 use the first line that is a complete subset of your options:
 .PP 
 .IP "\fB\-\-copy\-links\fP"
@@ -3812,8 +3816,8 @@
 
 .PP 
 rsync occasionally produces error messages that may seem a little
-cryptic. The one that seems to cause the most confusion is \(dq\&protocol
-version mismatch \-\- is your shell clean?\(dq\&.
+cryptic. The one that seems to cause the most confusion is "protocol
+version mismatch \-\- is your shell clean?".
 .PP 
 This message is usually caused by your startup scripts or remote shell
 facility producing unwanted garbage on the stream that rsync is using
@@ -3913,13 +3917,13 @@
 password allows you to run authenticated rsync connections to an rsync
 daemon without user intervention. Note that this does not supply a
 password to a remote shell transport such as ssh; to learn how to do that,
-consult the remote shell\(cq\&s documentation.
+consult the remote shell's documentation.
 .IP "\fBUSER\fP or \fBLOGNAME\fP"
 The USER or LOGNAME environment variables
 are used to determine the default username sent to an rsync daemon.
-If neither is set, the username defaults to \(dq\&nobody\(dq\&.
+If neither is set, the username defaults to "nobody".
 .IP "\fBHOME\fP"
-The HOME environment variable is used to find the user\(cq\&s
+The HOME environment variable is used to find the user's
 default .cvsignore file.
 
 .PP 
@@ -3994,7 +3998,7 @@
 gone\-but\-not\-forgotten compadre, J.W. Schultz.
 .PP 
 Thanks also to Richard Brent, Brendan Mackay, Bill Waite, Stephen Rothwell
-and David Bell.  I\(cq\&ve probably missed some people, my apologies if I have.
+and David Bell.  I've probably missed some people, my apologies if I have.
 .PP 
 .SH "AUTHOR"
 
