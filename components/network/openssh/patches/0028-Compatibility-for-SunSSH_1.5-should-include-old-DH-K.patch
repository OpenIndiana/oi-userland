From 17a12b9efaef1f92d91b51dd8fbaa452aa138451 Mon Sep 17 00:00:00 2001
From: Alex Wilson <alex.wilson@joyent.com>
Date: Fri, 4 Sep 2015 10:38:28 -0700
Subject: [PATCH 28/34] Compatibility for SunSSH_1.5* should include old DH KEx
 algos

We use the kex compat mechanism here to recognise old SunSSH
versions and present a kex proposal that always includes the
dh-group14 and -group1 algorithms.

Without this, an old SunSSH client cannot connect to our
new daemon.

--- openssh-7.8p1/compat.c.~1~	2018-08-23 08:41:42.000000000 +0000
+++ openssh-7.8p1/compat.c	2018-10-21 06:45:57.926720721 +0000
@@ -54,8 +54,12 @@
 		  "OpenSSH_3.1*",	SSH_BUG_EXTEOF|SSH_OLD_FORWARD_ADDR|
 					SSH_BUG_SIGTYPE},
 		{ "OpenSSH_3.*",	SSH_OLD_FORWARD_ADDR|SSH_BUG_SIGTYPE },
-		{ "Sun_SSH_1.0*",	SSH_BUG_NOREKEY|SSH_BUG_EXTEOF|
-					SSH_BUG_SIGTYPE},
+		{ "Sun_SSH_1.2*,"
+		  "Sun_SSH_1.3*,"
+		  "Sun_SSH_1.4*,"
+		  "Sun_SSH_1.5*",	SSH_OLD_DHGEX},
+		{ "Sun_SSH_1.*",	SSH_BUG_NOREKEY|SSH_BUG_EXTEOF|
+					SSH_BUG_SIGTYPE|SSH_OLD_DHGEX},
 		{ "OpenSSH_2*,"
 		  "OpenSSH_3*,"
 		  "OpenSSH_4*",		SSH_BUG_SIGTYPE },
@@ -211,6 +215,31 @@
 	return pkalg_prop;
 }
 
+/*
+ * Adds an algorithm to the end of a proposal list, only if the algorithm is
+ * not already present.
+ */
+static char *
+append_proposal(char *proposal, const char *append)
+{
+	struct sshbuf *b;
+	char *fix_prop;
+
+	if (strstr(proposal, append) != NULL)
+		return proposal;
+	if ((b = sshbuf_new()) == NULL)
+		fatal("sshbuf_new()");
+	sshbuf_put(b, proposal, strlen(proposal));
+	if (sshbuf_len(b) > 0)
+		sshbuf_put(b, ",", 1);
+	sshbuf_put(b, append, strlen(append));
+	sshbuf_put(b, "\0", 1);
+	fix_prop = sshbuf_dup_string(b);
+	sshbuf_free(b);
+
+	return fix_prop;
+}
+
 char *
 compat_kex_proposal(char *p)
 {
@@ -226,6 +255,8 @@
 		    "diffie-hellman-group-exchange-sha256,"
 		    "diffie-hellman-group-exchange-sha1")) == NULL)
 			fatal("match_filter_blacklist failed");
+		p = append_proposal(p, "diffie-hellman-group14-sha1");
+		p = append_proposal(p, "diffie-hellman-group1-sha1");
 	}
 	debug2("%s: compat KEX proposal: %s", __func__, p);
 	if (*p == '\0')
