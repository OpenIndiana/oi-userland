--- putty-0.70/cmdgen.c	2017-07-04 21:30:55.000000000 +0000
+++ cmdgen.c	2017-08-30 04:57:16.469173728 +0000
@@ -236,8 +236,8 @@
     Filename *infilename = NULL, *outfilename = NULL;
     enum { NOKEYGEN, RSA1, RSA2, DSA, ECDSA, ED25519 } keytype = NOKEYGEN;
     char *outfile = NULL, *outfiletmp = NULL;
-    enum { PRIVATE, PUBLIC, PUBLICO, FP, OPENSSH_AUTO,
-           OPENSSH_NEW, SSHCOM } outtype = PRIVATE;
+    enum { PPRIVATE, PUBLIC, PUBLICO, FP, OPENSSH_AUTO,
+           OPENSSH_NEW, SSHCOM } outtype = PPRIVATE;
     int bits = -1;
     char *comment = NULL, *origcomment = NULL;
     int change_passphrase = FALSE;
@@ -450,7 +450,7 @@
 			else if (!strcmp(p, "public-openssh"))
 			    outtype = PUBLICO;
 			else if (!strcmp(p, "private"))
-			    outtype = PRIVATE;
+			    outtype = PPRIVATE;
 			else if (!strcmp(p, "fingerprint"))
 			    outtype = FP;
 			else if (!strcmp(p, "private-openssh"))
@@ -567,7 +567,7 @@
      * We must save the private part when generating a new key.
      */
     if (keytype != NOKEYGEN &&
-	(outtype != PRIVATE && outtype != OPENSSH_AUTO &&
+	(outtype != PPRIVATE && outtype != OPENSSH_AUTO &&
          outtype != OPENSSH_NEW && outtype != SSHCOM)) {
 	fprintf(stderr, "puttygen: this would generate a new key but "
 		"discard the private part\n");
@@ -630,8 +630,8 @@
      * Also in this code, we bomb out if the input and output file
      * formats are the same and no other action is performed.
      */
-    if ((intype == SSH_KEYTYPE_SSH1 && outtype == PRIVATE) ||
-	(intype == SSH_KEYTYPE_SSH2 && outtype == PRIVATE) ||
+    if ((intype == SSH_KEYTYPE_SSH1 && outtype == PPRIVATE) ||
+	(intype == SSH_KEYTYPE_SSH2 && outtype == PPRIVATE) ||
 	(intype == SSH_KEYTYPE_OPENSSH_PEM && outtype == OPENSSH_AUTO) ||
 	(intype == SSH_KEYTYPE_OPENSSH_NEW && outtype == OPENSSH_NEW) ||
 	(intype == SSH_KEYTYPE_SSHCOM && outtype == SSHCOM)) {
@@ -651,7 +651,7 @@
 	     * Bomb out rather than automatically choosing to write
 	     * a private key file to stdout.
 	     */
-	    if (outtype == PRIVATE || outtype == OPENSSH_AUTO ||
+	    if (outtype == PPRIVATE || outtype == OPENSSH_AUTO ||
                 outtype == OPENSSH_NEW || outtype == SSHCOM) {
 		fprintf(stderr, "puttygen: need to specify an output file\n");
 		return 1;
@@ -665,7 +665,7 @@
      * out a private key format, or (b) the entire input key file
      * is encrypted.
      */
-    if (outtype == PRIVATE || outtype == OPENSSH_AUTO ||
+    if (outtype == PPRIVATE || outtype == OPENSSH_AUTO ||
         outtype == OPENSSH_NEW || outtype == SSHCOM ||
 	intype == SSH_KEYTYPE_OPENSSH_PEM ||
 	intype == SSH_KEYTYPE_OPENSSH_NEW ||
@@ -969,7 +969,7 @@
     switch (outtype) {
 	int ret, real_outtype;
 
-      case PRIVATE:
+      case PPRIVATE:
 	if (sshver == 1) {
 	    assert(ssh1key);
 	    ret = saversakey(outfilename, ssh1key, new_passphrase);
