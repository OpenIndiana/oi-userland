<?xml version="1.0" ?>
<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">
<!-- See the non-trivial-setup notes and recommendations for the OpenVPN SMF
     service integration in /usr/share/doc/openvpn/README.openindiana -->
<service_bundle type="manifest" name="openvpn">
    <service name="network/openvpn" type="service" version="1">
        <create_default_instance enabled="false"/>

        <dependency name="network" grouping="require_all" restart_on="error" type="service">
            <service_fmri value="svc:/milestone/network:default"/>
        </dependency>

        <dependency name="filesystem" grouping="require_all" restart_on="error" type="service">
            <service_fmri value="svc:/system/filesystem/local"/>
        </dependency>

        <method_context working_directory='/etc/openvpn'>
            <method_environment>
                <envvar name="PATH" value="/usr/bin:/usr/sbin"/>
            </method_environment>
            <!-- Some setups might need extra permissions for their OpenVPN
                 service, but not all require these - so by default they are
                 commented away and may be enabled by an end-user's deployment,
                 and maybe just for a particular instance. -->
<!--
            <method_credential group='root' limit_privileges=':default'
                privileges='basic,sys_iptun_config,sys_net_config,sys_devices,net_privaddr,net_rawaccess,net_icmpaccess,file_chown,file_owner,file_dac_write,proc_setid,proc_chroot'
                supp_groups=':default' user='root'/>
-->
        </method_context>

        <!-- The "\-\-cd" in the exec method both verifies validity of the
             config_file path specified by user, and allows relative paths
             to additional files to be used from that config file as is
             commonly done in OpenVPN setups.
             An SMF native "method_context working_directory" tuned for each
             instance might be better, but alas it seems to not accept macros.
             Logs are sent to stderr here so they end up in the SMF instance
             log and failures are debuggable easier. A particular config_file
             may redefine logging if desired. -->
        <exec_method type="method" name="start" exec="/usr/sbin/openvpn --log-append '%{config/default_logfile}' --daemon openvpn:%i --config '%{config/config_file}' --cd &quot;$(dirname '%{config/config_file}')&quot;" timeout_seconds="60"/>

        <exec_method type="method" name="stop" exec=":kill" timeout_seconds="60"/>

        <property_group name='general' type='framework'>
            <propval name='action_authorization' type='astring' value='solaris.smf.manage.openvpn'/>
            <propval name='value_authorization' type='astring' value='solaris.smf.value.openvpn'/>
        </property_group>

        <property_group name="startd" type="framework">
            <propval name="duration" type="astring" value="contract"/>
            <propval name="ignore_error" type="astring" value="core,signal"/>
        </property_group>

        <property_group name='config' type='application'>
            <!-- Full path to config file is required -->
            <propval name="config_file" type='astring' value='/etc/openvpn/openvpn.conf'/>
            <!-- Note that the log location can be overridden inside the config file -->
            <propval name="default_logfile" type='astring' value='/dev/stderr'/>
            <propval name='value_authorization' type='astring' value='solaris.smf.value.openvpn'/>
        </property_group>

        <stability value="Evolving"/>

        <template>
            <common_name>
                <loctext xml:lang="C">OpenVPN</loctext>
            </common_name>
            <documentation>
                <manpage title="openvpn" section="8" manpath="/usr/share/man"/>
                <doc_link name="openvpn.net" uri="http://openvpn.net/index.php/manuals"/>
            </documentation>
        </template>
    </service>
</service_bundle>
