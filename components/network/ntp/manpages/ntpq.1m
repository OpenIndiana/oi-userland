'\" te
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\"
.\" Copyright (c) 2009, 2011, Oracle and/or its affiliates. All rights reserved.
.\"
.TH "ntpq" "1M" "" "" "System Administration Commands"
.SH NAME
ntpq \- Network Time Protocol query program
.SH SYNOPSIS
.LP
.n
\fB/usr/sbin/ntpq\fR [\fB-46dpinv?!\fR] [\fB-c\fR \fIcommand\fR]
    [\fB-D\fR \fIdebuglvl\fR] [\fB-<\fR \fIoptfile\fR] [\fB->\fR \fIoptfile\fR]  [\fIhost\fR] [...]
.fi
.SH "DESCRIPTION"
.LP
The \fBntpq\fR utility program is used to monitor NTP daemon \fBntpd\fR operations and determine performance. It uses the standard NTP mode 6 control message formats defined in Appendix B of the NTPv3 specification RFC1305. The same formats are used in NTPv4, although some
of the variables have changed and new ones added. The description on this page is for the NTPv4 variables.
.LP
The program can be run either in interactive mode or controlled using command line arguments. Requests to read and write arbitrary variables can be assembled, with raw and pretty-printed output options being available. The \fBntpq\fR utility can also obtain and print a list of peers in a common format by sending multiple queries to the server.
.LP
If one or more request options are included on the command line when \fBntpq\fR is executed, each of the requests will be sent to the NTP
servers running on each of the hosts given as command line arguments, or on the localhost by default. If no request options are given, \fBntpq\fR will attempt to read commands from the standard input and execute these on the NTP server running on the first host given on the command line, again defaulting to localhost when no other host is specified. \fBntpq\fR will prompt for commands if the standard input is a terminal device.
.LP
The \fBntpq\fR utility uses NTP mode 6 packets to communicate with the NTP server, and hence can be used to query any compatible server on the network which permits it. Note that since NTP is a UDP protocol this communication will be somewhat unreliable, especially over large distances in terms of network topology. The \fBntpq\fR program makes one attempt to retransmit requests, and will time requests out if the remote host is not heard from within a suitable timeout time.
.LP
In contexts where a host name is expected, a \fB-4\fR qualifier preceding the host name forces DNS resolution to the IPv4 namespace, while a \fB-6\fR qualifier forces DNS resolution to the IPv6 namespace. On the command line, only one of the two  can be given.
.LP
For examples of usage of \fBntpq\fR, see the NTP Debugging Techniques page at file:///usr/share/doc/ntp/debug.html.
.SH OPTIONS
Specifying a command line option other than \fB-i\fR or \fB-n\fR
will
cause the specified query (queries) to be sent to the indicated
host(s) immediately.
Otherwise,
\fBntpq\fR  
will attempt to read
interactive format commands from the standard input.
.TP
.BR \-4 ", " \-\-ipv4
Force DNS resolution of following host names on the command line
to the IPv4 namespace. Cannot be used with the \fB--ipv6\fR option.
.TP
.BR \-6 ", " \-\-ipv6
Force DNS resolution of following host names on the command line
to the IPv6 namespace. Cannot be used with the \fB--ipv4\fR option.
.TP
.BR \-c " \fIcmd\fP, " \-\-command "=" \fIcmd\fP
The following argument is interpreted as an interactive format command
and is added to the list of commands to be executed on the specified
host(s).
This option may appear an unlimited number of times. After all such 
commands are executed against all listed hosts, the program exits.
.TP
.BR \-d ", " \-\-debug-level
Increase output debug message level.
This option may appear an unlimited number of times.
.TP
.BR \-D " \fInumber\fP, " \-\-set-debug-level "=" \fIstring\fP
Set the output debug message level.
This option may appear an unlimited number of times, but only the last
one will be used.
.TP
.BR \-p ", " \-\-peers
Print a list of the peers known to the server as well as a summary
of their state. This is equivalent to the 'peers' interactive command.
.TP
.BR \-i ", " \-\-interactive
Force ntpq to operate in interactive mode.  Prompts will be written
to the standard output and commands read from the standard input.
This option must not appear in combination with either the \fB--command\fR or 
\fB--peers\fR options.
.TP
.BR \-n ", " \-\-numeric
Output all host addresses in numeric format rather than
converting to the host names. 
.TP
.BR \-? , " \-\-help"
Display usage information and exit.
.TP
.BR \-! , " \-\-more-help"
Extended usage information passed thru a pager.
.TP
.BR \-> " \fIrcfile\fP," " \-\-save-opts" "=\fIrcfile\fP"
Save the option state to \fIrcfile\fP. 
.TP
.BR \-< " \fIrcfile\fP," " \-\-load-opts" "=\fIrcfile\fP," " \-\-no-load-opts"
Load options from \fIrcfile\fP.
The \fIno-load-opts\fP form will disable the loading
of earlier RC/INI files.  \fI--no-load-opts\fP is handled early,
out of order.
.TP
.BR \-v ", " \-\-version
Output version of program and exit.
.SS OPTION PRESETS
Most options may be preset by loading values from configuration file(s) and values from
environment variables named:
.nf
  \fBNTPQ_<option-name>\fP or \fBNTPQ\fP
.fi
.aj
The environmental presets take precedence (are processed later than)
the configuration files. The option-name should be in all capital letters.
For example, to set the --command option, you would set the NTPQ_COMMAND environment
variable.
The users home directory and the current directory are searched for a file named .ntprc.
.SH USAGE
Interactive format commands consist of a keyword followed by zero
to four arguments.
Only enough characters of the full keyword to uniquely identify the command need be typed.  
The output of a command is normally sent to the standard output, but optionally the output of 
individual commands may be sent to a file by appending a \fB>\fR, followed by a file name, to the command line.
.SS "Internal Commands"
A number of interactive commands are executed entirely within
the \fBntpq\fR
utility itself and do not result in requests being sent to a server. These commands are as follows:


                                                                    
                                                                    
                                                                    
cl                                                                  
                                                                    
clocklist                                                           
                                                   timeout          
                                                   version          
                                  poll                              
                                                                    
                                                   
                                           


.TP
.BR ? " [\fIcommand_keyword\fP]," "  help "[\fIcommand_keyword\fP]
Prints a list of all the command keywords known to \fBntpq\fR. Followed by a command keyword will print function and usage
information about the command.
.TP 
.BR addvars " \fIvariable_name\fP[=\fIvalue\fP]" "  ...
.TP 
.BR "rmvars \fIvariable_name\fP ..."
.TP 
.BR showvars
.TP
.BR "clearvars"
The data carried by NTP mode 6 messages consists of a list of
items of the form \fIvariable_name=value\fP. In requests to read variable, the \fI=value\fP is ignored, and can be omitted.
The \fBntpq\fR utility maintains an internal list in which data to be included in control
messages can be assembled, and sent using the \fBreadlist\fP and \fBwritelist\fP
commands described below.
The \fBaddvars\fP command allows variables and their optional values to be added to
the list.
If more than one variable is to be added, the list should
be comma-separated and not contain white space. The \fBshowvars\fP command lists the
current variable list.
The \fBrmvars\fP command can be used to remove individual variables from the list,
while the \fBclearlist\fP command removes all variables from the
list.
.TP 
.BR "authenticate [ yes | no ]"
Normally
\fBntpq\fR
only sends authentication with  write requests.
The command \fBauthenticate yes\fP causes
\fBntpq\fR
to send authentication with all requests it
makes.  The command \fBauthenticate\fP with no keyword
causes
\fBntpq\fR
to display whether or not
\fBntpq\fR
is currently authenticating requests.
.TP
.BR ":config \fIconfig_command\fP"
Sends the entire line after \fB:config\fP to the \fBntpd\fP daemon to be interpreted as a configuration file 
command. Multiple commands may be separated by semi-colons.
.TP
.BR "config-from-file \fIconfig_file\fP"
Sends the entire file \fIconfig_file\fP to the \fBntpd\fP daemon to be interpreted as configuration file 
commands.
.TP
.BR cooked
Causes output from query commands to be "cooked", so that
variables which are recognized by
\fBntpq\fR
will have their
values reformatted for human consumption.
Variables which
\fBntpq\fR
thinks should have a decodable value but didn't are
marked with a trailing ?.
.TP
.BR "debug [ more | less | off ]"
With no argument, displays the current debug level.
Otherwise, the debug level is changed by the indicated amount.
.TP
.BR delay " \fImilliseconds\fP"
Specify a time interval to be added to timestamps included in
requests which require authentication.
This is used to enable
(unreliable) server reconfiguration over long delay network paths
or between machines whose clocks are unsynchronized.
Actually the
server does not now require timestamps in authenticated requests,
so this command may be obsolete.
.TP
.BR "host [ [ -4 | -6 ] \fIhostname\fP ]"
Set the host to which future queries will be sent.
The hostname may
be either a host name or a numeric address. With no argument, prints the 
current host.
.TP
.BR "hostnames [ yes | no ]"
If yes is specified, host names are printed in
information displays.  If no is specified, numeric
addresses are printed instead. With no argument, prints the current
setting.  The default is yes, unless modified using the command line
\-n switch.
.TP
.BR "keyid [ \fIkeyid#\fP ]"
This command specifies the key number to be
used to authenticate configuration requests.  This must correspond
to a key number the server has been configured to use for this
purpose.
.TP
.BR "keytype [ md5 ]"
Prints or sets the type of key used for authentication. Currently
only \fBmd5\fP is accepted.
.TP
.BR "ntpversion [ 1 | 2 | 3 | 4 ]"
Sets the NTP version number which
\fBntpq\fR
claims in packets.
Defaults to 2. Note that mode 6 control messages 
didn't exist in NTP version 1.
Luckily there appear
to be no servers left which demand version 1.
With no argument, displays the current NTP version that will be used
when communicating with servers.
.TP
.BR "passwd"
This command prompts you to type in a password (which will not
be echoed) which will be used to authenticate configuration
requests.
The password must correspond to the key configured for
use by the NTP server for this purpose.
.TP
.BR "quit"
Exit
\fBntpq\fR .
.TP
.BR "raw"
Causes all output from query commands is printed as received
from the remote server.
The only formating/interpretation done on
the data is to transform nonascii data into a printable (but barely
understandable) form.
.TP
.BR "timeout \fImilliseconds\fP"
Specify a timeout period for responses to server queries.
The default is about 5000 milliseconds.
Note that since
\fBntpq\fR
retries each query once after a timeout, the total waiting time for
a timeout will be twice the timeout value set.
.SS "Control Message Commands"
Each association known to an NTP server has a 16 bit integer association identifier. NTP control messages which carry peer variables must identify the peer the values correspond to by including its association ID. An association ID of 0 is special, and indicates the variables are system variables, whose names are drawn from a separate name space.
.LP
Control message commands result in one or more NTP mode 6 messages being sent to the server, and cause the data returned to be printed in some format. Most commands currently implemented send a single message and expect a single response. The current exceptions are the peers command, which will send a preprogrammed series of messages to obtain the data it needs, and the mreadlist and mreadvar commands, which will iterate over a range of associations.
.TP
.BR associations
Obtains and prints a list of association identifiers and peer statuses for in-spec peers of the server being queried. The list is printed in columns. The first of these is an index numbering the associations from 1 for internal use, the second the actual association identifier returned by the server and the third the status word for the peer. This is followed by a number of columns containing data decoded from the status word. See the peers command for a decode of the \fBcondition\fR field. The data returned by the \fBassociations\fR command is cached internally in \fBntpq\fR and used in subsequent commands.  After the first \fBassociations\fP command the index can be used in place of the association identifier by specifing the identifier in the form &\fIindex\fP.
.TP
.BR "clocklist [\fIassocID\fP]"
.TP
.BR "cl  [\fIassocID\fP]"
Read the values of the clock variables included in the variable list
.TP
.BR "clockvar [\fIassocID\fP] [\fIvariable_name\fP [ = \fIvalue\fP [...]] [...]"
.TP
.BR "cv [\fIassocID\fP] [\fIvariable_name\fP [ = \fIvalue\fP [...] ][...]"
Requests that a list of the server's clock variables be sent. Servers which have a radio clock or other external synchronization will respond positively to this. If the association identifier is omitted or zero the request is for the variables of the \fBsystem clock\fR and will generally get a positive response from all servers with a clock. If the server treats clocks as pseudo-peers, and hence can possibly have more than one clock connected at once, referencing the appropriate peer association ID will show the variables of a particular clock. Omitting the variable list will cause the server to return a default variable display.
.TP
.BR lassociations
Obtains and prints a list of association identifiers and peer statuses for all associations for which the server is maintaining state. This command differs from the \fBassociations\fR command only for servers which retain state for out-of-spec client associations (i.e., fuzzballs). Such associations are normally omitted from the display when the \fBassociations\fR command is used, but are included in the output of \fBlassociations\fR. When used with the \fBntpd\fP in this distribution, this command is idenitical to \fBassociations\fP. 
.TP
.BR lpassociations
Print data for all associations, including out-of-spec client associations, from the internally cached list of associations.
.TP
.BR lopeers
Same as \fBopeers\fP but from the internally cached data.
.TP
.BR lpeers
Like \fBpeers\fP, except a summary of all associations for which the server is maintaining state is printed. This can produce a much longer list of peers from fuzzball servers, but for most servers this is identical with \fBpeers\fP.
.TP
.BR "mreadlist \fIassocID\fP \fIassocID\fP"
.TP
.BR "mrl \fIassocID\fP \fIassocID\fP"
Like the \fBreadlist\fR command, except the query is done for each of a range of (nonzero) association IDs. This range is determined from the association list cached by the most recent \fBassociations\fR command. An \fIassocID\fPs may be either an association identify or the equivilant &\fIindex\fP form.
.TP
.BR "mreadvar \fIassocID\fP \fIassocID\fP [ \fIvariable_name\fP [ = \fIvalue\fP[ ... ]"
.TP
.BR "mrv \fIassocID\fP \fIassocID\fP [ \fIvariable_name\fP [ = \fIvalue\fP[ ... ]"
Like the \fBreadvar\fR command, except the query is done for each of a range of (nonzero) association IDs. This range is determined from the association list cached by the most recent \fBassociations\fR command.
.TP
.BR opeers
An old form of the \fBpeers\fR command with the reference ID replaced by the local interface address.
.TP
.BR passociations
Displays association data concerning in-spec peers from the internally cached list of associations. This command performs identically to the \fBassociations\fR except that it displays the internally stored data rather than making a new query.
.TP
.BR peers
Obtains a current list peers of the server, along with a summary of each peer's state. Summary information includes the address of the remote peer, the reference ID (0.0.0.0 if this is unknown), the stratum of the remote peer, the type of the peer (local, unicast, multicast or broadcast), when the last packet was received, the polling interval, in seconds, the reachability register, in octal, and the current estimated delay, offset and dispersion of the peer, all in milliseconds. The character at the left margin of each line shows the synchronization status of the association and is a valuable diagnostic tool. The encoding and meaning of this character, called the tally code, is given later in this page.
.TP
.BR "pstatus \fIassocID\fP"
Sends a read status request to the server for the given association. The names and values of the peer variables returned will be printed. Note that the status word from the header is displayed preceding the variables, both in hexadecimal and in pidgeon English.
.TP
.BR "readlist [ \fIassocID\fP ]
.TP
.BR "rl [ \fIassocID\fP ]"
Requests that the values of the variables in the internal variable list be returned by the server. If the association ID is omitted or is 0 the variables are assumed to be system variables. Otherwise they are treated as peer variables. If the internal variable list is empty a request is sent without data, which should induce the remote server to return a default display.
.TP
.BR "readvar \fIassocID\fP \fIvariable_name\fP [ = \fIvalue\fP ] [ ...]"
.TP
.BR "rv \fIassocID\fP [ \fIvariable_name\fP [ = \fIvalue\fP ] [...]"
Requests that the values of the specified variables be returned by the server by sending a read variables request. If the association ID is omitted or is given as zero the variables are system variables, otherwise they are peer variables and the values returned will be those of the corresponding peer. Omitting the variable list will send a request with no data which should induce the server to return a default display. The encoding and meaning of the variables derived from NTPv3 is given in RFC-1305; the encoding and meaning of the additional NTPv4 variables are given later in this page.
.TP
.BR "writevar \fIassocID\fP \fIvariable_name\fP [ = \fIvalue\fP [ ...]"
Like the readvar request, except the specified variables are written instead of read.
.TP
.BR "writelist [ \fIassocID\fP ]"
Like the readlist request, except the internal list variables are written instead of read.
.SS "Tally Codes"
.LP
The character in the left margin in the \fBpeers\fR billboard, called the tally code, shows the fate of each association in the clock selection process. Following is a list of these characters, the pidgeon used in the \fBrv\fR command, and a short explanation of the condition revealed.
.TP
.BR "space \fRreject\fP"
The peer is discarded as unreachable, synchronized to this server (synch loop) or outrageous synchronization distance.
.TP
.BR "x \fRfalseticker\fP"
The peer is discarded by the intersection algorithm as a falseticker.
.TP
.BR ". \fRexcess\fP"
The peer is discarded as not among the first ten peers sorted by synchronization distance and so is probably a poor candidate for further consideration.
.TP
.BR "- \fRoutlyer\fP"
The peer is discarded by the clustering algorithm as an outlyer.
.TP
.BR "+ \fRcandidate\fP"
The peer is a survivor and a candidate for the combining algorithm.
.TP
.BR "# \fRselected\fP"
The peer is a survivor, but not among the first six peers sorted by synchronization distance. If the association is ephemeral, it may be demobilized to conserve resources.
.TP
.BR "* \fRsys.peer\fP"
The peer has been declared the system peer and lends its variables to the system variables.
.TP
.BR "o \fRpps.peer\fP"
The peer has been declared the system peer and lends its variables to thesystem variables. However, the actual system synchronization is derived from a pulse-per-second (PPS) signal, either indirectly via the PPS reference clock driver or directly via kernel interface.
.SS "System Variables"
.LP
The \fBstatus, leap, stratum, precision, rootdelay, rootdispersion, refid, reftime, poll, offset, and frequency\fR variables are described in RFC-1305 specification. Additional NTPv4 system variables include the following:
.TP
.BR "version"
Everything you might need to know about the software version and generation time.
.TP
.BR "processor"
The processor and kernel identification string.
.TP
.BR "system"
The operating system version and release identifier.
.TP
.BR "state"
The state of the clock discipline state machine. The values are described in the architecture briefing on the NTP Project page linked from www.ntp.org.
.TP
.BR "peer"
The internal integer used to identify the association currently designated the system peer.
.TP
.BR "jitter"
The estimated time error of the system clock measured as an exponential average of RMS time differences.
.TP
.BR "stability"
The estimated frequency stability of the system clock measured as an exponential average of RMS frequency differences.
.LP
In addition, some or all of the following system variables related to the crypto authentication are displayed, depending on the state of the particular crypto dance in use:
.TP
.BR "hostname"
The name of the host as returned by the Unix \fBgethostname()\fR library function.
.TP
.BR "hostkey"
The NTP filestamp of the host key file.
.TP
.BR "flags"
The current flags word bits and message digest algorithm identifier (NID) in hex format. The high order 16 bits of the four-byte word contain the NID from the OpenSSL ligrary, while the low-order bits are interpreted as follows:
0x01: autokey enabled, 0x02: NIST leapseconds file loaded, 0x10: PC identity scheme, 0x20: IFF identity scheme, 0x40: GQ identity scheme. 
.TP
.BR "cert"
A list of certificates held by the host. Each entry includes the subject, issuer, flags and NTP filestamp in order. The bits are interpreted as follows:
0x01: signed by the server, 0x02: trusted, 0x04: private, 0x08: contains errors and is not trusted.
.TP
.BR "leapseconds"
The NTP filestamp of the NIST leapseconds file.
.TP
.BR "refresh"
The NTP timestamp when the host public cryptographic values were refreshed and signed.
.TP
.BR "signature"
The host digest/signature scheme name from the OpenSSL library.
.TP
.BR "tai"
The TAI-UTC offset in seconds obtained from the NIST leapseconds table.
.SS "Peer Variables"
.LP
The \fBstatus, srcadr, srcport, dstadr, dstport, leap, stratum, precision, rootdelay, rootdispersion, readh, hmode, pmode, hpoll, ppoll, offset, delay, dspersion, reftime\fR variables are described in the RFC-1305 specification, as are the timestamps \fBorg, rec and xmt\fR. Additional NTPv4 system variables include the following.
.TP
.BR "flash"
The flash code for the most recent packet received. The encoding and meaning of these codes is given later in this page.
.TP
.BR "jitter"
The estimated time error of the peer clock measured as an exponential average of RMS time differences.
.TP
.BR "unreach"
The value of the counter which records the number of poll intervals since the last valid packet was received.
.LP
In addition, some or all of the following  peer variables are displayed related to the crypto auithentication:
.TP
.BR "flags"
The current flag bits. This word is the server host status word with additional bits used by the Autokey state machine. See the source code for the bit encoding.
.TP
.BR "hostname"
The server host name.
.TP
.BR "initkey \fIkey\fP"
The initial key used by the key list generator in the Autokey protocol.
.TP
.BR "initsequence \fIindex\fP"
The initial index used by the key list generator in the Autokey protocol.
.TP
.BR "signature"
The server message digest/signature scheme name from the OpenSSL software library.
.TP
.BR "timestamp \fItime\fP"
The NTP timestamp when the last Autokey key list was generated and signed.
.SS "Flash Codes"
.LP
The \fBflash\fR code is a valuable debugging aid displayed in the peer variables list. It shows the results of the original sanity checks defined in the NTP specification RFC-1305 and additional ones added in NTPv4. There are 12 tests designated \fBTEST1\fR through \fBTEST12\fR. The tests are performed in a certain order designed to gain maximum diagnostic information while protecting against accidental or malicious errors. The \fBflash\fR variable is initialized to zero as each packet is received. If after each set of tests one or more bits are set, the packet is discarded.
.LP
Tests \fBTEST1\fR through \fBTEST3\fR check the packet timestamps from which the offset and delay are calculated. If any bits are set, the packet is discarded; otherwise, the packet header variables are saved. \fBTEST4\fR and \fBTEST5\fR are associated with access control and cryptographic authentication. If any bits are set, the packet is discarded immediately with nothing changed.
.LP
Tests \fBTEST6\fR through \fBTEST8\fR check the health of the server. If any bits are set, the packet is discarded; otherwise, the offset and delay relative to the server are calculated and saved. \fBTEST9\fR checks the health of the association itself. If any bits are set, the packet is discarded; otherwise, the saved variables are passed to the clock filter and mitigation algorithms.
.LP
Tests \fBTEST10\fR through \fBTEST12\fR check the authentication state using Autokey public-key cryptography, as described in the Authentication Options page at file:///usr/share/doc/ntp/authopt.html. If any bits are set and the association has previously been marked reachable, the packet is discarded; otherwise, the originate and receive timestamps are saved, as required by the NTP protocol, and processing continues.
.LP
The \fBflash\fR bits for each test are defined as follows.
.TP
.BR "0x001 TEST1"
Duplicate packet. The packet is at best a casual retransmission and at worst a malicious replay.
.TP
.BR "0x002 TEST2"
Bogus packet. The packet is not a reply to a message previously sent. This can happen when the NTP daemon is restarted and before somebody else notices.
.TP
.BR "0x004 TEST3"
Unsynchronized. One or more timestamp fields are invalid. This normally happens when the first packet from a peer is received.
.TP
.BR "0x008 TEST4"
Access is denied. See the Access Control Options page at file:///usr/share/doc/ntp/accopt.html.
.TP
.BR "0x010 TEST5"
Cryptographic authentication fails. See the Authentication Options page referenced above.
.TP
.BR "0x020TEST6"
The server is unsynchronized. Wind up its clock first.
.TP
.BR "0x040 TEST7"
The server stratum is at the maximum of 15. It is probably unsynchronized and its clock needs to be wound up.
.TP
.BR "0x080 TEST8"
Either the root delay or dispersion is greater than one second, which is highly unlikely unless the peer is unsynchronized to Mars.
.TP
.BR "0x100 TEST9"
Either the peer delay or dispersion is greater than one second, which is higly unlikely unless the peer is on Mars.
.TP
.BR "0x200 TEST10"
The autokey protocol has detected an authentication failure. See the Authentication Options page.
.TP
.BR "0x400 TEST11"
The autokey protocol has not verified the server or peer is proventic and has valid public key credentials. See the Authentication Options page.
.TP
.BR "0x800 TEST12"
A protocol or configuration error has occurred in the public key algorithms or a possible intrusion event has been detected. See the Authentication Options page.
.SH NOTES
.LP
The documentation available at /usr/share/doc/ntp is provided as is from the
\fBNTP\fR distribution and may contain information that is not applicable to
the software as provided in this partIcular distribution.
.LP
The output of the \fBntpq\P in version 4 differs from that in version 3 by the 
replacement of the \fBdispersion\fP value with the \fBjitter\fP value in the
\fBpeers\fP output.
.PP
.SH SEE ALSO
.LP
\fBntpd\fR(1M), \fBntpdc\fR(1M), \fBntprc\fR(4), \fBattributes\fR(5)
