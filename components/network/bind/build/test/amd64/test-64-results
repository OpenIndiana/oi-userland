make[1]: 進入目錄「/export/home/shuryanc/oi-userland/components/network/bind/build/amd64」
/usr/gnu/bin/make test-force
make[2]: 進入目錄「/export/home/shuryanc/oi-userland/components/network/bind/build/amd64」
status=0; \
(cd fuzz && /usr/gnu/bin/make check) || status=1; \
(cd bin/tests && /usr/gnu/bin/make  test) || status=1; \
(test -f /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/unit/unittest.sh && \
	/bin/bash /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/unit/unittest.sh) || status=1; \
exit $status
make[3]: 進入目錄「/export/home/shuryanc/oi-userland/components/network/bind/build/amd64/fuzz」
for fuzzer in dns_name_fromtext_target dns_rdata_fromwire_text; do \
	./${fuzzer} ; \
done
testing 12 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_name_fromtext_target.in/example.com
testing 23 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-94
testing 93 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-113
testing 57 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-119
testing 27 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-70
testing 9 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-7
testing 110 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-121
testing 54 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-48
testing 12 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-35
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-42
testing 23 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-63
testing 38 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-14
testing 12 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-100
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-69
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-87
testing 50 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-138
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-26
testing 12 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-51
testing 50 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-132
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-56
testing 75 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-21
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-142
testing 50 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-135
testing 6 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/sshfp
testing 30 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-13
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-64
testing 31 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-107
testing 11 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-80
testing 22 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-19
testing 50 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-126
testing 66 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-38
testing 38 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-45
testing 9 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-32
testing 15 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-0
testing 48 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-93
testing 57 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-114
testing 8 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-77
testing 9 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-99
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-73
testing 71 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-110
testing 20 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/cdnskey
testing 17 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-97
testing 9 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-79
testing 56 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-128
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-41
testing 10 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-36
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-122
testing 39 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/svcb
testing 5 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-4
testing 9 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-84
testing 44 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-103
testing 68 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-109
testing 38 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-17
testing 50 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-60
testing 51 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-131
testing 38 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-58
testing 6 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-52
testing 15 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-25
testing 50 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-136
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-141
testing 8 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-28
testing 19 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-22
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-55
testing 15 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-83
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-104
testing 63 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-89
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-67
testing 77 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-10
testing 72 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-3
testing 52 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-9
testing 37 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-31
testing 23 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-46
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-125
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-74
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-117
testing 74 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-90
testing 11 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-33
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-44
testing 22 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-39
testing 48 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-127
testing 7 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-1
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-76
testing 50 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-98
testing 57 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-115
testing 74 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-92
testing 50 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-134
testing 7 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-143
testing 151 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-20
testing 49 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-57
testing 11 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-81
testing 23 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-18
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-106
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-65
testing 8 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-12
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-68
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-86
testing 25 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-101
testing 7 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-15
testing 28 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-62
testing 50 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-133
testing 18 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-50
testing 7 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-27
testing 51 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-139
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-71
testing 115 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-118
testing 69 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-112
testing 6 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/smimea
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-95
testing 5 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-6
testing 30 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-43
testing 7 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-34
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-49
testing 126 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-120
testing 67 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-8
testing 5 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-2
testing 65 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-124
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-47
testing 33 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-30
testing 42 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-91
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-116
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-75
testing 83 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-54
testing 12 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-23
testing 8 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-29
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-140
testing 50 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-137
testing 36 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-88
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-11
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-66
testing 22 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-105
testing 12 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-82
testing 29 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-61
testing 5 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-16
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-108
testing 26 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-102
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-85
testing 8 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-24
testing 7 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-53
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-59
testing 60 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-130
testing 11 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-96
testing 12 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-78
testing 84 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-111
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-72
testing 25 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-123
testing 66 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-37
testing 21 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-40
testing 26 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-129
testing 5 bytes from /export/home/shuryanc/oi-userland/components/network/bind/bind-9.16.24/fuzz/dns_rdata_fromwire_text.in/input-5
make[3]: 離開目錄「/export/home/shuryanc/oi-userland/components/network/bind/build/amd64/fuzz」
make[3]: 進入目錄「/export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests」
make[4]: 進入目錄「/export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests/system」
/bin/bash parallel.sh > parallel.mk
making all in /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests/system/dlzexternal
make[5]: 進入目錄「/export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests/system/dlzexternal」
make[5]: 離開目錄「/export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests/system/dlzexternal」
making all in /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests/system/dyndb
make[5]: 進入目錄「/export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests/system/dyndb」
making all in /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests/system/dyndb/driver
make[6]: 進入目錄「/export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests/system/dyndb/driver」
make[6]: 離開目錄「/export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests/system/dyndb/driver」
make[5]: 離開目錄「/export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests/system/dyndb」
making all in /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests/system/pipelined
make[5]: 進入目錄「/export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests/system/pipelined」
make[5]: 離開目錄「/export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests/system/pipelined」
making all in /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests/system/rndc
make[5]: 進入目錄「/export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests/system/rndc」
make[5]: 離開目錄「/export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests/system/rndc」
making all in /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests/system/rpz
make[5]: 進入目錄「/export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests/system/rpz」
make[5]: 離開目錄「/export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests/system/rpz」
making all in /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests/system/rsabigexponent
make[5]: 進入目錄「/export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests/system/rsabigexponent」
make[5]: 離開目錄「/export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests/system/rsabigexponent」
making all in /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests/system/tkey
make[5]: 進入目錄「/export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests/system/tkey」
make[5]: 離開目錄「/export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests/system/tkey」
make[5]: 進入目錄「/export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests/system」
S:dnssec:2022-02-23T15:17:58+0800
T:dnssec:1:A
A:dnssec:System test dnssec
I:dnssec:PORTRANGE:5000 - 5099
I:dnssec:This test requires the dnspython module.
I:dnssec:Prerequisites missing, skipping test.
R:dnssec:SKIPPED
E:dnssec:2022-02-23T15:17:58+0800
S:rpzrecurse:2022-02-23T15:17:58+0800
T:rpzrecurse:1:A
A:rpzrecurse:System test rpzrecurse
I:rpzrecurse:PORTRANGE:5100 - 5199
I:rpzrecurse:This test requires the Net::DNS library.
I:rpzrecurse:Prerequisites missing, skipping test.
R:rpzrecurse:SKIPPED
E:rpzrecurse:2022-02-23T15:17:58+0800
S:serve-stale:2022-02-23T15:17:58+0800
T:serve-stale:1:A
A:serve-stale:System test serve-stale
I:serve-stale:PORTRANGE:5200 - 5299
I:serve-stale:This test requires the Net::DNS library.
I:serve-stale:Prerequisites missing, skipping test.
R:serve-stale:SKIPPED
E:serve-stale:2022-02-23T15:17:58+0800
S:acl:2022-02-23T15:17:58+0800
T:acl:1:A
A:acl:System test acl
I:acl:PORTRANGE:5300 - 5399
I:acl:starting servers
I:acl:testing basic ACL processing
I:acl:ns2 server reload successful
I:acl:testing nested ACL processing
I:acl:ns2 server reload successful
I:acl:ns2 server reload successful
I:acl:testing allow-query-on ACL processing
I:acl:ns2 server reload successful
I:acl:testing blackhole ACL processing
I:acl:testing allow-transfer ACLs against ns3 (no existing zones)
I:acl:calling addzone example.com on ns3
I:acl:checking AXFR of example.com from ns3 with ACL allow-transfer { none; }; (20)
I:acl:calling rndc reconfig
I:acl:re-checking AXFR of example.com from ns3 with ACL allow-transfer { none; }; (21)
I:acl:testing allow-transfer ACLs against ns4 (1 pre-existing zone)
I:acl:calling addzone example.com on ns4
I:acl:checking AXFR of example.com from ns4 with ACL allow-transfer { none; }; (22)
I:acl:calling rndc reconfig
I:acl:re-checking AXFR of example.com from ns4 with ACL allow-transfer { none; }; (23)
I:acl:exit status: 0
I:acl:stopping servers
I:acl:pytest not installed, skipping python tests
R:acl:PASS
E:acl:2022-02-23T15:18:42+0800
S:additional:2022-02-23T15:18:42+0800
T:additional:1:A
A:additional:System test additional
I:additional:PORTRANGE:5400 - 5499
I:additional:starting servers
I:additional:testing with 'minimal-responses yes;'
I:additional:test with RT, single zone (+rec) (1)
I:additional:test with RT, two zones (+rec) (2)
I:additional:test with NAPTR, single zone (+rec) (3)
I:additional:test with NAPTR, two zones (+rec) (4)
I:additional:test with LP (+rec) (5)
I:additional:test with NID (+rec) (6)
I:additional:test with NID + LP (+rec) (7)
I:additional:test with RT, single zone (+norec) (8)
I:additional:test with RT, two zones (+norec) (9)
I:additional:test with NAPTR, single zone (+norec) (10)
I:additional:test with NAPTR, two zones (+norec) (11)
I:additional:test with LP (+norec) (12)
I:additional:test with NID (+norec) (13)
I:additional:test with NID + LP (+norec) (14)
I:additional:test with NS, root zone (15)
I:additional:test with NS, non-root zone (16)
I:additional:reconfiguring server: minimal-responses no
I:additional:testing with 'minimal-responses no;'
I:additional:test with RT, single zone (+rec) (17)
I:additional:test with RT, two zones (+rec) (18)
I:additional:test with NAPTR, single zone (+rec) (19)
I:additional:test with NAPTR, two zones (+rec) (20)
I:additional:test with LP (+rec) (21)
I:additional:test with NID (+rec) (22)
I:additional:test with NID + LP (+rec) (23)
I:additional:test with RT, single zone (+norec) (24)
I:additional:test with RT, two zones (+norec) (25)
I:additional:test with NAPTR, single zone (+norec) (26)
I:additional:test with NAPTR, two zones (+norec) (27)
I:additional:test with LP (+norec) (28)
I:additional:test with NID (+norec) (29)
I:additional:test with NID + LP (+norec) (30)
I:additional:test with NS, root zone (31)
I:additional:test with NS, non-root zone (32)
I:additional:testing with 'minimal-any no;' (33)
I:additional:reconfiguring server: minimal-any yes
I:additional:testing with 'minimal-any yes;' over UDP (34)
I:additional:testing with 'minimal-any yes;' over TCP (35)
I:additional:testing with 'minimal-any yes;' over UDP (36)
I:additional:testing with 'minimal-responses no-auth;'
I:additional:test with RT, single zone (+rec) (37)
I:additional:test with RT, two zones (+rec) (38)
I:additional:test with NAPTR, single zone (+rec) (39)
I:additional:test with NAPTR, two zones (+rec) (40)
I:additional:test with LP (+rec) (41)
I:additional:test with NID (+rec) (42)
I:additional:test with NID + LP (+rec) (43)
I:additional:test with RT, single zone (+norec) (44)
I:additional:test with RT, two zones (+norec) (45)
I:additional:test with NAPTR, single zone (+norec) (46)
I:additional:test with NAPTR, two zones (+norec) (47)
I:additional:test with LP (+norec) (48)
I:additional:test with NID (+norec) (49)
I:additional:test with NID + LP (+norec) (50)
I:additional:test with NS, root zone (51)
I:additional:test with NS, non-root zone (52)
I:additional:reconfiguring server: minimal-responses no-auth-recursive
I:additional:testing with 'minimal-responses no-auth-recursive;'
I:additional:test with RT, single zone (+rec) (53)
I:additional:test with RT, two zones (+rec) (54)
I:additional:test with NAPTR, single zone (+rec) (55)
I:additional:test with NAPTR, two zones (+rec) (56)
I:additional:test with LP (+rec) (57)
I:additional:test with NID (+rec) (58)
I:additional:test with NID + LP (+rec) (59)
I:additional:test with RT, single zone (+norec) (60)
I:additional:test with RT, two zones (+norec) (61)
I:additional:test with NAPTR, single zone (+norec) (62)
I:additional:test with NAPTR, two zones (+norec) (63)
I:additional:test with LP (+norec) (64)
I:additional:test with NID (+norec) (65)
I:additional:test with NID + LP (+norec) (66)
I:additional:test with NS, root zone (67)
I:additional:test with NS, non-root zone (68)
I:additional:testing returning TLSA records with MX query (69)
I:additional:testing returning TLSA records with SRV query (70)
I:additional:reconfiguring server: minimal-responses no
I:additional:testing NS handling in ANY responses (authoritative) (71)
I:additional:testing NS handling in ANY responses (recursive) (72)
I:additional:testing out-of-zone additional data from auth zones (authoritative) (73)
I:additional:testing out-of-zone additional data from auth zones (recursive) (74)
I:additional:exit status: 0
I:additional:stopping servers
I:additional:pytest not installed, skipping python tests
R:additional:PASS
E:additional:2022-02-23T15:18:50+0800
S:addzone:2022-02-23T15:18:51+0800
T:addzone:1:A
A:addzone:System test addzone
I:addzone:PORTRANGE:5500 - 5599
I:addzone:starting servers
I:addzone:checking normally loaded zone (0)
I:addzone:checking previously added zone (1)
I:addzone:checking that existing NZF file was renamed after migration (2)
I:addzone:adding new zone (3)
I:addzone:checking addzone errors are logged correctly
I:addzone:checking modzone errors are logged correctly
I:addzone:adding a zone that requires quotes (6)
I:addzone:adding a zone with a quote in the name (7)
I:addzone:adding new zone with missing file (8)
I:addzone:checking rndc showzone with previously added zone (9)
I:addzone:checking zone is present in NZD (10)
I:addzone:deleting previously added zone (10)
I:addzone:checking zone was deleted from NZD (11)
I:addzone:deleting newly added zone added.example (11)
I:addzone:deleting newly added zone with escaped quote (12)
I:addzone:checking rndc showzone with a normally-loaded zone (13)
I:addzone:checking rndc showzone with a normally-loaded zone with trailing dot (14)
I:addzone:checking rndc showzone with a normally-loaded redirect zone (15)
I:addzone:checking rndc zonestatus with a normally-loaded redirect zone (16)
I:addzone:checking rndc reload with a normally-loaded redirect zone (17)
I:addzone:delete a normally-loaded zone (18)
I:addzone:attempting to add primary zone with inline signing (19)
I:addzone:attempting to add primary zone with inline signing and missing file (20)
I:addzone:attempting to add secondary zone with inline signing (21)
I:addzone:attempting to delete secondary zone with inline signing (22)
I:addzone:restoring secondary zone with inline signing (23)
I:addzone:deleting secondary zone with automatic zone file removal (24)
I:addzone:modifying zone configuration (25)
I:addzone:ns2 zone 'mod.example' reconfigured.
I:addzone:check that adding a 'stub' zone works (26)
I:addzone:check that adding a 'static-stub' zone works (27)
I:addzone:check that adding a 'primary redirect' zone works (28)
I:addzone:check that reloading a added 'primary redirect' zone works (29)
I:addzone:check that retransfer of a added 'primary redirect' zone fails (30)
I:addzone:check that deleting a 'primary redirect' zone works (31)
I:addzone:check that adding a 'secondary redirect' zone works (32)
I:addzone:check that retransfering a added 'secondary redirect' zone works (33)
I:addzone:check that deleting a 'secondary redirect' zone works (34)
I:addzone:check that zone type 'hint' is properly rejected (35)
I:addzone:check that zone type 'forward' is properly rejected (36)
I:addzone:check that zone type 'delegation-only' is properly rejected (37)
I:addzone:check that 'in-view' zones are properly rejected (38)
I:addzone:reconfiguring server with multiple views
I:addzone:adding new zone to external view (39)
I:addzone:verifying added.example in external view created an external.nzd DB (40)
I:addzone:checking rndc reload causes named to reload the external view's new zone config (41)
I:addzone:ns2 server reload successful
I:addzone:checking rndc showzone with newly added zone (42)
I:addzone:deleting newly added zone (43)
I:addzone:attempting to add zone to internal view (44)
I:addzone:attempting to delete a policy zone (45)
I:addzone:adding new zone again to external view (46)
I:addzone:reconfiguring server with multiple views and new-zones-directory
I:addzone:checking new zone is still loaded after dir change (47)
I:addzone:deleting newly added zone from external (48)
I:addzone:adding new zone to directory view (49)
I:addzone:checking NZD file was created in new-zones-directory (50)
I:addzone:deleting newly added zone from directory (51)
I:addzone:ensure the configuration context is cleaned up correctly (52)
I:addzone:check delzone after reconfig failure (53)
I:addzone:ns3 rndc: 'reconfig' failed: not found
I:addzone:check that named restarts with multiple added zones (54)
I:addzone:exit status: 0
I:addzone:stopping servers
I:addzone:pytest not installed, skipping python tests
R:addzone:PASS
E:addzone:2022-02-23T15:19:10+0800
S:allow-query:2022-02-23T15:19:10+0800
T:allow-query:1:A
A:allow-query:System test allow-query
I:allow-query:PORTRANGE:5600 - 5699
I:allow-query:starting servers
I:allow-query:test 1: default - query allowed
I:allow-query:ns2 server reload successful
I:allow-query:test 2: explicit any - query allowed
I:allow-query:ns2 server reload successful
I:allow-query:test 3: none - query refused
I:allow-query:ns2 server reload successful
I:allow-query:test 4: address allowed - query allowed
I:allow-query:ns2 server reload successful
I:allow-query:test 5: address not allowed - query refused
I:allow-query:ns2 server reload successful
I:allow-query:test 6: address disallowed - query refused
I:allow-query:ns2 server reload successful
I:allow-query:test 7: acl allowed - query allowed
I:allow-query:ns2 server reload successful
I:allow-query:test 8: acl not allowed - query refused
I:allow-query:ns2 server reload successful
I:allow-query:test 9: acl disallowed - query refused
I:allow-query:ns2 server reload successful
I:allow-query:test 10: key allowed - query allowed
I:allow-query:ns2 server reload successful
I:allow-query:test 11: key not allowed - query refused
I:allow-query:ns2 server reload successful
I:allow-query:test 12: key disallowed - query refused
I:allow-query:ns2 server reload successful
I:allow-query:test 21: views default - query allowed
I:allow-query:ns2 server reload successful
I:allow-query:test 22: views explicit any - query allowed
I:allow-query:ns2 server reload successful
I:allow-query:test 23: views none - query refused
I:allow-query:ns2 server reload successful
I:allow-query:test 24: views address allowed - query allowed
I:allow-query:ns2 server reload successful
I:allow-query:test 25: views address not allowed - query refused
I:allow-query:ns2 server reload successful
I:allow-query:test 26: views address disallowed - query refused
I:allow-query:ns2 server reload successful
I:allow-query:test 27: views acl allowed - query allowed
I:allow-query:ns2 server reload successful
I:allow-query:test 28: views acl not allowed - query refused
I:allow-query:ns2 server reload successful
I:allow-query:test 29: views acl disallowed - query refused
I:allow-query:ns2 server reload successful
I:allow-query:test 30: views key allowed - query allowed
I:allow-query:ns2 server reload successful
I:allow-query:test 31: views key not allowed - query refused
I:allow-query:ns2 server reload successful
I:allow-query:test 32: views key disallowed - query refused
I:allow-query:ns2 server reload successful
I:allow-query:test 33: views over options, views allow - query allowed
I:allow-query:ns2 server reload successful
I:allow-query:test 34: views over options, views disallow - query refused
I:allow-query:ns2 server reload successful
I:allow-query:test 41: zone default - query allowed
I:allow-query:test 42: zone explicit any - query allowed
I:allow-query:test 43: zone none - query refused
I:allow-query:test 44: zone address allowed - query allowed
I:allow-query:test 45: zone address not allowed - query refused
I:allow-query:test 46: zone address disallowed - query refused
I:allow-query:test 47: zone acl allowed - query allowed
I:allow-query:test 48: zone acl not allowed - query refused
I:allow-query:test 49: zone acl disallowed - query refused
I:allow-query:test 50: zone key allowed - query allowed
I:allow-query:test 51: zone key not allowed - query refused
I:allow-query:test 52: zone key disallowed - query refused
I:allow-query:ns2 server reload successful
I:allow-query:test 53: views over options, views allow - query allowed
I:allow-query:ns2 server reload successful
I:allow-query:test 54: views over options, views disallow - query refused
I:allow-query:ns2 server reload successful
I:allow-query:test 55: zones over views, views allow - query allowed
I:allow-query:ns2 server reload successful
I:allow-query:test 56: zones over views, views disallow - query refused
I:allow-query:ns2 server reload successful
I:allow-query:test 57: zones over views, allow-query-on
I:allow-query:test 58: default allow-recursion configuration
I:allow-query:test 59: default allow-query-cache configuration
I:allow-query:ns3 server reload successful
I:allow-query:test 60: block recursion-on, allow query-cache-on
I:allow-query:ns3 server reload successful
I:allow-query:test 61: inheritance of allow-query-cache-on
I:allow-query:ns3 server reload successful
I:allow-query:test 62: inheritance of allow-recursion-on
I:allow-query:exit status: 0
I:allow-query:stopping servers
I:allow-query:pytest not installed, skipping python tests
R:allow-query:PASS
E:allow-query:2022-02-23T15:19:22+0800
S:auth:2022-02-23T15:19:22+0800
T:auth:1:A
A:auth:System test auth
I:auth:PORTRANGE:5700 - 5799
I:auth:starting servers
I:auth:wait for zones to finish transferring to ns2 (1)
I:auth:check that cross-zone CNAME record does not return target data (rd=0/ra=0) (2)
I:auth:check that cross-zone CNAME record does not return target data (rd=1/ra=0) (3)
I:auth:check that cross-zone CNAME record does not return target data (rd=0/ra=1) (4)
I:auth:check that cross-zone CNAME records return target data (rd=1/ra=1) (5)
I:auth:check that in-zone CNAME records return target data (rd=0/ra=0) (6)
I:auth:check that in-zone CNAME records returns target data (rd=1/ra=0) (7)
I:auth:check that in-zone CNAME records return target data (rd=0/ra=1) (8)
I:auth:check that in-zone CNAME records return target data (rd=1/ra=1) (9)
I:auth:check that in-zone CNAME records does not return target data when QTYPE is CNAME (rd=1/ra=1) (10)
I:auth:check that in-zone CNAME records does not return target data when QTYPE is ANY (rd=1/ra=1) (11)
I:auth:check that in-zone DNAME records does not return target data when QTYPE is CNAME (rd=1/ra=1) (12)
I:auth:check that in-zone DNAME records does not return target data when QTYPE is ANY (rd=1/ra=1) (13)
I:auth:check that CHAOS addresses are compared correctly (14)
I:auth:exit status: 0
I:auth:stopping servers
I:auth:pytest not installed, skipping python tests
R:auth:PASS
E:auth:2022-02-23T15:19:29+0800
S:autosign:2022-02-23T15:19:29+0800
T:autosign:1:A
A:autosign:System test autosign
I:autosign:PORTRANGE:5800 - 5899
I:autosign:generating keys and preparing zones
I:autosign:setting up zone: secure.example
I:autosign:setting up zone: secure.nsec3.example
I:autosign:setting up zone: nsec3.nsec3.example
I:autosign:setting up zone: jitter.nsec3.example
I:autosign:setting up zone: optout.nsec3.example
I:autosign:setting up zone: nsec3.example
I:autosign:setting up zone: autonsec3.example
I:autosign:setting up zone: secure.optout.example
I:autosign:setting up zone: nsec3.optout.example
I:autosign:setting up zone: optout.optout.example
I:autosign:setting up zone: optout.example
I:autosign:setting up zone: rsasha256.example
I:autosign:setting up zone: rsasha512.example
I:autosign:setting up zone: nsec.example
I:autosign:setting up zone: oldsigs.example
I:autosign:setting up zone: nsec3-to-nsec.example
I:autosign:setting up zone: secure-to-insecure.example
I:autosign:setting up zone: secure-to-insecure2.example
I:autosign:setting up zone: prepub.example
I:autosign:setting up zone: ttl1.example
I:autosign:setting up zone: ttl2.example
I:autosign:setting up zone: ttl3.example
I:autosign:setting up zone: ttl4.example
I:autosign:setting up zone: delay.example
I:autosign:setting up zone: nozsk.example
I:autosign:setting up zone: inaczsk.example
I:autosign:setting up zone: reconf.example
I:autosign:setting up zone: sync.example
I:autosign:setting up zone: kskonly.example
I:autosign:setting up zone: inacksk2.example
I:autosign:setting up zone: inaczsk2.example
I:autosign:setting up zone: inacksk3.example
I:autosign:setting up zone: inaczsk3.example
I:autosign:setting up zone: delzsk.example
I:autosign:setting up zone: dname-at-apex-nsec3.example
I:autosign:starting servers
I:autosign:waiting for autosign changes to take effect
I:autosign:waiting ... (1)
I:autosign:waiting ... (2)
I:autosign:waiting ... (3)
I:autosign:waiting ... (4)
I:autosign:Initial counts of RRSIG expiry fields values for auto signed zones
I:autosign:zone .
I:autosign:2 20220315224704
I:autosign:7 20220321150206
I:autosign:9 20220324193022
I:autosign:4 20220325072001
I:autosign:2 20220325072002
I:autosign:zone bar.
I:autosign:11 20220304153812
I:autosign:10 20220313180539
I:autosign:10 20220316123613
I:autosign:7 20220317014513
I:autosign:6 20220320093244
I:autosign:2 20220325071946
I:autosign:1 20220325071948
I:autosign:zone example.
I:autosign:7 20220309081008
I:autosign:8 20220311221034
I:autosign:7 20220314170253
I:autosign:7 20220314192340
I:autosign:7 20220317225915
I:autosign:8 20220321041255
I:autosign:7 20220322231825
I:autosign:8 20220325043548
I:autosign:2 20220325071946
I:autosign:1 20220325071948
I:autosign:zone private.secure.example.
I:autosign:18 20220325061945
I:autosign:zone inacksk2.example.
I:autosign:6 20220309041224
I:autosign:7 20220322061135
I:autosign:1 20220325071947
I:autosign:1 20220325071948
I:autosign:zone inacksk3.example
I:autosign:7 20220315105802
I:autosign:6 20220319123809
I:autosign:1 20220325071947
I:autosign:1 20220325071948
I:autosign:zone inaczsk2.example.
I:autosign:7 20220307054137
I:autosign:6 20220308124939
I:autosign:1 20220325071947
I:autosign:1 20220325071948
I:autosign:zone inaczsk3.example
I:autosign:6 20220305091513
I:autosign:7 20220322105336
I:autosign:2 20220325071947
I:autosign:1 20220325071948
I:autosign:check that zone with active and inactive KSK and active ZSK is properly
I:autosign:  resigned after the active KSK is deleted - stage 1: Verify that DNSKEY
I:autosign:  is initially signed with a KSK and not a ZSK. (1)
I:autosign:check that zone with active and inactive ZSK and active KSK is properly
I:autosign:  resigned after the active ZSK is deleted - stage 1: Verify that zone
I:autosign:  is initially signed with a ZSK and not a KSK. (2)
I:autosign:checking NSEC->NSEC3 conversion prerequisites (3)
I:autosign:checking NSEC3->NSEC conversion prerequisites (4)
I:autosign:converting zones from nsec to nsec3
I:autosign:preset nsec3param in unsigned zone via nsupdate (5)
I:autosign:checking for nsec3param in unsigned zone (5)
I:autosign:checking for nsec3param signing record (6)
I:autosign:resetting nsec3param via rndc signing (7)
I:autosign:signing preset nsec3 zone
I:autosign:waiting for changes to take effect
I:autosign:converting zone from nsec3 to nsec
I:autosign:waiting for change to take effect
I:autosign:checking that expired RRSIGs from missing key are not deleted (8)
I:autosign:checking that expired RRSIGs from inactive key are not deleted (9)
I:autosign:checking that non-replaceable RRSIGs are logged only once (missing private key) (10)
I:autosign:checking that non-replaceable RRSIGs are logged only once (inactive private key) (11)
I:autosign:dumping zone files
I:autosign:checking expired signatures were updated (12)
I:autosign:checking expired signatures were jittered correctly (13)
I:autosign:202 20220226
I:autosign:101 20220227
I:autosign:202 20220228
I:autosign:303 20220301
I:autosign:405 20220302
I:autosign:101 20220303
I:autosign:397 20220304
I:autosign:checking whether all frequencies fall into <-107;595> range
I:autosign:checking NSEC->NSEC3 conversion succeeded (14)
I:autosign:checking direct NSEC3 autosigning succeeded (15)
I:autosign:checking NSEC->NSEC3 conversion failed with NSEC-only key (16)
I:autosign:checking NSEC3->NSEC conversion succeeded (17)
I:autosign:checking NSEC3->NSEC conversion with 'rndc signing -nsec3param none' (18)
I:autosign:checking TTLs of imported DNSKEYs (no default) (19)
I:autosign:checking TTLs of imported DNSKEYs (with default) (20)
I:autosign:checking TTLs of imported DNSKEYs (mismatched) (21)
I:autosign:checking TTLs of imported DNSKEYs (existing RRset) (22)
I:autosign:checking positive validation NSEC (23)
I:autosign:checking positive validation NSEC3 (24)
I:autosign:checking positive validation OPTOUT (25)
I:autosign:checking negative validation NXDOMAIN NSEC (26)
I:autosign:checking negative validation NXDOMAIN NSEC3 (27)
I:autosign:checking negative validation NXDOMAIN OPTOUT (28)
I:autosign:checking negative validation NODATA NSEC (29)
I:autosign:checking negative validation NODATA NSEC3 (30)
I:autosign:checking negative validation NODATA OPTOUT (31)
I:autosign:checking 1-server insecurity proof NSEC (32)
I:autosign:checking 1-server negative insecurity proof NSEC (33)
I:autosign:checking multi-stage positive validation NSEC/NSEC (34)
I:autosign:checking multi-stage positive validation NSEC/NSEC3 (35)
I:autosign:checking multi-stage positive validation NSEC/OPTOUT (36)
I:autosign:checking multi-stage positive validation NSEC3/NSEC (37)
I:autosign:checking multi-stage positive validation NSEC3/NSEC3 (38)
I:autosign:checking multi-stage positive validation NSEC3/OPTOUT (39)
I:autosign:checking multi-stage positive validation OPTOUT/NSEC (40)
I:autosign:checking multi-stage positive validation OPTOUT/NSEC3 (41)
I:autosign:checking multi-stage positive validation OPTOUT/OPTOUT (42)
I:autosign:checking empty NODATA OPTOUT (43)
I:autosign:checking 2-server insecurity proof (44)
I:autosign:checking 2-server insecurity proof with a negative answer (45)
I:autosign:checking security root query (46)
I:autosign:checking positive validation RSASHA256 NSEC (47)
I:autosign:checking positive validation RSASHA512 NSEC (48)
I:autosign:checking that positive validation in a privately secure zone works (49)
I:autosign:checking that negative validation in a privately secure zone works (50)
I:autosign:checking privately secure to nxdomain works (51)
I:autosign:checking that validation returns insecure due to revoked trusted key (52)
I:autosign:checking that revoked key is present (53)
I:autosign:checking that revoked key self-signs (54)
I:autosign:checking for unpublished key (55)
I:autosign:checking for activated but unpublished key (56)
I:autosign:checking that standby key does not sign records (57)
I:autosign:checking that deactivated key does not sign records  (58)
I:autosign:checking insertion of public-only key (59)
I:autosign:checking key deletion (60)
I:autosign:checking secure-to-insecure transition, nsupdate (61)
I:autosign:checking secure-to-insecure transition, scheduled (62)
I:autosign:checking jitter in a newly signed NSEC3 zone (63)
I:autosign:194 20220226
I:autosign:106 20220227
I:autosign:255 20220228
I:autosign:308 20220301
I:autosign:168 20220302
I:autosign:378 20220303
I:autosign:226 20220304
I:autosign:checking whether all frequencies fall into <-16;482> range
I:autosign:checking that serial number and RRSIGs are both updated (rt21045) (64)
I:autosign:preparing to test key change corner cases
I:autosign:removing a private key file
I:autosign:preparing ZSK roll
I:autosign:revoking key to duplicated key ID
dnssec-settime: warning: Permissions on the file ns2/Kbar.+005+30676.private have changed from 0644 to 0600 as a result of this operation.
I:autosign:waiting for changes to take effect
I:autosign:checking former standby key 53070 is now active (65)
I:autosign:checking former standby key has only signed incrementally (66)
I:autosign:checking that signing records have been marked as complete (67)
I:autosign:forcing full sign
I:autosign:waiting for change to take effect
I:autosign:checking former standby key has now signed fully (68)
I:autosign:checking SOA serial number has been incremented (69)
I:autosign:checking delayed key publication/activation (70)
I:autosign:checking scheduled key publication, not activation (71)
I:autosign:waiting for changes to take effect
I:autosign:checking scheduled key activation (72)
I:autosign:waiting for changes to take effect
I:autosign:exceeded time limit waiting for 'add delay\.example\..*NSEC.a\.delay\.example\. NS SOA RRSIG NSEC DNSKEY' in ns3/named.run
I:autosign:checking former active key was removed (73)
I:autosign:checking private key file removal caused no immediate harm (74)
I:autosign:checking revoked key with duplicate key ID (failure expected) (75)
I:autosign:not yet implemented
I:autosign:checking key event timers are always set (76)
I:autosign:checking automatic key reloading interval (77)
I:autosign:checking for key reloading loops (78)
I:autosign:forcing full sign with unreadable keys (79)
I:autosign:test turning on auto-dnssec during reconfig (80)
I:autosign:ns3 zone 'reconf.example' reconfigured.
I:autosign:test CDS and CDNSKEY auto generation (81)
I:autosign:test 'dnssec-dnskey-kskonly no' affects DNSKEY/CDS/CDNSKEY (82)
I:autosign:test 'dnssec-dnskey-kskonly yes' affects DNSKEY/CDS/CDNSKEY (83)
I:autosign:setting CDS and CDNSKEY deletion times and calling 'rndc loadkeys'
I:autosign:checking that the CDS and CDNSKEY are deleted (84)
I:autosign:check that dnssec-settime -p Dsync works (85)
I:autosign:check that dnssec-settime -p Psync works (86)
I:autosign:check that zone with inactive KSK and active ZSK is properly autosigned (87)
I:autosign:check that zone with inactive ZSK and active KSK is properly autosigned (88)
I:autosign:check that zone with active and inactive KSK and active ZSK is properly
I:autosign:  resigned after the active KSK is deleted - stage 2: Verify that DNSKEY
I:autosign:  is now signed with the ZSK. (89)
I:autosign:check that zone with active and inactive ZSK and active KSK is properly
I:autosign:  resigned after the active ZSK is deleted - stage 2: Verify that zone
I:autosign:  is now signed with the KSK. (90)
I:autosign:checking for out-of-zone NSEC3 records after ZSK removal (91)
I:autosign:check that DNAME at apex with NSEC3 is correctly signed (auto-dnssec maintain) (92)
I:autosign:checking that DNAME is not treated as a delegation when signing (93)
I:autosign:checking key maintenance events were logged correctly (94)
I:autosign:exit status: 0
I:autosign:stopping servers
I:autosign:pytest not installed, skipping python tests
R:autosign:PASS
E:autosign:2022-02-23T15:21:03+0800
S:builtin:2022-02-23T15:21:03+0800
T:builtin:1:A
A:builtin:System test builtin
I:builtin:PORTRANGE:5900 - 5999
I:builtin:starting servers
I:builtin:Checking expected empty zones were configured (1)
I:builtin:Checking that reconfiguring empty zones is silent (2)
I:builtin:Checking that reloading empty zones is silent (3)
I:builtin:ns1 server reload successful
I:builtin:Checking that default version works for rndc (4)
I:builtin:Checking that custom version works for rndc (5)
I:builtin:Checking that default version works for query (6)
I:builtin:Checking that custom version works for query (7)
I:builtin:Checking that default hostname works for query (8)
I:builtin:Checking that custom hostname works for query (9)
I:builtin:Checking that default server-id is none for query (10)
I:builtin:Checking that server-id hostname works for query (11)
I:builtin:Checking that server-id hostname works for EDNS name server ID request (12)
I:builtin:Checking that custom server-id works for query (13)
I:builtin:Checking that custom server-id works for EDNS name server ID request (14)
I:builtin:exit status: 0
I:builtin:stopping servers
I:builtin:pytest not installed, skipping python tests
R:builtin:PASS
E:builtin:2022-02-23T15:21:15+0800
S:cacheclean:2022-02-23T15:21:15+0800
T:cacheclean:1:A
A:cacheclean:System test cacheclean
I:cacheclean:PORTRANGE:6000 - 6099
I:cacheclean:starting servers
I:cacheclean:check correctness of routine cache cleaning (1)
I:cacheclean:only one tcp socket was used (2)
I:cacheclean:reset and check that records are correctly cached initially (3)
I:cacheclean:check flushing of the full cache (4)
I:cacheclean:check flushing of individual nodes (interior node) (5)
I:cacheclean:check flushing of individual nodes (leaf node, under the interior node) (6)
I:cacheclean:check flushing of individual nodes (another leaf node, with both positive and negative cache entries) (7)
I:cacheclean:check flushing a nonexistent name (8)
I:cacheclean:check flushing of namespaces (9)
I:cacheclean:check flushing a nonexistent namespace (10)
I:cacheclean:check the number of cached records remaining (11)
I:cacheclean:check the check that flushname of a partial match works (12)
I:cacheclean:check the number of cached records remaining (13)
I:cacheclean:check flushtree clears adb correctly (14)
I:cacheclean:check expire option returned from primary zone (15)
I:cacheclean:check expire option returned from secondary zone (16)
I:cacheclean:exit status: 0
I:cacheclean:stopping servers
I:cacheclean:pytest not installed, skipping python tests
R:cacheclean:PASS
E:cacheclean:2022-02-23T15:21:35+0800
S:case:2022-02-23T15:21:35+0800
T:case:1:A
A:case:System test case
I:case:PORTRANGE:6100 - 6199
I:case:starting servers
I:case:waiting for zone transfer to complete (1)
I:case:testing case preserving responses - no acl (2)
I:case:testing no-case-compress acl '{ 10.53.0.2; }' (3)
I:case:testing load of dynamic zone with various $ORIGIN values (4)
I:case:transfer of dynamic zone with various $ORIGIN values (5)
I:case:change SOA owner case via update (6)
I:case:wait for zone to transfer (7)
I:case:check SOA owner case is transferred to secondary (8)
I:case:change A record owner case via update (9)
I:case:wait for zone to transfer (10)
I:case:check A owner case is transferred to secondary (11)
I:case:exit status: 0
I:case:stopping servers
I:case:pytest not installed, skipping python tests
R:case:PASS
E:case:2022-02-23T15:21:47+0800
S:catz:2022-02-23T15:21:47+0800
T:catz:1:A
A:catz:System test catz
I:catz:PORTRANGE:6200 - 6299
I:catz:starting servers
I:catz:Testing adding/removing of domain in catalog zone
I:catz:checking that dom1.example. is not served by primary (1)
I:catz:Adding a domain dom1.example. to primary via RNDC (2)
I:catz:checking that dom1.example. is now served by primary (3)
I:catz:Adding domain dom1.example. to catalog1 zone (4)
I:catz:waiting for secondary to sync up (5)
I:catz:checking that dom1.example. is served by secondary (6)
I:catz:checking that zone-directory is populated (7)
I:catz:update dom1.example. (8)
I:catz:wait for secondary to be updated (9)
I:catz:check that journal was created for cleanup test (10)
I:catz:update catalog zone serial (11)
I:catz:wait for catalog zone to transfer (12)
I:catz:update dom1.example. again (13)
I:catz:wait for secondary to be updated again (14)
I:catz:removing domain dom1.example. from catalog1 zone (15)
I:catz:waiting for secondary to sync up (16)
I:catz:checking that dom1.example. is not served by secondary (17)
I:catz:checking that zone-directory is emptied (18)
I:catz:Testing various simple operations on domains, including using multiple catalog zones and garbage in zone
I:catz:adding domain dom2.example. to primary via RNDC (19)
I:catz:adding domain dom4.example. to primary via RNDC (20)
I:catz:adding domains dom2.example, dom3.example. and some garbage to catalog1 zone (21)
I:catz:adding domain dom4.example. to catalog2 zone (22)
I:catz:waiting for secondary to sync up (23)
I:catz:checking that dom4.example. is served by secondary (24)
I:catz:checking that dom3.example. is not served by primary (25)
I:catz:adding a domain dom3.example. to primary via RNDC (26)
I:catz:checking that dom3.example. is served by primary (27)
I:catz:waiting for secondary to sync up (28)
I:catz:checking that dom3.example. is served by secondary (29)
I:catz:removing all records from catalog1 zone (30)
I:catz:removing all records from catalog2 zone (31)
I:catz:Testing masters suboption and random labels
I:catz:adding dom5.example. with a valid masters suboption (IP without TSIG) and a random label (32)
I:catz:waiting for secondary to sync up (33)
I:catz:checking that dom5.example. is served by secondary (34)
I:catz:removing dom5.example. (35)
I:catz:waiting for secondary to sync up (36)
I:catz:checking that dom5.example. is no longer served by secondary (37)
I:catz:Testing masters global option
I:catz:adding dom6.example. and a valid global masters option (IP without TSIG) (38)
I:catz:waiting for secondary to sync up (39)
I:catz:checking that dom6.example. is served by secondary (40)
I:catz:removing dom6.example. (41)
I:catz:waiting for secondary to sync up (42)
I:catz:checking that dom6.example. is no longer served by secondary (43)
I:catz:adding dom6.example. and an invalid global masters option (TSIG without IP) (44)
I:catz:waiting for secondary to sync up (45)
I:catz:removing dom6.example. (46)
I:catz:waiting for secondary to sync up (47)
I:catz:Checking that a missing zone directory forces in-memory (48)
I:catz:Testing allow-query and allow-transfer ACLs
I:catz:adding domains dom7.example. and dom8.example. to primary via RNDC (49)
I:catz:checking that dom7.example. is now served by primary (50)
I:catz:adding domain dom7.example. to catalog1 zone with an allow-query statement (51)
I:catz:waiting for secondary to sync up (52)
I:catz:checking that dom7.example. is accessible from 10.53.0.1 (53)
I:catz:checking that dom7.example. is not accessible from 10.53.0.2 (54)
I:catz:checking that dom7.example. is accessible from 10.53.0.5 (55)
I:catz:adding dom8.example. domain and global allow-query and allow-transfer ACLs (56)
I:catz:waiting for secondary to sync up (57)
I:catz:checking that dom8.example. is accessible from 10.53.0.1 (58)
I:catz:checking that dom8.example. is not accessible from 10.53.0.2 (59)
I:catz:checking that dom8.example. is not AXFR accessible from 10.53.0.1 (60)
I:catz:checking that dom8.example. is AXFR accessible from 10.53.0.2 (61)
I:catz:deleting global allow-query and allow-domain ACLs (62)
I:catz:checking that dom8.example. is accessible from 10.53.0.1 (63)
I:catz:checking that dom8.example. is accessible from 10.53.0.2 (64)
I:catz:checking that dom8.example. is AXFR accessible from 10.53.0.1 (65)
I:catz:checking that dom8.example. is AXFR accessible from 10.53.0.2 (66)
I:catz:Testing TSIG keys for masters set per-domain
I:catz:adding a domain dom9.example. to primary via RNDC, with transfers allowed only with TSIG key (67)
I:catz:checking that dom9.example. is now served by primary (68)
I:catz:adding domain dom9.example. to catalog1 zone with a valid masters suboption (IP with TSIG) (69)
I:catz:waiting for secondary to sync up (70)
I:catz:checking that dom9.example. is accessible on secondary (71)
I:catz:deleting domain dom9.example. from catalog1 zone (72)
I:catz:waiting for secondary to sync up (73)
I:catz:checking that dom9.example. is no longer accessible on secondary (74)
I:catz:adding domain dom9.example. to catalog1 zone with an invalid masters suboption (TSIG without IP) (75)
I:catz:waiting for secondary to sync up (76)
I:catz:deleting domain dom9.example. from catalog1 zone (77)
I:catz:waiting for secondary to sync up (78)
I:catz:Testing catalog entries that can't be represented as filenames
I:catz:checking that this.is.a.very.very.long.long.long.domain.that.will.cause.catalog.zones.to.generate.hash.instead.of.using.regular.filename.dom10.example. is not served by primary (79)
I:catz:Adding a domain this.is.a.very.very.long.long.long.domain.that.will.cause.catalog.zones.to.generate.hash.instead.of.using.regular.filename.dom10.example. to primary via RNDC (80)
I:catz:checking that this.is.a.very.very.long.long.long.domain.that.will.cause.catalog.zones.to.generate.hash.instead.of.using.regular.filename.dom10.example. is now served by primary (81)
I:catz:Adding domain this.is.a.very.very.long.long.long.domain.that.will.cause.catalog.zones.to.generate.hash.instead.of.using.regular.filename.dom10.example. to catalog1 zone (82)
I:catz:waiting for secondary to sync up (83)
I:catz:checking that this.is.a.very.very.long.long.long.domain.that.will.cause.catalog.zones.to.generate.hash.instead.of.using.regular.filename.dom10.example. is served by secondary (84)
I:catz:checking that zone-directory is populated with a hashed filename (85)
I:catz:removing domain this.is.a.very.very.long.long.long.domain.that.will.cause.catalog.zones.to.generate.hash.instead.of.using.regular.filename.dom10.example. from catalog1 zone (86)
I:catz:waiting for secondary to sync up (87)
I:catz:checking that this.is.a.very.very.long.long.long.domain.that.will.cause.catalog.zones.to.generate.hash.instead.of.using.regular.filename.dom10.example. is not served by secondary (88)
I:catz:checking that zone-directory is emptied (89)
I:catz:checking that this.zone/domain.has.a.slash.dom10.example. is not served by primary (90)
I:catz:Adding a domain this.zone/domain.has.a.slash.dom10.example. to primary via RNDC (91)
I:catz:checking that this.zone/domain.has.a.slash.dom10.example. is now served by primary (92)
I:catz:Adding domain this.zone/domain.has.a.slash.dom10.example. to catalog1 zone (93)
I:catz:waiting for secondary to sync up (94)
I:catz:checking that this.zone/domain.has.a.slash.dom10.example. is served by secondary (95)
I:catz:checking that zone-directory is populated with a hashed filename (96)
I:catz:removing domain this.zone/domain.has.a.slash.dom10.example. from catalog1 zone (97)
I:catz:waiting for secondary to sync up (98)
I:catz:checking that this.zone/domain.has.a.slash.dom10.example. is not served by secondary (99)
I:catz:checking that zone-directory is emptied (100)
I:catz:checking that this.zone\\domain.has.backslash.dom10.example. is not served by primary (101)
I:catz:Adding a domain this.zone\\domain.has.backslash.dom10.example. to primary via RNDC (102)
I:catz:checking that this.zone\\domain.has.backslash.dom10.example. is now served by primary (103)
I:catz:Adding domain this.zone\\domain.has.backslash.dom10.example. to catalog1 zone (104)
I:catz:waiting for secondary to sync up (105)
I:catz:checking that this.zone\\domain.has.backslash.dom10.example. is served by secondary (106)
I:catz:checking that zone-directory is populated with a hashed filename (107)
I:catz:removing domain this.zone\\domain.has.backslash.dom10.example. from catalog1 zone (108)
I:catz:waiting for secondary to sync up (109)
I:catz:checking that this.zone\\domain.has.backslash.dom10.example. is not served by secondary (110)
I:catz:checking that zone-directory is emptied (111)
I:catz:checking that this.zone:domain.has.a.colon.dom.10.example. is not served by primary (112)
I:catz:Adding a domain this.zone:domain.has.a.colon.dom.10.example. to primary via RNDC (113)
I:catz:checking that this.zone:domain.has.a.colon.dom.10.example. is now served by primary (114)
I:catz:Adding domain this.zone:domain.has.a.colon.dom.10.example. to catalog1 zone (115)
I:catz:waiting for secondary to sync up (116)
I:catz:checking that this.zone:domain.has.a.colon.dom.10.example. is served by secondary (117)
I:catz:checking that zone-directory is populated with a hashed filename (118)
I:catz:removing domain this.zone:domain.has.a.colon.dom.10.example. from catalog1 zone (119)
I:catz:waiting for secondary to sync up (120)
I:catz:checking that this.zone:domain.has.a.colon.dom.10.example. is not served by secondary (121)
I:catz:checking that zone-directory is emptied (122)
I:catz:Testing adding a domain and a subdomain of it
I:catz:checking that dom11.example. is not served by primary (123)
I:catz:Adding a domain dom11.example. to primary via RNDC (124)
I:catz:checking that dom11.example. is now served by primary (125)
I:catz:Adding domain dom11.example. to catalog1 zone (126)
I:catz:waiting for secondary to sync up (127)
I:catz:checking that dom11.example. is served by secondary (128)
I:catz:checking that subdomain.of.dom11.example. is not served by primary (129)
I:catz:Adding a domain subdomain.of.dom11.example. to primary via RNDC (130)
I:catz:checking that subdomain.of.dom11.example. is now served by primary (131)
I:catz:Adding domain subdomain.of.dom11.example. to catalog1 zone (132)
I:catz:waiting for secondary to sync up (133)
I:catz:checking that subdomain.of.dom11.example. is served by secondary (134)
I:catz:removing domain dom11.example. from catalog1 zone (135)
I:catz:waiting for secondary to sync up (136)
I:catz:checking that dom11.example. is not served by secondary (137)
I:catz:checking that subdomain.of.dom11.example. is still served by secondary (138)
I:catz:removing domain subdomain.of.dom11.example. from catalog1 zone (139)
I:catz:waiting for secondary to sync up (140)
I:catz:checking that subdomain.of.dom11.example. is not served by secondary (141)
I:catz:Testing adding a catalog zone at runtime with rndc reconfig
I:catz:checking that dom12.example. is not served by primary (142)
I:catz:Adding a domain dom12.example. to primary via RNDC (143)
I:catz:checking that dom12.example. is now served by primary (144)
I:catz:Adding domain dom12.example. to catalog4 zone (145)
I:catz:checking that dom12.example. is not served by secondary (146)
I:catz:reconfiguring secondary - adding catalog4 catalog zone (147)
I:catz:waiting for secondary to sync up (148)
I:catz:checking that dom7.example. is still served by secondary after reconfiguration (149)
I:catz:checking that dom12.example. is served by secondary (150)
I:catz:reconfiguring secondary - removing catalog4 catalog zone, adding non-existent catalog5 catalog zone (151)
I:catz:reconfiguring secondary - removing non-existent catalog5 catalog zone (152)
I:catz:checking that dom12.example. is not served by secondary (153)
I:catz:removing domain dom12.example. from catalog4 zone (154)
I:catz:Testing having a zone in two different catalogs
I:catz:checking that dom13.example. is not served by primary (155)
I:catz:Adding a domain dom13.example. to primary ns1 via RNDC (156)
I:catz:checking that dom13.example. is now served by primary ns1 (157)
I:catz:Adding a domain dom13.example. to primary ns3 via RNDC (158)
I:catz:checking that dom13.example. is now served by primary ns3 (159)
I:catz:Adding domain dom13.example. to catalog1 zone with ns1 as primary (160)
I:catz:waiting for secondary to sync up (161)
I:catz:checking that dom13.example. is served by secondary and that it's the one from ns1 (162)
I:catz:Adding domain dom13.example. to catalog2 zone with ns3 as primary (163)
I:catz:waiting for secondary to sync up (164)
I:catz:checking that dom13.example. is served by secondary and that it's still the one from ns1 (165)
I:catz:Deleting domain dom13.example. from catalog2 (166)
I:catz:waiting for secondary to sync up (167)
I:catz:checking that dom13.example. is served by secondary and that it's still the one from ns1 (168)
I:catz:Deleting domain dom13.example. from catalog1 (169)
I:catz:waiting for secondary to sync up (170)
I:catz:checking that dom13.example. is no longer served by secondary (171)
I:catz:Testing having a regular zone and a zone in catalog zone of the same name
I:catz:checking that dom14.example. is not served by primary (172)
I:catz:Adding a domain dom14.example. to primary ns1 via RNDC (173)
I:catz:checking that dom14.example. is now served by primary ns1 (174)
I:catz:Adding a domain dom14.example. to primary ns3 via RNDC (175)
I:catz:checking that dom14.example. is now served by primary ns3 (176)
I:catz:Adding domain dom14.example. with rndc with ns1 as primary (177)
I:catz:waiting for secondary to sync up (178)
I:catz:checking that dom14.example. is served by secondary and that it's the one from ns1 (179)
I:catz:Adding domain dom14.example. to catalog2 zone with ns3 as primary (180)
I:catz:waiting for secondary to sync up (181)
I:catz:checking that dom14.example. is served by secondary and that it's still the one from ns1 (182)
I:catz:Deleting domain dom14.example. from catalog2 (183)
I:catz:waiting for secondary to sync up (184)
I:catz:checking that dom14.example. is served by secondary and that it's still the one from ns1 (185)
I:catz:Testing changing label for a member zone
I:catz:checking that dom15.example. is not served by primary (186)
I:catz:Adding a domain dom15.example. to primary ns1 via RNDC (187)
I:catz:checking that dom15.example. is now served by primary ns1 (188)
I:catz:Adding domain dom15.example. to catalog1 zone with 'dom15label1' label (188)
I:catz:waiting for secondary to sync up (189)
I:catz:checking that dom15.example. is served by secondary (190)
I:catz:Changing label of domain dom15.example. from 'dom15label1' to 'dom15label2' (191)
I:catz:waiting for secondary to sync up (192)
I:catz:checking that dom15.example. is served by secondary (193)
I:catz:Testing recreation of a manually deleted zone after a reload
I:catz:checking that dom16.example. is not served by primary (194)
I:catz:Adding a domain dom16.example. to primary ns1 via RNDC (195)
I:catz:checking that dom16.example. is now served by primary ns1 (196)
I:catz:Adding domain dom16.example. to catalog1 zone with ns1 as primary (197)
I:catz:waiting for secondary to sync up (198)
I:catz:checking that dom16.example. is served by secondary and that it's the one from ns1 (199)
I:catz:Deleting dom16.example. from secondary ns2 via RNDC (199)
I:catz:checking that dom16.example. is no longer served by secondary (200)
I:catz:Reloading secondary ns2 via RNDC (200)
I:catz:waiting for secondary to sync up (201)
I:catz:checking that dom16.example. is served by secondary and that it's the one from ns1 (202)
I:catz:Deleting domain dom16.example. from catalog1 (203)
I:catz:waiting for secondary to sync up (204)
I:catz:checking that dom16.example. is no longer served by secondary (205)
I:catz:checking that reconfig can delete and restore catalog zone configuration (206)
I:catz:exit status: 0
I:catz:stopping servers
I:catz:pytest not installed, skipping python tests
R:catz:PASS
E:catz:2022-02-23T15:25:18+0800
S:cds:2022-02-23T15:25:18+0800
T:cds:1:A
A:cds:System test cds
I:cds:PORTRANGE:6300 - 6399
/export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/dnssec/dnssec-keygen: 列 37: libtool_install_magic: 未綁定的變數
I:cds:setup.sh script failed
R:cds:FAIL
E:cds:2022-02-23T15:25:18+0800
S:chain:2022-02-23T15:25:19+0800
T:chain:1:A
A:chain:System test chain
I:chain:PORTRANGE:6400 - 6499
I:chain:This test requires the dnspython module.
I:chain:Prerequisites missing, skipping test.
R:chain:SKIPPED
E:chain:2022-02-23T15:25:19+0800
S:checkconf:2022-02-23T15:25:19+0800
T:checkconf:1:A
A:checkconf:System test checkconf
I:checkconf:PORTRANGE:6500 - 6599
I:checkconf:starting servers
I:checkconf:checking that named-checkconf handles a known good config (1)
I:checkconf:checking that named-checkconf prints a known good config (2)
I:checkconf:checking that named-checkconf -x removes secrets (3)
I:checkconf:checking that named-checkconf detects error in bad-acl.conf (4)
I:checkconf:checking that named-checkconf detects error in bad-also-notify.conf (5)
I:checkconf:checking that named-checkconf detects error in bad-catz-zone.conf (6)
I:checkconf:checking that named-checkconf detects error in bad-checknames-primary-dup-2.conf (7)
I:checkconf:checking that named-checkconf detects error in bad-checknames-primary-dup.conf (8)
I:checkconf:checking that named-checkconf detects error in bad-checknames-secondary-dup.conf (9)
I:checkconf:checking that named-checkconf detects error in bad-dnskey-validity.conf (10)
I:checkconf:checking that named-checkconf detects error in bad-dnssec.conf (11)
I:checkconf:checking that named-checkconf detects error in bad-duplicate-key.conf (12)
I:checkconf:checking that named-checkconf detects error in bad-duplicate-primaries-1.conf (13)
I:checkconf:checking that named-checkconf detects error in bad-duplicate-primaries-2.conf (14)
I:checkconf:checking that named-checkconf detects error in bad-duplicate-root-key.conf (15)
I:checkconf:checking that named-checkconf detects error in bad-geoip-use-ecs.conf (16)
I:checkconf:checking that named-checkconf detects error in bad-glue-cache-bogus.conf (17)
I:checkconf:checking that named-checkconf detects error in bad-hint.conf (18)
I:checkconf:checking that named-checkconf detects error in bad-in-view-dup.conf (19)
I:checkconf:checking that named-checkconf detects error in bad-inline-options.conf (20)
I:checkconf:checking that named-checkconf detects error in bad-inline-slave.conf (21)
I:checkconf:checking that named-checkconf detects error in bad-inline-view.conf (22)
I:checkconf:checking that named-checkconf detects error in bad-interface-interval.conf (23)
I:checkconf:checking that named-checkconf detects error in bad-ipv4-prefix-dotted1.conf (24)
I:checkconf:checking that named-checkconf detects error in bad-ipv4-prefix-dotted2.conf (25)
I:checkconf:checking that named-checkconf detects error in bad-ipv4-prefix2.conf (26)
I:checkconf:checking that named-checkconf detects error in bad-kasp-define-default.conf (27)
I:checkconf:checking that named-checkconf detects error in bad-kasp-define-insecure.conf (28)
I:checkconf:checking that named-checkconf detects error in bad-kasp-define-none.conf (29)
I:checkconf:checking that named-checkconf detects error in bad-kasp-key1.conf (30)
I:checkconf:checking that named-checkconf detects error in bad-kasp-key2.conf (31)
I:checkconf:checking that named-checkconf detects error in bad-kasp-key3.conf (32)
I:checkconf:checking that named-checkconf detects error in bad-kasp-key4.conf (33)
I:checkconf:checking that named-checkconf detects error in bad-kasp-keydir1.conf (34)
I:checkconf:checking that named-checkconf detects error in bad-kasp-keydir2.conf (35)
I:checkconf:checking that named-checkconf detects error in bad-kasp-keydir3.conf (36)
I:checkconf:checking that named-checkconf detects error in bad-kasp-keydir4.conf (37)
I:checkconf:checking that named-checkconf detects error in bad-kasp-keydir5.conf (38)
I:checkconf:checking that named-checkconf detects error in bad-kasp-policy-undefined-inherited-view.conf (39)
I:checkconf:checking that named-checkconf detects error in bad-kasp-policy-undefined-inherited.conf (40)
I:checkconf:checking that named-checkconf detects error in bad-kasp10.conf (41)
I:checkconf:checking that named-checkconf detects error in bad-kasp11.conf (42)
I:checkconf:checking that named-checkconf detects error in bad-kasp12.conf (43)
I:checkconf:checking that named-checkconf detects error in bad-kasp13.conf (44)
I:checkconf:checking that named-checkconf detects error in bad-kasp2.conf (45)
I:checkconf:checking that named-checkconf detects error in bad-kasp3.conf (46)
I:checkconf:checking that named-checkconf detects error in bad-kasp4.conf (47)
I:checkconf:checking that named-checkconf detects error in bad-kasp6.conf (48)
I:checkconf:checking that named-checkconf detects error in bad-kasp7.conf (49)
I:checkconf:checking that named-checkconf detects error in bad-kasp8.conf (50)
I:checkconf:checking that named-checkconf detects error in bad-kasp9.conf (51)
I:checkconf:checking that named-checkconf detects error in bad-keep-response-order.conf (52)
I:checkconf:checking that named-checkconf detects error in bad-lifetime.conf (53)
I:checkconf:checking that named-checkconf detects error in bad-lmdb-mapsize-bogus.conf (54)
I:checkconf:checking that named-checkconf detects error in bad-lmdb-mapsize-toolarge.conf (55)
I:checkconf:checking that named-checkconf detects error in bad-lmdb-mapsize-toosmall.conf (56)
I:checkconf:checking that named-checkconf detects error in bad-lmdb-mapsize-unlimited.conf (57)
I:checkconf:checking that named-checkconf detects error in bad-master-request-ixfr.conf (58)
I:checkconf:checking that named-checkconf detects error in bad-masters-dup.conf (59)
I:checkconf:checking that named-checkconf detects error in bad-maxcachettl.conf (60)
I:checkconf:checking that named-checkconf detects error in bad-maxncachettl-1.conf (61)
I:checkconf:checking that named-checkconf detects error in bad-maxncachettl-2.conf (62)
I:checkconf:checking that named-checkconf detects error in bad-maxncachettl-3.conf (63)
I:checkconf:checking that named-checkconf detects error in bad-maxncachettl-4.conf (64)
I:checkconf:checking that named-checkconf detects error in bad-maxratio1.conf (65)
I:checkconf:checking that named-checkconf detects error in bad-maxratio2.conf (66)
I:checkconf:checking that named-checkconf detects error in bad-maxttlmap.conf (67)
I:checkconf:checking that named-checkconf detects error in bad-mincachettl.conf (68)
I:checkconf:checking that named-checkconf detects error in bad-minncachettl.conf (69)
I:checkconf:checking that named-checkconf detects error in bad-mirror-allow-recursion-none.conf (70)
I:checkconf:checking that named-checkconf detects error in bad-mirror-explicit-notify-yes.conf (71)
I:checkconf:checking that named-checkconf detects error in bad-mirror-non-root-zone-without-masters.conf (72)
I:checkconf:checking that named-checkconf detects error in bad-mirror-recursion-no.conf (73)
I:checkconf:checking that named-checkconf detects error in bad-mirror-zonename.conf (74)
I:checkconf:checking that named-checkconf detects error in bad-noddns.conf (75)
I:checkconf:checking that named-checkconf detects error in bad-notify-source-v6.conf (76)
I:checkconf:checking that named-checkconf detects error in bad-notify-source.conf (77)
I:checkconf:checking that named-checkconf detects error in bad-options-also-notify.conf (78)
I:checkconf:checking that named-checkconf detects error in bad-parental-agents-def-options.conf (79)
I:checkconf:checking that named-checkconf detects error in bad-parental-agents-def-view.conf (80)
I:checkconf:checking that named-checkconf detects error in bad-parental-agents-def-view2.conf (81)
I:checkconf:checking that named-checkconf detects error in bad-parental-agents-def-zone.conf (82)
I:checkconf:checking that named-checkconf detects error in bad-parental-agents-dup.conf (83)
I:checkconf:checking that named-checkconf detects error in bad-parental-agents-dupdef.conf (84)
I:checkconf:checking that named-checkconf detects error in bad-parental-agents-empty.conf (85)
I:checkconf:checking that named-checkconf detects error in bad-parental-agents-empty2.conf (86)
I:checkconf:checking that named-checkconf detects error in bad-parental-agents-mirror.conf (87)
I:checkconf:checking that named-checkconf detects error in bad-parental-agents-notfound.conf (88)
I:checkconf:checking that named-checkconf detects error in bad-parental-source-v6.conf (89)
I:checkconf:checking that named-checkconf detects error in bad-parental-source.conf (90)
I:checkconf:checking that named-checkconf detects error in bad-port.conf (91)
I:checkconf:checking that named-checkconf detects error in bad-primaries-key.conf (92)
I:checkconf:checking that named-checkconf detects error in bad-primaries-notfound.conf (93)
I:checkconf:checking that named-checkconf detects error in bad-printtime.conf (94)
I:checkconf:checking that named-checkconf detects error in bad-rate-limit-acl.conf (95)
I:checkconf:checking that named-checkconf detects error in bad-rate-limit-all-per-second.conf (96)
I:checkconf:checking that named-checkconf detects error in bad-rate-limit-errors-per-second.conf (97)
I:checkconf:checking that named-checkconf detects error in bad-rate-limit-ipv4-prefix-length.conf (98)
I:checkconf:checking that named-checkconf detects error in bad-rate-limit-ipv6-prefix-length.conf (99)
I:checkconf:checking that named-checkconf detects error in bad-rate-limit-max-table-size.conf (100)
I:checkconf:checking that named-checkconf detects error in bad-rate-limit-nodata-per-second.conf (101)
I:checkconf:checking that named-checkconf detects error in bad-rate-limit-nxdomains-per-second.conf (102)
I:checkconf:checking that named-checkconf detects error in bad-rate-limit-qps-scale.conf (103)
I:checkconf:checking that named-checkconf detects error in bad-rate-limit-referrals-per-second.conf (104)
I:checkconf:checking that named-checkconf detects error in bad-rate-limit-responses-per-second.conf (105)
I:checkconf:checking that named-checkconf detects error in bad-rate-limit-slip.conf (106)
I:checkconf:checking that named-checkconf detects error in bad-rate-limit-window.conf (107)
I:checkconf:checking that named-checkconf detects error in bad-root-mixed-key.conf (108)
I:checkconf:checking that named-checkconf detects error in bad-rpz-too-many-zones.conf (109)
I:checkconf:checking that named-checkconf detects error in bad-rpz-ttl.conf (110)
I:checkconf:checking that named-checkconf detects error in bad-rpz-update.conf (111)
I:checkconf:checking that named-checkconf detects error in bad-rpz-zone.conf (112)
I:checkconf:checking that named-checkconf detects error in bad-sharedwritable1.conf (113)
I:checkconf:checking that named-checkconf detects error in bad-sharedwritable2.conf (114)
I:checkconf:checking that named-checkconf detects error in bad-sharedzone1.conf (115)
I:checkconf:checking that named-checkconf detects error in bad-sharedzone2.conf (116)
I:checkconf:checking that named-checkconf detects error in bad-sharedzone3.conf (117)
I:checkconf:checking that named-checkconf detects error in bad-sig-validity.conf (118)
I:checkconf:checking that named-checkconf detects error in bad-static-initial-1.conf (119)
I:checkconf:checking that named-checkconf detects error in bad-static-initial-2.conf (120)
I:checkconf:checking that named-checkconf detects error in bad-static-initial-3.conf (121)
I:checkconf:checking that named-checkconf detects error in bad-static-initial-4.conf (122)
I:checkconf:checking that named-checkconf detects error in bad-stub-masters-dialup.conf (123)
I:checkconf:checking that named-checkconf detects error in bad-transfer-source-v6.conf (124)
I:checkconf:checking that named-checkconf detects error in bad-transfer-source.conf (125)
I:checkconf:checking that named-checkconf detects error in bad-tsig.conf (126)
I:checkconf:checking that named-checkconf detects error in bad-update-policy1.conf (127)
I:checkconf:checking that named-checkconf detects error in bad-update-policy10.conf (128)
I:checkconf:checking that named-checkconf detects error in bad-update-policy11.conf (129)
I:checkconf:checking that named-checkconf detects error in bad-update-policy12.conf (130)
I:checkconf:checking that named-checkconf detects error in bad-update-policy13.conf (131)
I:checkconf:checking that named-checkconf detects error in bad-update-policy14.conf (132)
I:checkconf:checking that named-checkconf detects error in bad-update-policy15.conf (133)
I:checkconf:checking that named-checkconf detects error in bad-update-policy2.conf (134)
I:checkconf:checking that named-checkconf detects error in bad-update-policy3.conf (135)
I:checkconf:checking that named-checkconf detects error in bad-update-policy4.conf (136)
I:checkconf:checking that named-checkconf detects error in bad-update-policy5.conf (137)
I:checkconf:checking that named-checkconf detects error in bad-update-policy6.conf (138)
I:checkconf:checking that named-checkconf detects error in bad-update-policy7.conf (139)
I:checkconf:checking that named-checkconf detects error in bad-update-policy8.conf (140)
I:checkconf:checking that named-checkconf detects error in bad-update-policy9.conf (141)
I:checkconf:checking that named-checkconf detects error in bad-validation-auto-key.conf (142)
I:checkconf:checking that named-checkconf detects error in bad-view-also-notify.conf (143)
I:checkconf:checking that named-checkconf detects no error in good-acl.conf (144)
I:checkconf:checking that named-checkconf detects no error in good-allow-update-forwarding-view.conf (145)
I:checkconf:checking that named-checkconf detects no error in good-allow-update-forwarding.conf (146)
I:checkconf:checking that named-checkconf detects no error in good-allow-update-view.conf (147)
I:checkconf:checking that named-checkconf detects no error in good-allow-update.conf (148)
I:checkconf:checking that named-checkconf detects no error in good-class.conf (149)
I:checkconf:checking that named-checkconf detects no error in good-dnskey-validity-3660.conf (150)
I:checkconf:checking that named-checkconf detects no error in good-dnskey-validity-zero.conf (151)
I:checkconf:checking that named-checkconf detects no error in good-ds-key-1.conf (152)
I:checkconf:checking that named-checkconf detects no error in good-ds-key-2.conf (153)
I:checkconf:checking that named-checkconf detects no error in good-dup-managed-key.conf (154)
I:checkconf:checking that named-checkconf detects no error in good-dup-trusted-key.conf (155)
I:checkconf:checking that named-checkconf detects no error in good-glue-cache.conf (156)
I:checkconf:checking that named-checkconf detects no error in good-initial-ds.conf (157)
I:checkconf:checking that named-checkconf detects no error in good-interface-interval.conf (158)
I:checkconf:checking that named-checkconf detects no error in good-kasp.conf (159)
I:checkconf:checking that named-checkconf detects no error in good-key-directory.conf (160)
I:checkconf:checking that named-checkconf detects no error in good-lmdb-mapsize-largest.conf (161)
I:checkconf:checking that named-checkconf detects no error in good-lmdb-mapsize-smallest.conf (162)
I:checkconf:checking that named-checkconf detects no error in good-masterfile-format-raw.conf (163)
I:checkconf:checking that named-checkconf detects no error in good-masterfile-format-text.conf (164)
I:checkconf:checking that named-checkconf detects no error in good-masters-and-primaries.conf (165)
I:checkconf:checking that named-checkconf detects no error in good-maxcachettl.conf (166)
I:checkconf:checking that named-checkconf detects no error in good-maxncachettl.conf (167)
I:checkconf:checking that named-checkconf detects no error in good-maxratio1.conf (168)
I:checkconf:checking that named-checkconf detects no error in good-maxratio2.conf (169)
I:checkconf:checking that named-checkconf detects no error in good-mincachettl.conf (170)
I:checkconf:checking that named-checkconf detects no error in good-minncachettl.conf (171)
I:checkconf:checking that named-checkconf detects no error in good-mirror-inherited-notify-yes.conf (172)
I:checkconf:checking that named-checkconf detects no error in good-mirror-root-zone-without-masters.conf (173)
I:checkconf:checking that named-checkconf detects no error in good-nested.conf (174)
I:checkconf:checking that named-checkconf detects no error in good-notify-source-v6.conf (175)
I:checkconf:checking that named-checkconf detects no error in good-notify-source.conf (176)
I:checkconf:checking that named-checkconf detects no error in good-options-also-notify.conf (177)
I:checkconf:checking that named-checkconf detects no error in good-parental-source-v6.conf (178)
I:checkconf:checking that named-checkconf detects no error in good-parental-source.conf (179)
I:checkconf:checking that named-checkconf detects no error in good-printtime.conf (180)
I:checkconf:checking that named-checkconf detects no error in good-response-dot.conf (181)
I:checkconf:checking that named-checkconf detects no error in good-rpz-ttl.conf (182)
I:checkconf:checking that named-checkconf detects no error in good-rpz-update.conf (183)
I:checkconf:checking that named-checkconf detects no error in good-rrset-order-none.conf (184)
I:checkconf:checking that named-checkconf detects no error in good-static-ds.conf (185)
I:checkconf:checking that named-checkconf detects no error in good-transfer-source-v6.conf (186)
I:checkconf:checking that named-checkconf detects no error in good-transfer-source.conf (187)
I:checkconf:checking that named-checkconf detects no error in good-update-policy1.conf (188)
I:checkconf:checking that named-checkconf detects no error in good-update-policy10.conf (189)
I:checkconf:checking that named-checkconf detects no error in good-update-policy11.conf (190)
I:checkconf:checking that named-checkconf detects no error in good-update-policy12.conf (191)
I:checkconf:checking that named-checkconf detects no error in good-update-policy2.conf (192)
I:checkconf:checking that named-checkconf detects no error in good-update-policy3.conf (193)
I:checkconf:checking that named-checkconf detects no error in good-update-policy4.conf (194)
I:checkconf:checking that named-checkconf detects no error in good-update-policy5.conf (195)
I:checkconf:checking that named-checkconf detects no error in good-update-policy6.conf (196)
I:checkconf:checking that named-checkconf detects no error in good-update-policy7.conf (197)
I:checkconf:checking that named-checkconf detects no error in good-update-policy8.conf (198)
I:checkconf:checking that named-checkconf detects no error in good-update-policy9.conf (199)
I:checkconf:checking that named-checkconf detects no error in good-view-also-notify.conf (200)
I:checkconf:checking that ancient options report a fatal error (201)
I:checkconf:checking that named-checkconf -z catches missing hint file (202)
I:checkconf:checking that named-checkconf catches range errors (203)
I:checkconf:checking that named-checkconf warns of notify inconsistencies (204)
I:checkconf:checking named-checkconf dnssec warnings (205)
I:checkconf:checking named-checkconf deprecate warnings (206)
I:checkconf:checking named-checkconf servestale warnings (207)
I:checkconf:range checking fields that do not allow zero (208)
I:checkconf:checking options allowed in inline-signing secondaries (209)
I:checkconf:check file + inline-signing for secondary zones (210)
I:checkconf:checking named-checkconf DLZ warnings (211)
I:checkconf:checking for missing key directory warning (212)
I:checkconf:checking that named-checkconf -z catches conflicting ttl with max-ttl (213)
I:checkconf:checking that named-checkconf -z catches invalid max-ttl (214)
I:checkconf:checking that named-checkconf -z skips zone check with alternate databases (215)
I:checkconf:checking that named-checkconf -z skips zone check with DLZ (216)
I:checkconf:checking that named-checkconf -z fails on view with ANY class (217)
I:checkconf:checking that named-checkconf -z fails on view with CLASS255 class (218)
I:checkconf:checking that named-checkconf -z passes on view with IN class (219)
I:checkconf:checking that named-checkconf -z passes on view with CLASS1 class (220)
I:checkconf:check that check-names fails as configured (221)
I:checkconf:check that check-mx fails as configured (222)
I:checkconf:check that check-dup-records fails as configured (223)
I:checkconf:check that check-mx fails as configured (224)
I:checkconf:check that check-mx-cname fails as configured (225)
I:checkconf:check that check-srv-cname fails as configured (226)
I:checkconf:check that named-checkconf -p properly print a port range (227)
I:checkconf:check that named-checkconf -z handles in-view (228)
I:checkconf:check that named-checkconf -z returns error when a later view is okay (229)
I:checkconf:check that named-checkconf prints max-cache-size <percentage> correctly (230)
I:checkconf:check that named-checkconf -l prints out the zone list (231)
I:checkconf:check that 'dnssec-lookaside auto;' generates a warning (232)
I:checkconf:check that 'dnssec-lookaside . trust-anchor dlv.isc.org;' generates a warning (233)
I:checkconf:check that 'dnssec-lookaside . trust-anchor dlv.example.com;' generates a warning (234)
I:checkconf:check that the 2010 ICANN ROOT KSK without the 2017 ICANN ROOT KSK generates a warning (235)
I:checkconf:check that the 2010 ICANN ROOT KSK with the 2017 ICANN ROOT KSK does not generate a warning (236)
I:checkconf:check that the 2017 ICANN ROOT KSK alone does not generate a warning (237)
I:checkconf:check that a static root key generates a warning (238)
I:checkconf:check that a static root DS trust anchor generates a warning (239)
I:checkconf:check that a trusted-keys entry for root generates a warning (240)
I:checkconf:check that using trust-anchors and managed-keys generates an error (241)
I:checkconf:check that 'geoip-use-ecs no' generates a warning (242)
I:checkconf:checking named-checkconf kasp errors (243)
I:checkconf:checking named-checkconf kasp nsec3 iterations errors (244)
I:checkconf:checking named-checkconf kasp nsec3 algorithm errors (245)
I:checkconf:checking named-checkconf kasp key errors (246)
I:checkconf:checking named-checkconf kasp predefined key length (247)
I:checkconf:check that a good 'kasp' configuration is accepted (248)
I:checkconf:checking that named-checkconf prints a known good kasp config (249)
I:checkconf:check that max-ixfr-ratio 100% generates a warning (250)
I:checkconf:check that *-source options with specified port generate warnings (251)
I:checkconf:check that masterfile-format map generates deprecation warning (252)
I:checkconf:check that masterfile-format text and raw don't generate deprecation warning (253)
I:checkconf:exit status: 0
I:checkconf:stopping servers
I:checkconf:pytest not installed, skipping python tests
R:checkconf:PASS
E:checkconf:2022-02-23T15:25:30+0800
S:checkds:2022-02-23T15:25:30+0800
T:checkds:1:A
A:checkds:System test checkds
I:checkds:PORTRANGE:6600 - 6699
I:checkds:This test requires the dnspython >= 2.0.0 module.
I:checkds:Prerequisites missing, skipping test.
R:checkds:SKIPPED
E:checkds:2022-02-23T15:25:30+0800
S:checknames:2022-02-23T15:25:30+0800
T:checknames:1:A
A:checknames:System test checknames
I:checknames:PORTRANGE:6700 - 6799
I:checknames:starting servers
I:checknames:check for failure from on zone load for 'check-names fail;' (1)
I:checknames:check for warnings from on zone load for 'check-names warn;' (2)
I:checknames:check for warnings from on zone load for 'check-names ignore;' (3)
I:checknames:check that 'check-names response warn;' works (4)
I:checknames:check that 'check-names response (owner) fails;' works (5)
I:checknames:check that 'check-names response (rdata) fails;' works (6)
I:checknames:check that updates to 'check-names fail;' are rejected (7)
I:checknames:check that updates to 'check-names warn;' succeed and are logged (8)
I:checknames:check that updates to 'check-names ignore;' succeed and are not logged (9)
I:checknames:check that updates to 'check-names primary ignore;' succeed and are not logged (10)
I:checknames:check that updates to 'check-names master ignore;' succeed and are not logged (11)
I:checknames:check that updates to 'check-names secondary ignore;' succeed and are not logged (12)
I:checknames:check that updates to 'check-names master ignore;' succeed and are not logged (13)
I:checknames:exit status: 0
I:checknames:stopping servers
I:checknames:pytest not installed, skipping python tests
R:checknames:PASS
E:checknames:2022-02-23T15:25:51+0800
S:checkzone:2022-02-23T15:25:51+0800
T:checkzone:1:A
A:checkzone:System test checkzone
I:checkzone:PORTRANGE:6800 - 6899
I:checkzone:starting servers
I:checkzone:checking zones/good-cdnskey.db (1)
I:checkzone:checking zones/good-cds-unsigned.db (2)
I:checkzone:checking zones/good-cds.db (3)
I:checkzone:checking zones/good-dns-sd-reverse.db (4)
I:checkzone:checking zones/good-gc-msdcs.db (5)
I:checkzone:checking zones/good-nsap.db (6)
I:checkzone:checking zones/good-nsec3-nopadhash.db (7)
I:checkzone:checking zones/good-occulted-ns-by-dname.db (8)
I:checkzone:checking zones/good-occulted-ns-by-ns.db (9)
I:checkzone:checking zones/good-spf-exception.db (10)
I:checkzone:checking zones/good-svcb.db (11)
I:checkzone:checking zones/good1.db (12)
I:checkzone:checking zones/bad-caa-rr.db (13)
I:checkzone:checking zones/bad-cdnskey.db (14)
I:checkzone:checking zones/bad-cds.db (15)
I:checkzone:checking zones/bad-dhcid.db (16)
I:checkzone:checking zones/bad-dns-sd-reverse.db (17)
I:checkzone:checking zones/bad-ds.db (18)
I:checkzone:checking zones/bad-eid.db (19)
I:checkzone:checking zones/bad-generate-tkey.db (20)
I:checkzone:checking zones/bad-nimloc.db (21)
I:checkzone:checking zones/bad-nsap-empty.db (22)
I:checkzone:checking zones/bad-nsap-odd-nibble.db (23)
I:checkzone:checking zones/bad-nsec3-padded.db (24)
I:checkzone:checking zones/bad-nsec3owner-padded.db (25)
I:checkzone:checking zones/bad-svcb-mandatory.db (26)
I:checkzone:checking zones/bad-svcb-servername.db (27)
I:checkzone:checking zones/bad-svcb.db (28)
I:checkzone:checking zones/bad-tkey.db (29)
I:checkzone:checking zones/bad-tsig.db (30)
I:checkzone:checking zones/bad-unspec.db (31)
I:checkzone:checking zones/bad1.db (32)
I:checkzone:checking zones/bad2.db (33)
I:checkzone:checking zones/bad3.db (34)
I:checkzone:checking zones/bad4.db (35)
I:checkzone:checking zones/badttl.db (36)
I:checkzone:checking with journal file (37)
I:checkzone:checking with spf warnings (38)
I:checkzone:checking with max ttl (text) (39)
I:checkzone:checking with max ttl (raw) (40)
I:checkzone:checking with max ttl (map) (41)
I:checkzone:checking for no 'inherited owner' warning on '$INCLUDE file' with no new $ORIGIN (42)
I:checkzone:checking for 'inherited owner' warning on '$ORIGIN + $INCLUDE file' (43)
I:checkzone:checking for 'inherited owner' warning on '$INCLUDE file origin' (44)
I:checkzone:checking that raw zone with bad class is handled (45)
I:checkzone:checking that expirations that loop using serial arithmetic are handled (46)
I:checkzone:checking that nameserver below DNAME is reported even with occulted address record present (47)
I:checkzone:checking that delegating nameserver below DNAME is reported even with occulted address record present (48)
I:checkzone:exit status: 0
I:checkzone:stopping servers
I:checkzone:pytest not installed, skipping python tests
R:checkzone:PASS
E:checkzone:2022-02-23T15:25:55+0800
S:database:2022-02-23T15:25:55+0800
T:database:1:A
A:database:System test database
I:database:PORTRANGE:6900 - 6999
I:database:starting servers
I:database:checking pre reload zone (0)
I:database:checking post reload zone (1)
I:database:exit status: 0
I:database:stopping servers
I:database:pytest not installed, skipping python tests
R:database:PASS
E:database:2022-02-23T15:25:57+0800
S:digdelv:2022-02-23T15:25:58+0800
T:digdelv:1:A
A:digdelv:System test digdelv
I:digdelv:PORTRANGE:7000 - 7099
I:digdelv:This test requires the Net::DNS library.
I:digdelv:Prerequisites missing, skipping test.
R:digdelv:SKIPPED
E:digdelv:2022-02-23T15:25:58+0800
S:dlz:2022-02-23T15:25:58+0800
T:dlz:1:A
A:dlz:System test dlz
I:dlz:PORTRANGE:7100 - 7199
I:dlz:starting servers
I:dlz:checking DNAME at apex works (0)
I:dlz:checking DLZ IXFR=2010062899 (less than serial) (1)
I:dlz:checking DLZ IXFR=2010062900 (equal serial) (2)
I:dlz:checking DLZ IXFR=2010062901 (greater than serial) (3)
I:dlz:checking DLZ with a malformed SOA record
I:dlz:exit status: 0
I:dlz:stopping servers
I:dlz:pytest not installed, skipping python tests
R:dlz:PASS
E:dlz:2022-02-23T15:25:59+0800
S:dlzexternal:2022-02-23T15:26:00+0800
T:dlzexternal:1:A
A:dlzexternal:System test dlzexternal
I:dlzexternal:PORTRANGE:7200 - 7299
I:dlzexternal:starting servers
I:dlzexternal:testing update for testdc1.example.nil. A 86400 A 10.53.0.10 (1)
I:dlzexternal:testing update for testdc2.example.nil. A 86400 A 10.53.0.11 (2)
I:dlzexternal:testing update for testdc3.example.nil. A 86400 A 10.53.0.10 (3)
I:dlzexternal:testing update for deny.example.nil. TXT 86400 TXT helloworld (4)
I:dlzexternal:testing nxrrset (5)
I:dlzexternal:testing prerequisites are checked correctly (6)
I:dlzexternal:testing passing client info into DLZ driver (7)
I:dlzexternal:testing DLZ driver is cleaned up on reload (8)
I:dlzexternal:ns1 server reload successful
I:dlzexternal:testing multiple DLZ drivers (9)
I:dlzexternal:testing update for testdc1.alternate.nil. A 86400 A 10.53.0.10 (10)
I:dlzexternal:testing AXFR from DLZ drivers (11)
I:dlzexternal:testing AXFR denied from DLZ drivers (12)
I:dlzexternal:testing AXFR denied based on view ACL (13)
I:dlzexternal:testing unsearched/unregistered DLZ zone is not found (14)
I:dlzexternal:testing unsearched/registered DLZ zone is found (15)
I:dlzexternal:testing unsearched/registered DLZ zone is found (16)
I:dlzexternal:testing correct behavior with findzone returning ISC_R_NOMORE (17)
I:dlzexternal:testing findzone can return different results per client (18)
I:dlzexternal:testing zone returning oversized data (19)
I:dlzexternal:testing zone returning oversized data at zone origin (20)
I:dlzexternal:checking redirected lookup for nonexistent name (21)
I:dlzexternal:checking no redirected lookup for nonexistent type (22)
I:dlzexternal:checking redirected lookup for a long nonexistent name (23)
I:dlzexternal:exit status: 0
I:dlzexternal:stopping servers
I:dlzexternal:pytest not installed, skipping python tests
R:dlzexternal:PASS
E:dlzexternal:2022-02-23T15:26:03+0800
S:dns64:2022-02-23T15:26:03+0800
T:dns64:1:A
A:dns64:System test dns64
I:dns64:PORTRANGE:7300 - 7399
I:dns64:starting servers
I:dns64:checking that conf/good1.conf is accepted (0)
I:dns64:checking that conf/good2.conf is accepted (1)
I:dns64:checking that conf/good3.conf is accepted (2)
I:dns64:checking that conf/good4.conf is accepted (3)
I:dns64:checking that conf/good5.conf is accepted (4)
I:dns64:checking that conf/bad1.conf is rejected (5)
I:dns64:checking that conf/bad10.conf is rejected (6)
I:dns64:checking that conf/bad11.conf is rejected (7)
I:dns64:checking that conf/bad12.conf is rejected (8)
I:dns64:checking that conf/bad13.conf is rejected (9)
I:dns64:checking that conf/bad14.conf is rejected (10)
I:dns64:checking that conf/bad15.conf is rejected (11)
I:dns64:checking that conf/bad16.conf is rejected (12)
I:dns64:checking that conf/bad17.conf is rejected (13)
I:dns64:checking that conf/bad18.conf is rejected (14)
I:dns64:checking that conf/bad19.conf is rejected (15)
I:dns64:checking that conf/bad2.conf is rejected (16)
I:dns64:checking that conf/bad3.conf is rejected (17)
I:dns64:checking that conf/bad4.conf is rejected (18)
I:dns64:checking that conf/bad5.conf is rejected (19)
I:dns64:checking that conf/bad6.conf is rejected (20)
I:dns64:checking that conf/bad7.conf is rejected (21)
I:dns64:checking that conf/bad8.conf is rejected (22)
I:dns64:checking that conf/bad9.conf is rejected (23)
I:dns64:checking non-excluded AAAA lookup works (24)
I:dns64:checking excluded only AAAA lookup works (25)
I:dns64:checking excluded AAAA and non-mapped A lookup works (26)
I:dns64:checking excluded only AAAA and mapped A lookup works (27)
I:dns64:checking default exclude acl ignores mapped A records (all mapped) (28)
I:dns64:checking default exclude acl ignores mapped A records (some mapped) (29)
I:dns64:checking default exclude acl works with AAAA only (30)
I:dns64:checking default exclude acl A only lookup works (31)
I:dns64:checking partially excluded only AAAA lookup works (32)
I:dns64:checking partially-excluded AAAA and non-mapped A lookup works (33)
I:dns64:checking partially-excluded only AAAA and mapped A lookup works (34)
I:dns64:checking AAAA only lookup works (35)
I:dns64:checking A only lookup works (36)
I:dns64:checking A and AAAA lookup works (37)
I:dns64:checking non-mapped A lookup works (38)
I:dns64:checking NODATA AAAA lookup works (39)
I:dns64:checking non-existent AAAA lookup works (40)
I:dns64:checking non-excluded AAAA via CNAME lookup works (41)
I:dns64:checking excluded only AAAA via CNAME lookup works (42)
I:dns64:checking excluded AAAA and non-mapped A via CNAME lookup works (43)
I:dns64:checking excluded only AAAA and mapped A via CNAME lookup works (44)
I:dns64:checking AAAA only via CNAME lookup works (45)
I:dns64:checking A only via CNAME lookup works (46)
I:dns64:checking A and AAAA via CNAME lookup works (47)
I:dns64:checking non-mapped A via CNAME lookup works (48)
I:dns64:checking NODATA AAAA via CNAME lookup works (49)
I:dns64:checking non-existent AAAA via CNAME lookup works (50)
I:dns64:checking non-excluded AAAA lookup works, recursive only (51)
I:dns64:checking excluded only AAAA lookup works, recursive only (52)
I:dns64:checking excluded AAAA and non-mapped A lookup works, recursive only (53)
I:dns64:checking excluded only AAAA and mapped A lookup works, recursive only (54)
I:dns64:checking partially excluded only AAAA lookup works, recursive only (55)
I:dns64:checking partially-excluded AAAA and non-mapped A lookup works, recursive only (56)
I:dns64:checking partially-excluded only AAAA and mapped A lookup works, recursive only (57)
I:dns64:checking AAAA only lookup works, recursive only (58)
I:dns64:checking A only lookup works, recursive only (59)
I:dns64:checking A and AAAA lookup works, recursive only (60)
I:dns64:checking non-mapped A lookup works, recursive only (61)
I:dns64:checking NODATA AAAA lookup works, recursive only (62)
I:dns64:checking non-existent AAAA lookup works, recursive only (63)
I:dns64:checking non-excluded AAAA via CNAME lookup works, recursive only (64)
I:dns64:checking excluded only AAAA via CNAME lookup works, recursive only (65)
I:dns64:checking excluded AAAA and non-mapped A via CNAME lookup works, recursive only (66)
I:dns64:checking excluded only AAAA and mapped A via CNAME lookup works, recursive only (67)
I:dns64:checking AAAA only via CNAME lookup works, recursive only (68)
I:dns64:checking A only via CNAME lookup works, recursive only (69)
I:dns64:checking A and AAAA via CNAME lookup works, recursive only (70)
I:dns64:checking non-mapped A via CNAME lookup works, recursive only (71)
I:dns64:checking NODATA AAAA via CNAME lookup works, recursive only (72)
I:dns64:checking non-existent AAAA via CNAME lookup works, recursive only (73)
I:dns64:checking non-excluded AAAA lookup works, recursive only +norec (74)
I:dns64:checking excluded only AAAA lookup works, recursive only +norec (75)
I:dns64:checking excluded AAAA and non-mapped A lookup works, recursive only +norec (76)
I:dns64:checking excluded only AAAA and mapped A lookup works, recursive only +norec (77)
I:dns64:checking partially excluded only AAAA lookup works, recursive only +norec (78)
I:dns64:checking partially-excluded AAAA and non-mapped A lookup works, recursive only +norec (79)
I:dns64:checking partially-excluded only AAAA and mapped A lookup works, recursive only +norec (80)
I:dns64:checking AAAA only lookup works, recursive only +norec (81)
I:dns64:checking A only lookup works, recursive only +norec (82)
I:dns64:checking A and AAAA lookup works, recursive only +norec (83)
I:dns64:checking non-mapped A lookup works, recursive only +norec (84)
I:dns64:checking NODATA AAAA lookup works, recursive only +norec (85)
I:dns64:checking non-existent AAAA lookup works, recursive only +norec (86)
I:dns64:checking non-excluded AAAA via CNAME lookup works, recursive only +norec (87)
I:dns64:checking excluded only AAAA via CNAME lookup works, recursive only +norec (88)
I:dns64:checking excluded AAAA and non-mapped A via CNAME lookup works, recursive only +norec (89)
I:dns64:checking excluded only AAAA and mapped A via CNAME lookup works, recursive only +norec (90)
I:dns64:checking AAAA only via CNAME lookup works, recursive only +norec (91)
I:dns64:checking A only via CNAME lookup works, recursive only +norec (92)
I:dns64:checking A and AAAA via CNAME lookup works, recursive only +norec (93)
I:dns64:checking non-mapped A via CNAME lookup works, recursive only +norec (94)
I:dns64:checking NODATA AAAA via CNAME lookup works, recursive only +norec (95)
I:dns64:checking non-existent AAAA via CNAME lookup works, recursive only +norec (96)
I:dns64:checking non-excluded AAAA from non-client lookup works (97)
I:dns64:checking excluded only AAAA from non-client lookup works (98)
I:dns64:checking excluded AAAA and non-mapped A from non-client lookup works (99)
I:dns64:checking excluded only AAAA and mapped A from non-client lookup works (100)
I:dns64:checking AAAA only from non-client lookup works (101)
I:dns64:checking A only from non-client lookup works (102)
I:dns64:checking A and AAAA from non-client lookup works (103)
I:dns64:checking non-mapped A from non-client lookup works (104)
I:dns64:checking NODATA AAAA from non-client lookup works (105)
I:dns64:checking non-existent AAAA from non-client lookup works (106)
I:dns64:checking non-excluded AAAA via CNAME from non-client lookup works (107)
I:dns64:checking excluded only AAAA via CNAME from non-client lookup works (108)
I:dns64:checking excluded AAAA and non-mapped A via CNAME from non-client lookup works (109)
I:dns64:checking excluded only AAAA and mapped A via CNAME from non-client lookup works (110)
I:dns64:checking AAAA only via CNAME from non-client lookup works (111)
I:dns64:checking A only via CNAME from non-client lookup works (112)
I:dns64:checking A and AAAA via CNAME from non-client lookup works (113)
I:dns64:checking non-mapped A via CNAME from non-client lookup works (114)
I:dns64:checking NODATA AAAA via CNAME from non-client lookup works (115)
I:dns64:checking non-existent AAAA via CNAME from non-client lookup works (116)
I:dns64:checking non-excluded AAAA lookup is signed zone works (117)
I:dns64:checking excluded only AAAA lookup is signed zone works (118)
I:dns64:checking excluded AAAA and non-mapped A lookup is signed zone works (119)
I:dns64:checking excluded only AAAA and mapped A lookup is signed zone works (120)
I:dns64:checking AAAA only lookup is signed zone works (121)
I:dns64:checking A only lookup is signed zone works (122)
I:dns64:checking A and AAAA lookup is signed zone works (123)
I:dns64:checking non-mapped A lookup is signed zone works (124)
I:dns64:checking NODATA AAAA lookup is signed zone works (125)
I:dns64:checking non-existent AAAA lookup is signed zone works (126)
I:dns64:checking non-excluded AAAA via CNAME lookup is signed zone works (127)
I:dns64:checking excluded only AAAA via CNAME lookup is signed zone works (128)
I:dns64:checking excluded AAAA and non-mapped A via CNAME lookup is signed zone works (129)
I:dns64:checking excluded only AAAA and mapped A via CNAME lookup is signed zone works (130)
I:dns64:checking AAAA only via CNAME lookup is signed zone works (131)
I:dns64:checking A only via CNAME lookup is signed zone works (132)
I:dns64:checking A and AAAA via CNAME lookup is signed zone works (133)
I:dns64:checking non-mapped A via CNAME lookup is signed zone works (134)
I:dns64:checking NODATA AAAA via CNAME lookup is signed zone works (135)
I:dns64:checking non-existent AAAA via CNAME lookup is signed zone works (136)
I:dns64:checking non-excluded AAAA lookup is signed zone works with +dnssec (137)
I:dns64:checking excluded only AAAA lookup is signed zone works with +dnssec (138)
I:dns64:checking excluded AAAA and non-mapped A lookup is signed zone works with +dnssec (139)
I:dns64:checking excluded only AAAA and mapped A lookup is signed zone works with +dnssec (140)
I:dns64:checking AAAA only lookup is signed zone works with +dnssec (141)
I:dns64:checking A only lookup is signed zone works with +dnssec (142)
I:dns64:checking A and AAAA lookup is signed zone works with +dnssec (143)
I:dns64:checking non-mapped A lookup is signed zone works with +dnssec (144)
I:dns64:checking NODATA AAAA lookup is signed zone works with +dnssec (145)
I:dns64:checking non-existent AAAA lookup is signed zone works with +dnssec (146)
I:dns64:checking non-excluded AAAA via CNAME lookup is signed zone works with +dnssec (147)
I:dns64:checking excluded only AAAA via CNAME lookup is signed zone works with +dnssec (148)
I:dns64:checking excluded AAAA and non-mapped A via CNAME lookup is signed zone works with +dnssec (149)
I:dns64:checking excluded only AAAA and mapped A via CNAME lookup is signed zone works with +dnssec (150)
I:dns64:checking AAAA only via CNAME lookup is signed zone works with +dnssec (151)
I:dns64:checking A only via CNAME lookup is signed zone works with +dnssec (152)
I:dns64:checking A and AAAA via CNAME lookup is signed zone works with +dnssec (153)
I:dns64:checking non-mapped A via CNAME lookup is signed zone works with +dnssec (154)
I:dns64:checking NODATA AAAA via CNAME lookup is signed zone works with +dnssec (155)
I:dns64:checking non-existent AAAA via CNAME lookup is signed zone works with +dnssec (156)
I:dns64:checking reverse mapping (157)
I:dns64:checking reverse mapping of 2001:32:102:305:: (158)
I:dns64:checking reverse mapping of 2001:40:1:203:5:: (159)
I:dns64:checking reverse mapping of 2001:48:0:102:3:500:: (160)
I:dns64:checking reverse mapping of 2001:56:0:1:2:305:: (161)
I:dns64:checking reverse mapping of 2001:64::1:203:500:0 (162)
I:dns64:checking 0.0.0.0.0.A.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.A.A.A.A.1.0.0.2.IP6.ARPA (163)
I:dns64:checking 0.0.0.0.A.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.A.A.A.A.1.0.0.2.IP6.ARPA (164)
I:dns64:checking 0.0.0.A.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.A.A.A.A.1.0.0.2.IP6.ARPA (165)
I:dns64:checking 0.0.A.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.A.A.A.A.1.0.0.2.IP6.ARPA (166)
I:dns64:checking 0.A.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.A.A.A.A.1.0.0.2.IP6.ARPA (167)
I:dns64:checking A.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.A.A.A.A.1.0.0.2.IP6.ARPA (168)
I:dns64:checking 0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.A.A.A.A.1.0.0.2.IP6.ARPA (169)
I:dns64:checking dns64-server and dns64-contact (170)
I:dns64:checking TTL less than 600 from zone (171)
I:dns64:checking TTL more than 600 from zone (172)
I:dns64:checking TTL less than minimum from zone (173)
I:dns64:checking TTL limited to minimum from zone (174)
I:dns64:checking TTL less than 600 via cache (175)
I:dns64:checking TTL more than 600 via cache (176)
I:dns64:checking TTL less than minimum via cache (177)
I:dns64:checking TTL limited to minimum via cache (178)
I:dns64:checking synthesis of AAAA from RPZ-remapped A (179)
I:dns64:exit status: 0
I:dns64:stopping servers
I:dns64:pytest not installed, skipping python tests
R:dns64:PASS
E:dns64:2022-02-23T15:26:20+0800
S:dscp:2022-02-23T15:26:20+0800
T:dscp:1:A
A:dscp:System test dscp
I:dscp:PORTRANGE:7400 - 7499
I:dscp:starting servers
I:dscp:testing root SOA lookup at 10.53.0.1
I:dscp:testing root SOA lookup at 10.53.0.2
I:dscp:testing root SOA lookup at 10.53.0.3
I:dscp:testing root SOA lookup at 10.53.0.4
I:dscp:testing root SOA lookup at 10.53.0.5
I:dscp:testing root SOA lookup at 10.53.0.6
I:dscp:testing root SOA lookup at 10.53.0.7
I:dscp:exit status: 0
I:dscp:stopping servers
I:dscp:pytest not installed, skipping python tests
R:dscp:PASS
E:dscp:2022-02-23T15:26:27+0800
S:dsdigest:2022-02-23T15:26:27+0800
T:dsdigest:1:A
A:dsdigest:System test dsdigest
I:dsdigest:PORTRANGE:7500 - 7599
I:dsdigest:starting servers
I:dsdigest:checking that validation with enabled digest types works
I:dsdigest:checking that validation with no supported digest types and must-be-secure results in SERVFAIL
I:dsdigest:checking that validation with no supported digest algorithms results in insecure
I:dsdigest:exit status: 0
I:dsdigest:stopping servers
I:dsdigest:pytest not installed, skipping python tests
R:dsdigest:PASS
E:dsdigest:2022-02-23T15:26:35+0800
S:dyndb:2022-02-23T15:26:35+0800
T:dyndb:1:A
A:dyndb:System test dyndb
I:dyndb:PORTRANGE:7600 - 7699
I:dyndb:starting servers
I:dyndb:adding test1.ipv4.example.nil. A 10.53.0.10 (1)
I:dyndb:adding test2.ipv4.example.nil. A 10.53.0.11 (2)
I:dyndb:adding test3.ipv4.example.nil. A 10.53.0.12 (3)
I:dyndb:adding test4.ipv6.example.nil. AAAA 2001:db8::1 (4)
I:dyndb:deleting test1.ipv4.example.nil. A (was 10.53.0.10) (5)
I:dyndb:deleting test2.ipv4.example.nil. A (was 10.53.0.11) (6)
I:dyndb:deleting test3.ipv4.example.nil. A (was 10.53.0.12) (7)
I:dyndb:deleting test4.ipv6.example.nil. AAAA (was 2001:db8::1) (8)
I:dyndb:checking parameter logging (9)
I:dyndb:checking dyndb still works after reload
I:dyndb:ns1 server reload successful
I:dyndb:adding test5.ipv4.example.nil. A 10.53.0.10 (10)
I:dyndb:adding test6.ipv6.example.nil. AAAA 2001:db8::1 (11)
I:dyndb:deleting test5.ipv4.example.nil. A (was 10.53.0.10) (12)
I:dyndb:deleting test6.ipv6.example.nil. AAAA (was 2001:db8::1) (13)
I:dyndb:exit status: 0
I:dyndb:stopping servers
I:dyndb:pytest not installed, skipping python tests
R:dyndb:PASS
E:dyndb:2022-02-23T15:26:41+0800
S:ednscompliance:2022-02-23T15:26:41+0800
T:ednscompliance:1:A
A:ednscompliance:System test ednscompliance
I:ednscompliance:PORTRANGE:7700 - 7799
I:ednscompliance:starting servers
I:ednscompliance:check +edns=100 sets version 100 (1)
I:ednscompliance:check +ednsopt=100 adds option 100 (2)
I:ednscompliance:check +ednsflags=0x80 sets flags to 0x0080 (3)
I:ednscompliance:Unknown EDNS version (4)
I:ednscompliance:Unknown EDNS option (5)
I:ednscompliance:Unknown EDNS version + option (6)
I:ednscompliance:Unknown EDNS flag (7)
I:ednscompliance:Unknown EDNS version + flag (8)
I:ednscompliance:DiG's EDNS negotiation (9)
I:ednscompliance:exit status: 0
I:ednscompliance:stopping servers
I:ednscompliance:pytest not installed, skipping python tests
R:ednscompliance:PASS
E:ednscompliance:2022-02-23T15:26:43+0800
S:emptyzones:2022-02-23T15:26:43+0800
T:emptyzones:1:A
A:emptyzones:System test emptyzones
I:emptyzones:PORTRANGE:7800 - 7899
I:emptyzones:starting servers
I:emptyzones:check that switching to automatic empty zones works (1)
I:emptyzones:ns1 server reload successful
I:emptyzones:check that allow-transfer { none; } works (2)
I:emptyzones:exit status: 0
I:emptyzones:stopping servers
I:emptyzones:pytest not installed, skipping python tests
R:emptyzones:PASS
E:emptyzones:2022-02-23T15:26:52+0800
S:fetchlimit:2022-02-23T15:26:52+0800
T:fetchlimit:1:A
A:fetchlimit:System test fetchlimit
I:fetchlimit:PORTRANGE:7900 - 7999
I:fetchlimit:This test requires the Net::DNS library.
I:fetchlimit:Prerequisites missing, skipping test.
R:fetchlimit:SKIPPED
E:fetchlimit:2022-02-23T15:26:52+0800
S:filter-aaaa:2022-02-23T15:26:52+0800
T:filter-aaaa:1:A
A:filter-aaaa:System test filter-aaaa
I:filter-aaaa:PORTRANGE:8000 - 8099
I:filter-aaaa:Generating key pair.
I:filter-aaaa:Generating key pair.
I:filter-aaaa:signed zone 'signed.'
I:filter-aaaa:Generating key pair.
I:filter-aaaa:Generating key pair.
I:filter-aaaa:signed zone 'signed.'
I:filter-aaaa:starting servers
I:filter-aaaa:checking that conf/good1.conf is accepted (1)
I:filter-aaaa:checking that conf/good2.conf is accepted (2)
I:filter-aaaa:checking that conf/good3.conf is accepted (3)
I:filter-aaaa:checking that conf/good4.conf is accepted (4)
I:filter-aaaa:checking that conf/good5.conf is accepted (5)
I:filter-aaaa:checking that conf/bad1.conf is rejected (6)
I:filter-aaaa:checking that conf/bad2.conf is rejected (7)
I:filter-aaaa:checking that conf/bad3.conf is rejected (8)
I:filter-aaaa:checking that conf/bad4.conf is rejected (9)
I:filter-aaaa:checking that conf/bad5.conf is rejected (10)
I:filter-aaaa:checking that AAAA is returned when only AAAA record exists, signed (11)
I:filter-aaaa:checking that AAAA is returned when only AAAA record exists, unsigned (12)
I:filter-aaaa:checking that NODATA/NOERROR is returned when both AAAA and A records exist, signed (13)
I:filter-aaaa:checking that NODATA/NOERROR is returned when both AAAA and A records exist, unsigned (14)
I:filter-aaaa:checking that AAAA is returned when both AAAA and A records exist, signed and DO set (15)
I:filter-aaaa:checking that NODATA/NOERROR is returned when both AAAA and A records exist, unsigned and DO set (16)
I:filter-aaaa:checking that AAAA is returned when both AAAA and A records exist and query source does not match acl (17)
I:filter-aaaa:checking that A and not AAAA is returned when both AAAA and A records exist, signed and qtype=ANY (18)
I:filter-aaaa:checking that A and not AAAA is returned when both AAAA and A records exist, unsigned and qtype=ANY (19)
I:filter-aaaa:checking that both A and AAAA are returned when both AAAA and A records exist, signed, qtype=ANY and DO is set (20)
I:filter-aaaa:checking that A and not AAAA is returned when both AAAA and A records exist, unsigned, qtype=ANY and DO is set (21)
I:filter-aaaa:checking that both A and AAAA are returned when both AAAA and A records exist, qtype=ANY and query source does not match acl (22)
I:filter-aaaa:checking that AAAA is returned when both AAAA and A record exists, unsigned over IPv6 (23)
I:filter-aaaa:skipped.
I:filter-aaaa:checking that AAAA is omitted from additional section, qtype=NS (24)
I:filter-aaaa:checking that AAAA is omitted from additional section, qtype=MX, unsigned (25)
I:filter-aaaa:checking that AAAA is included in additional section, qtype=MX, signed (26)
I:filter-aaaa:checking that AAAA is included in additional section, qtype=MX, unsigned, over IPv6 (27)
I:filter-aaaa:skipped.
I:filter-aaaa:checking that AAAA is returned when only AAAA record exists, signed with break-dnssec (28)
I:filter-aaaa:checking that AAAA is returned when only AAAA record exists, unsigned with break-dnssec (29)
I:filter-aaaa:checking that NODATA/NOERROR is returned when both AAAA and A records exist, signed with break-dnssec (30)
I:filter-aaaa:checking that NODATA/NOERROR is returned when both AAAA and A records exist, unsigned with break-dnssec (31)
I:filter-aaaa:checking that NODATA/NOERROR is returned when both AAAA and A records exist, signed and DO set with break-dnssec (32)
I:filter-aaaa:checking that NODATA/NOERROR is returned when both AAAA and A records exist, unsigned and DO set with break-dnssec (33)
I:filter-aaaa:checking that AAAA is returned when both AAAA and A records exist and query source does not match acl with break-dnssec (34)
I:filter-aaaa:checking that A and not AAAA is returned when both AAAA and A records exist, signed and qtype=ANY with break-dnssec (35)
I:filter-aaaa:checking that A and not AAAA is returned when both AAAA and A records exist, unsigned and qtype=ANY with break-dnssec (36)
I:filter-aaaa:checking that A and not AAAA is returned when both AAAA and A records exist, signed, qtype=ANY and DO is set with break-dnssec (37)
I:filter-aaaa:checking that A and not AAAA is returned when both AAAA and A records exist, unsigned, qtype=ANY and DO is set with break-dnssec (38)
I:filter-aaaa:checking that both A and AAAA are returned when both AAAA and A records exist, qtype=ANY and query source does not match acl with break-dnssec (39)
I:filter-aaaa:checking that AAAA is returned when both AAAA and A record exists, unsigned over IPv6 with break-dnssec (40)
I:filter-aaaa:skipped.
I:filter-aaaa:checking that AAAA is omitted from additional section, qtype=NS, with break-dnssec (41)
I:filter-aaaa:checking that AAAA is omitted from additional section, qtype=MX, unsigned, with break-dnssec (42)
I:filter-aaaa:checking that AAAA is omitted from additional section, qtype=MX, signed, with break-dnssec (43)
I:filter-aaaa:checking that AAAA is included in additional section, qtype=MX, unsigned, over IPv6, with break-dnssec (44)
I:filter-aaaa:skipped.
I:filter-aaaa:checking that AAAA is returned when only AAAA record exists, signed, recursive (45)
I:filter-aaaa:checking that AAAA is returned when only AAAA record exists, unsigned, recursive (46)
I:filter-aaaa:checking that NODATA/NOERROR is returned when both AAAA and A records exist, signed, recursive (47)
I:filter-aaaa:checking that NODATA/NOERROR is returned when both AAAA and A records exist, unsigned, recursive (48)
I:filter-aaaa:checking that AAAA is returned when both AAAA and A records exist, signed and DO set, recursive (49)
I:filter-aaaa:checking that NODATA/NOERROR is returned when both AAAA and A records exist, unsigned and DO set, recursive (50)
I:filter-aaaa:checking that AAAA is returned when both AAAA and A records exist and query source does not match acl, recursive (51)
I:filter-aaaa:checking that A and not AAAA is returned when both AAAA and A records exist, signed and qtype=ANY recursive (52)
I:filter-aaaa:checking that A and not AAAA is returned when both AAAA and A records exist, unsigned and qtype=ANY recursive (53)
I:filter-aaaa:checking that both A and AAAA are returned when both AAAA and A records exist, signed, qtype=ANY and DO is set, recursive (54)
I:filter-aaaa:checking that A and not AAAA is returned when both AAAA and A records exist, unsigned, qtype=ANY and DO is set, recursive (55)
I:filter-aaaa:checking that both A and AAAA are returned when both AAAA and A records exist, qtype=ANY and query source does not match acl, recursive (56)
I:filter-aaaa:checking that AAAA is returned when both AAAA and A record exists, unsigned over IPv6, recursive (57)
I:filter-aaaa:skipped.
I:filter-aaaa:checking that AAAA is omitted from additional section, qtype=NS (58)
I:filter-aaaa:checking that AAAA is omitted from additional section, qtype=MX, unsigned, recursive (59)
I:filter-aaaa:checking that AAAA is included in additional section, qtype=MX, signed, recursive (60)
I:filter-aaaa:checking that AAAA is included in additional section, qtype=MX, unsigned, recursive, over IPv6 (61)
I:filter-aaaa:skipped.
I:filter-aaaa:checking that AAAA is returned when only AAAA record exists, signed, recursive with break-dnssec (62)
I:filter-aaaa:checking that AAAA is returned when only AAAA record exists, unsigned, recursive with break-dnssec (63)
I:filter-aaaa:checking that NODATA/NOERROR is returned when both AAAA and A records exist, signed, recursive with break-dnssec (64)
I:filter-aaaa:checking that NODATA/NOERROR is returned when both AAAA and A records exist, unsigned, recursive with break-dnssec (65)
I:filter-aaaa:checking that NODATA/NOERROR is returned when both AAAA and A records exist, signed and DO set, recursive with break-dnssec (66)
I:filter-aaaa:checking that NODATA/NOERROR is returned when both AAAA and A records exist, unsigned and DO set, recursive with break-dnssec (67)
I:filter-aaaa:checking that AAAA is returned when both AAAA and A records exist and query source does not match acl, recursive with break-dnssec (68)
I:filter-aaaa:checking that A and not AAAA is returned when both AAAA and A records exist, signed and qtype=ANY with break-dnssec (69)
I:filter-aaaa:checking that A and not AAAA is returned when both AAAA and A records exist, unsigned and qtype=ANY with break-dnssec (70)
I:filter-aaaa:checking that A and not AAAA is returned when both AAAA and A records exist, signed, qtype=ANY and DO is set with break-dnssec (71)
I:filter-aaaa:checking that A and not AAAA is returned when both AAAA and A records exist, unsigned, qtype=ANY and DO is set with break-dnssec (72)
I:filter-aaaa:checking that both A and AAAA are returned when both AAAA and A records exist, qtype=ANY and query source does not match acl, recursive with break-dnssec (73)
I:filter-aaaa:checking that AAAA is returned when both AAAA and A record exists, unsigned over IPv6, recursive with break-dnssec (74)
I:filter-aaaa:skipped.
I:filter-aaaa:checking that AAAA is omitted from additional section, qtype=NS, recursive with break-dnssec (75)
I:filter-aaaa:checking that AAAA is omitted from additional section, qtype=MX, unsigned, recursive with break-dnssec (76)
I:filter-aaaa:checking that AAAA is omitted from additional section, qtype=MX, signed, recursive with break-dnssec (77)
I:filter-aaaa:checking that AAAA is included in additional section, qtype=MX, unsigned, over IPv6, recursive with break-dnssec (78)
I:filter-aaaa:skipped.
I:filter-aaaa:IPv6 address not configured; skipping IPv6 query tests
I:filter-aaaa:exit status: 0
I:filter-aaaa:stopping servers
I:filter-aaaa:pytest not installed, skipping python tests
R:filter-aaaa:PASS
E:filter-aaaa:2022-02-23T15:27:05+0800
S:formerr:2022-02-23T15:27:05+0800
T:formerr:1:A
A:formerr:System test formerr
I:formerr:PORTRANGE:8100 - 8199
I:formerr:starting servers
I:formerr:test name too long
I:formerr:two questions
I:formerr:empty question section (and no COOKIE option)
I:formerr:exit status: 0
I:formerr:stopping servers
I:formerr:pytest not installed, skipping python tests
R:formerr:PASS
E:formerr:2022-02-23T15:27:07+0800
S:forward:2022-02-23T15:27:07+0800
T:forward:1:A
A:forward:System test forward
I:forward:PORTRANGE:8200 - 8299
I:forward:This test requires the Net::DNS library.
I:forward:Prerequisites missing, skipping test.
R:forward:SKIPPED
E:forward:2022-02-23T15:27:07+0800
S:geoip2:2022-02-23T15:27:07+0800
T:geoip2:1:A
A:geoip2:System test geoip2
I:geoip2:PORTRANGE:8300 - 8399
I:geoip2:This test requires GeoIP support.
I:geoip2:Prerequisites missing, skipping test.
R:geoip2:SKIPPED
E:geoip2:2022-02-23T15:27:07+0800
S:glue:2022-02-23T15:27:07+0800
T:glue:1:A
A:glue:System test glue
I:glue:PORTRANGE:8400 - 8499
I:glue:starting servers
I:glue:testing that a ccTLD referral gets a full glue set from the root zone
I:glue:testing that we don't find out-of-zone glue
I:glue:exit status: 0
I:glue:stopping servers
I:glue:pytest not installed, skipping python tests
R:glue:PASS
E:glue:2022-02-23T15:27:10+0800
S:idna:2022-02-23T15:27:10+0800
T:idna:1:A
A:idna:System test idna
I:idna:PORTRANGE:8500 - 8599
I:idna:starting servers
I:idna:IDNA is disabled, only case mapping tests will be performed
I:idna:Checking valid ASCII label (1)
I:idna:Checking valid ASCII label: +noidnin +noidnout (2)
I:idna:Checking valid ASCII label: +noidnin +idnout (3)
I:idna:Checking valid ASCII label: +idnin   +noidnout (4)
I:idna:Checking valid ASCII label: +idnin   +idnout (5)
I:idna:stopping servers
I:idna:pytest not installed, skipping python tests
R:idna:PASS
E:idna:2022-02-23T15:27:13+0800
S:inline:2022-02-23T15:27:13+0800
T:inline:1:A
A:inline:System test inline
I:inline:PORTRANGE:8600 - 8699
I:inline:starting servers
I:inline:checking that an unsupported algorithm is not used for signing (1)
I:inline:checking that rrsigs are replaced with ksk only (2)
I:inline:checking that the zone is signed on initial transfer (3)
I:inline:checking expired signatures are updated on load (4)
I:inline:checking removal of private type record via 'rndc signing -clear' (5)
I:inline:checking private type was properly signed (6)
I:inline:checking removal of remaining private type record via 'rndc signing -clear all' (7)
I:inline:checking negative private type response was properly signed (8)
I:inline:checking that the record is added on the hidden primary (9)
I:inline:checking that update has been transferred and has been signed (10)
I:inline:checking YYYYMMDDVV (2011072400) serial on hidden primary (11)
I:inline:checking YYYYMMDDVV (2011072400) serial in signed zone (12)
I:inline:checking that the zone is signed on initial transfer, noixfr (13)
I:inline:checking that the record is added on the hidden primary, noixfr (14)
I:inline:checking that update has been transferred and has been signed, noixfr (15)
I:inline:checking YYYYMMDDVV (2011072400) serial on hidden primary, noixfr (16)
I:inline:checking YYYYMMDDVV (2011072400) serial in signed zone, noixfr (17)
I:inline:checking that the primary zone signed on initial load (18)
I:inline:checking removal of private type record via 'rndc signing -clear' (primary) (19)
I:inline:checking private type was properly signed (primary) (20)
I:inline:checking removal of remaining private type record via 'rndc signing -clear' (primary) (21)
I:inline:check adding of record to unsigned primary (22)
I:inline:ns3 zone reload queued
I:inline:check adding record fails when SOA serial not changed (23)
I:inline:ns3 server reload successful
I:inline:check adding record works after updating SOA serial (24)
I:inline:ns3 zone reload queued
I:inline:check the added record was properly signed (25)
I:inline:checking that the dynamic primary zone signed on initial load (26)
I:inline:checking primary zone that was updated while offline is correct (27)
I:inline:checking adding of record to unsigned primary using UPDATE (28)
I:inline:stop bump in the wire signer server (29)
I:inline:restart bump in the wire signer server (30)
I:inline:checking YYYYMMDDVV (2011072450) serial on hidden primary (31)
I:inline:checking YYYYMMDDVV (2011072450) serial in signed zone (32)
I:inline:checking YYYYMMDDVV (2011072450) serial on hidden primary, noixfr (33)
I:inline:checking YYYYMMDDVV (2011072450) serial in signed zone, noixfr (34)
I:inline:checking forwarded update on hidden primary (35)
I:inline:checking forwarded update on signed zone (36)
I:inline:checking forwarded update on hidden primary, noixfr (37)
I:inline:checking forwarded update on signed zone, noixfr (38)
I:inline:checking turning on of inline signing in a secondary zone via reload (39)
I:inline:ns5 server reload successful
I:inline:checking rndc freeze/thaw of dynamic inline zone no change (40)
I:inline:checking rndc freeze/thaw of dynamic inline zone (41)
I:inline:check added record freeze1.dynamic (42)
I:inline:checking rndc freeze/thaw of server (43)
I:inline:check added record freeze2.dynamic (44)
I:inline:check rndc reload allows reuse of inline-signing zones (45)
I:inline:ns3 server reload successful
I:inline:check rndc sync removes both signed and unsigned journals (46)
I:inline:checking that the retransfer record is added on the hidden primary (47)
I:inline:checking that the change has not been transferred due to notify (48)
I:inline:check rndc retransfer of a inline secondary zone works (49)
I:inline:check 'rndc signing -nsec3param' requests are queued for zones which are not loaded (50)
I:inline:check rndc retransfer of a inline nsec3 secondary retains nsec3 (51)
I:inline:check rndc retransfer of a inline nsec3 secondary does not trigger an infinite loop (52)
I:inline:stop bump in the wire signer server (53)
I:inline:update SOA record while stopped
I:inline:restart bump in the wire signer server (54)
I:inline:updates to SOA parameters other than serial while stopped are reflected in signed zone (55)
I:inline:check that reloading all zones does not cause zone maintenance to cease for inline-signed zones (56)
I:inline:ns3 server reload successful
I:inline:check that reloading errors prevent synchronization (57)
I:inline:ns3 server reload successful
I:inline:check inline-signing with an include file (58)
I:inline:ns3 server reload successful
I:inline:test add/del zone combinations (59)
I:inline:testing adding external keys to a inline zone (60)
I:inline:checking NSEC3RSASHA1
I:inline:testing imported key won't overwrite a private key (61)
I:inline:testing updating inline secure serial via 'rndc signing -serial' (62)
I:inline:testing updating inline secure serial via 'rndc signing -serial' with negative change (63)
I:inline:testing updating inline secure serial via 'rndc signing -serial' when frozen (64)
I:inline:testing updating dynamic serial via 'rndc signing -serial' (65)
I:inline:testing updating dynamic serial via 'rndc signing -serial' with negative change (66)
I:inline:testing updating dynamic serial via 'rndc signing -serial' when frozen (67)
I:inline:testing that inline signing works with inactive ZSK and active KSK (68)
I:inline:testing that inline signing works with inactive KSK and active ZSK (69)
I:inline:checking that changes to raw zone are applied to a previously unsigned secure zone (70)
I:inline:checking that changes to raw zone are not applied to a previously signed secure zone with no keys available (primary) (71)
I:inline:checking that backlogged changes to raw zone are applied after keys become available (primary) (72)
I:inline:checking that changes to raw zone are not applied to a previously signed secure zone with no keys available (secondary) (73)
I:inline:checking that backlogged changes to raw zone are applied after keys become available (secondary) (74)
I:inline:checking that records added from a journal are scheduled to be resigned (75)
I:inline:check that zonestatus reports 'type: primary' for an inline primary zone (76)
I:inline:check that zonestatus reports 'type: secondary' for an inline secondary zone (77)
I:inline:checking reload of touched inline zones (78)
I:inline:  pre-reload 'next key event'
I:inline:  found: 16/16
I:inline:  touch and reload
I:inline:ns3 server reload successful
I:inline:  post-reload 'next key event'
I:inline:  found: 16/16
I:inline:checking second reload of touched inline zones (79)
I:inline:ns3 server reload successful
I:inline:Check that 'rndc reload' of just the serial updates the signed instance (80)
server reload successful
I:inline:Check that restart with zone changes and deleted journal works (81)
I:inline:exit status: 0
I:inline:stopping servers
I:inline:pytest not installed, skipping python tests
R:inline:PASS
E:inline:2022-02-23T15:29:00+0800
S:integrity:2022-02-23T15:29:00+0800
T:integrity:1:A
A:integrity:System test integrity
I:integrity:PORTRANGE:8700 - 8799
I:integrity:starting servers
I:integrity:check that 'check-integrity yes; check-mx-cname fail;' works (1)
I:integrity:check that 'check-integrity yes; check-mx-cname warn;' works (2)
I:integrity:check that 'check-integrity yes; check-mx-cname ignore;' works (3)
I:integrity:check that 'check-integrity no; check-mx-cname fail;' works (4)
I:integrity:check that 'check-integrity no; check-mx-cname warn;' works (5)
I:integrity:check that 'check-integrity no; check-mx-cname ignore;' works (6)
I:integrity:check that 'check-integrity yes; check-srv-cname fail;' works (7)
I:integrity:check that 'check-integrity yes; check-srv-cname warn;' works (8)
I:integrity:check that 'check-integrity yes; check-srv-cname ignore;' works (9)
I:integrity:check that 'check-integrity no; check-srv-cname fail;' works (10)
I:integrity:check that 'check-integrity no; check-srv-cname warn;' works (11)
I:integrity:check that 'check-integrity no; check-srv-cname ignore;' works (12)
I:integrity:exit status: 0
I:integrity:stopping servers
I:integrity:pytest not installed, skipping python tests
R:integrity:PASS
E:integrity:2022-02-23T15:29:02+0800
S:ixfr:2022-02-23T15:29:02+0800
T:ixfr:1:A
A:ixfr:System test ixfr
I:ixfr:PORTRANGE:8800 - 8899
I:ixfr:This test requires the Net::DNS library.
I:ixfr:Prerequisites missing, skipping test.
R:ixfr:SKIPPED
E:ixfr:2022-02-23T15:29:02+0800
S:journal:2022-02-23T15:29:02+0800
T:journal:1:A
A:journal:System test journal
I:journal:PORTRANGE:8900 - 8999
I:journal:starting servers
I:journal:check outdated journal rolled forward (dynamic) (1)
I:journal:check outdated empty journal did not cause an error (dynamic) (2)
I:journal:check outdated journals were updated or removed (dynamic) (3)
I:journal:check updated journal has correct RR count (dynamic) (4)
I:journal:check new-format journal rolled forward (dynamic) (5)
I:journal:check new-format empty journal did not cause error (dynamic) (6)
I:journal:check new-format journals were updated or removed (dynamic) (7)
I:journal:check outdated up-to-date journal succeeded (ixfr-from-differences) (8)
I:journal:check outdated journal was updated (ixfr-from-differences) (9)
I:journal:check journal with mixed headers succeeded (version 1,2,1,2) (10)
I:journal:check journal with mixed headers was updated (version 1,2,1,2) (11)
I:journal:check journal with mixed headers succeeded (version 2,1,2,1) (12)
I:journal:check journal with mixed headers was updated (version 2,1,2,1) (13)
I:journal:check there are no journals left un-updated (14)
I:journal:Check that journal with mixed headers can be compacted (version 1,2,1,2) (15)
I:journal:Check that journal with mixed headers can be compacted (version 2,1,2,1) (16)
I:journal:check upgrade of managed-keys.bind.jnl succeeded(17)
I:journal:check journal downgrade/upgrade (18)
I:journal:check max-journal-size works after journal update (19)
I:journal:check max-journal-size works with non-updated journals (20)
I:journal:check journal index consistency (21)
I:journal:check that journal is applied to zone with keydata placeholder record
I:journal:exit status: 0
I:journal:stopping servers
I:journal:pytest not installed, skipping python tests
R:journal:PASS
E:journal:2022-02-23T15:29:08+0800
S:kasp:2022-02-23T15:29:08+0800
T:kasp:1:A
A:kasp:System test kasp
I:kasp:PORTRANGE:9000 - 9099
I:ns2:ns2/setup.sh
I:ns2:setting up zone: secondary.kasp
I:ns2:setting up zone: signed.tld
I:ns2:setting up zone: unsigned.tld
I:ns3:ns3/setup.sh
I:ns3:setting up zone: default.kasp
I:ns3:setting up zone: rsasha1.kasp
I:ns3:setting up zone: dnssec-keygen.kasp
I:ns3:setting up zone: some-keys.kasp
I:ns3:setting up zone: legacy-keys.kasp
I:ns3:setting up zone: pregenerated.kasp
I:ns3:setting up zone: rumoured.kasp
I:ns3:setting up zone: rsasha1-nsec3.kasp
I:ns3:setting up zone: rsasha256.kasp
I:ns3:setting up zone: rsasha512.kasp
I:ns3:setting up zone: ecdsa256.kasp
I:ns3:setting up zone: ecdsa384.kasp
I:ns3:setting up zone: dynamic.kasp
I:ns3:setting up zone: dynamic-inline-signing.kasp
I:ns3:setting up zone: inline-signing.kasp
I:ns3:setting up zone: checkds-ksk.kasp
I:ns3:setting up zone: checkds-doubleksk.kasp
I:ns3:setting up zone: checkds-csk.kasp
I:ns3:setting up zone: inherit.kasp
I:ns3:setting up zone: unlimited.kasp
I:ns3:setting up zone: manual-rollover.kasp
I:ns3:setting up zone: multisigner-model2.kasp
I:ns3:setting up zone: ed25519.kasp
I:ns3:setting up zone: ed448.kasp
I:ns3:setting up zone: unsigned.kasp
I:ns3:setting up zone: insecure.kasp
I:ns3:setting up zone: manual-rollover.kasp
I:ns3:setting up zone: expired-sigs.autosign
I:ns3:setting up zone: fresh-sigs.autosign
I:ns3:setting up zone: unfresh-sigs.autosign
I:ns3:setting up zone: ksk-missing.autosign
I:ns3:setting up zone: zsk-missing.autosign
I:ns3:setting up zone: zsk-retired.autosign
I:ns3:setting up zone: step1.enable-dnssec.autosign
I:ns3:setting up zone: step2.enable-dnssec.autosign
I:ns3:setting up zone: step3.enable-dnssec.autosign
I:ns3:setting up zone: step4.enable-dnssec.autosign
I:ns3:setting up zone: step4.enable-dnssec.autosign
I:ns3:setting up zone: step1.zsk-prepub.autosign
I:ns3:setting up zone: step2.zsk-prepub.autosign
I:ns3:setting up zone: step3.zsk-prepub.autosign
I:ns3:setting up zone: step4.zsk-prepub.autosign
I:ns3:setting up zone: step5.zsk-prepub.autosign
I:ns3:setting up zone: step6.zsk-prepub.autosign
I:ns3:setting up zone: step1.ksk-doubleksk.autosign
I:ns3:setting up zone: step2.ksk-doubleksk.autosign
I:ns3:setting up zone: step3.ksk-doubleksk.autosign
I:ns3:setting up zone: step4.ksk-doubleksk.autosign
I:ns3:setting up zone: step5.ksk-doubleksk.autosign
I:ns3:setting up zone: step6.ksk-doubleksk.autosign
I:ns3:setting up zone: step1.csk-roll.autosign
I:ns3:setting up zone: step2.csk-roll.autosign
I:ns3:setting up zone: step3.csk-roll.autosign
I:ns3:setting up zone: step4.csk-roll.autosign
I:ns3:setting up zone: step5.csk-roll.autosign
I:ns3:setting up zone: step6.csk-roll.autosign
I:ns3:setting up zone: step7.csk-roll.autosign
I:ns3:setting up zone: step8.csk-roll.autosign
I:ns3:setting up zone: step1.csk-roll2.autosign
I:ns3:setting up zone: step2.csk-roll2.autosign
I:ns3:setting up zone: step3.csk-roll2.autosign
I:ns3:setting up zone: step4.csk-roll2.autosign
I:ns3:setting up zone: step5.csk-roll2.autosign
I:ns3:setting up zone: step6.csk-roll2.autosign
I:ns3:setting up zone: step7.csk-roll2.autosign
I:ns4:ns4/setup.sh
I:ns4:setting up zone: inherit.inherit.signed
I:ns4:setting up zone: override.inherit.signed
I:ns4:setting up zone: none.inherit.signed
I:ns4:setting up zone: inherit.override.signed
I:ns4:setting up zone: override.override.signed
I:ns4:setting up zone: none.override.signed
I:ns4:setting up zone: inherit.none.signed
I:ns4:setting up zone: override.none.signed
I:ns4:setting up zone: none.none.signed
I:ns5:ns5/setup.sh
I:ns5:setting up zone: inherit.inherit.unsigned
I:ns5:setting up zone: override.inherit.unsigned
I:ns5:setting up zone: none.inherit.unsigned
I:ns5:setting up zone: inherit.override.unsigned
I:ns5:setting up zone: override.override.unsigned
I:ns5:setting up zone: none.override.unsigned
I:ns5:setting up zone: inherit.none.unsigned
I:ns5:setting up zone: override.none.unsigned
I:ns5:setting up zone: none.none.unsigned
I:ns6:ns6/setup.sh
I:ns6:setting up zone: step1.going-insecure.kasp
I:ns6:setting up zone: step2.going-insecure.kasp
I:ns6:setting up zone: step1.going-insecure-dynamic.kasp
I:ns6:setting up zone: step2.going-insecure-dynamic.kasp
I:ns6:setting up zone: step1.going-straight-to-none.kasp
I:ns6:setting up zone: step1.algorithm-roll.kasp
I:ns6:setting up zone: step2.algorithm-roll.kasp
I:ns6:setting up zone: step3.algorithm-roll.kasp
I:ns6:setting up zone: step4.algorithm-roll.kasp
I:ns6:setting up zone: step5.algorithm-roll.kasp
I:ns6:setting up zone: step6.algorithm-roll.kasp
I:ns6:setting up zone: step1.csk-algorithm-roll.kasp
I:ns6:setting up zone: step2.csk-algorithm-roll.kasp
I:ns6:setting up zone: step3.csk-algorithm-roll.kasp
I:ns6:setting up zone: step4.csk-algorithm-roll.kasp
I:ns6:setting up zone: step5.csk-algorithm-roll.kasp
I:ns6:setting up zone: step6.csk-algorithm-roll.kasp
I:kasp:starting servers
I:kasp:check that 'dnssec-keygen -k' (configured policy) creates valid files (1)
I:kasp:check that 'dnssec-keygen -k' (default policy) creates valid files (2)
I:kasp:check key file ./Kkasp.+013+36682
I:kasp:check key timing metadata for key KEY1 id 36682 zone kasp (3)
I:kasp:check that 'dnssec-settime' by default does not edit key state file (4)
I:kasp:check that 'dnssec-settime -s' also sets publish time metadata and states in key state file (5)
I:kasp:check key file ./Kkasp.+013+36682
I:kasp:check key timing metadata for key KEY1 id 36682 zone kasp (6)
I:kasp:check that 'dnssec-settime -s' also unsets publish time metadata and states in key state file (7)
I:kasp:check key file ./Kkasp.+013+36682
I:kasp:check key timing metadata for key KEY1 id 36682 zone kasp (8)
I:kasp:check that 'dnssec-settime -s' also sets active time metadata and states in key state file (uppercase) (9)
I:kasp:check key file ./Kkasp.+013+36682
I:kasp:check key timing metadata for key KEY1 id 36682 zone kasp (10)
I:kasp:waiting for kasp signing changes to take effect (11)
I:kasp:check keys are created for zone default.kasp (12)
I:kasp:check number of keys for zone default.kasp in dir ns3 (12)
I:kasp:check key id 27451
I:kasp:KEY1 ID 27451
I:kasp:check rndc dnssec -status output for default.kasp (policy: default) (13)
I:kasp:check key timing metadata for key KEY1 id 27451 zone default.kasp (14)
I:kasp:check DNSKEY rrset is signed correctly for zone default.kasp (15)
I:kasp:check SOA rrset is signed correctly for zone default.kasp (16)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone default.kasp (17)
I:kasp:check A a.default.kasp rrset is signed correctly for zone default.kasp (18)
I:kasp:dnssec-verify zone default.kasp (19)
I:kasp:modify unsigned zone file and check that new record is signed for zone default.kasp (20)
I:kasp:test that if private key files are inaccessible this doesn't trigger a rollover (20)
I:kasp:check keys are created for zone default.kasp (21)
I:kasp:check number of keys for zone default.kasp in dir ns3 (21)
I:kasp:check key id 27451
I:kasp:KEY1 ID 27451
I:kasp:check rndc dnssec -status output for default.kasp (policy: default) (22)
I:kasp:check key timing metadata for key KEY1 id 27451 zone default.kasp (23)
I:kasp:check DNSKEY rrset is signed correctly for zone default.kasp (24)
I:kasp:check SOA rrset is signed correctly for zone default.kasp (25)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone default.kasp (26)
I:kasp:check A a.default.kasp rrset is signed correctly for zone default.kasp (27)
I:kasp:dnssec-verify zone default.kasp (28)
I:kasp:check keys are created for zone dynamic.kasp (29)
I:kasp:check number of keys for zone dynamic.kasp in dir ns3 (29)
I:kasp:check key id 64663
I:kasp:KEY1 ID 64663
I:kasp:check rndc dnssec -status output for dynamic.kasp (policy: default) (30)
I:kasp:check key timing metadata for key KEY1 id 64663 zone dynamic.kasp (31)
I:kasp:check DNSKEY rrset is signed correctly for zone dynamic.kasp (32)
I:kasp:check SOA rrset is signed correctly for zone dynamic.kasp (33)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone dynamic.kasp (34)
I:kasp:check A a.dynamic.kasp rrset is signed correctly for zone dynamic.kasp (35)
I:kasp:dnssec-verify zone dynamic.kasp (36)
I:kasp:nsupdate zone and check that new record is signed for zone dynamic.kasp (37)
I:kasp:nsupdate zone and check that new record is signed for zone dynamic.kasp (38)
I:kasp:modify zone file and check that new record is signed for zone dynamic.kasp (39)
I:kasp:check keys are created for zone dynamic-inline-signing.kasp (40)
I:kasp:check number of keys for zone dynamic-inline-signing.kasp in dir ns3 (40)
I:kasp:check key id 31672
I:kasp:KEY1 ID 31672
I:kasp:check rndc dnssec -status output for dynamic-inline-signing.kasp (policy: default) (41)
I:kasp:check key timing metadata for key KEY1 id 31672 zone dynamic-inline-signing.kasp (42)
I:kasp:check DNSKEY rrset is signed correctly for zone dynamic-inline-signing.kasp (43)
I:kasp:check SOA rrset is signed correctly for zone dynamic-inline-signing.kasp (44)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone dynamic-inline-signing.kasp (45)
I:kasp:check A a.dynamic-inline-signing.kasp rrset is signed correctly for zone dynamic-inline-signing.kasp (46)
I:kasp:dnssec-verify zone dynamic-inline-signing.kasp (47)
I:kasp:modify unsigned zone file and check that new record is signed for zone dynamic-inline-signing.kasp (48)
I:kasp:check keys are created for zone inline-signing.kasp (49)
I:kasp:check number of keys for zone inline-signing.kasp in dir ns3 (49)
I:kasp:check key id 61631
I:kasp:KEY1 ID 61631
I:kasp:check rndc dnssec -status output for inline-signing.kasp (policy: default) (50)
I:kasp:check key timing metadata for key KEY1 id 61631 zone inline-signing.kasp (51)
I:kasp:check DNSKEY rrset is signed correctly for zone inline-signing.kasp (52)
I:kasp:check SOA rrset is signed correctly for zone inline-signing.kasp (53)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone inline-signing.kasp (54)
I:kasp:check A a.inline-signing.kasp rrset is signed correctly for zone inline-signing.kasp (55)
I:kasp:dnssec-verify zone inline-signing.kasp (56)
I:kasp:check keys are created for zone checkds-ksk.kasp (57)
I:kasp:check number of keys for zone checkds-ksk.kasp in dir ns3 (57)
I:kasp:check key id 46873
I:kasp:check key id 50973
I:kasp:KEY1 ID 46873
I:kasp:KEY2 ID 50973
I:kasp:check rndc dnssec -status output for checkds-ksk.kasp (policy: checkds-ksk) (58)
I:kasp:check DNSKEY rrset is signed correctly for zone checkds-ksk.kasp (59)
I:kasp:check SOA rrset is signed correctly for zone checkds-ksk.kasp (60)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone checkds-ksk.kasp (61)
I:kasp:check A a.checkds-ksk.kasp rrset is signed correctly for zone checkds-ksk.kasp (62)
I:kasp:dnssec-verify zone checkds-ksk.kasp (63)
I:kasp:checkds publish correctly sets DSPublish for zone checkds-ksk.kasp (64)
I:kasp:calling rndc dnssec -checkds -when 20190102121314 published zone checkds-ksk.kasp in  (65)
I:kasp:checkds withdraw correctly sets DSRemoved for zone checkds-ksk.kasp (66)
I:kasp:calling rndc dnssec -checkds -when 20200102121314 withdrawn zone checkds-ksk.kasp in  (67)
I:kasp:check keys are created for zone checkds-doubleksk.kasp (68)
I:kasp:check number of keys for zone checkds-doubleksk.kasp in dir ns3 (68)
I:kasp:check key id 54458
I:kasp:check key id 52356
I:kasp:check key id 31884
I:kasp:KEY1 ID 54458
I:kasp:KEY2 ID 31884
I:kasp:KEY3 ID 52356
I:kasp:check rndc dnssec -status output for checkds-doubleksk.kasp (policy: checkds-doubleksk) (69)
I:kasp:check DNSKEY rrset is signed correctly for zone checkds-doubleksk.kasp (70)
I:kasp:check SOA rrset is signed correctly for zone checkds-doubleksk.kasp (71)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone checkds-doubleksk.kasp (72)
I:kasp:check A a.checkds-doubleksk.kasp rrset is signed correctly for zone checkds-doubleksk.kasp (73)
I:kasp:dnssec-verify zone checkds-doubleksk.kasp (74)
I:kasp:checkds published does not set DSPublish for zone checkds-doubleksk.kasp (multiple KSK) (75)
I:kasp:calling rndc dnssec -checkds -when 20200102121314 published zone checkds-doubleksk.kasp in  (76)
I:kasp:checkds withdrawn does not set DSRemoved for zone checkds-doubleksk.kasp (multiple KSK) (77)
I:kasp:calling rndc dnssec -checkds -when 20190102121314 withdrawn zone checkds-doubleksk.kasp in  (78)
I:kasp:checkds published does not set DSPublish for zone checkds-doubleksk.kasp (wrong algorithm) (79)
I:kasp:checkds withdrawn does not set DSRemoved for zone checkds-doubleksk.kasp (wrong algorithm) (80)
I:kasp:checkds published -key correctly sets DSPublish for key 54458 zone checkds-doubleksk.kasp (multiple KSK) (81)
I:kasp:calling rndc dnssec -checkds -key 54458 -when 20190102121314 published zone checkds-doubleksk.kasp in  (82)
I:kasp:checkds withdrawn -key correctly sets DSRemoved for key 31884 zone checkds-doubleksk.kasp (multiple KSK) (83)
I:kasp:calling rndc dnssec -checkds -key 31884 -when 20200102121314 withdrawn zone checkds-doubleksk.kasp in  (84)
I:kasp:check keys are created for zone checkds-csk.kasp (85)
I:kasp:check number of keys for zone checkds-csk.kasp in dir ns3 (85)
I:kasp:check key id 05157
I:kasp:KEY1 ID 5157
I:kasp:check rndc dnssec -status output for checkds-csk.kasp (policy: checkds-csk) (86)
I:kasp:check DNSKEY rrset is signed correctly for zone checkds-csk.kasp (87)
I:kasp:check SOA rrset is signed correctly for zone checkds-csk.kasp (88)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone checkds-csk.kasp (89)
I:kasp:check A a.checkds-csk.kasp rrset is signed correctly for zone checkds-csk.kasp (90)
I:kasp:dnssec-verify zone checkds-csk.kasp (91)
I:kasp:checkds publish correctly sets DSPublish for zone checkds-csk.kasp (92)
I:kasp:calling rndc dnssec -checkds -when 20190102121314 published zone checkds-csk.kasp in  (93)
I:kasp:checkds withdraw correctly sets DSRemoved for zone checkds-csk.kasp (94)
I:kasp:calling rndc dnssec -checkds -when 20200102121314 withdrawn zone checkds-csk.kasp in  (95)
I:kasp:check keys are created for zone rsasha1.kasp (96)
I:kasp:check number of keys for zone rsasha1.kasp in dir ns3 (96)
I:kasp:check key id 20176
I:kasp:check key id 01792
I:kasp:check key id 15057
I:kasp:KEY1 ID 20176
I:kasp:KEY2 ID 15057
I:kasp:KEY3 ID 1792
I:kasp:check rndc dnssec -status output for rsasha1.kasp (policy: rsasha1) (97)
I:kasp:check key timing metadata for key KEY1 id 20176 zone rsasha1.kasp (98)
I:kasp:check key timing metadata for key KEY2 id 15057 zone rsasha1.kasp (99)
I:kasp:check key timing metadata for key KEY3 id 1792 zone rsasha1.kasp (100)
I:kasp:check DNSKEY rrset is signed correctly for zone rsasha1.kasp (101)
I:kasp:check SOA rrset is signed correctly for zone rsasha1.kasp (102)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone rsasha1.kasp (103)
I:kasp:check A a.rsasha1.kasp rrset is signed correctly for zone rsasha1.kasp (104)
I:kasp:dnssec-verify zone rsasha1.kasp (105)
I:kasp:check keys are created for zone unsigned.kasp (106)
I:kasp:check number of keys for zone unsigned.kasp in dir ns3 (106)
I:kasp:check rndc dnssec -status output for unsigned.kasp (policy: none) (107)
I:kasp:check DNSKEY rrset is signed correctly for zone unsigned.kasp (108)
I:kasp:check SOA rrset is signed correctly for zone unsigned.kasp (109)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone unsigned.kasp (110)
I:kasp:check A a.unsigned.kasp rrset is signed correctly for zone unsigned.kasp (111)
I:kasp:Make sure the zonefile for zone unsigned.kasp is not edited (112)
I:kasp:check keys are created for zone insecure.kasp (113)
I:kasp:check number of keys for zone insecure.kasp in dir ns3 (113)
I:kasp:check rndc dnssec -status output for insecure.kasp (policy: insecure) (114)
I:kasp:check DNSKEY rrset is signed correctly for zone insecure.kasp (115)
I:kasp:check SOA rrset is signed correctly for zone insecure.kasp (116)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone insecure.kasp (117)
I:kasp:check A a.insecure.kasp rrset is signed correctly for zone insecure.kasp (118)
I:kasp:check keys are created for zone unlimited.kasp (119)
I:kasp:check number of keys for zone unlimited.kasp in dir ns3 (119)
I:kasp:check key id 35584
I:kasp:KEY1 ID 35584
I:kasp:check rndc dnssec -status output for unlimited.kasp (policy: unlimited) (120)
I:kasp:check key timing metadata for key KEY1 id 35584 zone unlimited.kasp (121)
I:kasp:check DNSKEY rrset is signed correctly for zone unlimited.kasp (122)
I:kasp:check SOA rrset is signed correctly for zone unlimited.kasp (123)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone unlimited.kasp (124)
I:kasp:check A a.unlimited.kasp rrset is signed correctly for zone unlimited.kasp (125)
I:kasp:dnssec-verify zone unlimited.kasp (126)
I:kasp:check keys are created for zone inherit.kasp (127)
I:kasp:check number of keys for zone inherit.kasp in dir ns3 (127)
I:kasp:check key id 40731
I:kasp:check key id 19567
I:kasp:check key id 37354
I:kasp:KEY1 ID 37354
I:kasp:KEY2 ID 40731
I:kasp:KEY3 ID 19567
I:kasp:check rndc dnssec -status output for inherit.kasp (policy: rsasha1) (128)
I:kasp:check key timing metadata for key KEY1 id 37354 zone inherit.kasp (129)
I:kasp:check key timing metadata for key KEY2 id 40731 zone inherit.kasp (130)
I:kasp:check key timing metadata for key KEY3 id 19567 zone inherit.kasp (131)
I:kasp:check DNSKEY rrset is signed correctly for zone inherit.kasp (132)
I:kasp:check SOA rrset is signed correctly for zone inherit.kasp (133)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone inherit.kasp (134)
I:kasp:check A a.inherit.kasp rrset is signed correctly for zone inherit.kasp (135)
I:kasp:dnssec-verify zone inherit.kasp (136)
I:kasp:check keys are created for zone dnssec-keygen.kasp (137)
I:kasp:check number of keys for zone dnssec-keygen.kasp in dir ns3 (137)
I:kasp:check key id 21362
I:kasp:check key id 10767
I:kasp:check key id 29571
I:kasp:KEY1 ID 21362
I:kasp:KEY2 ID 10767
I:kasp:KEY3 ID 29571
I:kasp:check rndc dnssec -status output for dnssec-keygen.kasp (policy: rsasha1) (138)
I:kasp:check key timing metadata for key KEY1 id 21362 zone dnssec-keygen.kasp (139)
I:kasp:check key timing metadata for key KEY2 id 10767 zone dnssec-keygen.kasp (140)
I:kasp:check key timing metadata for key KEY3 id 29571 zone dnssec-keygen.kasp (141)
I:kasp:check DNSKEY rrset is signed correctly for zone dnssec-keygen.kasp (142)
I:kasp:check SOA rrset is signed correctly for zone dnssec-keygen.kasp (143)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone dnssec-keygen.kasp (144)
I:kasp:check A a.dnssec-keygen.kasp rrset is signed correctly for zone dnssec-keygen.kasp (145)
I:kasp:dnssec-verify zone dnssec-keygen.kasp (146)
I:kasp:check keys are created for zone some-keys.kasp (147)
I:kasp:check number of keys for zone some-keys.kasp in dir ns3 (147)
I:kasp:check key id 57711
I:kasp:check key id 25652
I:kasp:check key id 51288
I:kasp:KEY1 ID 25652
I:kasp:KEY2 ID 51288
I:kasp:KEY3 ID 57711
I:kasp:check rndc dnssec -status output for some-keys.kasp (policy: rsasha1) (148)
I:kasp:check key timing metadata for key KEY1 id 25652 zone some-keys.kasp (149)
I:kasp:check key timing metadata for key KEY2 id 51288 zone some-keys.kasp (150)
I:kasp:check key timing metadata for key KEY3 id 57711 zone some-keys.kasp (151)
I:kasp:check DNSKEY rrset is signed correctly for zone some-keys.kasp (152)
I:kasp:check SOA rrset is signed correctly for zone some-keys.kasp (153)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone some-keys.kasp (154)
I:kasp:check A a.some-keys.kasp rrset is signed correctly for zone some-keys.kasp (155)
I:kasp:dnssec-verify zone some-keys.kasp (156)
I:kasp:check keys are created for zone pregenerated.kasp (157)
I:kasp:check number of keys for zone pregenerated.kasp in dir ns3 (157)
I:kasp:check key id 48232
I:kasp:check key id 34612
I:kasp:check key id 01437
I:kasp:check key id 04243
I:kasp:check key id 53863
I:kasp:check key id 54637
I:kasp:KEY1 ID 4243
I:kasp:KEY2 ID 34612
I:kasp:KEY3 ID 48232
I:kasp:check rndc dnssec -status output for pregenerated.kasp (policy: rsasha1) (158)
I:kasp:check key timing metadata for key KEY1 id 4243 zone pregenerated.kasp (159)
I:kasp:check key timing metadata for key KEY2 id 34612 zone pregenerated.kasp (160)
I:kasp:check key timing metadata for key KEY3 id 48232 zone pregenerated.kasp (161)
I:kasp:check DNSKEY rrset is signed correctly for zone pregenerated.kasp (162)
I:kasp:check SOA rrset is signed correctly for zone pregenerated.kasp (163)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone pregenerated.kasp (164)
I:kasp:check A a.pregenerated.kasp rrset is signed correctly for zone pregenerated.kasp (165)
I:kasp:dnssec-verify zone pregenerated.kasp (166)
I:kasp:check keys are created for zone rumoured.kasp (167)
I:kasp:check number of keys for zone rumoured.kasp in dir ns3 (167)
I:kasp:check key id 48163
I:kasp:check key id 05091
I:kasp:check key id 57505
I:kasp:KEY1 ID 48163
I:kasp:KEY2 ID 5091
I:kasp:KEY3 ID 57505
I:kasp:check rndc dnssec -status output for rumoured.kasp (policy: rsasha1) (168)
I:kasp:check key timing metadata for key KEY1 id 48163 zone rumoured.kasp (169)
I:kasp:check key timing metadata for key KEY2 id 5091 zone rumoured.kasp (170)
I:kasp:check key timing metadata for key KEY3 id 57505 zone rumoured.kasp (171)
I:kasp:check DNSKEY rrset is signed correctly for zone rumoured.kasp (172)
I:kasp:check SOA rrset is signed correctly for zone rumoured.kasp (173)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone rumoured.kasp (174)
I:kasp:check A a.rumoured.kasp rrset is signed correctly for zone rumoured.kasp (175)
I:kasp:dnssec-verify zone rumoured.kasp (176)
I:kasp:check keys are created for zone secondary.kasp (177)
I:kasp:check number of keys for zone secondary.kasp in dir ns3 (177)
I:kasp:check key id 24552
I:kasp:check key id 26969
I:kasp:check key id 62422
I:kasp:KEY1 ID 26969
I:kasp:KEY2 ID 24552
I:kasp:KEY3 ID 62422
I:kasp:check rndc dnssec -status output for secondary.kasp (policy: rsasha1) (178)
I:kasp:check key timing metadata for key KEY1 id 26969 zone secondary.kasp (179)
I:kasp:check key timing metadata for key KEY2 id 24552 zone secondary.kasp (180)
I:kasp:check key timing metadata for key KEY3 id 62422 zone secondary.kasp (181)
I:kasp:check DNSKEY rrset is signed correctly for zone secondary.kasp (182)
I:kasp:check SOA rrset is signed correctly for zone secondary.kasp (183)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone secondary.kasp (184)
I:kasp:check A a.secondary.kasp rrset is signed correctly for zone secondary.kasp (185)
I:kasp:dnssec-verify zone secondary.kasp (186)
I:kasp:check that we correctly sign the zone after IXFR for zone secondary.kasp (187)
I:kasp:check keys are created for zone rsasha1-nsec3.kasp (188)
I:kasp:check number of keys for zone rsasha1-nsec3.kasp in dir ns3 (188)
I:kasp:check key id 46377
I:kasp:check key id 14320
I:kasp:check key id 08964
I:kasp:KEY1 ID 14320
I:kasp:KEY2 ID 8964
I:kasp:KEY3 ID 46377
I:kasp:check rndc dnssec -status output for rsasha1-nsec3.kasp (policy: rsasha1-nsec3) (189)
I:kasp:check key timing metadata for key KEY1 id 14320 zone rsasha1-nsec3.kasp (190)
I:kasp:check key timing metadata for key KEY2 id 8964 zone rsasha1-nsec3.kasp (191)
I:kasp:check key timing metadata for key KEY3 id 46377 zone rsasha1-nsec3.kasp (192)
I:kasp:check DNSKEY rrset is signed correctly for zone rsasha1-nsec3.kasp (193)
I:kasp:check SOA rrset is signed correctly for zone rsasha1-nsec3.kasp (194)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone rsasha1-nsec3.kasp (195)
I:kasp:check A a.rsasha1-nsec3.kasp rrset is signed correctly for zone rsasha1-nsec3.kasp (196)
I:kasp:dnssec-verify zone rsasha1-nsec3.kasp (197)
I:kasp:check keys are created for zone rsasha256.kasp (198)
I:kasp:check number of keys for zone rsasha256.kasp in dir ns3 (198)
I:kasp:check key id 10906
I:kasp:check key id 03539
I:kasp:check key id 30580
I:kasp:KEY1 ID 3539
I:kasp:KEY2 ID 10906
I:kasp:KEY3 ID 30580
I:kasp:check rndc dnssec -status output for rsasha256.kasp (policy: rsasha256) (199)
I:kasp:check key timing metadata for key KEY1 id 3539 zone rsasha256.kasp (200)
I:kasp:check key timing metadata for key KEY2 id 10906 zone rsasha256.kasp (201)
I:kasp:check key timing metadata for key KEY3 id 30580 zone rsasha256.kasp (202)
I:kasp:check DNSKEY rrset is signed correctly for zone rsasha256.kasp (203)
I:kasp:check SOA rrset is signed correctly for zone rsasha256.kasp (204)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone rsasha256.kasp (205)
I:kasp:check A a.rsasha256.kasp rrset is signed correctly for zone rsasha256.kasp (206)
I:kasp:dnssec-verify zone rsasha256.kasp (207)
I:kasp:check keys are created for zone rsasha512.kasp (208)
I:kasp:check number of keys for zone rsasha512.kasp in dir ns3 (208)
I:kasp:check key id 31167
I:kasp:check key id 60212
I:kasp:check key id 62312
I:kasp:KEY1 ID 31167
I:kasp:KEY2 ID 62312
I:kasp:KEY3 ID 60212
I:kasp:check rndc dnssec -status output for rsasha512.kasp (policy: rsasha512) (209)
I:kasp:check key timing metadata for key KEY1 id 31167 zone rsasha512.kasp (210)
I:kasp:check key timing metadata for key KEY2 id 62312 zone rsasha512.kasp (211)
I:kasp:check key timing metadata for key KEY3 id 60212 zone rsasha512.kasp (212)
I:kasp:check DNSKEY rrset is signed correctly for zone rsasha512.kasp (213)
I:kasp:check SOA rrset is signed correctly for zone rsasha512.kasp (214)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone rsasha512.kasp (215)
I:kasp:check A a.rsasha512.kasp rrset is signed correctly for zone rsasha512.kasp (216)
I:kasp:dnssec-verify zone rsasha512.kasp (217)
I:kasp:check keys are created for zone ecdsa256.kasp (218)
I:kasp:check number of keys for zone ecdsa256.kasp in dir ns3 (218)
I:kasp:check key id 08924
I:kasp:check key id 44100
I:kasp:check key id 02533
I:kasp:KEY1 ID 2533
I:kasp:KEY2 ID 8924
I:kasp:KEY3 ID 44100
I:kasp:check rndc dnssec -status output for ecdsa256.kasp (policy: ecdsa256) (219)
I:kasp:check key timing metadata for key KEY1 id 2533 zone ecdsa256.kasp (220)
I:kasp:check key timing metadata for key KEY2 id 8924 zone ecdsa256.kasp (221)
I:kasp:check key timing metadata for key KEY3 id 44100 zone ecdsa256.kasp (222)
I:kasp:check DNSKEY rrset is signed correctly for zone ecdsa256.kasp (223)
I:kasp:check SOA rrset is signed correctly for zone ecdsa256.kasp (224)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone ecdsa256.kasp (225)
I:kasp:check A a.ecdsa256.kasp rrset is signed correctly for zone ecdsa256.kasp (226)
I:kasp:dnssec-verify zone ecdsa256.kasp (227)
I:kasp:check keys are created for zone ecdsa384.kasp (228)
I:kasp:check number of keys for zone ecdsa384.kasp in dir ns3 (228)
I:kasp:check key id 32553
I:kasp:check key id 10188
I:kasp:check key id 31992
I:kasp:KEY1 ID 10188
I:kasp:KEY2 ID 31992
I:kasp:KEY3 ID 32553
I:kasp:check rndc dnssec -status output for ecdsa384.kasp (policy: ecdsa384) (229)
I:kasp:check key timing metadata for key KEY1 id 10188 zone ecdsa384.kasp (230)
I:kasp:check key timing metadata for key KEY2 id 31992 zone ecdsa384.kasp (231)
I:kasp:check key timing metadata for key KEY3 id 32553 zone ecdsa384.kasp (232)
I:kasp:check DNSKEY rrset is signed correctly for zone ecdsa384.kasp (233)
I:kasp:check SOA rrset is signed correctly for zone ecdsa384.kasp (234)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone ecdsa384.kasp (235)
I:kasp:check A a.ecdsa384.kasp rrset is signed correctly for zone ecdsa384.kasp (236)
I:kasp:dnssec-verify zone ecdsa384.kasp (237)
I:kasp:check keys are created for zone ed25519.kasp (238)
I:kasp:check number of keys for zone ed25519.kasp in dir ns3 (238)
I:kasp:check key id 19724
I:kasp:check key id 07682
I:kasp:check key id 14021
I:kasp:KEY1 ID 7682
I:kasp:KEY2 ID 14021
I:kasp:KEY3 ID 19724
I:kasp:check rndc dnssec -status output for ed25519.kasp (policy: ed25519) (239)
I:kasp:check key timing metadata for key KEY1 id 7682 zone ed25519.kasp (240)
I:kasp:check key timing metadata for key KEY2 id 14021 zone ed25519.kasp (241)
I:kasp:check key timing metadata for key KEY3 id 19724 zone ed25519.kasp (242)
I:kasp:check DNSKEY rrset is signed correctly for zone ed25519.kasp (243)
I:kasp:check SOA rrset is signed correctly for zone ed25519.kasp (244)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone ed25519.kasp (245)
I:kasp:check A a.ed25519.kasp rrset is signed correctly for zone ed25519.kasp (246)
I:kasp:dnssec-verify zone ed25519.kasp (247)
I:kasp:check keys are created for zone ed448.kasp (248)
I:kasp:check number of keys for zone ed448.kasp in dir ns3 (248)
I:kasp:check key id 44894
I:kasp:check key id 45174
I:kasp:check key id 14245
I:kasp:KEY1 ID 44894
I:kasp:KEY2 ID 14245
I:kasp:KEY3 ID 45174
I:kasp:check rndc dnssec -status output for ed448.kasp (policy: ed448) (249)
I:kasp:check key timing metadata for key KEY1 id 44894 zone ed448.kasp (250)
I:kasp:check key timing metadata for key KEY2 id 14245 zone ed448.kasp (251)
I:kasp:check key timing metadata for key KEY3 id 45174 zone ed448.kasp (252)
I:kasp:check DNSKEY rrset is signed correctly for zone ed448.kasp (253)
I:kasp:check SOA rrset is signed correctly for zone ed448.kasp (254)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone ed448.kasp (255)
I:kasp:check A a.ed448.kasp rrset is signed correctly for zone ed448.kasp (256)
I:kasp:dnssec-verify zone ed448.kasp (257)
I:kasp:check keys are created for zone expired-sigs.autosign (258)
I:kasp:check number of keys for zone expired-sigs.autosign in dir ns3 (258)
I:kasp:check key id 33952
I:kasp:check key id 43405
I:kasp:KEY1 ID 43405
I:kasp:KEY2 ID 33952
I:kasp:check rndc dnssec -status output for expired-sigs.autosign (policy: autosign) (259)
I:kasp:check key timing metadata for key KEY1 id 43405 zone expired-sigs.autosign (260)
I:kasp:check key timing metadata for key KEY2 id 33952 zone expired-sigs.autosign (261)
I:kasp:check DNSKEY rrset is signed correctly for zone expired-sigs.autosign (262)
I:kasp:check SOA rrset is signed correctly for zone expired-sigs.autosign (263)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone expired-sigs.autosign (264)
I:kasp:check A a.expired-sigs.autosign rrset is signed correctly for zone expired-sigs.autosign (265)
I:kasp:dnssec-verify zone expired-sigs.autosign (266)
I:kasp:check DNSKEY rrsig is refreshed correctly for zone expired-sigs.autosign (267)
I:kasp:check SOA rrsig is refreshed correctly for zone expired-sigs.autosign (268)
I:kasp:check NS rrsig is refreshed correctly for zone expired-sigs.autosign (269)
I:kasp:check NSEC rrsig is refreshed correctly for zone expired-sigs.autosign (270)
I:kasp:check a A rrsig is refreshed correctly for zone expired-sigs.autosign (271)
I:kasp:check a NSEC rrsig is refreshed correctly for zone expired-sigs.autosign (272)
I:kasp:check b A rrsig is refreshed correctly for zone expired-sigs.autosign (273)
I:kasp:check b NSEC rrsig is refreshed correctly for zone expired-sigs.autosign (274)
I:kasp:check c A rrsig is refreshed correctly for zone expired-sigs.autosign (275)
I:kasp:check c NSEC rrsig is refreshed correctly for zone expired-sigs.autosign (276)
I:kasp:check ns3 A rrsig is refreshed correctly for zone expired-sigs.autosign (277)
I:kasp:check ns3 NSEC rrsig is refreshed correctly for zone expired-sigs.autosign (278)
I:kasp:check keys are created for zone fresh-sigs.autosign (279)
I:kasp:check number of keys for zone fresh-sigs.autosign in dir ns3 (279)
I:kasp:check key id 53243
I:kasp:check key id 21653
I:kasp:KEY1 ID 53243
I:kasp:KEY2 ID 21653
I:kasp:check rndc dnssec -status output for fresh-sigs.autosign (policy: autosign) (280)
I:kasp:check key timing metadata for key KEY1 id 53243 zone fresh-sigs.autosign (281)
I:kasp:check key timing metadata for key KEY2 id 21653 zone fresh-sigs.autosign (282)
I:kasp:check DNSKEY rrset is signed correctly for zone fresh-sigs.autosign (283)
I:kasp:check SOA rrset is signed correctly for zone fresh-sigs.autosign (284)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone fresh-sigs.autosign (285)
I:kasp:check A a.fresh-sigs.autosign rrset is signed correctly for zone fresh-sigs.autosign (286)
I:kasp:dnssec-verify zone fresh-sigs.autosign (287)
I:kasp:check NS rrsig is reused correctly for zone fresh-sigs.autosign (288)
I:kasp:check NSEC rrsig is reused correctly for zone fresh-sigs.autosign (289)
I:kasp:check a A rrsig is reused correctly for zone fresh-sigs.autosign (290)
I:kasp:check a NSEC rrsig is reused correctly for zone fresh-sigs.autosign (291)
I:kasp:check b A rrsig is reused correctly for zone fresh-sigs.autosign (292)
I:kasp:check b NSEC rrsig is reused correctly for zone fresh-sigs.autosign (293)
I:kasp:check c A rrsig is reused correctly for zone fresh-sigs.autosign (294)
I:kasp:check c NSEC rrsig is reused correctly for zone fresh-sigs.autosign (295)
I:kasp:check ns3 A rrsig is reused correctly for zone fresh-sigs.autosign (296)
I:kasp:check ns3 NSEC rrsig is reused correctly for zone fresh-sigs.autosign (297)
I:kasp:check keys are created for zone unfresh-sigs.autosign (298)
I:kasp:check number of keys for zone unfresh-sigs.autosign in dir ns3 (298)
I:kasp:check key id 46808
I:kasp:check key id 59122
I:kasp:KEY1 ID 46808
I:kasp:KEY2 ID 59122
I:kasp:check rndc dnssec -status output for unfresh-sigs.autosign (policy: autosign) (299)
I:kasp:check key timing metadata for key KEY1 id 46808 zone unfresh-sigs.autosign (300)
I:kasp:check key timing metadata for key KEY2 id 59122 zone unfresh-sigs.autosign (301)
I:kasp:check DNSKEY rrset is signed correctly for zone unfresh-sigs.autosign (302)
I:kasp:check SOA rrset is signed correctly for zone unfresh-sigs.autosign (303)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone unfresh-sigs.autosign (304)
I:kasp:check A a.unfresh-sigs.autosign rrset is signed correctly for zone unfresh-sigs.autosign (305)
I:kasp:dnssec-verify zone unfresh-sigs.autosign (306)
I:kasp:check DNSKEY rrsig is refreshed correctly for zone unfresh-sigs.autosign (307)
I:kasp:check SOA rrsig is refreshed correctly for zone unfresh-sigs.autosign (308)
I:kasp:check NS rrsig is refreshed correctly for zone unfresh-sigs.autosign (309)
I:kasp:check NSEC rrsig is refreshed correctly for zone unfresh-sigs.autosign (310)
I:kasp:check a A rrsig is refreshed correctly for zone unfresh-sigs.autosign (311)
I:kasp:check a NSEC rrsig is refreshed correctly for zone unfresh-sigs.autosign (312)
I:kasp:check b A rrsig is refreshed correctly for zone unfresh-sigs.autosign (313)
I:kasp:check b NSEC rrsig is refreshed correctly for zone unfresh-sigs.autosign (314)
I:kasp:check c A rrsig is refreshed correctly for zone unfresh-sigs.autosign (315)
I:kasp:check c NSEC rrsig is refreshed correctly for zone unfresh-sigs.autosign (316)
I:kasp:check ns3 A rrsig is refreshed correctly for zone unfresh-sigs.autosign (317)
I:kasp:check ns3 NSEC rrsig is refreshed correctly for zone unfresh-sigs.autosign (318)
I:kasp:check keys are created for zone ksk-missing.autosign (319)
I:kasp:check number of keys for zone ksk-missing.autosign in dir ns3 (319)
I:kasp:check key id 25701
I:kasp:check key id 08113
I:kasp:KEY1 ID 8113
I:kasp:KEY2 ID 25701
I:kasp:check rndc dnssec -status output for ksk-missing.autosign (policy: autosign) (320)
I:kasp:check DNSKEY rrset is signed correctly for zone ksk-missing.autosign (321)
I:kasp:check SOA rrset is signed correctly for zone ksk-missing.autosign (322)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone ksk-missing.autosign (323)
I:kasp:check A a.ksk-missing.autosign rrset is signed correctly for zone ksk-missing.autosign (324)
I:kasp:dnssec-verify zone ksk-missing.autosign (325)
I:kasp:check keys are created for zone zsk-missing.autosign (326)
I:kasp:check number of keys for zone zsk-missing.autosign in dir ns3 (326)
I:kasp:check key id 41887
I:kasp:check key id 61288
I:kasp:KEY1 ID 41887
I:kasp:KEY2 ID 61288
I:kasp:check rndc dnssec -status output for zsk-missing.autosign (policy: autosign) (327)
I:kasp:check DNSKEY rrset is signed correctly for zone zsk-missing.autosign (328)
I:kasp:check SOA rrset is signed correctly for zone zsk-missing.autosign (329)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone zsk-missing.autosign (330)
I:kasp:check A a.zsk-missing.autosign rrset is signed correctly for zone zsk-missing.autosign (331)
I:kasp:dnssec-verify zone zsk-missing.autosign (332)
I:kasp:check keys are created for zone zsk-retired.autosign (333)
I:kasp:check number of keys for zone zsk-retired.autosign in dir ns3 (333)
I:kasp:check key id 16890
I:kasp:check key id 35259
I:kasp:check key id 57648
I:kasp:KEY1 ID 16890
I:kasp:KEY2 ID 57648
I:kasp:KEY3 ID 35259
I:kasp:check rndc dnssec -status output for zsk-retired.autosign (policy: autosign) (334)
I:kasp:check key timing metadata for key KEY1 id 16890 zone zsk-retired.autosign (335)
I:kasp:check key timing metadata for key KEY2 id 57648 zone zsk-retired.autosign (336)
I:kasp:check key timing metadata for key KEY3 id 35259 zone zsk-retired.autosign (337)
I:kasp:check DNSKEY rrset is signed correctly for zone zsk-retired.autosign (338)
I:kasp:check SOA rrset is signed correctly for zone zsk-retired.autosign (339)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone zsk-retired.autosign (340)
I:kasp:check A a.zsk-retired.autosign rrset is signed correctly for zone zsk-retired.autosign (341)
I:kasp:dnssec-verify zone zsk-retired.autosign (342)
I:kasp:check DNSKEY rrsig is refreshed correctly for zone zsk-retired.autosign (343)
I:kasp:check SOA rrsig is refreshed correctly for zone zsk-retired.autosign (344)
I:kasp:check NS rrsig is refreshed correctly for zone zsk-retired.autosign (345)
I:kasp:check NSEC rrsig is refreshed correctly for zone zsk-retired.autosign (346)
I:kasp:check a A rrsig is refreshed correctly for zone zsk-retired.autosign (347)
I:kasp:check a NSEC rrsig is refreshed correctly for zone zsk-retired.autosign (348)
I:kasp:check b A rrsig is refreshed correctly for zone zsk-retired.autosign (349)
I:kasp:check b NSEC rrsig is refreshed correctly for zone zsk-retired.autosign (350)
I:kasp:check c A rrsig is refreshed correctly for zone zsk-retired.autosign (351)
I:kasp:check c NSEC rrsig is refreshed correctly for zone zsk-retired.autosign (352)
I:kasp:check ns3 A rrsig is refreshed correctly for zone zsk-retired.autosign (353)
I:kasp:check ns3 NSEC rrsig is refreshed correctly for zone zsk-retired.autosign (354)
I:kasp:check keys are created for zone legacy-keys.kasp (355)
I:kasp:check number of keys for zone legacy-keys.kasp in dir ns3 (355)
I:kasp:check key id 63157
I:kasp:check key id 20662
I:kasp:check key id 21772
I:kasp:check key id 38573
I:kasp:KEY1 ID 38573
I:kasp:KEY2 ID 63157
I:kasp:check rndc dnssec -status output for legacy-keys.kasp (policy: migrate-to-dnssec-policy) (356)
I:kasp:check correct keys were used when migrating zone legacy-keys.kasp to dnssec-policy (357)
I:kasp:filename: ns3/Klegacy-keys.kasp.+005+38573 (expect Klegacy-keys.kasp.+005+38573)
I:kasp:filename: ns3/Klegacy-keys.kasp.+005+63157 (expect Klegacy-keys.kasp.+005+63157)
I:kasp:check key timing metadata for key KEY1 id 38573 zone legacy-keys.kasp (358)
I:kasp:check key timing metadata for key KEY2 id 63157 zone legacy-keys.kasp (359)
I:kasp:check DNSKEY rrset is signed correctly for zone legacy-keys.kasp (360)
I:kasp:check SOA rrset is signed correctly for zone legacy-keys.kasp (361)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone legacy-keys.kasp (362)
I:kasp:check A a.legacy-keys.kasp rrset is signed correctly for zone legacy-keys.kasp (363)
I:kasp:dnssec-verify zone legacy-keys.kasp (364)
I:kasp:check keys are created for zone unsigned.tld (365)
I:kasp:check number of keys for zone unsigned.tld in dir ns2 (365)
I:kasp:check rndc dnssec -status output for unsigned.tld (policy: none) (366)
I:kasp:check DNSKEY rrset is signed correctly for zone unsigned.tld (367)
I:kasp:check SOA rrset is signed correctly for zone unsigned.tld (368)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone unsigned.tld (369)
I:kasp:check A a.unsigned.tld rrset is signed correctly for zone unsigned.tld (370)
I:kasp:check keys are created for zone none.inherit.signed (371)
I:kasp:check number of keys for zone none.inherit.signed in dir ns4 (371)
I:kasp:check rndc dnssec -status output for none.inherit.signed (policy: none) (372)
I:kasp:check DNSKEY rrset is signed correctly for zone none.inherit.signed (373)
I:kasp:check SOA rrset is signed correctly for zone none.inherit.signed (374)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone none.inherit.signed (375)
I:kasp:check A a.none.inherit.signed rrset is signed correctly for zone none.inherit.signed (376)
I:kasp:check keys are created for zone none.override.signed (377)
I:kasp:check number of keys for zone none.override.signed in dir ns4 (377)
I:kasp:check rndc dnssec -status output for none.override.signed (policy: none) (378)
I:kasp:check DNSKEY rrset is signed correctly for zone none.override.signed (379)
I:kasp:check SOA rrset is signed correctly for zone none.override.signed (380)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone none.override.signed (381)
I:kasp:check A a.none.override.signed rrset is signed correctly for zone none.override.signed (382)
I:kasp:check keys are created for zone inherit.none.signed (383)
I:kasp:check number of keys for zone inherit.none.signed in dir ns4 (383)
I:kasp:check rndc dnssec -status output for inherit.none.signed (policy: none) (384)
I:kasp:check DNSKEY rrset is signed correctly for zone inherit.none.signed (385)
I:kasp:check SOA rrset is signed correctly for zone inherit.none.signed (386)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone inherit.none.signed (387)
I:kasp:check A a.inherit.none.signed rrset is signed correctly for zone inherit.none.signed (388)
I:kasp:check keys are created for zone none.none.signed (389)
I:kasp:check number of keys for zone none.none.signed in dir ns4 (389)
I:kasp:check rndc dnssec -status output for none.none.signed (policy: none) (390)
I:kasp:check DNSKEY rrset is signed correctly for zone none.none.signed (391)
I:kasp:check SOA rrset is signed correctly for zone none.none.signed (392)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone none.none.signed (393)
I:kasp:check A a.none.none.signed rrset is signed correctly for zone none.none.signed (394)
I:kasp:check keys are created for zone inherit.inherit.unsigned (395)
I:kasp:check number of keys for zone inherit.inherit.unsigned in dir ns5 (395)
I:kasp:check rndc dnssec -status output for inherit.inherit.unsigned (policy: none) (396)
I:kasp:check DNSKEY rrset is signed correctly for zone inherit.inherit.unsigned (397)
I:kasp:check SOA rrset is signed correctly for zone inherit.inherit.unsigned (398)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone inherit.inherit.unsigned (399)
I:kasp:check A a.inherit.inherit.unsigned rrset is signed correctly for zone inherit.inherit.unsigned (400)
I:kasp:check keys are created for zone none.inherit.unsigned (401)
I:kasp:check number of keys for zone none.inherit.unsigned in dir ns5 (401)
I:kasp:check rndc dnssec -status output for none.inherit.unsigned (policy: none) (402)
I:kasp:check DNSKEY rrset is signed correctly for zone none.inherit.unsigned (403)
I:kasp:check SOA rrset is signed correctly for zone none.inherit.unsigned (404)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone none.inherit.unsigned (405)
I:kasp:check A a.none.inherit.unsigned rrset is signed correctly for zone none.inherit.unsigned (406)
I:kasp:check keys are created for zone none.override.unsigned (407)
I:kasp:check number of keys for zone none.override.unsigned in dir ns5 (407)
I:kasp:check rndc dnssec -status output for none.override.unsigned (policy: none) (408)
I:kasp:check DNSKEY rrset is signed correctly for zone none.override.unsigned (409)
I:kasp:check SOA rrset is signed correctly for zone none.override.unsigned (410)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone none.override.unsigned (411)
I:kasp:check A a.none.override.unsigned rrset is signed correctly for zone none.override.unsigned (412)
I:kasp:check keys are created for zone inherit.none.unsigned (413)
I:kasp:check number of keys for zone inherit.none.unsigned in dir ns5 (413)
I:kasp:check rndc dnssec -status output for inherit.none.unsigned (policy: none) (414)
I:kasp:check DNSKEY rrset is signed correctly for zone inherit.none.unsigned (415)
I:kasp:check SOA rrset is signed correctly for zone inherit.none.unsigned (416)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone inherit.none.unsigned (417)
I:kasp:check A a.inherit.none.unsigned rrset is signed correctly for zone inherit.none.unsigned (418)
I:kasp:check keys are created for zone none.none.unsigned (419)
I:kasp:check number of keys for zone none.none.unsigned in dir ns5 (419)
I:kasp:check rndc dnssec -status output for none.none.unsigned (policy: none) (420)
I:kasp:check DNSKEY rrset is signed correctly for zone none.none.unsigned (421)
I:kasp:check SOA rrset is signed correctly for zone none.none.unsigned (422)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone none.none.unsigned (423)
I:kasp:check A a.none.none.unsigned rrset is signed correctly for zone none.none.unsigned (424)
I:kasp:check keys are created for zone signed.tld (425)
I:kasp:check number of keys for zone signed.tld in dir ns2 (425)
I:kasp:check key id 63486
I:kasp:KEY1 ID 63486
I:kasp:check rndc dnssec -status output for signed.tld (policy: default) (426)
I:kasp:check key timing metadata for key KEY1 id 63486 zone signed.tld (427)
I:kasp:check DNSKEY rrset is signed correctly for zone signed.tld (428)
I:kasp:check SOA rrset is signed correctly for zone signed.tld (429)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone signed.tld (430)
I:kasp:check A a.signed.tld rrset is signed correctly for zone signed.tld (431)
I:kasp:dnssec-verify zone signed.tld (432)
I:kasp:check keys are created for zone override.inherit.signed (433)
I:kasp:check number of keys for zone override.inherit.signed in dir ns4 (433)
I:kasp:check key id 14808
I:kasp:KEY1 ID 14808
I:kasp:check rndc dnssec -status output for override.inherit.signed (policy: default) (434)
I:kasp:check key timing metadata for key KEY1 id 14808 zone override.inherit.signed (435)
I:kasp:check DNSKEY rrset is signed correctly for zone override.inherit.signed (436)
I:kasp:check SOA rrset is signed correctly for zone override.inherit.signed (437)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone override.inherit.signed (438)
I:kasp:check A a.override.inherit.signed rrset is signed correctly for zone override.inherit.signed (439)
I:kasp:dnssec-verify zone override.inherit.signed (440)
I:kasp:check keys are created for zone inherit.override.signed (441)
I:kasp:check number of keys for zone inherit.override.signed in dir ns4 (441)
I:kasp:check key id 63923
I:kasp:KEY1 ID 63923
I:kasp:check rndc dnssec -status output for inherit.override.signed (policy: default) (442)
I:kasp:check key timing metadata for key KEY1 id 63923 zone inherit.override.signed (443)
I:kasp:check DNSKEY rrset is signed correctly for zone inherit.override.signed (444)
I:kasp:check SOA rrset is signed correctly for zone inherit.override.signed (445)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone inherit.override.signed (446)
I:kasp:check A a.inherit.override.signed rrset is signed correctly for zone inherit.override.signed (447)
I:kasp:dnssec-verify zone inherit.override.signed (448)
I:kasp:check keys are created for zone override.inherit.unsigned (449)
I:kasp:check number of keys for zone override.inherit.unsigned in dir ns5 (449)
I:kasp:check key id 39992
I:kasp:KEY1 ID 39992
I:kasp:check rndc dnssec -status output for override.inherit.unsigned (policy: default) (450)
I:kasp:check key timing metadata for key KEY1 id 39992 zone override.inherit.unsigned (451)
I:kasp:check DNSKEY rrset is signed correctly for zone override.inherit.unsigned (452)
I:kasp:check SOA rrset is signed correctly for zone override.inherit.unsigned (453)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone override.inherit.unsigned (454)
I:kasp:check A a.override.inherit.unsigned rrset is signed correctly for zone override.inherit.unsigned (455)
I:kasp:dnssec-verify zone override.inherit.unsigned (456)
I:kasp:check keys are created for zone inherit.override.unsigned (457)
I:kasp:check number of keys for zone inherit.override.unsigned in dir ns5 (457)
I:kasp:check key id 19458
I:kasp:KEY1 ID 19458
I:kasp:check rndc dnssec -status output for inherit.override.unsigned (policy: default) (458)
I:kasp:check key timing metadata for key KEY1 id 19458 zone inherit.override.unsigned (459)
I:kasp:check DNSKEY rrset is signed correctly for zone inherit.override.unsigned (460)
I:kasp:check SOA rrset is signed correctly for zone inherit.override.unsigned (461)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone inherit.override.unsigned (462)
I:kasp:check A a.inherit.override.unsigned rrset is signed correctly for zone inherit.override.unsigned (463)
I:kasp:dnssec-verify zone inherit.override.unsigned (464)
I:kasp:wait for inherit.inherit.signed to be signed (465)
I:kasp:check keys are created for zone inherit.inherit.signed (466)
I:kasp:check number of keys for zone inherit.inherit.signed in dir ns4 (466)
I:kasp:check key id 42885
I:kasp:KEY1 ID 42885
I:kasp:check rndc dnssec -status output for inherit.inherit.signed (policy: test) (467)
I:kasp:check key timing metadata for key KEY1 id 42885 zone inherit.inherit.signed (468)
I:kasp:check DNSKEY rrset is signed correctly for zone inherit.inherit.signed (469)
I:kasp:check SOA rrset is signed correctly for zone inherit.inherit.signed (470)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone inherit.inherit.signed (471)
I:kasp:check A a.inherit.inherit.signed rrset is signed correctly for zone inherit.inherit.signed (472)
I:kasp:dnssec-verify zone inherit.inherit.signed (473)
I:kasp:wait for override.override.signed to be signed (474)
I:kasp:check keys are created for zone override.override.signed (475)
I:kasp:check number of keys for zone override.override.signed in dir ns4 (475)
I:kasp:check key id 05518
I:kasp:KEY1 ID 5518
I:kasp:check rndc dnssec -status output for override.override.signed (policy: test) (476)
I:kasp:check key timing metadata for key KEY1 id 5518 zone override.override.signed (477)
I:kasp:check DNSKEY rrset is signed correctly for zone override.override.signed (478)
I:kasp:check SOA rrset is signed correctly for zone override.override.signed (479)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone override.override.signed (480)
I:kasp:check A a.override.override.signed rrset is signed correctly for zone override.override.signed (481)
I:kasp:dnssec-verify zone override.override.signed (482)
I:kasp:wait for override.none.signed to be signed (483)
I:kasp:check keys are created for zone override.none.signed (484)
I:kasp:check number of keys for zone override.none.signed in dir ns4 (484)
I:kasp:check key id 64740
I:kasp:KEY1 ID 64740
I:kasp:check rndc dnssec -status output for override.none.signed (policy: test) (485)
I:kasp:check key timing metadata for key KEY1 id 64740 zone override.none.signed (486)
I:kasp:check DNSKEY rrset is signed correctly for zone override.none.signed (487)
I:kasp:check SOA rrset is signed correctly for zone override.none.signed (488)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone override.none.signed (489)
I:kasp:check A a.override.none.signed rrset is signed correctly for zone override.none.signed (490)
I:kasp:dnssec-verify zone override.none.signed (491)
I:kasp:wait for override.override.unsigned to be signed (492)
I:kasp:check keys are created for zone override.override.unsigned (493)
I:kasp:check number of keys for zone override.override.unsigned in dir ns5 (493)
I:kasp:check key id 17246
I:kasp:KEY1 ID 17246
I:kasp:check rndc dnssec -status output for override.override.unsigned (policy: test) (494)
I:kasp:check key timing metadata for key KEY1 id 17246 zone override.override.unsigned (495)
I:kasp:check DNSKEY rrset is signed correctly for zone override.override.unsigned (496)
I:kasp:check SOA rrset is signed correctly for zone override.override.unsigned (497)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone override.override.unsigned (498)
I:kasp:check A a.override.override.unsigned rrset is signed correctly for zone override.override.unsigned (499)
I:kasp:dnssec-verify zone override.override.unsigned (500)
I:kasp:wait for override.none.unsigned to be signed (501)
I:kasp:check keys are created for zone override.none.unsigned (502)
I:kasp:check number of keys for zone override.none.unsigned in dir ns5 (502)
I:kasp:check key id 06618
I:kasp:KEY1 ID 6618
I:kasp:check rndc dnssec -status output for override.none.unsigned (policy: test) (503)
I:kasp:check key timing metadata for key KEY1 id 6618 zone override.none.unsigned (504)
I:kasp:check DNSKEY rrset is signed correctly for zone override.none.unsigned (505)
I:kasp:check SOA rrset is signed correctly for zone override.none.unsigned (506)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone override.none.unsigned (507)
I:kasp:check A a.override.none.unsigned rrset is signed correctly for zone override.none.unsigned (508)
I:kasp:dnssec-verify zone override.none.unsigned (509)
I:kasp:wait for example.net to be signed (510)
I:kasp:check keys are created for zone example.net (511)
I:kasp:check number of keys for zone example.net in dir ns4 (511)
I:kasp:check key id 55018
I:kasp:KEY1 ID 55018
I:kasp:check rndc dnssec -status output for example.net (policy: test) (512)
I:kasp:check key timing metadata for key KEY1 id 55018 zone example.net (513)
I:kasp:check DNSKEY rrset is signed correctly for zone example.net (514)
I:kasp:check SOA rrset is signed correctly for zone example.net (515)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone example.net (516)
I:kasp:dnssec-verify zone example.net (517)
I:kasp:check TXT example.net (view example1) rrset is signed correctly (518)
I:kasp:wait for example.net to be signed (519)
I:kasp:check keys are created for zone example.net (520)
I:kasp:check number of keys for zone example.net in dir ns4 (520)
I:kasp:check key id 55018
I:kasp:KEY1 ID 55018
I:kasp:check rndc dnssec -status output for example.net (policy: test) (521)
I:kasp:check DNSKEY rrset is signed correctly for zone example.net (522)
I:kasp:check SOA rrset is signed correctly for zone example.net (523)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone example.net (524)
I:kasp:dnssec-verify zone example.net (525)
I:kasp:check TXT example.net (view example2) rrset is signed correctly (526)
I:kasp:wait for example.net to be signed (527)
I:kasp:check keys are created for zone example.net (528)
I:kasp:check number of keys for zone example.net in dir ns4 (528)
I:kasp:check key id 55018
I:kasp:KEY1 ID 55018
I:kasp:check rndc dnssec -status output for example.net (policy: test) (529)
I:kasp:check DNSKEY rrset is signed correctly for zone example.net (530)
I:kasp:check SOA rrset is signed correctly for zone example.net (531)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone example.net (532)
I:kasp:dnssec-verify zone example.net (533)
I:kasp:check TXT example.net (in-view example2) rrset is signed correctly (534)
I:kasp:check keys are created for zone multisigner-model2.kasp (535)
I:kasp:check number of keys for zone multisigner-model2.kasp in dir ns3 (535)
I:kasp:check key id 27054
I:kasp:check key id 57147
I:kasp:KEY1 ID 27054
I:kasp:KEY2 ID 57147
I:kasp:check rndc dnssec -status output for multisigner-model2.kasp (policy: multisigner-model2) (536)
I:kasp:check DNSKEY rrset is signed correctly for zone multisigner-model2.kasp (537)
I:kasp:check SOA rrset is signed correctly for zone multisigner-model2.kasp (538)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone multisigner-model2.kasp (539)
I:kasp:check A a.multisigner-model2.kasp rrset is signed correctly for zone multisigner-model2.kasp (540)
I:kasp:dnssec-verify zone multisigner-model2.kasp (541)
I:kasp:update zone with ZSK from another provider for zone multisigner-model2.kasp (542)
I:kasp:check keys are created for zone manual-rollover.kasp (543)
I:kasp:check number of keys for zone manual-rollover.kasp in dir ns3 (543)
I:kasp:check key id 41035
I:kasp:check key id 57161
I:kasp:KEY1 ID 41035
I:kasp:KEY2 ID 57161
I:kasp:check rndc dnssec -status output for manual-rollover.kasp (policy: manual-rollover) (544)
I:kasp:check key timing metadata for key KEY1 id 41035 zone manual-rollover.kasp (545)
I:kasp:check key timing metadata for key KEY2 id 57161 zone manual-rollover.kasp (546)
I:kasp:check DNSKEY rrset is signed correctly for zone manual-rollover.kasp (547)
I:kasp:check SOA rrset is signed correctly for zone manual-rollover.kasp (548)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone manual-rollover.kasp (549)
I:kasp:check A a.manual-rollover.kasp rrset is signed correctly for zone manual-rollover.kasp (550)
I:kasp:dnssec-verify zone manual-rollover.kasp (551)
I:kasp:calling rndc dnssec -rollover key 41035 -when 20220821072910 zone manual-rollover.kasp (552)
I:kasp:check keys are created for zone manual-rollover.kasp (553)
I:kasp:check number of keys for zone manual-rollover.kasp in dir ns3 (553)
I:kasp:check key id 41035
I:kasp:check key id 57161
I:kasp:KEY1 ID 41035
I:kasp:KEY2 ID 57161
I:kasp:check rndc dnssec -status output for manual-rollover.kasp (policy: manual-rollover) (554)
I:kasp:check key timing metadata for key KEY1 id 41035 zone manual-rollover.kasp (555)
I:kasp:check key timing metadata for key KEY2 id 57161 zone manual-rollover.kasp (556)
I:kasp:check DNSKEY rrset is signed correctly for zone manual-rollover.kasp (557)
I:kasp:check SOA rrset is signed correctly for zone manual-rollover.kasp (558)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone manual-rollover.kasp (559)
I:kasp:check A a.manual-rollover.kasp rrset is signed correctly for zone manual-rollover.kasp (560)
I:kasp:dnssec-verify zone manual-rollover.kasp (561)
I:kasp:calling rndc dnssec -rollover key 41035 -when 20220223072910 zone manual-rollover.kasp (562)
I:kasp:check keys are created for zone manual-rollover.kasp (563)
I:kasp:check number of keys for zone manual-rollover.kasp in dir ns3 (563)
I:kasp:check key id 41035
I:kasp:check key id 50571
I:kasp:check key id 57161
I:kasp:KEY1 ID 41035
I:kasp:KEY2 ID 57161
I:kasp:KEY3 ID 50571
I:kasp:check rndc dnssec -status output for manual-rollover.kasp (policy: manual-rollover) (564)
I:kasp:check DNSKEY rrset is signed correctly for zone manual-rollover.kasp (565)
I:kasp:check SOA rrset is signed correctly for zone manual-rollover.kasp (566)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone manual-rollover.kasp (567)
I:kasp:check A a.manual-rollover.kasp rrset is signed correctly for zone manual-rollover.kasp (568)
I:kasp:dnssec-verify zone manual-rollover.kasp (569)
I:kasp:calling rndc dnssec -rollover key 57161 -when 20220223072910 zone manual-rollover.kasp (570)
I:kasp:check keys are created for zone manual-rollover.kasp (571)
I:kasp:check number of keys for zone manual-rollover.kasp in dir ns3 (571)
I:kasp:check key id 00801
I:kasp:check key id 41035
I:kasp:check key id 50571
I:kasp:check key id 57161
I:kasp:KEY1 ID 41035
I:kasp:KEY2 ID 57161
I:kasp:KEY3 ID 50571
I:kasp:KEY4 ID 801
I:kasp:check rndc dnssec -status output for manual-rollover.kasp (policy: manual-rollover) (572)
I:kasp:check DNSKEY rrset is signed correctly for zone manual-rollover.kasp (573)
I:kasp:check SOA rrset is signed correctly for zone manual-rollover.kasp (574)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone manual-rollover.kasp (575)
I:kasp:check A a.manual-rollover.kasp rrset is signed correctly for zone manual-rollover.kasp (576)
I:kasp:dnssec-verify zone manual-rollover.kasp (577)
I:kasp:check that rndc dnssec -rollover fails if key is inactive (578)
I:kasp:check keys are created for zone step1.enable-dnssec.autosign (579)
I:kasp:check number of keys for zone step1.enable-dnssec.autosign in dir ns3 (579)
I:kasp:check key id 58696
I:kasp:KEY1 ID 58696
I:kasp:check rndc dnssec -status output for step1.enable-dnssec.autosign (policy: enable-dnssec) (580)
I:kasp:check key timing metadata for key KEY1 id 58696 zone step1.enable-dnssec.autosign (581)
I:kasp:check DNSKEY rrset is signed correctly for zone step1.enable-dnssec.autosign (582)
I:kasp:check SOA rrset is signed correctly for zone step1.enable-dnssec.autosign (583)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step1.enable-dnssec.autosign (584)
I:kasp:check A a.step1.enable-dnssec.autosign rrset is signed correctly for zone step1.enable-dnssec.autosign (585)
I:kasp:dnssec-verify zone step1.enable-dnssec.autosign (586)
I:kasp:check next key event for zone step1.enable-dnssec.autosign (587)
I:kasp:check keys are created for zone step2.enable-dnssec.autosign (588)
I:kasp:check number of keys for zone step2.enable-dnssec.autosign in dir ns3 (588)
I:kasp:check key id 49419
I:kasp:KEY1 ID 49419
I:kasp:check rndc dnssec -status output for step2.enable-dnssec.autosign (policy: enable-dnssec) (589)
I:kasp:check key timing metadata for key KEY1 id 49419 zone step2.enable-dnssec.autosign (590)
I:kasp:check DNSKEY rrset is signed correctly for zone step2.enable-dnssec.autosign (591)
I:kasp:check SOA rrset is signed correctly for zone step2.enable-dnssec.autosign (592)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step2.enable-dnssec.autosign (593)
I:kasp:check A a.step2.enable-dnssec.autosign rrset is signed correctly for zone step2.enable-dnssec.autosign (594)
I:kasp:dnssec-verify zone step2.enable-dnssec.autosign (595)
I:kasp:check next key event for zone step2.enable-dnssec.autosign (596)
I:kasp:check keys are created for zone step3.enable-dnssec.autosign (597)
I:kasp:check number of keys for zone step3.enable-dnssec.autosign in dir ns3 (597)
I:kasp:check key id 23312
I:kasp:KEY1 ID 23312
I:kasp:check rndc dnssec -status output for step3.enable-dnssec.autosign (policy: enable-dnssec) (598)
I:kasp:check key timing metadata for key KEY1 id 23312 zone step3.enable-dnssec.autosign (599)
I:kasp:check DNSKEY rrset is signed correctly for zone step3.enable-dnssec.autosign (600)
I:kasp:check SOA rrset is signed correctly for zone step3.enable-dnssec.autosign (601)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step3.enable-dnssec.autosign (602)
I:kasp:check A a.step3.enable-dnssec.autosign rrset is signed correctly for zone step3.enable-dnssec.autosign (603)
I:kasp:dnssec-verify zone step3.enable-dnssec.autosign (604)
I:kasp:check CDS/CDNSKEY publication is logged in ns3/named.run for key step3.enable-dnssec.autosign/ECDSAP256SHA256/23312 (605)
I:kasp:calling rndc dnssec -checkds -key 23312 published zone step3.enable-dnssec.autosign in  (606)
I:kasp:check next key event for zone step3.enable-dnssec.autosign (607)
I:kasp:check keys are created for zone step4.enable-dnssec.autosign (608)
I:kasp:check number of keys for zone step4.enable-dnssec.autosign in dir ns3 (608)
I:kasp:check key id 53207
I:kasp:KEY1 ID 53207
I:kasp:check rndc dnssec -status output for step4.enable-dnssec.autosign (policy: enable-dnssec) (609)
I:kasp:check key timing metadata for key KEY1 id 53207 zone step4.enable-dnssec.autosign (610)
I:kasp:check DNSKEY rrset is signed correctly for zone step4.enable-dnssec.autosign (611)
I:kasp:check SOA rrset is signed correctly for zone step4.enable-dnssec.autosign (612)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step4.enable-dnssec.autosign (613)
I:kasp:check A a.step4.enable-dnssec.autosign rrset is signed correctly for zone step4.enable-dnssec.autosign (614)
I:kasp:dnssec-verify zone step4.enable-dnssec.autosign (615)
I:kasp:check next key event for zone step4.enable-dnssec.autosign (616)
I:kasp:check keys are created for zone step1.zsk-prepub.autosign (617)
I:kasp:check number of keys for zone step1.zsk-prepub.autosign in dir ns3 (617)
I:kasp:check key id 38450
I:kasp:check key id 65299
I:kasp:KEY1 ID 65299
I:kasp:KEY2 ID 38450
I:kasp:check rndc dnssec -status output for step1.zsk-prepub.autosign (policy: zsk-prepub) (618)
I:kasp:check key timing metadata for key KEY1 id 65299 zone step1.zsk-prepub.autosign (619)
I:kasp:check key timing metadata for key KEY2 id 38450 zone step1.zsk-prepub.autosign (620)
I:kasp:check DNSKEY rrset is signed correctly for zone step1.zsk-prepub.autosign (621)
I:kasp:check SOA rrset is signed correctly for zone step1.zsk-prepub.autosign (622)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step1.zsk-prepub.autosign (623)
I:kasp:check A a.step1.zsk-prepub.autosign rrset is signed correctly for zone step1.zsk-prepub.autosign (624)
I:kasp:dnssec-verify zone step1.zsk-prepub.autosign (625)
I:kasp:check next key event for zone step1.zsk-prepub.autosign (626)
I:kasp:check keys are created for zone step2.zsk-prepub.autosign (627)
I:kasp:check number of keys for zone step2.zsk-prepub.autosign in dir ns3 (627)
I:kasp:check key id 05175
I:kasp:check key id 02149
I:kasp:check key id 36424
I:kasp:KEY1 ID 36424
I:kasp:KEY2 ID 2149
I:kasp:KEY3 ID 5175
I:kasp:check rndc dnssec -status output for step2.zsk-prepub.autosign (policy: zsk-prepub) (628)
I:kasp:check key timing metadata for key KEY1 id 36424 zone step2.zsk-prepub.autosign (629)
I:kasp:check key timing metadata for key KEY2 id 2149 zone step2.zsk-prepub.autosign (630)
I:kasp:check key timing metadata for key KEY3 id 5175 zone step2.zsk-prepub.autosign (631)
I:kasp:check DNSKEY rrset is signed correctly for zone step2.zsk-prepub.autosign (632)
I:kasp:check SOA rrset is signed correctly for zone step2.zsk-prepub.autosign (633)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step2.zsk-prepub.autosign (634)
I:kasp:check A a.step2.zsk-prepub.autosign rrset is signed correctly for zone step2.zsk-prepub.autosign (635)
I:kasp:dnssec-verify zone step2.zsk-prepub.autosign (636)
I:kasp:check next key event for zone step2.zsk-prepub.autosign (637)
I:kasp:check keys are created for zone step3.zsk-prepub.autosign (638)
I:kasp:check number of keys for zone step3.zsk-prepub.autosign in dir ns3 (638)
I:kasp:check key id 52300
I:kasp:check key id 16996
I:kasp:check key id 37797
I:kasp:KEY1 ID 16996
I:kasp:KEY2 ID 52300
I:kasp:KEY3 ID 37797
I:kasp:check rndc dnssec -status output for step3.zsk-prepub.autosign (policy: zsk-prepub) (639)
I:kasp:check key timing metadata for key KEY1 id 16996 zone step3.zsk-prepub.autosign (640)
I:kasp:check key timing metadata for key KEY2 id 52300 zone step3.zsk-prepub.autosign (641)
I:kasp:check key timing metadata for key KEY3 id 37797 zone step3.zsk-prepub.autosign (642)
I:kasp:check DNSKEY rrset is signed correctly for zone step3.zsk-prepub.autosign (643)
I:kasp:check SOA rrset is signed correctly for zone step3.zsk-prepub.autosign (644)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step3.zsk-prepub.autosign (645)
I:kasp:check A a.step3.zsk-prepub.autosign rrset is signed correctly for zone step3.zsk-prepub.autosign (646)
I:kasp:dnssec-verify zone step3.zsk-prepub.autosign (647)
I:kasp:check next key event for zone step3.zsk-prepub.autosign (648)
I:kasp:check keys are created for zone step4.zsk-prepub.autosign (649)
I:kasp:check number of keys for zone step4.zsk-prepub.autosign in dir ns3 (649)
I:kasp:check key id 18557
I:kasp:check key id 21894
I:kasp:check key id 25885
I:kasp:KEY1 ID 25885
I:kasp:KEY2 ID 21894
I:kasp:KEY3 ID 18557
I:kasp:check rndc dnssec -status output for step4.zsk-prepub.autosign (policy: zsk-prepub) (650)
I:kasp:check key timing metadata for key KEY1 id 25885 zone step4.zsk-prepub.autosign (651)
I:kasp:check key timing metadata for key KEY2 id 21894 zone step4.zsk-prepub.autosign (652)
I:kasp:check key timing metadata for key KEY3 id 18557 zone step4.zsk-prepub.autosign (653)
I:kasp:check DNSKEY rrset is signed correctly for zone step4.zsk-prepub.autosign (654)
I:kasp:check SOA rrset is signed correctly for zone step4.zsk-prepub.autosign (655)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step4.zsk-prepub.autosign (656)
I:kasp:check A a.step4.zsk-prepub.autosign rrset is signed correctly for zone step4.zsk-prepub.autosign (657)
I:kasp:dnssec-verify zone step4.zsk-prepub.autosign (658)
I:kasp:check next key event for zone step4.zsk-prepub.autosign (659)
I:kasp:check keys are created for zone step5.zsk-prepub.autosign (660)
I:kasp:check number of keys for zone step5.zsk-prepub.autosign in dir ns3 (660)
I:kasp:check key id 25486
I:kasp:check key id 43675
I:kasp:check key id 63322
I:kasp:KEY1 ID 63322
I:kasp:KEY2 ID 43675
I:kasp:KEY3 ID 25486
I:kasp:check rndc dnssec -status output for step5.zsk-prepub.autosign (policy: zsk-prepub) (661)
I:kasp:check key timing metadata for key KEY1 id 63322 zone step5.zsk-prepub.autosign (662)
I:kasp:check key timing metadata for key KEY2 id 43675 zone step5.zsk-prepub.autosign (663)
I:kasp:check key timing metadata for key KEY3 id 25486 zone step5.zsk-prepub.autosign (664)
I:kasp:check DNSKEY rrset is signed correctly for zone step5.zsk-prepub.autosign (665)
I:kasp:check SOA rrset is signed correctly for zone step5.zsk-prepub.autosign (666)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step5.zsk-prepub.autosign (667)
I:kasp:check A a.step5.zsk-prepub.autosign rrset is signed correctly for zone step5.zsk-prepub.autosign (668)
I:kasp:dnssec-verify zone step5.zsk-prepub.autosign (669)
I:kasp:check next key event for zone step5.zsk-prepub.autosign (670)
I:kasp:check keys are created for zone step6.zsk-prepub.autosign (671)
I:kasp:check number of keys for zone step6.zsk-prepub.autosign in dir ns3 (671)
I:kasp:check key id 14713
I:kasp:check key id 29809
I:kasp:KEY1 ID 29809
I:kasp:KEY3 ID 14713
I:kasp:check rndc dnssec -status output for step6.zsk-prepub.autosign (policy: zsk-prepub) (672)
I:kasp:check DNSKEY rrset is signed correctly for zone step6.zsk-prepub.autosign (673)
I:kasp:check SOA rrset is signed correctly for zone step6.zsk-prepub.autosign (674)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step6.zsk-prepub.autosign (675)
I:kasp:check A a.step6.zsk-prepub.autosign rrset is signed correctly for zone step6.zsk-prepub.autosign (676)
I:kasp:dnssec-verify zone step6.zsk-prepub.autosign (677)
I:kasp:check keys are created for zone step1.ksk-doubleksk.autosign (678)
I:kasp:check number of keys for zone step1.ksk-doubleksk.autosign in dir ns3 (678)
I:kasp:check key id 14954
I:kasp:check key id 48546
I:kasp:KEY1 ID 48546
I:kasp:KEY2 ID 14954
I:kasp:check rndc dnssec -status output for step1.ksk-doubleksk.autosign (policy: ksk-doubleksk) (679)
I:kasp:check key timing metadata for key KEY1 id 48546 zone step1.ksk-doubleksk.autosign (680)
I:kasp:check key timing metadata for key KEY2 id 14954 zone step1.ksk-doubleksk.autosign (681)
I:kasp:check DNSKEY rrset is signed correctly for zone step1.ksk-doubleksk.autosign (682)
I:kasp:check SOA rrset is signed correctly for zone step1.ksk-doubleksk.autosign (683)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step1.ksk-doubleksk.autosign (684)
I:kasp:check A a.step1.ksk-doubleksk.autosign rrset is signed correctly for zone step1.ksk-doubleksk.autosign (685)
I:kasp:dnssec-verify zone step1.ksk-doubleksk.autosign (686)
I:kasp:check next key event for zone step1.ksk-doubleksk.autosign (687)
I:kasp:check keys are created for zone step2.ksk-doubleksk.autosign (688)
I:kasp:check number of keys for zone step2.ksk-doubleksk.autosign in dir ns3 (688)
I:kasp:check key id 57891
I:kasp:check key id 03578
I:kasp:check key id 01309
I:kasp:KEY1 ID 57891
I:kasp:KEY2 ID 1309
I:kasp:KEY3 ID 3578
I:kasp:check rndc dnssec -status output for step2.ksk-doubleksk.autosign (policy: ksk-doubleksk) (689)
I:kasp:check key timing metadata for key KEY1 id 57891 zone step2.ksk-doubleksk.autosign (690)
I:kasp:check key timing metadata for key KEY2 id 1309 zone step2.ksk-doubleksk.autosign (691)
I:kasp:check key timing metadata for key KEY3 id 3578 zone step2.ksk-doubleksk.autosign (692)
I:kasp:check DNSKEY rrset is signed correctly for zone step2.ksk-doubleksk.autosign (693)
I:kasp:check SOA rrset is signed correctly for zone step2.ksk-doubleksk.autosign (694)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step2.ksk-doubleksk.autosign (695)
I:kasp:check A a.step2.ksk-doubleksk.autosign rrset is signed correctly for zone step2.ksk-doubleksk.autosign (696)
I:kasp:dnssec-verify zone step2.ksk-doubleksk.autosign (697)
I:kasp:check next key event for zone step2.ksk-doubleksk.autosign (698)
I:kasp:check keys are created for zone step3.ksk-doubleksk.autosign (699)
I:kasp:check number of keys for zone step3.ksk-doubleksk.autosign in dir ns3 (699)
I:kasp:check key id 48762
I:kasp:check key id 09626
I:kasp:check key id 62101
I:kasp:KEY1 ID 9626
I:kasp:KEY2 ID 62101
I:kasp:KEY3 ID 48762
I:kasp:check rndc dnssec -status output for step3.ksk-doubleksk.autosign (policy: ksk-doubleksk) (700)
I:kasp:check CDS/CDNSKEY publication is logged in ns3/named.run for key step3.ksk-doubleksk.autosign/ECDSAP256SHA256/48762 (701)
I:kasp:check key timing metadata for key KEY1 id 9626 zone step3.ksk-doubleksk.autosign (702)
I:kasp:check key timing metadata for key KEY2 id 62101 zone step3.ksk-doubleksk.autosign (703)
I:kasp:check key timing metadata for key KEY3 id 48762 zone step3.ksk-doubleksk.autosign (704)
I:kasp:check DNSKEY rrset is signed correctly for zone step3.ksk-doubleksk.autosign (705)
I:kasp:check SOA rrset is signed correctly for zone step3.ksk-doubleksk.autosign (706)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step3.ksk-doubleksk.autosign (707)
I:kasp:check A a.step3.ksk-doubleksk.autosign rrset is signed correctly for zone step3.ksk-doubleksk.autosign (708)
I:kasp:dnssec-verify zone step3.ksk-doubleksk.autosign (709)
I:kasp:calling rndc dnssec -checkds -key 9626 withdrawn zone step3.ksk-doubleksk.autosign in  (710)
I:kasp:calling rndc dnssec -checkds -key 48762 published zone step3.ksk-doubleksk.autosign in  (711)
I:kasp:check next key event for zone step3.ksk-doubleksk.autosign (712)
I:kasp:check keys are created for zone step4.ksk-doubleksk.autosign (713)
I:kasp:check number of keys for zone step4.ksk-doubleksk.autosign in dir ns3 (713)
I:kasp:check key id 39516
I:kasp:check key id 04132
I:kasp:check key id 27575
I:kasp:KEY1 ID 4132
I:kasp:KEY2 ID 27575
I:kasp:KEY3 ID 39516
I:kasp:check rndc dnssec -status output for step4.ksk-doubleksk.autosign (policy: ksk-doubleksk) (714)
I:kasp:check key timing metadata for key KEY1 id 4132 zone step4.ksk-doubleksk.autosign (715)
I:kasp:check key timing metadata for key KEY2 id 27575 zone step4.ksk-doubleksk.autosign (716)
I:kasp:check key timing metadata for key KEY3 id 39516 zone step4.ksk-doubleksk.autosign (717)
I:kasp:check DNSKEY rrset is signed correctly for zone step4.ksk-doubleksk.autosign (718)
I:kasp:check SOA rrset is signed correctly for zone step4.ksk-doubleksk.autosign (719)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step4.ksk-doubleksk.autosign (720)
I:kasp:check A a.step4.ksk-doubleksk.autosign rrset is signed correctly for zone step4.ksk-doubleksk.autosign (721)
I:kasp:dnssec-verify zone step4.ksk-doubleksk.autosign (722)
I:kasp:check next key event for zone step4.ksk-doubleksk.autosign (723)
I:kasp:check keys are created for zone step5.ksk-doubleksk.autosign (724)
I:kasp:check number of keys for zone step5.ksk-doubleksk.autosign in dir ns3 (724)
I:kasp:check key id 62271
I:kasp:check key id 48097
I:kasp:check key id 00303
I:kasp:KEY1 ID 48097
I:kasp:KEY2 ID 303
I:kasp:KEY3 ID 62271
I:kasp:check rndc dnssec -status output for step5.ksk-doubleksk.autosign (policy: ksk-doubleksk) (725)
I:kasp:check key timing metadata for key KEY1 id 48097 zone step5.ksk-doubleksk.autosign (726)
I:kasp:check key timing metadata for key KEY2 id 303 zone step5.ksk-doubleksk.autosign (727)
I:kasp:check key timing metadata for key KEY3 id 62271 zone step5.ksk-doubleksk.autosign (728)
I:kasp:check DNSKEY rrset is signed correctly for zone step5.ksk-doubleksk.autosign (729)
I:kasp:check SOA rrset is signed correctly for zone step5.ksk-doubleksk.autosign (730)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step5.ksk-doubleksk.autosign (731)
I:kasp:check A a.step5.ksk-doubleksk.autosign rrset is signed correctly for zone step5.ksk-doubleksk.autosign (732)
I:kasp:dnssec-verify zone step5.ksk-doubleksk.autosign (733)
I:kasp:check next key event for zone step5.ksk-doubleksk.autosign (734)
I:kasp:check keys are created for zone step6.ksk-doubleksk.autosign (735)
I:kasp:check number of keys for zone step6.ksk-doubleksk.autosign in dir ns3 (735)
I:kasp:check key id 37055
I:kasp:check key id 44488
I:kasp:KEY2 ID 37055
I:kasp:KEY3 ID 44488
I:kasp:check rndc dnssec -status output for step6.ksk-doubleksk.autosign (policy: ksk-doubleksk) (736)
I:kasp:check DNSKEY rrset is signed correctly for zone step6.ksk-doubleksk.autosign (737)
I:kasp:check SOA rrset is signed correctly for zone step6.ksk-doubleksk.autosign (738)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step6.ksk-doubleksk.autosign (739)
I:kasp:check A a.step6.ksk-doubleksk.autosign rrset is signed correctly for zone step6.ksk-doubleksk.autosign (740)
I:kasp:dnssec-verify zone step6.ksk-doubleksk.autosign (741)
I:kasp:check keys are created for zone step1.csk-roll.autosign (742)
I:kasp:check number of keys for zone step1.csk-roll.autosign in dir ns3 (742)
I:kasp:check key id 07894
I:kasp:KEY1 ID 7894
I:kasp:check rndc dnssec -status output for step1.csk-roll.autosign (policy: csk-roll) (743)
I:kasp:check key timing metadata for key KEY1 id 7894 zone step1.csk-roll.autosign (744)
I:kasp:check DNSKEY rrset is signed correctly for zone step1.csk-roll.autosign (745)
I:kasp:check SOA rrset is signed correctly for zone step1.csk-roll.autosign (746)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step1.csk-roll.autosign (747)
I:kasp:check A a.step1.csk-roll.autosign rrset is signed correctly for zone step1.csk-roll.autosign (748)
I:kasp:dnssec-verify zone step1.csk-roll.autosign (749)
I:kasp:check next key event for zone step1.csk-roll.autosign (750)
I:kasp:check keys are created for zone step2.csk-roll.autosign (751)
I:kasp:check number of keys for zone step2.csk-roll.autosign in dir ns3 (751)
I:kasp:check key id 50243
I:kasp:check key id 60972
I:kasp:KEY1 ID 50243
I:kasp:KEY2 ID 60972
I:kasp:check rndc dnssec -status output for step2.csk-roll.autosign (policy: csk-roll) (752)
I:kasp:check key timing metadata for key KEY1 id 50243 zone step2.csk-roll.autosign (753)
I:kasp:check key timing metadata for key KEY2 id 60972 zone step2.csk-roll.autosign (754)
I:kasp:check DNSKEY rrset is signed correctly for zone step2.csk-roll.autosign (755)
I:kasp:check SOA rrset is signed correctly for zone step2.csk-roll.autosign (756)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step2.csk-roll.autosign (757)
I:kasp:check A a.step2.csk-roll.autosign rrset is signed correctly for zone step2.csk-roll.autosign (758)
I:kasp:dnssec-verify zone step2.csk-roll.autosign (759)
I:kasp:check next key event for zone step2.csk-roll.autosign (760)
I:kasp:check keys are created for zone step3.csk-roll.autosign (761)
I:kasp:check number of keys for zone step3.csk-roll.autosign in dir ns3 (761)
I:kasp:check key id 18596
I:kasp:check key id 16349
I:kasp:KEY1 ID 16349
I:kasp:KEY2 ID 18596
I:kasp:check rndc dnssec -status output for step3.csk-roll.autosign (policy: csk-roll) (762)
I:kasp:check CDS/CDNSKEY publication is logged in ns3/named.run for key step3.csk-roll.autosign/ECDSAP256SHA256/18596 (763)
I:kasp:check key timing metadata for key KEY1 id 16349 zone step3.csk-roll.autosign (764)
I:kasp:check key timing metadata for key KEY2 id 18596 zone step3.csk-roll.autosign (765)
I:kasp:check DNSKEY rrset is signed correctly for zone step3.csk-roll.autosign (766)
I:kasp:check SOA rrset is signed correctly for zone step3.csk-roll.autosign (767)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step3.csk-roll.autosign (768)
I:kasp:check A a.step3.csk-roll.autosign rrset is signed correctly for zone step3.csk-roll.autosign (769)
I:kasp:dnssec-verify zone step3.csk-roll.autosign (770)
I:kasp:calling rndc dnssec -checkds -key 16349 withdrawn zone step3.csk-roll.autosign in  (771)
I:kasp:calling rndc dnssec -checkds -key 18596 published zone step3.csk-roll.autosign in  (772)
I:kasp:check next key event for zone step3.csk-roll.autosign (773)
I:kasp:check keys are created for zone step4.csk-roll.autosign (774)
I:kasp:check number of keys for zone step4.csk-roll.autosign in dir ns3 (774)
I:kasp:check key id 34606
I:kasp:check key id 08471
I:kasp:KEY1 ID 34606
I:kasp:KEY2 ID 8471
I:kasp:check rndc dnssec -status output for step4.csk-roll.autosign (policy: csk-roll) (775)
I:kasp:check key timing metadata for key KEY1 id 34606 zone step4.csk-roll.autosign (776)
I:kasp:check key timing metadata for key KEY2 id 8471 zone step4.csk-roll.autosign (777)
I:kasp:check DNSKEY rrset is signed correctly for zone step4.csk-roll.autosign (778)
I:kasp:check SOA rrset is signed correctly for zone step4.csk-roll.autosign (779)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step4.csk-roll.autosign (780)
I:kasp:check A a.step4.csk-roll.autosign rrset is signed correctly for zone step4.csk-roll.autosign (781)
I:kasp:dnssec-verify zone step4.csk-roll.autosign (782)
I:kasp:check next key event for zone step4.csk-roll.autosign (783)
I:kasp:check keys are created for zone step5.csk-roll.autosign (784)
I:kasp:check number of keys for zone step5.csk-roll.autosign in dir ns3 (784)
I:kasp:check key id 35059
I:kasp:check key id 15046
I:kasp:KEY1 ID 15046
I:kasp:KEY2 ID 35059
I:kasp:check rndc dnssec -status output for step5.csk-roll.autosign (policy: csk-roll) (785)
I:kasp:check key timing metadata for key KEY1 id 15046 zone step5.csk-roll.autosign (786)
I:kasp:check key timing metadata for key KEY2 id 35059 zone step5.csk-roll.autosign (787)
I:kasp:check DNSKEY rrset is signed correctly for zone step5.csk-roll.autosign (788)
I:kasp:check SOA rrset is signed correctly for zone step5.csk-roll.autosign (789)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step5.csk-roll.autosign (790)
I:kasp:check A a.step5.csk-roll.autosign rrset is signed correctly for zone step5.csk-roll.autosign (791)
I:kasp:dnssec-verify zone step5.csk-roll.autosign (792)
I:kasp:check next key event for zone step5.csk-roll.autosign (793)
I:kasp:check keys are created for zone step6.csk-roll.autosign (794)
I:kasp:check number of keys for zone step6.csk-roll.autosign in dir ns3 (794)
I:kasp:check key id 45617
I:kasp:check key id 22962
I:kasp:KEY1 ID 22962
I:kasp:KEY2 ID 45617
I:kasp:check rndc dnssec -status output for step6.csk-roll.autosign (policy: csk-roll) (795)
I:kasp:check key timing metadata for key KEY1 id 22962 zone step6.csk-roll.autosign (796)
I:kasp:check key timing metadata for key KEY2 id 45617 zone step6.csk-roll.autosign (797)
I:kasp:check DNSKEY rrset is signed correctly for zone step6.csk-roll.autosign (798)
I:kasp:check SOA rrset is signed correctly for zone step6.csk-roll.autosign (799)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step6.csk-roll.autosign (800)
I:kasp:check A a.step6.csk-roll.autosign rrset is signed correctly for zone step6.csk-roll.autosign (801)
I:kasp:dnssec-verify zone step6.csk-roll.autosign (802)
I:kasp:check next key event for zone step6.csk-roll.autosign (803)
I:kasp:check keys are created for zone step7.csk-roll.autosign (804)
I:kasp:check number of keys for zone step7.csk-roll.autosign in dir ns3 (804)
I:kasp:check key id 15288
I:kasp:check key id 05779
I:kasp:KEY1 ID 5779
I:kasp:KEY2 ID 15288
I:kasp:check rndc dnssec -status output for step7.csk-roll.autosign (policy: csk-roll) (805)
I:kasp:check key timing metadata for key KEY1 id 5779 zone step7.csk-roll.autosign (806)
I:kasp:check key timing metadata for key KEY2 id 15288 zone step7.csk-roll.autosign (807)
I:kasp:check DNSKEY rrset is signed correctly for zone step7.csk-roll.autosign (808)
I:kasp:check SOA rrset is signed correctly for zone step7.csk-roll.autosign (809)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step7.csk-roll.autosign (810)
I:kasp:check A a.step7.csk-roll.autosign rrset is signed correctly for zone step7.csk-roll.autosign (811)
I:kasp:dnssec-verify zone step7.csk-roll.autosign (812)
I:kasp:check next key event for zone step7.csk-roll.autosign (813)
I:kasp:check keys are created for zone step8.csk-roll.autosign (814)
I:kasp:check number of keys for zone step8.csk-roll.autosign in dir ns3 (814)
I:kasp:check key id 44777
I:kasp:KEY2 ID 44777
I:kasp:check rndc dnssec -status output for step8.csk-roll.autosign (policy: csk-roll) (815)
I:kasp:check DNSKEY rrset is signed correctly for zone step8.csk-roll.autosign (816)
I:kasp:check SOA rrset is signed correctly for zone step8.csk-roll.autosign (817)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step8.csk-roll.autosign (818)
I:kasp:check A a.step8.csk-roll.autosign rrset is signed correctly for zone step8.csk-roll.autosign (819)
I:kasp:dnssec-verify zone step8.csk-roll.autosign (820)
I:kasp:check keys are created for zone step1.csk-roll2.autosign (821)
I:kasp:check number of keys for zone step1.csk-roll2.autosign in dir ns3 (821)
I:kasp:check key id 10601
I:kasp:KEY1 ID 10601
I:kasp:check rndc dnssec -status output for step1.csk-roll2.autosign (policy: csk-roll2) (822)
I:kasp:check key timing metadata for key KEY1 id 10601 zone step1.csk-roll2.autosign (823)
I:kasp:check DNSKEY rrset is signed correctly for zone step1.csk-roll2.autosign (824)
I:kasp:check SOA rrset is signed correctly for zone step1.csk-roll2.autosign (825)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step1.csk-roll2.autosign (826)
I:kasp:check A a.step1.csk-roll2.autosign rrset is signed correctly for zone step1.csk-roll2.autosign (827)
I:kasp:dnssec-verify zone step1.csk-roll2.autosign (828)
I:kasp:check next key event for zone step1.csk-roll2.autosign (829)
I:kasp:check keys are created for zone step2.csk-roll2.autosign (830)
I:kasp:check number of keys for zone step2.csk-roll2.autosign in dir ns3 (830)
I:kasp:check key id 14421
I:kasp:check key id 39817
I:kasp:KEY1 ID 14421
I:kasp:KEY2 ID 39817
I:kasp:check rndc dnssec -status output for step2.csk-roll2.autosign (policy: csk-roll2) (831)
I:kasp:check DNSKEY rrset is signed correctly for zone step2.csk-roll2.autosign (832)
I:kasp:check SOA rrset is signed correctly for zone step2.csk-roll2.autosign (833)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step2.csk-roll2.autosign (834)
I:kasp:check A a.step2.csk-roll2.autosign rrset is signed correctly for zone step2.csk-roll2.autosign (835)
I:kasp:dnssec-verify zone step2.csk-roll2.autosign (836)
I:kasp:check next key event for zone step2.csk-roll2.autosign (837)
I:kasp:check keys are created for zone step3.csk-roll2.autosign (838)
I:kasp:check number of keys for zone step3.csk-roll2.autosign in dir ns3 (838)
I:kasp:check key id 44067
I:kasp:check key id 25487
I:kasp:KEY1 ID 44067
I:kasp:KEY2 ID 25487
I:kasp:check rndc dnssec -status output for step3.csk-roll2.autosign (policy: csk-roll2) (839)
I:kasp:check CDS/CDNSKEY publication is logged in ns3/named.run for key step3.csk-roll2.autosign/ECDSAP256SHA256/25487 (840)
I:kasp:check key timing metadata for key KEY1 id 44067 zone step3.csk-roll2.autosign (841)
I:kasp:check key timing metadata for key KEY2 id 25487 zone step3.csk-roll2.autosign (842)
I:kasp:check DNSKEY rrset is signed correctly for zone step3.csk-roll2.autosign (843)
I:kasp:check SOA rrset is signed correctly for zone step3.csk-roll2.autosign (844)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step3.csk-roll2.autosign (845)
I:kasp:check A a.step3.csk-roll2.autosign rrset is signed correctly for zone step3.csk-roll2.autosign (846)
I:kasp:dnssec-verify zone step3.csk-roll2.autosign (847)
I:kasp:calling rndc dnssec -checkds -key 44067 withdrawn zone step3.csk-roll2.autosign in  (848)
I:kasp:calling rndc dnssec -checkds -key 25487 published zone step3.csk-roll2.autosign in  (849)
I:kasp:check next key event for zone step3.csk-roll2.autosign (850)
I:kasp:check keys are created for zone step4.csk-roll2.autosign (851)
I:kasp:check number of keys for zone step4.csk-roll2.autosign in dir ns3 (851)
I:kasp:check key id 31445
I:kasp:check key id 63920
I:kasp:KEY1 ID 63920
I:kasp:KEY2 ID 31445
I:kasp:check rndc dnssec -status output for step4.csk-roll2.autosign (policy: csk-roll2) (852)
I:kasp:check key timing metadata for key KEY1 id 63920 zone step4.csk-roll2.autosign (853)
I:kasp:check key timing metadata for key KEY2 id 31445 zone step4.csk-roll2.autosign (854)
I:kasp:check DNSKEY rrset is signed correctly for zone step4.csk-roll2.autosign (855)
I:kasp:check SOA rrset is signed correctly for zone step4.csk-roll2.autosign (856)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step4.csk-roll2.autosign (857)
I:kasp:check A a.step4.csk-roll2.autosign rrset is signed correctly for zone step4.csk-roll2.autosign (858)
I:kasp:dnssec-verify zone step4.csk-roll2.autosign (859)
I:kasp:check next key event for zone step4.csk-roll2.autosign (860)
I:kasp:check keys are created for zone step5.csk-roll2.autosign (861)
I:kasp:check number of keys for zone step5.csk-roll2.autosign in dir ns3 (861)
I:kasp:check key id 54473
I:kasp:check key id 02160
I:kasp:KEY1 ID 2160
I:kasp:KEY2 ID 54473
I:kasp:check rndc dnssec -status output for step5.csk-roll2.autosign (policy: csk-roll2) (862)
I:kasp:check key timing metadata for key KEY1 id 2160 zone step5.csk-roll2.autosign (863)
I:kasp:check key timing metadata for key KEY2 id 54473 zone step5.csk-roll2.autosign (864)
I:kasp:check DNSKEY rrset is signed correctly for zone step5.csk-roll2.autosign (865)
I:kasp:check SOA rrset is signed correctly for zone step5.csk-roll2.autosign (866)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step5.csk-roll2.autosign (867)
I:kasp:check A a.step5.csk-roll2.autosign rrset is signed correctly for zone step5.csk-roll2.autosign (868)
I:kasp:dnssec-verify zone step5.csk-roll2.autosign (869)
I:kasp:check next key event for zone step5.csk-roll2.autosign (870)
I:kasp:check keys are created for zone step6.csk-roll2.autosign (871)
I:kasp:check number of keys for zone step6.csk-roll2.autosign in dir ns3 (871)
I:kasp:check key id 60062
I:kasp:check key id 03543
I:kasp:KEY1 ID 3543
I:kasp:KEY2 ID 60062
I:kasp:check rndc dnssec -status output for step6.csk-roll2.autosign (policy: csk-roll2) (872)
I:kasp:check key timing metadata for key KEY1 id 3543 zone step6.csk-roll2.autosign (873)
I:kasp:check key timing metadata for key KEY2 id 60062 zone step6.csk-roll2.autosign (874)
I:kasp:check DNSKEY rrset is signed correctly for zone step6.csk-roll2.autosign (875)
I:kasp:check SOA rrset is signed correctly for zone step6.csk-roll2.autosign (876)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step6.csk-roll2.autosign (877)
I:kasp:check A a.step6.csk-roll2.autosign rrset is signed correctly for zone step6.csk-roll2.autosign (878)
I:kasp:dnssec-verify zone step6.csk-roll2.autosign (879)
I:kasp:check next key event for zone step6.csk-roll2.autosign (880)
I:kasp:check keys are created for zone step7.csk-roll2.autosign (881)
I:kasp:check number of keys for zone step7.csk-roll2.autosign in dir ns3 (881)
I:kasp:check key id 01729
I:kasp:check key id 41350
I:kasp:KEY1 ID 1729
I:kasp:KEY2 ID 41350
I:kasp:check rndc dnssec -status output for step7.csk-roll2.autosign (policy: csk-roll2) (882)
I:kasp:check DNSKEY rrset is signed correctly for zone step7.csk-roll2.autosign (883)
I:kasp:check SOA rrset is signed correctly for zone step7.csk-roll2.autosign (884)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step7.csk-roll2.autosign (885)
I:kasp:check A a.step7.csk-roll2.autosign rrset is signed correctly for zone step7.csk-roll2.autosign (886)
I:kasp:dnssec-verify zone step7.csk-roll2.autosign (887)
I:kasp:check keys are created for zone step1.algorithm-roll.kasp (888)
I:kasp:check number of keys for zone step1.algorithm-roll.kasp in dir ns6 (888)
I:kasp:check key id 19141
I:kasp:check key id 56641
I:kasp:KEY1 ID 56641
I:kasp:KEY2 ID 19141
I:kasp:check rndc dnssec -status output for step1.algorithm-roll.kasp (policy: rsasha1) (889)
I:kasp:check key timing metadata for key KEY1 id 56641 zone step1.algorithm-roll.kasp (890)
I:kasp:check key timing metadata for key KEY2 id 19141 zone step1.algorithm-roll.kasp (891)
I:kasp:check DNSKEY rrset is signed correctly for zone step1.algorithm-roll.kasp (892)
I:kasp:check SOA rrset is signed correctly for zone step1.algorithm-roll.kasp (893)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step1.algorithm-roll.kasp (894)
I:kasp:check A a.step1.algorithm-roll.kasp rrset is signed correctly for zone step1.algorithm-roll.kasp (895)
I:kasp:dnssec-verify zone step1.algorithm-roll.kasp (896)
I:kasp:check next key event for zone step1.algorithm-roll.kasp (897)
I:kasp:check keys are created for zone step1.csk-algorithm-roll.kasp (898)
I:kasp:check number of keys for zone step1.csk-algorithm-roll.kasp in dir ns6 (898)
I:kasp:check key id 62344
I:kasp:KEY1 ID 62344
I:kasp:check rndc dnssec -status output for step1.csk-algorithm-roll.kasp (policy: csk-algoroll) (899)
I:kasp:check key timing metadata for key KEY1 id 62344 zone step1.csk-algorithm-roll.kasp (900)
I:kasp:check DNSKEY rrset is signed correctly for zone step1.csk-algorithm-roll.kasp (901)
I:kasp:check SOA rrset is signed correctly for zone step1.csk-algorithm-roll.kasp (902)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step1.csk-algorithm-roll.kasp (903)
I:kasp:check A a.step1.csk-algorithm-roll.kasp rrset is signed correctly for zone step1.csk-algorithm-roll.kasp (904)
I:kasp:dnssec-verify zone step1.csk-algorithm-roll.kasp (905)
I:kasp:check next key event for zone step1.csk-algorithm-roll.kasp (906)
I:kasp:check keys are created for zone step1.going-insecure.kasp (907)
I:kasp:check number of keys for zone step1.going-insecure.kasp in dir ns6 (907)
I:kasp:check key id 46967
I:kasp:check key id 59599
I:kasp:KEY1 ID 59599
I:kasp:KEY2 ID 46967
I:kasp:check rndc dnssec -status output for step1.going-insecure.kasp (policy: unsigning) (908)
I:kasp:check key timing metadata for key KEY1 id 59599 zone step1.going-insecure.kasp (909)
I:kasp:check key timing metadata for key KEY2 id 46967 zone step1.going-insecure.kasp (910)
I:kasp:check DNSKEY rrset is signed correctly for zone step1.going-insecure.kasp (911)
I:kasp:check SOA rrset is signed correctly for zone step1.going-insecure.kasp (912)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step1.going-insecure.kasp (913)
I:kasp:check A a.step1.going-insecure.kasp rrset is signed correctly for zone step1.going-insecure.kasp (914)
I:kasp:dnssec-verify zone step1.going-insecure.kasp (915)
I:kasp:check keys are created for zone step1.going-insecure-dynamic.kasp (916)
I:kasp:check number of keys for zone step1.going-insecure-dynamic.kasp in dir ns6 (916)
I:kasp:check key id 61431
I:kasp:check key id 62458
I:kasp:KEY1 ID 61431
I:kasp:KEY2 ID 62458
I:kasp:check rndc dnssec -status output for step1.going-insecure-dynamic.kasp (policy: unsigning) (917)
I:kasp:check key timing metadata for key KEY1 id 61431 zone step1.going-insecure-dynamic.kasp (918)
I:kasp:check key timing metadata for key KEY2 id 62458 zone step1.going-insecure-dynamic.kasp (919)
I:kasp:check DNSKEY rrset is signed correctly for zone step1.going-insecure-dynamic.kasp (920)
I:kasp:check SOA rrset is signed correctly for zone step1.going-insecure-dynamic.kasp (921)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step1.going-insecure-dynamic.kasp (922)
I:kasp:check A a.step1.going-insecure-dynamic.kasp rrset is signed correctly for zone step1.going-insecure-dynamic.kasp (923)
I:kasp:dnssec-verify zone step1.going-insecure-dynamic.kasp (924)
I:kasp:check keys are created for zone step1.going-straight-to-none.kasp (925)
I:kasp:check number of keys for zone step1.going-straight-to-none.kasp in dir ns6 (925)
I:kasp:check key id 28748
I:kasp:KEY1 ID 28748
I:kasp:check rndc dnssec -status output for step1.going-straight-to-none.kasp (policy: default) (926)
I:kasp:check key timing metadata for key KEY1 id 28748 zone step1.going-straight-to-none.kasp (927)
I:kasp:check DNSKEY rrset is signed correctly for zone step1.going-straight-to-none.kasp (928)
I:kasp:check SOA rrset is signed correctly for zone step1.going-straight-to-none.kasp (929)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step1.going-straight-to-none.kasp (930)
I:kasp:check A a.step1.going-straight-to-none.kasp rrset is signed correctly for zone step1.going-straight-to-none.kasp (931)
I:kasp:dnssec-verify zone step1.going-straight-to-none.kasp (932)
I:kasp:reconfig dnssec-policy to trigger algorithm rollover
I:kasp:178 seconds passed between start of tests and reconfig
I:kasp:check keys are created for zone step1.going-insecure.kasp (933)
I:kasp:check number of keys for zone step1.going-insecure.kasp in dir ns6 (933)
I:kasp:check key id 46967
I:kasp:check key id 59599
I:kasp:KEY1 ID 59599
I:kasp:KEY2 ID 46967
I:kasp:wait for zone step1.going-insecure.kasp is done signing (934)
I:kasp:wait for zone step1.going-insecure.kasp is done signing with KEY1 step1.going-insecure.kasp/ECDSAP256SHA256/59599
I:kasp:wait for zone step1.going-insecure.kasp is done signing with KEY2 step1.going-insecure.kasp/ECDSAP256SHA256/46967
I:kasp:check rndc dnssec -status output for step1.going-insecure.kasp (policy: insecure) (935)
I:kasp:check DNSKEY rrset is signed correctly for zone step1.going-insecure.kasp (936)
I:kasp:check SOA rrset is signed correctly for zone step1.going-insecure.kasp (937)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step1.going-insecure.kasp (938)
I:kasp:check A a.step1.going-insecure.kasp rrset is signed correctly for zone step1.going-insecure.kasp (939)
I:kasp:dnssec-verify zone step1.going-insecure.kasp (940)
I:kasp:calling rndc dnssec -checkds -key 59599 withdrawn zone step1.going-insecure.kasp in  (941)
I:kasp:wait for zone step1.going-insecure.kasp is done signing (942)
I:kasp:wait for zone step1.going-insecure.kasp is done signing with KEY1 step1.going-insecure.kasp/ECDSAP256SHA256/59599
I:kasp:wait for zone step1.going-insecure.kasp is done signing with KEY2 step1.going-insecure.kasp/ECDSAP256SHA256/46967
I:kasp:check rndc dnssec -status output for step1.going-insecure.kasp (policy: insecure) (943)
I:kasp:check DNSKEY rrset is signed correctly for zone step1.going-insecure.kasp (944)
I:kasp:check SOA rrset is signed correctly for zone step1.going-insecure.kasp (945)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step1.going-insecure.kasp (946)
I:kasp:check A a.step1.going-insecure.kasp rrset is signed correctly for zone step1.going-insecure.kasp (947)
I:kasp:dnssec-verify zone step1.going-insecure.kasp (948)
I:kasp:check next key event for zone step1.going-insecure.kasp (949)
I:kasp:check keys are created for zone step2.going-insecure.kasp (950)
I:kasp:check number of keys for zone step2.going-insecure.kasp in dir ns6 (950)
I:kasp:check key id 44998
I:kasp:check key id 23031
I:kasp:KEY1 ID 23031
I:kasp:KEY2 ID 44998
I:kasp:check rndc dnssec -status output for step2.going-insecure.kasp (policy: insecure) (951)
I:kasp:check DNSKEY rrset is signed correctly for zone step2.going-insecure.kasp (952)
I:kasp:check SOA rrset is signed correctly for zone step2.going-insecure.kasp (953)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step2.going-insecure.kasp (954)
I:kasp:check A a.step2.going-insecure.kasp rrset is signed correctly for zone step2.going-insecure.kasp (955)
I:kasp:check next key event for zone step2.going-insecure.kasp (956)
I:kasp:check keys are created for zone step1.going-insecure-dynamic.kasp (957)
I:kasp:check number of keys for zone step1.going-insecure-dynamic.kasp in dir ns6 (957)
I:kasp:check key id 61431
I:kasp:check key id 62458
I:kasp:KEY1 ID 61431
I:kasp:KEY2 ID 62458
I:kasp:wait for zone step1.going-insecure-dynamic.kasp is done signing (958)
I:kasp:wait for zone step1.going-insecure-dynamic.kasp is done signing with KEY1 step1.going-insecure-dynamic.kasp/ECDSAP256SHA256/61431
I:kasp:wait for zone step1.going-insecure-dynamic.kasp is done signing with KEY2 step1.going-insecure-dynamic.kasp/ECDSAP256SHA256/62458
I:kasp:check rndc dnssec -status output for step1.going-insecure-dynamic.kasp (policy: insecure) (959)
I:kasp:check DNSKEY rrset is signed correctly for zone step1.going-insecure-dynamic.kasp (960)
I:kasp:check SOA rrset is signed correctly for zone step1.going-insecure-dynamic.kasp (961)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step1.going-insecure-dynamic.kasp (962)
I:kasp:check A a.step1.going-insecure-dynamic.kasp rrset is signed correctly for zone step1.going-insecure-dynamic.kasp (963)
I:kasp:dnssec-verify zone step1.going-insecure-dynamic.kasp (964)
I:kasp:calling rndc dnssec -checkds -key 61431 withdrawn zone step1.going-insecure-dynamic.kasp in  (965)
I:kasp:wait for zone step1.going-insecure-dynamic.kasp is done signing (966)
I:kasp:wait for zone step1.going-insecure-dynamic.kasp is done signing with KEY1 step1.going-insecure-dynamic.kasp/ECDSAP256SHA256/61431
I:kasp:wait for zone step1.going-insecure-dynamic.kasp is done signing with KEY2 step1.going-insecure-dynamic.kasp/ECDSAP256SHA256/62458
I:kasp:check rndc dnssec -status output for step1.going-insecure-dynamic.kasp (policy: insecure) (967)
I:kasp:check DNSKEY rrset is signed correctly for zone step1.going-insecure-dynamic.kasp (968)
I:kasp:check SOA rrset is signed correctly for zone step1.going-insecure-dynamic.kasp (969)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step1.going-insecure-dynamic.kasp (970)
I:kasp:check A a.step1.going-insecure-dynamic.kasp rrset is signed correctly for zone step1.going-insecure-dynamic.kasp (971)
I:kasp:dnssec-verify zone step1.going-insecure-dynamic.kasp (972)
I:kasp:check next key event for zone step1.going-insecure-dynamic.kasp (973)
I:kasp:check keys are created for zone step2.going-insecure-dynamic.kasp (974)
I:kasp:check number of keys for zone step2.going-insecure-dynamic.kasp in dir ns6 (974)
I:kasp:check key id 26288
I:kasp:check key id 55094
I:kasp:KEY1 ID 26288
I:kasp:KEY2 ID 55094
I:kasp:check rndc dnssec -status output for step2.going-insecure-dynamic.kasp (policy: insecure) (975)
I:kasp:check DNSKEY rrset is signed correctly for zone step2.going-insecure-dynamic.kasp (976)
I:kasp:check SOA rrset is signed correctly for zone step2.going-insecure-dynamic.kasp (977)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step2.going-insecure-dynamic.kasp (978)
I:kasp:check A a.step2.going-insecure-dynamic.kasp rrset is signed correctly for zone step2.going-insecure-dynamic.kasp (979)
I:kasp:check next key event for zone step2.going-insecure-dynamic.kasp (980)
I:kasp:check keys are created for zone step1.going-straight-to-none.kasp (981)
I:kasp:check number of keys for zone step1.going-straight-to-none.kasp in dir ns6 (981)
I:kasp:check key id 28748
I:kasp:KEY1 ID 28748
I:kasp:check rndc dnssec -status output for step1.going-straight-to-none.kasp (policy: none) (982)
I:kasp:check DNSKEY rrset is signed correctly for zone step1.going-straight-to-none.kasp (983)
I:kasp:check SOA rrset is signed correctly for zone step1.going-straight-to-none.kasp (984)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step1.going-straight-to-none.kasp (985)
I:kasp:check A a.step1.going-straight-to-none.kasp rrset is signed correctly for zone step1.going-straight-to-none.kasp (986)
I:kasp:dnssec-verify zone step1.going-straight-to-none.kasp (987)
I:kasp:check keys are created for zone step1.algorithm-roll.kasp (988)
I:kasp:check number of keys for zone step1.algorithm-roll.kasp in dir ns6 (988)
I:kasp:check key id 39122
I:kasp:check key id 19141
I:kasp:check key id 34768
I:kasp:check key id 56641
I:kasp:KEY1 ID 56641
I:kasp:KEY2 ID 19141
I:kasp:KEY3 ID 34768
I:kasp:KEY4 ID 39122
I:kasp:wait for zone step1.algorithm-roll.kasp is done signing (989)
I:kasp:wait for zone step1.algorithm-roll.kasp is done signing with KEY1 step1.algorithm-roll.kasp/RSASHA1/56641
I:kasp:wait for zone step1.algorithm-roll.kasp is done signing with KEY2 step1.algorithm-roll.kasp/RSASHA1/19141
I:kasp:wait for zone step1.algorithm-roll.kasp is done signing with KEY3 step1.algorithm-roll.kasp/ECDSAP256SHA256/34768
I:kasp:wait for zone step1.algorithm-roll.kasp is done signing with KEY4 step1.algorithm-roll.kasp/ECDSAP256SHA256/39122
I:kasp:check rndc dnssec -status output for step1.algorithm-roll.kasp (policy: ecdsa256) (990)
I:kasp:check key timing metadata for key KEY1 id 56641 zone step1.algorithm-roll.kasp (991)
I:kasp:check key timing metadata for key KEY2 id 19141 zone step1.algorithm-roll.kasp (992)
I:kasp:check key timing metadata for key KEY3 id 34768 zone step1.algorithm-roll.kasp (993)
I:kasp:check key timing metadata for key KEY4 id 39122 zone step1.algorithm-roll.kasp (994)
I:kasp:check DNSKEY rrset is signed correctly for zone step1.algorithm-roll.kasp (995)
I:kasp:check SOA rrset is signed correctly for zone step1.algorithm-roll.kasp (996)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step1.algorithm-roll.kasp (997)
I:kasp:check A a.step1.algorithm-roll.kasp rrset is signed correctly for zone step1.algorithm-roll.kasp (998)
I:kasp:dnssec-verify zone step1.algorithm-roll.kasp (999)
I:kasp:check next key event for zone step1.algorithm-roll.kasp (1000)
I:kasp:check keys are created for zone step2.algorithm-roll.kasp (1001)
I:kasp:check number of keys for zone step2.algorithm-roll.kasp in dir ns6 (1001)
I:kasp:check key id 04948
I:kasp:check key id 33259
I:kasp:check key id 04512
I:kasp:check key id 36688
I:kasp:KEY1 ID 33259
I:kasp:KEY2 ID 4512
I:kasp:KEY3 ID 4948
I:kasp:KEY4 ID 36688
I:kasp:wait for zone step2.algorithm-roll.kasp is done signing (1002)
I:kasp:wait for zone step2.algorithm-roll.kasp is done signing with KEY1 step2.algorithm-roll.kasp/RSASHA1/33259
I:kasp:wait for zone step2.algorithm-roll.kasp is done signing with KEY2 step2.algorithm-roll.kasp/RSASHA1/4512
I:kasp:wait for zone step2.algorithm-roll.kasp is done signing with KEY3 step2.algorithm-roll.kasp/ECDSAP256SHA256/4948
I:kasp:wait for zone step2.algorithm-roll.kasp is done signing with KEY4 step2.algorithm-roll.kasp/ECDSAP256SHA256/36688
I:kasp:check rndc dnssec -status output for step2.algorithm-roll.kasp (policy: ecdsa256) (1003)
I:kasp:check key timing metadata for key KEY1 id 33259 zone step2.algorithm-roll.kasp (1004)
I:kasp:check key timing metadata for key KEY2 id 4512 zone step2.algorithm-roll.kasp (1005)
I:kasp:check key timing metadata for key KEY3 id 4948 zone step2.algorithm-roll.kasp (1006)
I:kasp:check key timing metadata for key KEY4 id 36688 zone step2.algorithm-roll.kasp (1007)
I:kasp:check DNSKEY rrset is signed correctly for zone step2.algorithm-roll.kasp (1008)
I:kasp:check SOA rrset is signed correctly for zone step2.algorithm-roll.kasp (1009)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step2.algorithm-roll.kasp (1010)
I:kasp:check A a.step2.algorithm-roll.kasp rrset is signed correctly for zone step2.algorithm-roll.kasp (1011)
I:kasp:dnssec-verify zone step2.algorithm-roll.kasp (1012)
I:kasp:check next key event for zone step2.algorithm-roll.kasp (1013)
I:kasp:check keys are created for zone step3.algorithm-roll.kasp (1014)
I:kasp:check number of keys for zone step3.algorithm-roll.kasp in dir ns6 (1014)
I:kasp:check key id 25938
I:kasp:check key id 54925
I:kasp:check key id 21721
I:kasp:check key id 62414
I:kasp:KEY1 ID 21721
I:kasp:KEY2 ID 54925
I:kasp:KEY3 ID 62414
I:kasp:KEY4 ID 25938
I:kasp:wait for zone step3.algorithm-roll.kasp is done signing (1015)
I:kasp:wait for zone step3.algorithm-roll.kasp is done signing with KEY1 step3.algorithm-roll.kasp/RSASHA1/21721
I:kasp:wait for zone step3.algorithm-roll.kasp is done signing with KEY2 step3.algorithm-roll.kasp/RSASHA1/54925
I:kasp:wait for zone step3.algorithm-roll.kasp is done signing with KEY3 step3.algorithm-roll.kasp/ECDSAP256SHA256/62414
I:kasp:wait for zone step3.algorithm-roll.kasp is done signing with KEY4 step3.algorithm-roll.kasp/ECDSAP256SHA256/25938
I:kasp:check rndc dnssec -status output for step3.algorithm-roll.kasp (policy: ecdsa256) (1016)
I:kasp:check CDS/CDNSKEY publication is logged in ns6/named.run for key step3.algorithm-roll.kasp/ECDSAP256SHA256/62414 (1017)
I:kasp:check key timing metadata for key KEY1 id 21721 zone step3.algorithm-roll.kasp (1018)
I:kasp:check key timing metadata for key KEY2 id 54925 zone step3.algorithm-roll.kasp (1019)
I:kasp:check key timing metadata for key KEY3 id 62414 zone step3.algorithm-roll.kasp (1020)
I:kasp:check key timing metadata for key KEY4 id 25938 zone step3.algorithm-roll.kasp (1021)
I:kasp:check DNSKEY rrset is signed correctly for zone step3.algorithm-roll.kasp (1022)
I:kasp:check SOA rrset is signed correctly for zone step3.algorithm-roll.kasp (1023)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step3.algorithm-roll.kasp (1024)
I:kasp:check A a.step3.algorithm-roll.kasp rrset is signed correctly for zone step3.algorithm-roll.kasp (1025)
I:kasp:dnssec-verify zone step3.algorithm-roll.kasp (1026)
I:kasp:calling rndc dnssec -checkds -key 21721 withdrawn zone step3.algorithm-roll.kasp in  (1027)
I:kasp:calling rndc dnssec -checkds -key 62414 published zone step3.algorithm-roll.kasp in  (1028)
I:kasp:check next key event for zone step3.algorithm-roll.kasp (1029)
I:kasp:check keys are created for zone step4.algorithm-roll.kasp (1030)
I:kasp:check number of keys for zone step4.algorithm-roll.kasp in dir ns6 (1030)
I:kasp:check key id 22090
I:kasp:check key id 16834
I:kasp:check key id 20828
I:kasp:check key id 10324
I:kasp:KEY1 ID 10324
I:kasp:KEY2 ID 22090
I:kasp:KEY3 ID 20828
I:kasp:KEY4 ID 16834
I:kasp:wait for zone step4.algorithm-roll.kasp is done signing (1031)
I:kasp:wait for zone step4.algorithm-roll.kasp is done signing with KEY3 step4.algorithm-roll.kasp/ECDSAP256SHA256/20828
I:kasp:wait for zone step4.algorithm-roll.kasp is done signing with KEY4 step4.algorithm-roll.kasp/ECDSAP256SHA256/16834
I:kasp:check rndc dnssec -status output for step4.algorithm-roll.kasp (policy: ecdsa256) (1032)
I:kasp:check key timing metadata for key KEY1 id 10324 zone step4.algorithm-roll.kasp (1033)
I:kasp:check key timing metadata for key KEY2 id 22090 zone step4.algorithm-roll.kasp (1034)
I:kasp:check key timing metadata for key KEY3 id 20828 zone step4.algorithm-roll.kasp (1035)
I:kasp:check key timing metadata for key KEY4 id 16834 zone step4.algorithm-roll.kasp (1036)
I:kasp:check DNSKEY rrset is signed correctly for zone step4.algorithm-roll.kasp (1037)
I:kasp:check SOA rrset is signed correctly for zone step4.algorithm-roll.kasp (1038)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step4.algorithm-roll.kasp (1039)
I:kasp:check A a.step4.algorithm-roll.kasp rrset is signed correctly for zone step4.algorithm-roll.kasp (1040)
I:kasp:dnssec-verify zone step4.algorithm-roll.kasp (1041)
I:kasp:check next key event for zone step4.algorithm-roll.kasp (1042)
I:kasp:check keys are created for zone step5.algorithm-roll.kasp (1043)
I:kasp:check number of keys for zone step5.algorithm-roll.kasp in dir ns6 (1043)
I:kasp:check key id 10302
I:kasp:check key id 23512
I:kasp:check key id 36058
I:kasp:check key id 56116
I:kasp:KEY1 ID 23512
I:kasp:KEY2 ID 56116
I:kasp:KEY3 ID 36058
I:kasp:KEY4 ID 10302
I:kasp:wait for zone step5.algorithm-roll.kasp is done signing (1044)
I:kasp:wait for zone step5.algorithm-roll.kasp is done signing with KEY3 step5.algorithm-roll.kasp/ECDSAP256SHA256/36058
I:kasp:wait for zone step5.algorithm-roll.kasp is done signing with KEY4 step5.algorithm-roll.kasp/ECDSAP256SHA256/10302
I:kasp:check rndc dnssec -status output for step5.algorithm-roll.kasp (policy: ecdsa256) (1045)
I:kasp:check key timing metadata for key KEY1 id 23512 zone step5.algorithm-roll.kasp (1046)
I:kasp:check key timing metadata for key KEY2 id 56116 zone step5.algorithm-roll.kasp (1047)
I:kasp:check key timing metadata for key KEY3 id 36058 zone step5.algorithm-roll.kasp (1048)
I:kasp:check key timing metadata for key KEY4 id 10302 zone step5.algorithm-roll.kasp (1049)
I:kasp:check DNSKEY rrset is signed correctly for zone step5.algorithm-roll.kasp (1050)
I:kasp:check SOA rrset is signed correctly for zone step5.algorithm-roll.kasp (1051)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step5.algorithm-roll.kasp (1052)
I:kasp:check A a.step5.algorithm-roll.kasp rrset is signed correctly for zone step5.algorithm-roll.kasp (1053)
I:kasp:dnssec-verify zone step5.algorithm-roll.kasp (1054)
I:kasp:check next key event for zone step5.algorithm-roll.kasp (1055)
I:kasp:check keys are created for zone step6.algorithm-roll.kasp (1056)
I:kasp:check number of keys for zone step6.algorithm-roll.kasp in dir ns6 (1056)
I:kasp:check key id 28289
I:kasp:check key id 14002
I:kasp:check key id 03763
I:kasp:check key id 12066
I:kasp:KEY1 ID 28289
I:kasp:KEY2 ID 12066
I:kasp:KEY3 ID 3763
I:kasp:KEY4 ID 14002
I:kasp:wait for zone step6.algorithm-roll.kasp is done signing (1057)
I:kasp:wait for zone step6.algorithm-roll.kasp is done signing with KEY3 step6.algorithm-roll.kasp/ECDSAP256SHA256/3763
I:kasp:wait for zone step6.algorithm-roll.kasp is done signing with KEY4 step6.algorithm-roll.kasp/ECDSAP256SHA256/14002
I:kasp:check rndc dnssec -status output for step6.algorithm-roll.kasp (policy: ecdsa256) (1058)
I:kasp:check key timing metadata for key KEY1 id 28289 zone step6.algorithm-roll.kasp (1059)
I:kasp:check key timing metadata for key KEY2 id 12066 zone step6.algorithm-roll.kasp (1060)
I:kasp:check key timing metadata for key KEY3 id 3763 zone step6.algorithm-roll.kasp (1061)
I:kasp:check key timing metadata for key KEY4 id 14002 zone step6.algorithm-roll.kasp (1062)
I:kasp:check DNSKEY rrset is signed correctly for zone step6.algorithm-roll.kasp (1063)
I:kasp:check SOA rrset is signed correctly for zone step6.algorithm-roll.kasp (1064)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step6.algorithm-roll.kasp (1065)
I:kasp:check A a.step6.algorithm-roll.kasp rrset is signed correctly for zone step6.algorithm-roll.kasp (1066)
I:kasp:dnssec-verify zone step6.algorithm-roll.kasp (1067)
I:kasp:check next key event for zone step6.algorithm-roll.kasp (1068)
I:kasp:check keys are created for zone step1.csk-algorithm-roll.kasp (1069)
I:kasp:check number of keys for zone step1.csk-algorithm-roll.kasp in dir ns6 (1069)
I:kasp:check key id 62344
I:kasp:check key id 02113
I:kasp:KEY1 ID 62344
I:kasp:KEY2 ID 2113
I:kasp:wait for zone step1.csk-algorithm-roll.kasp is done signing (1070)
I:kasp:wait for zone step1.csk-algorithm-roll.kasp is done signing with KEY1 step1.csk-algorithm-roll.kasp/RSASHA1/62344
I:kasp:wait for zone step1.csk-algorithm-roll.kasp is done signing with KEY2 step1.csk-algorithm-roll.kasp/ECDSAP256SHA256/2113
I:kasp:check rndc dnssec -status output for step1.csk-algorithm-roll.kasp (policy: csk-algoroll) (1071)
I:kasp:check key timing metadata for key KEY1 id 62344 zone step1.csk-algorithm-roll.kasp (1072)
I:kasp:check key timing metadata for key KEY2 id 2113 zone step1.csk-algorithm-roll.kasp (1073)
I:kasp:check DNSKEY rrset is signed correctly for zone step1.csk-algorithm-roll.kasp (1074)
I:kasp:check SOA rrset is signed correctly for zone step1.csk-algorithm-roll.kasp (1075)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step1.csk-algorithm-roll.kasp (1076)
I:kasp:check A a.step1.csk-algorithm-roll.kasp rrset is signed correctly for zone step1.csk-algorithm-roll.kasp (1077)
I:kasp:dnssec-verify zone step1.csk-algorithm-roll.kasp (1078)
I:kasp:check next key event for zone step1.csk-algorithm-roll.kasp (1079)
I:kasp:check keys are created for zone step2.csk-algorithm-roll.kasp (1080)
I:kasp:check number of keys for zone step2.csk-algorithm-roll.kasp in dir ns6 (1080)
I:kasp:check key id 21089
I:kasp:check key id 16334
I:kasp:KEY1 ID 21089
I:kasp:KEY2 ID 16334
I:kasp:wait for zone step2.csk-algorithm-roll.kasp is done signing (1081)
I:kasp:wait for zone step2.csk-algorithm-roll.kasp is done signing with KEY1 step2.csk-algorithm-roll.kasp/RSASHA1/21089
I:kasp:wait for zone step2.csk-algorithm-roll.kasp is done signing with KEY2 step2.csk-algorithm-roll.kasp/ECDSAP256SHA256/16334
I:kasp:check rndc dnssec -status output for step2.csk-algorithm-roll.kasp (policy: csk-algoroll) (1082)
I:kasp:check key timing metadata for key KEY1 id 21089 zone step2.csk-algorithm-roll.kasp (1083)
I:kasp:check key timing metadata for key KEY2 id 16334 zone step2.csk-algorithm-roll.kasp (1084)
I:kasp:check DNSKEY rrset is signed correctly for zone step2.csk-algorithm-roll.kasp (1085)
I:kasp:check SOA rrset is signed correctly for zone step2.csk-algorithm-roll.kasp (1086)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step2.csk-algorithm-roll.kasp (1087)
I:kasp:check A a.step2.csk-algorithm-roll.kasp rrset is signed correctly for zone step2.csk-algorithm-roll.kasp (1088)
I:kasp:dnssec-verify zone step2.csk-algorithm-roll.kasp (1089)
I:kasp:check next key event for zone step2.csk-algorithm-roll.kasp (1090)
I:kasp:check keys are created for zone step3.csk-algorithm-roll.kasp (1091)
I:kasp:check number of keys for zone step3.csk-algorithm-roll.kasp in dir ns6 (1091)
I:kasp:check key id 22939
I:kasp:check key id 29911
I:kasp:KEY1 ID 22939
I:kasp:KEY2 ID 29911
I:kasp:wait for zone step3.csk-algorithm-roll.kasp is done signing (1092)
I:kasp:wait for zone step3.csk-algorithm-roll.kasp is done signing with KEY1 step3.csk-algorithm-roll.kasp/RSASHA1/22939
I:kasp:wait for zone step3.csk-algorithm-roll.kasp is done signing with KEY2 step3.csk-algorithm-roll.kasp/ECDSAP256SHA256/29911
I:kasp:check rndc dnssec -status output for step3.csk-algorithm-roll.kasp (policy: csk-algoroll) (1093)
I:kasp:check CDS/CDNSKEY publication is logged in ns6/named.run for key step3.csk-algorithm-roll.kasp/ECDSAP256SHA256/29911 (1094)
I:kasp:check key timing metadata for key KEY1 id 22939 zone step3.csk-algorithm-roll.kasp (1095)
I:kasp:check key timing metadata for key KEY2 id 29911 zone step3.csk-algorithm-roll.kasp (1096)
I:kasp:check DNSKEY rrset is signed correctly for zone step3.csk-algorithm-roll.kasp (1097)
I:kasp:check SOA rrset is signed correctly for zone step3.csk-algorithm-roll.kasp (1098)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step3.csk-algorithm-roll.kasp (1099)
I:kasp:check A a.step3.csk-algorithm-roll.kasp rrset is signed correctly for zone step3.csk-algorithm-roll.kasp (1100)
I:kasp:dnssec-verify zone step3.csk-algorithm-roll.kasp (1101)
I:kasp:calling rndc dnssec -checkds -key 22939 withdrawn zone step3.csk-algorithm-roll.kasp in  (1102)
I:kasp:calling rndc dnssec -checkds -key 29911 published zone step3.csk-algorithm-roll.kasp in  (1103)
I:kasp:check next key event for zone step3.csk-algorithm-roll.kasp (1104)
I:kasp:check keys are created for zone step4.csk-algorithm-roll.kasp (1105)
I:kasp:check number of keys for zone step4.csk-algorithm-roll.kasp in dir ns6 (1105)
I:kasp:check key id 17044
I:kasp:check key id 06450
I:kasp:KEY1 ID 17044
I:kasp:KEY2 ID 6450
I:kasp:wait for zone step4.csk-algorithm-roll.kasp is done signing (1106)
I:kasp:wait for zone step4.csk-algorithm-roll.kasp is done signing with KEY2 step4.csk-algorithm-roll.kasp/ECDSAP256SHA256/6450
I:kasp:check rndc dnssec -status output for step4.csk-algorithm-roll.kasp (policy: csk-algoroll) (1107)
I:kasp:check key timing metadata for key KEY1 id 17044 zone step4.csk-algorithm-roll.kasp (1108)
I:kasp:check key timing metadata for key KEY2 id 6450 zone step4.csk-algorithm-roll.kasp (1109)
I:kasp:check DNSKEY rrset is signed correctly for zone step4.csk-algorithm-roll.kasp (1110)
I:kasp:check SOA rrset is signed correctly for zone step4.csk-algorithm-roll.kasp (1111)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step4.csk-algorithm-roll.kasp (1112)
I:kasp:check A a.step4.csk-algorithm-roll.kasp rrset is signed correctly for zone step4.csk-algorithm-roll.kasp (1113)
I:kasp:dnssec-verify zone step4.csk-algorithm-roll.kasp (1114)
I:kasp:check next key event for zone step4.csk-algorithm-roll.kasp (1115)
I:kasp:check keys are created for zone step5.csk-algorithm-roll.kasp (1116)
I:kasp:check number of keys for zone step5.csk-algorithm-roll.kasp in dir ns6 (1116)
I:kasp:check key id 02962
I:kasp:check key id 16458
I:kasp:KEY1 ID 2962
I:kasp:KEY2 ID 16458
I:kasp:wait for zone step5.csk-algorithm-roll.kasp is done signing (1117)
I:kasp:wait for zone step5.csk-algorithm-roll.kasp is done signing with KEY2 step5.csk-algorithm-roll.kasp/ECDSAP256SHA256/16458
I:kasp:check rndc dnssec -status output for step5.csk-algorithm-roll.kasp (policy: csk-algoroll) (1118)
I:kasp:check key timing metadata for key KEY1 id 2962 zone step5.csk-algorithm-roll.kasp (1119)
I:kasp:check key timing metadata for key KEY2 id 16458 zone step5.csk-algorithm-roll.kasp (1120)
I:kasp:check DNSKEY rrset is signed correctly for zone step5.csk-algorithm-roll.kasp (1121)
I:kasp:check SOA rrset is signed correctly for zone step5.csk-algorithm-roll.kasp (1122)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step5.csk-algorithm-roll.kasp (1123)
I:kasp:check A a.step5.csk-algorithm-roll.kasp rrset is signed correctly for zone step5.csk-algorithm-roll.kasp (1124)
I:kasp:dnssec-verify zone step5.csk-algorithm-roll.kasp (1125)
I:kasp:check next key event for zone step5.csk-algorithm-roll.kasp (1126)
I:kasp:check keys are created for zone step6.csk-algorithm-roll.kasp (1127)
I:kasp:check number of keys for zone step6.csk-algorithm-roll.kasp in dir ns6 (1127)
I:kasp:check key id 02689
I:kasp:check key id 25142
I:kasp:KEY1 ID 25142
I:kasp:KEY2 ID 2689
I:kasp:wait for zone step6.csk-algorithm-roll.kasp is done signing (1128)
I:kasp:wait for zone step6.csk-algorithm-roll.kasp is done signing with KEY2 step6.csk-algorithm-roll.kasp/ECDSAP256SHA256/2689
I:kasp:check rndc dnssec -status output for step6.csk-algorithm-roll.kasp (policy: csk-algoroll) (1129)
I:kasp:check key timing metadata for key KEY1 id 25142 zone step6.csk-algorithm-roll.kasp (1130)
I:kasp:check key timing metadata for key KEY2 id 2689 zone step6.csk-algorithm-roll.kasp (1131)
I:kasp:check DNSKEY rrset is signed correctly for zone step6.csk-algorithm-roll.kasp (1132)
I:kasp:check SOA rrset is signed correctly for zone step6.csk-algorithm-roll.kasp (1133)
I:kasp:check CDS and CDNSKEY rrset are signed correctly for zone step6.csk-algorithm-roll.kasp (1134)
I:kasp:check A a.step6.csk-algorithm-roll.kasp rrset is signed correctly for zone step6.csk-algorithm-roll.kasp (1135)
I:kasp:dnssec-verify zone step6.csk-algorithm-roll.kasp (1136)
I:kasp:check next key event for zone step6.csk-algorithm-roll.kasp (1137)
I:kasp:Check that 'rndc reload' of just the serial updates the signed instance (1137)
server reload successful
I:kasp:Check that restart with zone changes and deleted journal works (1138)
I:kasp:exit status: 0
I:kasp:stopping servers
I:kasp:pytest not installed, skipping python tests
R:kasp:PASS
E:kasp:2022-02-23T15:33:19+0800
S:keepalive:2022-02-23T15:33:19+0800
T:keepalive:1:A
A:keepalive:System test keepalive
I:keepalive:PORTRANGE:9100 - 9199
I:keepalive:starting servers
I:keepalive:checking that dig handles TCP keepalive (0)
I:keepalive:checking that dig added TCP keepalive (1)
I:keepalive:checking that TCP keepalive is added for TCP responses (2)
I:keepalive:checking that TCP keepalive requires TCP (3)
I:keepalive:checking default value (4)
I:keepalive:checking configured value (5)
I:keepalive:checking re-configured value (6)
I:keepalive:checking server config entry (7)
I:keepalive:exit status: 0
I:keepalive:stopping servers
I:keepalive:pytest not installed, skipping python tests
R:keepalive:PASS
E:keepalive:2022-02-23T15:33:27+0800
S:keymgr2kasp:2022-02-23T15:33:27+0800
T:keymgr2kasp:1:A
A:keymgr2kasp:System test keymgr2kasp
I:keymgr2kasp:PORTRANGE:9200 - 9299
I:ns3:ns3/setup.sh
I:ns3:setting up zone: migrate.kasp
I:ns3:setting up zone: csk.kasp
I:ns3:setting up zone: csk-nosep.kasp
I:ns3:setting up zone: migrate-nomatch-algnum.kasp
I:ns3:setting up zone: migrate-nomatch-alglen.kasp
I:ns3:setting up zone: rumoured.kasp
I:ns3:setting up zone: omnipresent.kasp
I:ns4:ns4/setup.sh
I:ns4:setting up zone view-rsasha256.kasp (external)
I:ns4:setting up zone view-rsasha256.kasp (internal)
I:keymgr2kasp:starting servers
I:keymgr2kasp:check keys are created for zone migrate.kasp (1)
I:keymgr2kasp:check number of keys for zone migrate.kasp in dir ns3 (1)
I:keymgr2kasp:check key id 55180
I:keymgr2kasp:check key id 26036
I:keymgr2kasp:KEY1 ID 26036
I:keymgr2kasp:KEY2 ID 55180
I:keymgr2kasp:check rndc dnssec -status output for migrate.kasp (policy: none) (2)
I:keymgr2kasp:check key timing metadata for key KEY1 id 26036 zone migrate.kasp (3)
I:keymgr2kasp:check key timing metadata for key KEY2 id 55180 zone migrate.kasp (4)
I:keymgr2kasp:check DNSKEY rrset is signed correctly for zone migrate.kasp (5)
I:keymgr2kasp:check SOA rrset is signed correctly for zone migrate.kasp (6)
I:keymgr2kasp:check CDS and CDNSKEY rrset are signed correctly for zone migrate.kasp (7)
I:keymgr2kasp:check A a.migrate.kasp rrset is signed correctly for zone migrate.kasp (8)
I:keymgr2kasp:dnssec-verify zone migrate.kasp (9)
I:keymgr2kasp:check keys are created for zone csk.kasp (10)
I:keymgr2kasp:check number of keys for zone csk.kasp in dir ns3 (10)
I:keymgr2kasp:check key id 07578
I:keymgr2kasp:KEY1 ID 7578
I:keymgr2kasp:check rndc dnssec -status output for csk.kasp (policy: none) (11)
I:keymgr2kasp:check key timing metadata for key KEY1 id 7578 zone csk.kasp (12)
I:keymgr2kasp:check DNSKEY rrset is signed correctly for zone csk.kasp (13)
I:keymgr2kasp:check SOA rrset is signed correctly for zone csk.kasp (14)
I:keymgr2kasp:check CDS and CDNSKEY rrset are signed correctly for zone csk.kasp (15)
I:keymgr2kasp:check A a.csk.kasp rrset is signed correctly for zone csk.kasp (16)
I:keymgr2kasp:dnssec-verify zone csk.kasp (17)
I:keymgr2kasp:check keys are created for zone csk-nosep.kasp (18)
I:keymgr2kasp:check number of keys for zone csk-nosep.kasp in dir ns3 (18)
I:keymgr2kasp:check key id 57889
I:keymgr2kasp:KEY1 ID 57889
I:keymgr2kasp:check rndc dnssec -status output for csk-nosep.kasp (policy: none) (19)
I:keymgr2kasp:check key timing metadata for key KEY1 id 57889 zone csk-nosep.kasp (20)
I:keymgr2kasp:check DNSKEY rrset is signed correctly for zone csk-nosep.kasp (21)
I:keymgr2kasp:check SOA rrset is signed correctly for zone csk-nosep.kasp (22)
I:keymgr2kasp:check CDS and CDNSKEY rrset are signed correctly for zone csk-nosep.kasp (23)
I:keymgr2kasp:check A a.csk-nosep.kasp rrset is signed correctly for zone csk-nosep.kasp (24)
I:keymgr2kasp:dnssec-verify zone csk-nosep.kasp (25)
I:keymgr2kasp:check keys are created for zone rumoured.kasp (26)
I:keymgr2kasp:check number of keys for zone rumoured.kasp in dir ns3 (26)
I:keymgr2kasp:check key id 22345
I:keymgr2kasp:check key id 52793
I:keymgr2kasp:KEY1 ID 22345
I:keymgr2kasp:KEY2 ID 52793
I:keymgr2kasp:check rndc dnssec -status output for rumoured.kasp (policy: none) (27)
I:keymgr2kasp:check DNSKEY rrset is signed correctly for zone rumoured.kasp (28)
I:keymgr2kasp:check SOA rrset is signed correctly for zone rumoured.kasp (29)
I:keymgr2kasp:check CDS and CDNSKEY rrset are signed correctly for zone rumoured.kasp (30)
I:keymgr2kasp:check A a.rumoured.kasp rrset is signed correctly for zone rumoured.kasp (31)
I:keymgr2kasp:dnssec-verify zone rumoured.kasp (32)
I:keymgr2kasp:check keys are created for zone omnipresent.kasp (33)
I:keymgr2kasp:check number of keys for zone omnipresent.kasp in dir ns3 (33)
I:keymgr2kasp:check key id 51521
I:keymgr2kasp:check key id 05574
I:keymgr2kasp:KEY1 ID 5574
I:keymgr2kasp:KEY2 ID 51521
I:keymgr2kasp:check rndc dnssec -status output for omnipresent.kasp (policy: none) (34)
I:keymgr2kasp:check DNSKEY rrset is signed correctly for zone omnipresent.kasp (35)
I:keymgr2kasp:check SOA rrset is signed correctly for zone omnipresent.kasp (36)
I:keymgr2kasp:check CDS and CDNSKEY rrset are signed correctly for zone omnipresent.kasp (37)
I:keymgr2kasp:check A a.omnipresent.kasp rrset is signed correctly for zone omnipresent.kasp (38)
I:keymgr2kasp:dnssec-verify zone omnipresent.kasp (39)
I:keymgr2kasp:check keys are created for zone migrate-nomatch-algnum.kasp (40)
I:keymgr2kasp:check number of keys for zone migrate-nomatch-algnum.kasp in dir ns3 (40)
I:keymgr2kasp:check key id 04063
I:keymgr2kasp:check key id 12256
I:keymgr2kasp:KEY1 ID 12256
I:keymgr2kasp:KEY2 ID 4063
I:keymgr2kasp:check rndc dnssec -status output for migrate-nomatch-algnum.kasp (policy: none) (41)
I:keymgr2kasp:check key timing metadata for key KEY1 id 12256 zone migrate-nomatch-algnum.kasp (42)
I:keymgr2kasp:check key timing metadata for key KEY2 id 4063 zone migrate-nomatch-algnum.kasp (43)
I:keymgr2kasp:check DNSKEY rrset is signed correctly for zone migrate-nomatch-algnum.kasp (44)
I:keymgr2kasp:check SOA rrset is signed correctly for zone migrate-nomatch-algnum.kasp (45)
I:keymgr2kasp:check CDS and CDNSKEY rrset are signed correctly for zone migrate-nomatch-algnum.kasp (46)
I:keymgr2kasp:check A a.migrate-nomatch-algnum.kasp rrset is signed correctly for zone migrate-nomatch-algnum.kasp (47)
I:keymgr2kasp:dnssec-verify zone migrate-nomatch-algnum.kasp (48)
I:keymgr2kasp:check keys are created for zone migrate-nomatch-alglen.kasp (49)
I:keymgr2kasp:check number of keys for zone migrate-nomatch-alglen.kasp in dir ns3 (49)
I:keymgr2kasp:check key id 13114
I:keymgr2kasp:check key id 19450
I:keymgr2kasp:KEY1 ID 13114
I:keymgr2kasp:KEY2 ID 19450
I:keymgr2kasp:check rndc dnssec -status output for migrate-nomatch-alglen.kasp (policy: none) (50)
I:keymgr2kasp:check key timing metadata for key KEY1 id 13114 zone migrate-nomatch-alglen.kasp (51)
I:keymgr2kasp:check key timing metadata for key KEY2 id 19450 zone migrate-nomatch-alglen.kasp (52)
I:keymgr2kasp:check DNSKEY rrset is signed correctly for zone migrate-nomatch-alglen.kasp (53)
I:keymgr2kasp:check SOA rrset is signed correctly for zone migrate-nomatch-alglen.kasp (54)
I:keymgr2kasp:check CDS and CDNSKEY rrset are signed correctly for zone migrate-nomatch-alglen.kasp (55)
I:keymgr2kasp:check A a.migrate-nomatch-alglen.kasp rrset is signed correctly for zone migrate-nomatch-alglen.kasp (56)
I:keymgr2kasp:dnssec-verify zone migrate-nomatch-alglen.kasp (57)
I:keymgr2kasp:reconfig (migration to dnssec-policy)
I:keymgr2kasp:11 seconds passed between start of tests and reconfig
I:keymgr2kasp:check keys are created for zone migrate.kasp (58)
I:keymgr2kasp:check number of keys for zone migrate.kasp in dir ns3 (58)
I:keymgr2kasp:check key id 55180
I:keymgr2kasp:check key id 26036
I:keymgr2kasp:KEY1 ID 26036
I:keymgr2kasp:KEY2 ID 55180
I:keymgr2kasp:wait for zone migrate.kasp is done signing (59)
I:keymgr2kasp:wait for zone migrate.kasp is done signing with KEY1 migrate.kasp/ECDSAP256SHA256/26036
I:keymgr2kasp:wait for zone migrate.kasp is done signing with KEY2 migrate.kasp/ECDSAP256SHA256/55180
I:keymgr2kasp:check rndc dnssec -status output for migrate.kasp (policy: migrate) (60)
I:keymgr2kasp:check key timing metadata for key KEY1 id 26036 zone migrate.kasp (61)
I:keymgr2kasp:check key timing metadata for key KEY2 id 55180 zone migrate.kasp (62)
I:keymgr2kasp:check DNSKEY rrset is signed correctly for zone migrate.kasp (63)
I:keymgr2kasp:check SOA rrset is signed correctly for zone migrate.kasp (64)
I:keymgr2kasp:check CDS and CDNSKEY rrset are signed correctly for zone migrate.kasp (65)
I:keymgr2kasp:check A a.migrate.kasp rrset is signed correctly for zone migrate.kasp (66)
I:keymgr2kasp:dnssec-verify zone migrate.kasp (67)
I:keymgr2kasp:check that of zone migrate.kasp migration to dnssec-policy uses the same keys (68)
I:keymgr2kasp:check keys are created for zone csk.kasp (69)
I:keymgr2kasp:check number of keys for zone csk.kasp in dir ns3 (69)
I:keymgr2kasp:check key id 07578
I:keymgr2kasp:KEY1 ID 7578
I:keymgr2kasp:wait for zone csk.kasp is done signing (70)
I:keymgr2kasp:wait for zone csk.kasp is done signing with KEY1 csk.kasp/ECDSAP256SHA256/7578
I:keymgr2kasp:check rndc dnssec -status output for csk.kasp (policy: default) (71)
I:keymgr2kasp:check key timing metadata for key KEY1 id 7578 zone csk.kasp (72)
I:keymgr2kasp:check DNSKEY rrset is signed correctly for zone csk.kasp (73)
I:keymgr2kasp:check SOA rrset is signed correctly for zone csk.kasp (74)
I:keymgr2kasp:check CDS and CDNSKEY rrset are signed correctly for zone csk.kasp (75)
I:keymgr2kasp:check A a.csk.kasp rrset is signed correctly for zone csk.kasp (76)
I:keymgr2kasp:dnssec-verify zone csk.kasp (77)
I:keymgr2kasp:check that of zone csk.kasp migration to dnssec-policy uses the same key (78)
I:keymgr2kasp:check keys are created for zone csk-nosep.kasp (79)
I:keymgr2kasp:check number of keys for zone csk-nosep.kasp in dir ns3 (79)
I:keymgr2kasp:check key id 57889
I:keymgr2kasp:KEY1 ID 57889
I:keymgr2kasp:wait for zone csk-nosep.kasp is done signing (80)
I:keymgr2kasp:wait for zone csk-nosep.kasp is done signing with KEY1 csk-nosep.kasp/ECDSAP256SHA256/57889
I:keymgr2kasp:check rndc dnssec -status output for csk-nosep.kasp (policy: default) (81)
I:keymgr2kasp:check key timing metadata for key KEY1 id 57889 zone csk-nosep.kasp (82)
I:keymgr2kasp:check DNSKEY rrset is signed correctly for zone csk-nosep.kasp (83)
I:keymgr2kasp:check SOA rrset is signed correctly for zone csk-nosep.kasp (84)
I:keymgr2kasp:check CDS and CDNSKEY rrset are signed correctly for zone csk-nosep.kasp (85)
I:keymgr2kasp:check A a.csk-nosep.kasp rrset is signed correctly for zone csk-nosep.kasp (86)
I:keymgr2kasp:dnssec-verify zone csk-nosep.kasp (87)
I:keymgr2kasp:check that of zone csk-nosep.kasp migration to dnssec-policy uses the same key (88)
I:keymgr2kasp:check keys are created for zone migrate-nomatch-algnum.kasp (89)
I:keymgr2kasp:check number of keys for zone migrate-nomatch-algnum.kasp in dir ns3 (89)
I:keymgr2kasp:check key id 57625
I:keymgr2kasp:check key id 04063
I:keymgr2kasp:check key id 18000
I:keymgr2kasp:check key id 12256
I:keymgr2kasp:KEY1 ID 12256
I:keymgr2kasp:KEY2 ID 4063
I:keymgr2kasp:KEY3 ID 57625
I:keymgr2kasp:KEY4 ID 18000
I:keymgr2kasp:wait for zone migrate-nomatch-algnum.kasp is done signing (90)
I:keymgr2kasp:wait for zone migrate-nomatch-algnum.kasp is done signing with KEY1 migrate-nomatch-algnum.kasp/RSASHA1/12256
I:keymgr2kasp:wait for zone migrate-nomatch-algnum.kasp is done signing with KEY2 migrate-nomatch-algnum.kasp/RSASHA1/4063
I:keymgr2kasp:wait for zone migrate-nomatch-algnum.kasp is done signing with KEY3 migrate-nomatch-algnum.kasp/ECDSAP256SHA256/57625
I:keymgr2kasp:wait for zone migrate-nomatch-algnum.kasp is done signing with KEY4 migrate-nomatch-algnum.kasp/ECDSAP256SHA256/18000
I:keymgr2kasp:check rndc dnssec -status output for migrate-nomatch-algnum.kasp (policy: migrate-nomatch-algnum) (91)
I:keymgr2kasp:check key timing metadata for key KEY1 id 12256 zone migrate-nomatch-algnum.kasp (92)
I:keymgr2kasp:check key timing metadata for key KEY2 id 4063 zone migrate-nomatch-algnum.kasp (93)
I:keymgr2kasp:check key timing metadata for key KEY3 id 57625 zone migrate-nomatch-algnum.kasp (94)
I:keymgr2kasp:check key timing metadata for key KEY4 id 18000 zone migrate-nomatch-algnum.kasp (95)
I:keymgr2kasp:check DNSKEY rrset is signed correctly for zone migrate-nomatch-algnum.kasp (96)
I:keymgr2kasp:check SOA rrset is signed correctly for zone migrate-nomatch-algnum.kasp (97)
I:keymgr2kasp:check CDS and CDNSKEY rrset are signed correctly for zone migrate-nomatch-algnum.kasp (98)
I:keymgr2kasp:check A a.migrate-nomatch-algnum.kasp rrset is signed correctly for zone migrate-nomatch-algnum.kasp (99)
I:keymgr2kasp:dnssec-verify zone migrate-nomatch-algnum.kasp (100)
I:keymgr2kasp:check that of zone migrate-nomatch-algnum.kasp migration to dnssec-policy keeps existing keys (101)
I:keymgr2kasp:check keys are created for zone migrate-nomatch-alglen.kasp (102)
I:keymgr2kasp:check number of keys for zone migrate-nomatch-alglen.kasp in dir ns3 (102)
I:keymgr2kasp:check key id 24540
I:keymgr2kasp:check key id 13114
I:keymgr2kasp:check key id 64471
I:keymgr2kasp:check key id 19450
I:keymgr2kasp:KEY1 ID 13114
I:keymgr2kasp:KEY2 ID 19450
I:keymgr2kasp:KEY3 ID 64471
I:keymgr2kasp:KEY4 ID 24540
I:keymgr2kasp:wait for zone migrate-nomatch-alglen.kasp is done signing (103)
I:keymgr2kasp:wait for zone migrate-nomatch-alglen.kasp is done signing with KEY1 migrate-nomatch-alglen.kasp/RSASHA1/13114
I:keymgr2kasp:wait for zone migrate-nomatch-alglen.kasp is done signing with KEY2 migrate-nomatch-alglen.kasp/RSASHA1/19450
I:keymgr2kasp:wait for zone migrate-nomatch-alglen.kasp is done signing with KEY3 migrate-nomatch-alglen.kasp/RSASHA1/64471
I:keymgr2kasp:check rndc dnssec -status output for migrate-nomatch-alglen.kasp (policy: migrate-nomatch-alglen) (104)
I:keymgr2kasp:check key timing metadata for key KEY1 id 13114 zone migrate-nomatch-alglen.kasp (105)
I:keymgr2kasp:check key timing metadata for key KEY2 id 19450 zone migrate-nomatch-alglen.kasp (106)
I:keymgr2kasp:check key timing metadata for key KEY3 id 64471 zone migrate-nomatch-alglen.kasp (107)
I:keymgr2kasp:check key timing metadata for key KEY4 id 24540 zone migrate-nomatch-alglen.kasp (108)
I:keymgr2kasp:check DNSKEY rrset is signed correctly for zone migrate-nomatch-alglen.kasp (109)
I:keymgr2kasp:check SOA rrset is signed correctly for zone migrate-nomatch-alglen.kasp (110)
I:keymgr2kasp:check CDS and CDNSKEY rrset are signed correctly for zone migrate-nomatch-alglen.kasp (111)
I:keymgr2kasp:check A a.migrate-nomatch-alglen.kasp rrset is signed correctly for zone migrate-nomatch-alglen.kasp (112)
I:keymgr2kasp:dnssec-verify zone migrate-nomatch-alglen.kasp (113)
I:keymgr2kasp:check that of zone migrate-nomatch-alglen.kasp migration to dnssec-policy keeps existing keys (114)
I:keymgr2kasp:check keys are created for zone rumoured.kasp (115)
I:keymgr2kasp:check number of keys for zone rumoured.kasp in dir ns3 (115)
I:keymgr2kasp:check key id 22345
I:keymgr2kasp:check key id 52793
I:keymgr2kasp:KEY1 ID 22345
I:keymgr2kasp:KEY2 ID 52793
I:keymgr2kasp:wait for zone rumoured.kasp is done signing (116)
I:keymgr2kasp:wait for zone rumoured.kasp is done signing with KEY1 rumoured.kasp/ECDSAP256SHA256/22345
I:keymgr2kasp:wait for zone rumoured.kasp is done signing with KEY2 rumoured.kasp/ECDSAP256SHA256/52793
I:keymgr2kasp:check rndc dnssec -status output for rumoured.kasp (policy: timing-metadata) (117)
I:keymgr2kasp:check key timing metadata for key KEY1 id 22345 zone rumoured.kasp (118)
I:keymgr2kasp:check key timing metadata for key KEY2 id 52793 zone rumoured.kasp (119)
I:keymgr2kasp:check DNSKEY rrset is signed correctly for zone rumoured.kasp (120)
I:keymgr2kasp:check SOA rrset is signed correctly for zone rumoured.kasp (121)
I:keymgr2kasp:check CDS and CDNSKEY rrset are signed correctly for zone rumoured.kasp (122)
I:keymgr2kasp:check A a.rumoured.kasp rrset is signed correctly for zone rumoured.kasp (123)
I:keymgr2kasp:dnssec-verify zone rumoured.kasp (124)
I:keymgr2kasp:check that of zone rumoured.kasp migration to dnssec-policy uses the same keys (125)
I:keymgr2kasp:check keys are created for zone omnipresent.kasp (126)
I:keymgr2kasp:check number of keys for zone omnipresent.kasp in dir ns3 (126)
I:keymgr2kasp:check key id 51521
I:keymgr2kasp:check key id 05574
I:keymgr2kasp:KEY1 ID 5574
I:keymgr2kasp:KEY2 ID 51521
I:keymgr2kasp:wait for zone omnipresent.kasp is done signing (127)
I:keymgr2kasp:wait for zone omnipresent.kasp is done signing with KEY1 omnipresent.kasp/ECDSAP256SHA256/5574
I:keymgr2kasp:wait for zone omnipresent.kasp is done signing with KEY2 omnipresent.kasp/ECDSAP256SHA256/51521
I:keymgr2kasp:check rndc dnssec -status output for omnipresent.kasp (policy: timing-metadata) (128)
I:keymgr2kasp:check key timing metadata for key KEY1 id 5574 zone omnipresent.kasp (129)
I:keymgr2kasp:check key timing metadata for key KEY2 id 51521 zone omnipresent.kasp (130)
I:keymgr2kasp:check DNSKEY rrset is signed correctly for zone omnipresent.kasp (131)
I:keymgr2kasp:check SOA rrset is signed correctly for zone omnipresent.kasp (132)
I:keymgr2kasp:check CDS and CDNSKEY rrset are signed correctly for zone omnipresent.kasp (133)
I:keymgr2kasp:check A a.omnipresent.kasp rrset is signed correctly for zone omnipresent.kasp (134)
I:keymgr2kasp:dnssec-verify zone omnipresent.kasp (135)
I:keymgr2kasp:check that of zone omnipresent.kasp migration to dnssec-policy uses the same keys (136)
I:keymgr2kasp:wait for view-rsasha256.kasp to be signed (137)
I:keymgr2kasp:check keys are created for zone view-rsasha256.kasp (138)
I:keymgr2kasp:check number of keys for zone view-rsasha256.kasp in dir ns4 (138)
I:keymgr2kasp:check key id 17219
I:keymgr2kasp:check key id 54345
I:keymgr2kasp:KEY1 ID 17219
I:keymgr2kasp:KEY2 ID 54345
I:keymgr2kasp:check key timing metadata for key KEY1 id 17219 zone view-rsasha256.kasp (139)
I:keymgr2kasp:check key timing metadata for key KEY2 id 54345 zone view-rsasha256.kasp (140)
I:keymgr2kasp:dnssec-verify zone view-rsasha256.kasp (141)
I:keymgr2kasp:check TXT view-rsasha256.kasp (view ext) rrset is signed correctly (142)
I:keymgr2kasp:wait for view-rsasha256.kasp to be signed (143)
I:keymgr2kasp:check keys are created for zone view-rsasha256.kasp (144)
I:keymgr2kasp:check number of keys for zone view-rsasha256.kasp in dir ns4 (144)
I:keymgr2kasp:check key id 17219
I:keymgr2kasp:check key id 54345
I:keymgr2kasp:KEY1 ID 17219
I:keymgr2kasp:KEY2 ID 54345
I:keymgr2kasp:check key timing metadata for key KEY1 id 17219 zone view-rsasha256.kasp (145)
I:keymgr2kasp:check key timing metadata for key KEY2 id 54345 zone view-rsasha256.kasp (146)
I:keymgr2kasp:dnssec-verify zone view-rsasha256.kasp (147)
I:keymgr2kasp:check TXT view-rsasha256.kasp (view int) rrset is signed correctly (148)
I:keymgr2kasp:reconfig to switch to dnssec-policy
I:keymgr2kasp:31 seconds passed between start of tests and reconfig
I:keymgr2kasp:check keys are created for zone view-rsasha256.kasp (149)
I:keymgr2kasp:check number of keys for zone view-rsasha256.kasp in dir ns4 (149)
I:keymgr2kasp:check key id 17219
I:keymgr2kasp:check key id 54345
I:keymgr2kasp:check key id 53821
I:keymgr2kasp:KEY1 ID 17219
I:keymgr2kasp:KEY2 ID 54345
I:keymgr2kasp:KEY3 ID 53821
I:keymgr2kasp:wait for zone view-rsasha256.kasp is done signing (150)
I:keymgr2kasp:wait for zone view-rsasha256.kasp is done signing with KEY1 view-rsasha256.kasp/RSASHA256/17219
I:keymgr2kasp:wait for zone view-rsasha256.kasp is done signing with KEY2 view-rsasha256.kasp/RSASHA256/54345
I:keymgr2kasp:check rndc dnssec -status output for view-rsasha256.kasp (policy: rsasha256) (151)
I:keymgr2kasp:check key timing metadata for key KEY1 id 17219 zone view-rsasha256.kasp (152)
I:keymgr2kasp:check key timing metadata for key KEY2 id 54345 zone view-rsasha256.kasp (153)
I:keymgr2kasp:check key timing metadata for key KEY3 id 53821 zone view-rsasha256.kasp (154)
I:keymgr2kasp:check DNSKEY rrset is signed correctly for zone view-rsasha256.kasp (155)
I:keymgr2kasp:check SOA rrset is signed correctly for zone view-rsasha256.kasp (156)
I:keymgr2kasp:check CDS and CDNSKEY rrset are signed correctly for zone view-rsasha256.kasp (157)
I:keymgr2kasp:dnssec-verify zone view-rsasha256.kasp (158)
I:keymgr2kasp:check keys are created for zone view-rsasha256.kasp (159)
I:keymgr2kasp:check number of keys for zone view-rsasha256.kasp in dir ns4 (159)
I:keymgr2kasp:check key id 17219
I:keymgr2kasp:check key id 54345
I:keymgr2kasp:check key id 53821
I:keymgr2kasp:KEY1 ID 17219
I:keymgr2kasp:KEY2 ID 54345
I:keymgr2kasp:KEY3 ID 53821
I:keymgr2kasp:wait for zone view-rsasha256.kasp is done signing (160)
I:keymgr2kasp:wait for zone view-rsasha256.kasp is done signing with KEY1 view-rsasha256.kasp/RSASHA256/17219
I:keymgr2kasp:wait for zone view-rsasha256.kasp is done signing with KEY2 view-rsasha256.kasp/RSASHA256/54345
I:keymgr2kasp:check rndc dnssec -status output for view-rsasha256.kasp (policy: rsasha256) (161)
I:keymgr2kasp:check key timing metadata for key KEY1 id 17219 zone view-rsasha256.kasp (162)
I:keymgr2kasp:check key timing metadata for key KEY2 id 54345 zone view-rsasha256.kasp (163)
I:keymgr2kasp:check key timing metadata for key KEY3 id 53821 zone view-rsasha256.kasp (164)
I:keymgr2kasp:check DNSKEY rrset is signed correctly for zone view-rsasha256.kasp (165)
I:keymgr2kasp:check SOA rrset is signed correctly for zone view-rsasha256.kasp (166)
I:keymgr2kasp:check CDS and CDNSKEY rrset are signed correctly for zone view-rsasha256.kasp (167)
I:keymgr2kasp:dnssec-verify zone view-rsasha256.kasp (168)
I:keymgr2kasp:check that of zone view-rsasha256.kasp migration to dnssec-policy uses the same keys (169)
I:keymgr2kasp:exit status: 0
I:keymgr2kasp:stopping servers
I:keymgr2kasp:pytest not installed, skipping python tests
R:keymgr2kasp:PASS
E:keymgr2kasp:2022-02-23T15:34:10+0800
S:legacy:2022-02-23T15:34:10+0800
T:legacy:1:A
A:legacy:System test legacy
I:legacy:PORTRANGE:9300 - 9399
I:legacy:starting servers
I:legacy:checking formerr edns server setup (1)
I:legacy:checking recursive lookup to formerr edns server succeeds (2)
I:legacy:checking notimp edns server setup (3)
I:legacy:checking recursive lookup to notimp edns server fails (4)
I:legacy:checking refused edns server setup (5)
I:legacy:checking recursive lookup to refused edns server fails (6)
I:legacy:checking drop edns server setup (7)
I:legacy:checking recursive lookup to drop edns server fails (8)
I:legacy:checking drop edns + no tcp server setup (9)
I:legacy:checking recursive lookup to drop edns + no tcp server fails (10)
I:legacy:checking plain dns server setup (11)
I:legacy:checking recursive lookup to plain dns server succeeds (12)
I:legacy:checking plain dns + no tcp server setup (13)
I:legacy:checking recursive lookup to plain dns + no tcp server succeeds (14)
I:legacy:checking edns 512 server setup (15)
I:legacy:checking recursive lookup to edns 512 server succeeds (16)
I:legacy:checking edns 512 + no tcp server setup (17)
I:legacy:checking recursive lookup to edns 512 + no tcp server fails (18)
I:legacy:checking recursive lookup to edns 512 + no tcp server does not cause query loops (19)
I:legacy:checking that TCP failures do not influence EDNS statistics in the ADB (20)
I:legacy:checking recursive lookup to edns 512 + no tcp + trust anchor fails (21)
I:legacy:exit status: 0
I:legacy:stopping servers
I:legacy:pytest not installed, skipping python tests
R:legacy:PASS
E:legacy:2022-02-23T15:35:06+0800
S:limits:2022-02-23T15:35:06+0800
T:limits:1:A
A:limits:System test limits
I:limits:PORTRANGE:9400 - 9499
I:limits:starting servers
I:limits:1000 A records
I:limits:2000 A records
I:limits:3000 A records
I:limits:4000 A records
I:limits:exactly maximum rrset
I:limits:exceed maximum rrset (5000 A records)
I:limits:exit status: 0
I:limits:stopping servers
I:limits:pytest not installed, skipping python tests
R:limits:PASS
E:limits:2022-02-23T15:35:10+0800
S:masterfile:2022-02-23T15:35:10+0800
T:masterfile:1:A
A:masterfile:System test masterfile
I:masterfile:PORTRANGE:9500 - 9599
I:masterfile:starting servers
I:masterfile:test master file $INCLUDE semantics (1)
I:masterfile:test master file BIND 8 compatibility TTL and $TTL semantics (1)
I:masterfile:test of master file RFC1035 TTL and $TTL semantics (1)
I:masterfile:test that the nameserver is running with a missing master file (2)
I:masterfile:test that the nameserver returns SERVFAIL for a missing master file (3)
I:masterfile:test owner inheritance after $INCLUDE (4)
I:masterfile:exit status: 0
I:masterfile:stopping servers
I:masterfile:pytest not installed, skipping python tests
R:masterfile:PASS
E:masterfile:2022-02-23T15:35:12+0800
S:masterformat:2022-02-23T15:35:12+0800
T:masterformat:1:A
A:masterformat:System test masterformat
I:masterformat:PORTRANGE:9600 - 9699
I:masterformat:starting servers
I:masterformat:checking that files in raw format loaded (1)
I:masterformat:checking raw format versions (2)
I:masterformat:checking source serial numbers (3)
I:masterformat:waiting for transfers to complete
I:masterformat:checking that secondary was saved in raw format by default (4)
I:masterformat:checking that secondary was saved in text format when configured (5)
I:masterformat:checking that secondary was saved in 'full' style when configured (6)
I:masterformat:checking that secondary formerly in text format is now raw (7)
I:masterformat:checking that large rdatasets loaded (8)
I:masterformat:checking format transitions: text->raw->map->text (9)
I:masterformat:checking format transitions: text->map->raw->text (10)
I:masterformat:checking map format loading with journal file rollforward (11)
I:masterformat:checking map format file dumps correctly (12)
I:masterformat:checking corrupt map files fail to load (bad file header) (13)
I:masterformat:checking corrupt map files fail to load (bad node header) (14)
I:masterformat:checking corrupt map files fail to load (bad node data) (15)
I:masterformat:checking map format zone is scheduled for resigning (compilezone) (16)
I:masterformat:checking map format zone is scheduled for resigning (signzone) (17)
I:masterformat:ns1 zone reload queued
I:masterformat:exit status: 0
I:masterformat:stopping servers
I:masterformat:pytest not installed, skipping python tests
R:masterformat:PASS
E:masterformat:2022-02-23T15:35:27+0800
S:metadata:2022-02-23T15:35:27+0800
T:metadata:1:A
A:metadata:System test metadata
I:metadata:PORTRANGE:9700 - 9799
I:metadata:generating keys
I:metadata:starting servers
I:metadata:setting key timers
I:metadata:signing zones
I:metadata:checking that KSK signed DNSKEY only (1)
I:metadata:checking that ZSK signed (2)
I:metadata:checking that standby ZSK did not sign (3)
I:metadata:checking that inactive key did not sign (4)
I:metadata:checking that pending key was not published (5)
I:metadata:checking that standby KSK did not sign but is delegated (6)
I:metadata:checking that key was revoked (7)
I:metadata:checking that revoked key self-signed (8)
I:metadata:waiting 20 seconds for key changes to occur
I:metadata:re-signing zone
I:metadata:checking that standby KSK is now active (9)
I:metadata:checking update of an old-style key (10)
I:metadata:checking warning about permissions change on key with dnssec-settime (11)
I:metadata:checking warning about delete date < inactive date with dnssec-settime (12)
I:metadata:checking no warning about delete date < inactive date with dnssec-settime when delete date is unset (13)
I:metadata:checking warning about delete date < inactive date with dnssec-keygen (14)
I:metadata:checking correct behavior setting activation without publication date (15)
I:metadata:checking calculation of dates for a successor key (16)
I:metadata:exit status: 0
I:metadata:stopping servers
I:metadata:pytest not installed, skipping python tests
R:metadata:PASS
E:metadata:2022-02-23T15:35:51+0800
S:mirror:2022-02-23T15:35:51+0800
T:mirror:1:A
A:mirror:System test mirror
I:mirror:PORTRANGE:9800 - 9899
I:mirror:starting servers
I:mirror:checking that an unsigned mirror zone is rejected (1)
I:mirror:checking that a mirror zone signed using an untrusted key is rejected (2)
I:mirror:checking that a mirror zone signed using a CSK without the SEP bit set is accepted (3)
I:mirror:checking that an AXFR of an incorrectly signed mirror zone is rejected (4)
I:mirror:checking that an AXFR of an updated, correctly signed mirror zone is accepted (5)
I:mirror:ns2 server reload successful
I:mirror:checking that an IXFR of an incorrectly signed mirror zone is rejected (6)
I:mirror:ns2 server reload successful
I:mirror:checking that an IXFR of an updated, correctly signed mirror zone is accepted after AXFR failover (7)
I:mirror:ns2 server reload successful
I:mirror:checking that loading an incorrectly signed mirror zone from disk fails (8)
I:mirror:ensuring trust anchor telemetry queries are sent upstream for a mirror zone (9)
I:mirror:checking that loading a correctly signed mirror zone from disk succeeds (10)
I:mirror:checking that loading a journal for an incorrectly signed mirror zone fails (11)
I:mirror:checking that loading a journal for a correctly signed mirror zone succeeds (12)
I:mirror:checking delegations sourced from a mirror zone (13)
I:mirror:checking that resolution involving a mirror zone works as expected (14)
I:mirror:checking that non-recursive queries for names below mirror zone get responded from cache (15)
I:mirror:checking that delegations from cache which improve mirror zone delegations are properly handled (16)
I:mirror:checking flags set in a DNSKEY response sourced from a mirror zone (17)
I:mirror:checking flags set in a SOA response sourced from a mirror zone (18)
I:mirror:checking that resolution succeeds with unavailable mirror zone data (19)
I:mirror:checking that resolution succeeds with expired mirror zone data (20)
I:mirror:checking that clients without cache access cannot retrieve mirror zone data (21)
I:mirror:checking that outgoing transfers of mirror zones are disabled by default (22)
I:mirror:checking that notifies are disabled by default for mirror zones (23)
I:mirror:checking output of "rndc zonestatus" for a mirror zone (24)
I:mirror:checking that "rndc reconfig" properly handles a mirror -> secondary zone type change (25)
I:mirror:checking that "rndc reconfig" properly handles a secondary -> mirror zone type change (26)
I:mirror:checking that a mirror zone can be added using rndc (27)
I:mirror:checking that a mirror zone can be deleted using rndc (28)
I:mirror:exit status: 0
I:mirror:stopping servers
I:mirror:pytest not installed, skipping python tests
R:mirror:PASS
E:mirror:2022-02-23T15:36:13+0800
S:mkeys:2022-02-23T15:36:13+0800
T:mkeys:1:A
A:mkeys:System test mkeys
I:mkeys:PORTRANGE:9900 - 9999
I:mkeys:starting servers
I:mkeys:check for signed record (1)
I:mkeys:check positive validation with valid trust anchor (2)
I:mkeys:check positive validation using delv (3)
I:mkeys:check for failed validation due to wrong key in managed-keys (4)
I:mkeys:check new trust anchor can be added (5)
I:mkeys:ns2 refreshing managed keys for '_default'
I:mkeys:check new trust anchor can't be added with bad initial key (6)
I:mkeys:ns3 refreshing managed keys for '_default'
I:mkeys:remove untrusted standby key, check timer restarts (7)
I:mkeys:ns2 refreshing managed keys for '_default'
I:mkeys:restore untrusted standby key, revoke original key (8)
I:mkeys:ns2 refreshing managed keys for '_default'
I:mkeys:refresh managed-keys, ensure same result (9)
I:mkeys:ns2 refreshing managed keys for '_default'
I:mkeys:restore revoked key, ensure same result (10)
I:mkeys:ns2 refreshing managed keys for '_default'
I:mkeys:reinitialize trust anchors, add second key to bind.keys
I:mkeys:check that no key from bind.keys is marked as an initializing key (11)
I:mkeys:reinitialize trust anchors, revert to one key in bind.keys
I:mkeys:check that standby key is now trusted (12)
I:mkeys:revoke original key, add new standby (13)
I:mkeys:ns2 refreshing managed keys for '_default'
I:mkeys:revoke standby before it is trusted (14)
I:mkeys:ns2 refreshing managed keys for '_default'
I:mkeys:ns2 refreshing managed keys for '_default'
I:mkeys:wait 20 seconds for key add/remove holddowns to expire (15)
I:mkeys:ns2 refreshing managed keys for '_default'
I:mkeys:revoke all keys, confirm roll to insecure (16)
I:mkeys:ns2 refreshing managed keys for '_default'
I:mkeys:check for insecure response (17)
I:mkeys:ns2 refreshing managed keys for '_default'
I:mkeys:reset the root server (18)
I:mkeys:ns1 server reload successful
I:mkeys:reinitialize trust anchors
I:mkeys:check positive validation (19)
I:mkeys:revoke key with bad signature, check revocation is ignored (20)
I:mkeys:ns1 server reload successful
I:mkeys:ns2 refreshing managed keys for '_default'
I:mkeys:check validation fails with bad DNSKEY rrset (21)
I:mkeys:restore DNSKEY rrset, check validation succeeds again (22)
I:mkeys:ns1 server reload successful
I:mkeys:reset the root server with no keys, check for minimal update (23)
I:mkeys:ns2 refreshing managed keys for '_default'
I:mkeys:ns2 refreshing managed keys for '_default'
I:mkeys:reset the root server with no signatures, check for minimal update (24)
I:mkeys:ns2 refreshing managed keys for '_default'
I:mkeys:ns2 refreshing managed keys for '_default'
I:mkeys:restore root server, check validation succeeds again (25)
I:mkeys:ns1 server reload successful
I:mkeys:ns2 refreshing managed keys for '_default'
I:mkeys:check that trust-anchor-telemetry queries are logged (26)
I:mkeys:check that trust-anchor-telemetry queries are received (27)
I:mkeys:check 'rndc-managed-keys destroy' (28)
I:mkeys:ns2 destroying managed-keys database for '_default'
I:mkeys:check that trust-anchor-telemetry queries contain the correct key (29)
I:mkeys:check initialization fails if managed-keys can't be created (30)
I:mkeys:check failure to contact root servers does not prevent key refreshes after restart (31)
I:mkeys:check key refreshes are resumed after root servers become available (32)
I:mkeys:reinitialize trust anchors, add unsupported algorithm (33)
I:mkeys:ignoring unsupported algorithm in managed-keys (34)
I:mkeys:introduce unsupported algorithm rollover in authoritative zone (35)
I:mkeys:ignoring unsupported algorithm in rollover (36)
I:mkeys:ns1 server reload successful
I:mkeys:ns6 refreshing managed keys for '_default'
I:mkeys:check 'rndc managed-keys' and views (37)
I:mkeys:exit status: 0
I:mkeys:stopping servers
I:mkeys:pytest not installed, skipping python tests
R:mkeys:PASS
E:mkeys:2022-02-23T15:37:21+0800
S:names:2022-02-23T15:37:21+0800
T:names:1:A
A:names:System test names
I:names:PORTRANGE:10000 - 10099
I:names:starting servers
I:names:Getting message size with compression enabled
I:names:Getting message size with compression disabled
I:names:Checking if responses are identical other than in message size
I:names:Checking if message with compression disabled is significantly larger
I:names:Disabled 1222 vs enabled 655
I:names:exit status: 0
I:names:stopping servers
I:names:pytest not installed, skipping python tests
R:names:PASS
E:names:2022-02-23T15:37:25+0800
S:notify:2022-02-23T15:37:25+0800
T:notify:1:A
A:notify:System test notify
I:notify:PORTRANGE:10100 - 10199
I:notify:starting servers
I:notify:checking initial status (1)
I:notify:checking startup notify rate limit (2)
I:notify:reloading with example2 using HUP and waiting up to 45 seconds
I:notify:checking notify message was logged (3)
I:notify:checking example2 loaded (4)
I:notify:checking example2 contents have been transferred after HUP reload (5)
I:notify:stopping master and restarting with example4 then waiting up to 45 seconds
I:notify:checking notify message was logged (6)
I:notify:checking example4 loaded (7)
I:notify:checking example4 contents have been transferred after restart (8)
I:notify:checking notify to alternate port with master inheritance (9)
I:notify:checking notify to multiple views using tsig (10)
I:notify:exit status: 0
I:notify:stopping servers
I:notify:pytest not installed, skipping python tests
R:notify:PASS
E:notify:2022-02-23T15:37:57+0800
S:nsec3:2022-02-23T15:37:57+0800
T:nsec3:1:A
A:nsec3:System test nsec3
I:nsec3:PORTRANGE:10200 - 10299
I:ns3:ns3/setup.sh
I:ns3:setting up zone: nsec-to-nsec3.kasp
I:ns3:setting up zone: nsec3.kasp
I:ns3:setting up zone: nsec3-other.kasp
I:ns3:setting up zone: nsec3-change.kasp
I:ns3:setting up zone: nsec3-to-nsec.kasp
I:ns3:setting up zone: nsec3-to-optout.kasp
I:ns3:setting up zone: nsec3-from-optout.kasp
I:ns3:setting up zone: nsec3-dynamic.kasp
I:ns3:setting up zone: nsec3-dynamic-change.kasp
I:nsec3:starting servers
I:nsec3:initial check zone nsec-to-nsec3.kasp
I:nsec3:check NSEC3PARAM response for zone nsec-to-nsec3.kasp (1)
I:nsec3:check NXDOMAIN response for zone nsec-to-nsec3.kasp (2)
I:nsec3:dnssec-verify zone nsec-to-nsec3.kasp (3)
I:nsec3:initial check zone nsec3.kasp
I:nsec3:check that NSEC3PARAM 1 0 5 is published zone nsec3.kasp (4)
I:nsec3:check NXDOMAIN response has correct NSEC3 1 0 5 1A1E2C90D4B0FE8F for zone nsec3.kasp (5)
I:nsec3:dnssec-verify zone nsec3.kasp (6)
I:nsec3:initial check zone nsec3-dynamic.kasp
I:nsec3:check that NSEC3PARAM 1 0 5 is published zone nsec3-dynamic.kasp (7)
I:nsec3:check NXDOMAIN response has correct NSEC3 1 0 5 9B203A61E27BABBF for zone nsec3-dynamic.kasp (8)
I:nsec3:dnssec-verify zone nsec3-dynamic.kasp (9)
I:nsec3:initial check zone nsec3-change.kasp
I:nsec3:check that NSEC3PARAM 1 0 5 is published zone nsec3-change.kasp (10)
I:nsec3:check NXDOMAIN response has correct NSEC3 1 0 5 98C863CBC0522E58 for zone nsec3-change.kasp (11)
I:nsec3:dnssec-verify zone nsec3-change.kasp (12)
I:nsec3:initial check zone nsec3-dynamic-change.kasp
I:nsec3:check that NSEC3PARAM 1 0 5 is published zone nsec3-dynamic-change.kasp (13)
I:nsec3:check NXDOMAIN response has correct NSEC3 1 0 5 D4143BAEC3A4500F for zone nsec3-dynamic-change.kasp (14)
I:nsec3:dnssec-verify zone nsec3-dynamic-change.kasp (15)
I:nsec3:initial check zone nsec3-to-nsec.kasp
I:nsec3:check that NSEC3PARAM 1 0 5 is published zone nsec3-to-nsec.kasp (16)
I:nsec3:check NXDOMAIN response has correct NSEC3 1 0 5 4CD908ADDE40BF88 for zone nsec3-to-nsec.kasp (17)
I:nsec3:dnssec-verify zone nsec3-to-nsec.kasp (18)
I:nsec3:initial check zone nsec3-to-optout.kasp
I:nsec3:check that NSEC3PARAM 1 0 5 is published zone nsec3-to-optout.kasp (19)
I:nsec3:check NXDOMAIN response has correct NSEC3 1 0 5 6984A2ECC5A30FD2 for zone nsec3-to-optout.kasp (20)
I:nsec3:dnssec-verify zone nsec3-to-optout.kasp (21)
I:nsec3:initial check zone nsec3-from-optout.kasp
I:nsec3:check that NSEC3PARAM 1 0 5 is published zone nsec3-from-optout.kasp (22)
I:nsec3:check NXDOMAIN response has correct NSEC3 1 1 5 D46A8ABA6DDF20FD for zone nsec3-from-optout.kasp (23)
I:nsec3:dnssec-verify zone nsec3-from-optout.kasp (24)
I:nsec3:initial check zone nsec3-other.kasp
I:nsec3:check that NSEC3PARAM 1 0 11 is published zone nsec3-other.kasp (25)
I:nsec3:check NXDOMAIN response has correct NSEC3 1 1 11 - for zone nsec3-other.kasp (26)
I:nsec3:dnssec-verify zone nsec3-other.kasp (27)
I:nsec3:reconfig dnssec-policy to trigger nsec3 rollovers
I:nsec3:check zone nsec-to-nsec3.kasp after reconfig
I:nsec3:check that NSEC3PARAM 1 0 5 is published zone nsec-to-nsec3.kasp (28)
I:nsec3:check NXDOMAIN response has correct NSEC3 1 0 5 E6DDB92D22B8C914 for zone nsec-to-nsec3.kasp (29)
I:nsec3:dnssec-verify zone nsec-to-nsec3.kasp (30)
I:nsec3:check zone nsec3.kasp after reconfig
I:nsec3:check that NSEC3PARAM 1 0 5 is published zone nsec3.kasp (31)
I:nsec3:check NXDOMAIN response has correct NSEC3 1 0 5 1A1E2C90D4B0FE8F for zone nsec3.kasp (32)
I:nsec3:dnssec-verify zone nsec3.kasp (33)
I:nsec3:check zone nsec3-dynamic.kasp after reconfig
I:nsec3:check that NSEC3PARAM 1 0 5 is published zone nsec3-dynamic.kasp (34)
I:nsec3:check NXDOMAIN response has correct NSEC3 1 0 5 9B203A61E27BABBF for zone nsec3-dynamic.kasp (35)
I:nsec3:dnssec-verify zone nsec3-dynamic.kasp (36)
I:nsec3:check zone nsec3-change.kasp after reconfig
I:nsec3:check that NSEC3PARAM 1 0 11 is published zone nsec3-change.kasp (37)
I:nsec3:check NXDOMAIN response has correct NSEC3 1 1 11 - for zone nsec3-change.kasp (38)
I:nsec3:dnssec-verify zone nsec3-change.kasp (39)
I:nsec3:check zone nsec3-dynamic-change.kasp after reconfig
I:nsec3:check that NSEC3PARAM 1 0 11 is published zone nsec3-dynamic-change.kasp (40)
I:nsec3:check NXDOMAIN response has correct NSEC3 1 1 11 - for zone nsec3-dynamic-change.kasp (41)
I:nsec3:dnssec-verify zone nsec3-dynamic-change.kasp (42)
I:nsec3:check zone nsec3-to-nsec.kasp after reconfig
I:nsec3:check NSEC3PARAM response for zone nsec3-to-nsec.kasp (43)
I:nsec3:check NXDOMAIN response for zone nsec3-to-nsec.kasp (44)
I:nsec3:dnssec-verify zone nsec3-to-nsec.kasp (45)
I:nsec3:check zone nsec3-other.kasp after reconfig
I:nsec3:check that NSEC3PARAM 1 0 11 is published zone nsec3-other.kasp (46)
I:nsec3:check NXDOMAIN response has correct NSEC3 1 1 11 - for zone nsec3-other.kasp (47)
I:nsec3:dnssec-verify zone nsec3-other.kasp (48)
I:nsec3:use rndc signing -nsec3param nsec3-change.kasp to change NSEC3 settings
I:nsec3:check that NSEC3PARAM 1 0 11 is published zone nsec3-change.kasp (49)
I:nsec3:check NXDOMAIN response has correct NSEC3 1 1 11 - for zone nsec3-change.kasp (50)
I:nsec3:dnssec-verify zone nsec3-change.kasp (51)
I:nsec3:check zone nsec3.kasp before restart
I:nsec3:check that NSEC3PARAM 1 0 5 is published zone nsec3.kasp (52)
I:nsec3:check NXDOMAIN response has correct NSEC3 1 0 5 1A1E2C90D4B0FE8F for zone nsec3.kasp (53)
I:nsec3:dnssec-verify zone nsec3.kasp (54)
stop ns3
start ns3
I:nsec3:check zone nsec3.kasp after restart has salt 1A1E2C90D4B0FE8F
I:nsec3:check that NSEC3PARAM 1 0 5 is published zone nsec3.kasp (55)
I:nsec3:check NXDOMAIN response has correct NSEC3 1 0 5 1A1E2C90D4B0FE8F for zone nsec3.kasp (56)
I:nsec3:dnssec-verify zone nsec3.kasp (57)
I:nsec3:ns3 server reload successful
I:nsec3:check zone nsec3-fails-to-load.kasp after reload
I:nsec3:check that NSEC3PARAM 1 0 5 is published zone nsec3-fails-to-load.kasp (58)
I:nsec3:check NXDOMAIN response has correct NSEC3 1 0 5 2462FAD759890D1A for zone nsec3-fails-to-load.kasp (59)
I:nsec3:dnssec-verify zone nsec3-fails-to-load.kasp (60)
I:nsec3:exit status: 0
I:nsec3:stopping servers
I:nsec3:pytest not installed, skipping python tests
R:nsec3:PASS
E:nsec3:2022-02-23T15:38:05+0800
S:nslookup:2022-02-23T15:38:05+0800
T:nslookup:1:A
A:nslookup:System test nslookup
I:nslookup:PORTRANGE:10300 - 10399
I:nslookup:starting servers
I:nslookup:Check that domain names that are too big when applying a search list entry are handled cleanly (1)
I:nslookup:Check A only lookup
I:nslookup:Check AAAA only lookup
I:nslookup:Check dual A + AAAA lookup
I:nslookup:Check CNAME to A only lookup
I:nslookup:Check CNAME to AAAA only lookup
I:nslookup:Check CNAME to dual A + AAAA lookup
I:nslookup:exit status: 0
I:nslookup:stopping servers
I:nslookup:pytest not installed, skipping python tests
R:nslookup:PASS
E:nslookup:2022-02-23T15:38:07+0800
S:nsupdate:2022-02-23T15:38:07+0800
T:nsupdate:1:A
A:nsupdate:System test nsupdate
I:nsupdate:PORTRANGE:10400 - 10499
I:nsupdate:starting servers
I:nsupdate:fetching first copy of zone before update
I:nsupdate:fetching second copy of zone before update
I:nsupdate:comparing pre-update copies to known good data
I:nsupdate:updating zone
I:nsupdate:sleeping 5 seconds for server to incorporate changes
I:nsupdate:fetching first copy of zone after update
I:nsupdate:fetching second copy of zone after update
I:nsupdate:comparing post-update copies to known good data
I:nsupdate:testing local update policy
I:nsupdate:updating zone
I:nsupdate:sleeping 5 seconds for server to incorporate changes
I:nsupdate:checking result of update
I:nsupdate:comparing post-update copy to known good data
I:nsupdate:testing zone consistency checks
I:nsupdate:sleeping 5 seconds for server to incorporate changes
I:nsupdate:checking result of update
I:nsupdate:ensure 'check-mx ignore' allows adding MX records containing an address without a warning
I:nsupdate:ensure 'check-mx warn' allows adding MX records containing an address with a warning
I:nsupdate:ensure 'check-mx fail' prevents adding MX records containing an address with a warning
I:nsupdate:check SIG(0) key is accepted
I:nsupdate:check TYPE=0 update is rejected by nsupdate (1)
I:nsupdate:check TYPE=0 prerequisite is handled (2)
I:nsupdate:check that TYPE=0 update is handled (3)
Can't locate Net/DNS.pm in @INC (you may need to install the Net::DNS module) (@INC contains: /usr/perl5/site_perl/5.22/i86pc-solaris-64int /usr/perl5/site_perl/5.22 /usr/perl5/vendor_perl/5.22/i86pc-solaris-64int /usr/perl5/vendor_perl/5.22 /usr/perl5/5.22/lib/i86pc-solaris-64int /usr/perl5/5.22/lib .) at ../packet.pl line 62.
BEGIN failed--compilation aborted at ../packet.pl line 62.
I:nsupdate:failed
I:nsupdate:check that TYPE=0 additional data is handled (4)
Can't locate Net/DNS.pm in @INC (you may need to install the Net::DNS module) (@INC contains: /usr/perl5/site_perl/5.22/i86pc-solaris-64int /usr/perl5/site_perl/5.22 /usr/perl5/vendor_perl/5.22/i86pc-solaris-64int /usr/perl5/vendor_perl/5.22 /usr/perl5/5.22/lib/i86pc-solaris-64int /usr/perl5/5.22/lib .) at ../packet.pl line 62.
BEGIN failed--compilation aborted at ../packet.pl line 62.
I:nsupdate:failed
I:nsupdate:check that update to undefined class is handled (5)
Can't locate Net/DNS.pm in @INC (you may need to install the Net::DNS module) (@INC contains: /usr/perl5/site_perl/5.22/i86pc-solaris-64int /usr/perl5/site_perl/5.22 /usr/perl5/vendor_perl/5.22/i86pc-solaris-64int /usr/perl5/vendor_perl/5.22 /usr/perl5/5.22/lib/i86pc-solaris-64int /usr/perl5/5.22/lib .) at ../packet.pl line 62.
BEGIN failed--compilation aborted at ../packet.pl line 62.
I:nsupdate:failed
I:nsupdate:check that address family mismatch is handled (6)
I:nsupdate:check that unixtime serial number is correctly generated (7)
I:nsupdate:The second part of this test requires the Net::DNS library.
I:nsupdate:fetching first copy of test zone (8)
I:nsupdate:fetching second copy of test zone (9)
I:nsupdate:comparing zones (10)
I:nsupdate:SIGKILL and restart server ns1
I:nsupdate:restarted server ns1
I:nsupdate:fetching ns1 after hard restart (11)
I:nsupdate:comparing zones (12)
I:nsupdate:begin RT #482 regression test
I:nsupdate:update primary (13)
I:nsupdate:SIGHUP secondary
I:nsupdate:update primary again (14)
I:nsupdate:SIGHUP secondary again
I:nsupdate:check to 'out of sync' message (15)
I:nsupdate:end RT #482 regression test
I:nsupdate:start NSEC3PARAM changes via UPDATE on a unsigned zone test (16)
I:nsupdate:change the NSEC3PARAM ttl via update (17)
I:nsupdate:add a new NSEC3PARAM via update (18)
I:nsupdate:add, delete and change the ttl of the NSEC3PARAM rrset via update (19)
I:nsupdate:testing that rndc stop updates the file
I:nsupdate:check that 'nsupdate -l' with a missing keyfile reports the missing file
I:nsupdate:check that 'update-policy local' works from localhost address (20)
I:nsupdate:check that 'update-policy local' fails from non-localhost address (21)
I:nsupdate:check that 'update-policy tcp-self' refuses update of records via UDP (22)
I:nsupdate:check that 'update-policy tcp-self' permits update of records for the client's own address via TCP (23)
I:nsupdate:check that 'update-policy tcp-self' refuses update of records for a different address from the client's own address via TCP (24)
I:nsupdate:check that 'update-policy subdomain' is properly enforced (25)
I:nsupdate:check that 'update-policy zonesub' is properly enforced (26)
I:nsupdate:check 'grant' in deny name + grant subdomain (27)
I:nsupdate:check 'deny' in deny name + grant subdomain (28)
I:nsupdate:check that changes to the DNSKEY RRset TTL do not have side effects (29)
I:nsupdate:check notify with TSIG worked (30)
I:nsupdate:check type list options (31)
I:nsupdate:check command list (32)
I:nsupdate:check TSIG key algorithms (nsupdate -k) (33)
I:nsupdate:check TSIG key algorithms (nsupdate -y) (34)
I:nsupdate:check that ttl is capped by max-ttl (35)
I:nsupdate:add a record which is truncated when logged. (36)
I:nsupdate:check that yyyymmddvv serial number is correctly generated (37)
I:nsupdate:check max-journal-size limits (38)
I:nsupdate:check check-names processing (39)
I:nsupdate:check adding of delegating NS records processing (40)
I:nsupdate:check deleting of delegating NS records processing (41)
I:nsupdate:check that adding too many records is blocked (42)
I:nsupdate:check whether valid addresses are used for primary failover (43)
I:nsupdate:ensure bad owner name is fatal in non-interactive mode (44)
I:nsupdate:ensure bad owner name is not fatal in interactive mode (45)
I:nsupdate:ensure invalid key type is fatal in non-interactive mode (46)
I:nsupdate:ensure invalid key type is not fatal in interactive mode (47)
I:nsupdate:ensure unresolvable server name is fatal in non-interactive mode (48)
I:nsupdate:ensure unresolvable server name is not fatal in interactive mode (49)
I:nsupdate:check nsupdate -4 -6 (50)
I:nsupdate:check nsupdate -4 with an IPv6 server address (51)
I:nsupdate:check that TKEY in a update is rejected (52)
I:nsupdate:check that DS to the zone apex is ignored (53)
I:nsupdate:check that CDS with mismatched algorithm to DNSSEC multisigner zone is not allowed (54)
I:nsupdate:check that CDNSKEY with mismatched algorithm to DNSSEC multisigner zone is not allowed (55)
I:nsupdate:check that CDS to DNSSEC multisigner zone is allowed (56)
I:nsupdate:check that CDNSKEY to DNSSEC multisigner zone is allowed (57)
I:nsupdate:check that excessive NSEC3PARAM iterations are rejected by nsupdate (58)
I:nsupdate:check krb5-self match (59)
I:nsupdate:failed
I:nsupdate:check krb5-self no-match (60)
I:nsupdate:failed
I:nsupdate:check krb5-subdomain match (61)
I:nsupdate:failed
I:nsupdate:check krb5-subdomain no-match (62)
I:nsupdate:failed
I:nsupdate:check krb5-selfsub match (63)
I:nsupdate:failed
I:nsupdate:check krb5-selfsub no-match (64)
I:nsupdate:failed
I:nsupdate:check ms-self match (65)
I:nsupdate:failed
I:nsupdate:check ms-self no-match (66)
I:nsupdate:failed
I:nsupdate:check ms-subdomain match (67)
I:nsupdate:failed
I:nsupdate:check ms-subdomain no-match (68)
I:nsupdate:failed
I:nsupdate:check ms-selfsub match (69)
I:nsupdate:failed
I:nsupdate:check ms-selfsub no-match (70)
I:nsupdate:failed
I:nsupdate:exit status: 1
I:nsupdate:stopping servers
R:nsupdate:FAIL
E:nsupdate:2022-02-23T15:39:58+0800
S:nzd2nzf:2022-02-23T15:39:58+0800
T:nzd2nzf:1:A
A:nzd2nzf:System test nzd2nzf
I:nzd2nzf:PORTRANGE:10500 - 10599
I:nzd2nzf:starting servers
I:nzd2nzf:querying for non-existing zone data (1)
I:nzd2nzf:adding a new zone into default NZD using rndc addzone (2)
I:nzd2nzf:querying for existing zone data (3)
I:nzd2nzf:stopping ns1
I:nzd2nzf:dumping _default.nzd to _default.nzf (4)
I:nzd2nzf:checking that _default.nzf contains the expected content (5)
I:nzd2nzf:deleting _default.nzd database
I:nzd2nzf:starting ns1 which should migrate the .nzf to .nzd
I:nzd2nzf:querying for zone data from migrated zone config (6)
I:nzd2nzf:exit status: 0
I:nzd2nzf:stopping servers
I:nzd2nzf:pytest not installed, skipping python tests
R:nzd2nzf:PASS
E:nzd2nzf:2022-02-23T15:40:03+0800
S:padding:2022-02-23T15:40:03+0800
T:padding:1:A
A:padding:System test padding
I:padding:PORTRANGE:10600 - 10699
I:padding:starting servers
I:padding:checking that dig handles padding (0)
I:padding:checking that dig added padding (1)
I:padding:checking that padding is added for TCP responses (2)
I:padding:checking that padding is added to valid cookie responses (3)
I:padding:checking that padding must be requested (TCP) (4)
I:padding:checking that padding must be requested (valid cookie) (5)
I:padding:checking that padding can be filtered out (6)
I:padding:checking that a TCP and padding server config enables padding (7)
I:padding:checking that a padding server config should enforce TCP (8)
I:padding:checking that zero-length padding option has no effect (9)
I:padding:exit status: 0
I:padding:stopping servers
I:padding:pytest not installed, skipping python tests
R:padding:PASS
E:padding:2022-02-23T15:40:12+0800
S:pending:2022-02-23T15:40:12+0800
T:pending:1:A
A:pending:System test pending
I:pending:PORTRANGE:10700 - 10799
I:pending:starting servers
I:pending:Priming cache.
I:pending:Checking that bogus additional is not returned with +CD.
I:pending:Priming cache (pending additional A and AAAA)
I:pending:Replacing pending A
I:pending:Replacing pending AAAA
I:pending:Checking updated data to be returned (without CD)
I:pending:Checking updated data to be returned (with CD)
I:pending:Priming cache (pending answer)
I:pending:Replacing pending data
I:pending:Confirming cached pending data to be returned with CD
I:pending:Priming cache (pending answer)
I:pending:Replacing pending data
I:pending:Confirming updated data returned, not the cached one, without CD
I:pending:Trying to Prime out-of-bailiwick pending answer with CD
I:pending:Confirming the out-of-bailiwick answer is not cached or reused with CD
I:pending:Trying to Prime bogus NXDOMAIN
I:pending:Confirming the bogus NXDOMAIN was not cached
I:pending:exit status: 0
I:pending:stopping servers
I:pending:pytest not installed, skipping python tests
R:pending:PASS
E:pending:2022-02-23T15:40:18+0800
S:pipelined:2022-02-23T15:40:18+0800
T:pipelined:1:A
A:pipelined:System test pipelined
I:pipelined:PORTRANGE:10800 - 10899
I:pipelined:This test requires the dnspython module.
I:pipelined:Prerequisites missing, skipping test.
R:pipelined:SKIPPED
E:pipelined:2022-02-23T15:40:18+0800
S:qmin:2022-02-23T15:40:18+0800
T:qmin:1:A
A:qmin:System test qmin
I:qmin:PORTRANGE:10900 - 10999
I:qmin:This test requires the dnspython module.
I:qmin:Prerequisites missing, skipping test.
R:qmin:SKIPPED
E:qmin:2022-02-23T15:40:18+0800
S:reclimit:2022-02-23T15:40:19+0800
T:reclimit:1:A
A:reclimit:System test reclimit
I:reclimit:PORTRANGE:11000 - 11099
I:reclimit:This test requires the Net::DNS library.
I:reclimit:Prerequisites missing, skipping test.
R:reclimit:SKIPPED
E:reclimit:2022-02-23T15:40:19+0800
S:redirect:2022-02-23T15:40:19+0800
T:redirect:1:A
A:redirect:System test redirect
I:redirect:PORTRANGE:11100 - 11199
dnssec-signzone: warning: root.db:17: using RFC1035 TTL semantics
I:redirect:starting servers
I:redirect:checking that conf/good1.conf is accepted (1)
I:redirect:checking that conf/good2.conf is accepted (2)
I:redirect:checking that conf/good3.conf is accepted (3)
I:redirect:checking that conf/good4.conf is accepted (4)
I:redirect:checking that conf/bad1.conf is rejected (5)
I:redirect:checking that conf/bad2.conf is rejected (6)
I:redirect:checking that conf/bad3.conf is rejected (7)
I:redirect:checking A zone redirect works for nonexist (8)
I:redirect:checking A zone redirect updates statistics (9)
I:redirect:checking AAAA zone redirect works for nonexist (10)
I:redirect:checking ANY zone redirect works for nonexist (11)
I:redirect:checking A zone redirect doesn't work for acl miss (12)
I:redirect:checking AAAA zone redirect doesn't work for acl miss (13)
I:redirect:checking ANY zone redirect doesn't work for acl miss (14)
I:redirect:checking A zone redirect works for signed nonexist, DO=0 (15)
I:redirect:checking AAAA zone redirect works for signed nonexist, DO=0 (16)
I:redirect:checking ANY zone redirect works for signed nonexist, DO=0 (17)
I:redirect:checking A zone redirect fails for signed nonexist, DO=1 (18)
I:redirect:checking AAAA zone redirect fails for signed nonexist, DO=1 (19)
I:redirect:checking ANY zone redirect fails for signed nonexist, DO=1 (20)
I:redirect:checking A zone redirect fails for nsec3 signed nonexist, DO=1 (21)
I:redirect:checking AAAA zone redirect fails for nsec3 signed nonexist, DO=1 (22)
I:redirect:checking ANY zone redirect fails for nsec3 signed nonexist, DO=1 (23)
I:redirect:checking A zone redirect works for nonexist authoritative (24)
I:redirect:checking AAAA zone redirect works for nonexist authoritative (25)
I:redirect:checking ANY zone redirect works for nonexist authoritative (26)
I:redirect:checking A zone redirect doesn't work for acl miss authoritative (27)
I:redirect:checking AAAA zone redirect doesn't work for acl miss authoritative (28)
I:redirect:checking ANY zone redirect doesn't work for acl miss authoritative (29)
I:redirect:checking A zone redirect works for signed nonexist, DO=0 authoritative (30)
I:redirect:checking AAAA zone redirect works for signed nonexist, DO=0 authoritative (31)
I:redirect:checking ANY zone redirect works for signed nonexist, DO=0 authoritative (32)
I:redirect:checking A zone redirect fails for signed nonexist, DO=1 authoritative (33)
I:redirect:checking AAAA zone redirect fails for signed nonexist, DO=1 authoritative (34)
I:redirect:checking ANY zone redirect fails for signed nonexist, DO=1 authoritative (35)
I:redirect:checking A zone redirect fails for nsec3 signed nonexist, DO=1 authoritative (36)
I:redirect:checking AAAA zone redirect fails for nsec3 signed nonexist, DO=1 authoritative (37)
I:redirect:checking ANY zone redirect fails for nsec3 signed nonexist, DO=1 authoritative (38)
I:redirect:checking zone redirect works (with noerror) when qtype is not found (39)
I:redirect:checking that redirect zones reload correctly
I:redirect:ns2 server reload successful
I:redirect:checking A nxdomain-redirect works for nonexist (41)
I:redirect:checking AAAA nxdomain-redirect works for nonexist (42)
I:redirect:checking AAAA nxdomain-redirect updates statistics (43)
I:redirect:checking ANY nxdomain-redirect works for nonexist (44)
I:redirect:checking A nxdomain-redirect works for signed nonexist, DO=0 (45)
I:redirect:checking AAAA nxdomain-redirect works for signed nonexist, DO=0 (46)
I:redirect:checking ANY nxdomain-redirect works for signed nonexist, DO=0 (47)
I:redirect:checking A nxdomain-redirect fails for signed nonexist, DO=1 (48)
I:redirect:checking AAAA nxdomain-redirect fails for signed nonexist, DO=1 (49)
I:redirect:checking ANY nxdomain-redirect fails for signed nonexist, DO=1 (50)
I:redirect:checking A nxdomain-redirect fails for nsec3 signed nonexist, DO=1 (51)
I:redirect:checking AAAA nxdomain-redirect fails for nsec3 signed nonexist, DO=1 (52)
I:redirect:checking ANY nxdomain-redirect fails for nsec3 signed nonexist, DO=1 (53)
I:redirect:checking nxdomain-redirect works (with noerror) when qtype is not found (54)
I:redirect:checking nxdomain-redirect against authoritative zone (55)
I:redirect:checking tld nxdomain-redirect against signed root zone (56)
I:redirect:checking tld nxdomain-redirect against unsigned root zone (57)
I:redirect:exit status: 0
I:redirect:stopping servers
I:redirect:pytest not installed, skipping python tests
R:redirect:PASS
E:redirect:2022-02-23T15:40:40+0800
S:resolver:2022-02-23T15:40:40+0800
T:resolver:1:A
A:resolver:System test resolver
I:resolver:PORTRANGE:11200 - 11299
I:resolver:This test requires the Net::DNS library.
I:resolver:Prerequisites missing, skipping test.
R:resolver:SKIPPED
E:resolver:2022-02-23T15:40:40+0800
S:rndc:2022-02-23T15:40:40+0800
T:rndc:1:A
A:rndc:System test rndc
I:rndc:PORTRANGE:11300 - 11399
I:rndc:starting servers
I:rndc:preparing (1)
I:rndc:rndc freeze
I:rndc:checking zone was dumped (2)
I:rndc:checking journal file is still present (3)
I:rndc:checking zone not writable (4)
I:rndc:rndc thaw
I:rndc:checking zone now writable (5)
I:rndc:rndc sync
I:rndc:checking zone was dumped (6)
I:rndc:checking journal file is still present (7)
I:rndc:checking zone is still writable (8)
I:rndc:rndc sync -clean
I:rndc:checking zone was dumped (9)
I:rndc:checking journal file is deleted (10)
I:rndc:checking zone is still writable (11)
I:rndc:checking other journal files not removed (12)
I:rndc:cleaning all zones (12)
I:rndc:checking all journals removed (13)
I:rndc:checking that freezing static zones is not allowed (14)
I:rndc:checking that journal is removed when serial is changed before thaw (15)
I:rndc:checking that journal is kept when ixfr-from-differences is in use (16)
I:rndc:dumping stats (16)
I:rndc:verifying adb records in named.stats (17)
I:rndc:test using second key (18)
I:rndc:test 'rndc dumpdb' on a empty cache (19)
I:rndc:test 'rndc reload' on a zone with include files (20)
I:rndc:testing rndc with hmac-md5 (21)
I:rndc:testing rndc with hmac-sha1 (22)
I:rndc:testing rndc with hmac-sha224 (23)
I:rndc:testing rndc with hmac-sha256 (24)
I:rndc:testing rndc with hmac-sha384 (25)
I:rndc:testing rndc with hmac-sha512 (26)
I:rndc:testing single control channel with multiple algorithms (27)
I:rndc:testing automatic zones are reported (28)
I:rndc:testing rndc with null command (29)
I:rndc:testing rndc with unknown control channel command (30)
I:rndc:testing rndc with querylog command (31)
I:rndc:testing rndc nta time limits (32)
I:rndc:testing rndc nta -class option (33)
I:rndc:testing rndc buffer size limits (size=512) (34)
I:rndc:testing rndc buffer size limits (size=1024) (35)
I:rndc:testing rndc buffer size limits (size=2048) (36)
I:rndc:testing rndc buffer size limits (size=4096) (37)
I:rndc:testing rndc buffer size limits (size=8192) (38)
I:rndc:testing rndc buffer size limits (size=16384) (39)
I:rndc:testing rndc buffer size limits (size=32768) (40)
I:rndc:testing rndc buffer size limits (size=65536) (41)
I:rndc:testing rndc buffer size limits (size=131072) (42)
I:rndc:testing rndc buffer size limits (size=262144) (43)
I:rndc:testing rndc buffer size limits (size=524288) (44)
I:rndc:testing rndc -r (show result) (45)
I:rndc:testing rndc with a token containing a space (46)
I:rndc:test 'rndc reconfig' with a broken config (47)
I:rndc:check rndc status reports failure (48)
I:rndc:restore working config (49)
I:rndc:check 'rndc status' 'reload/reconfig failure' is cleared after successful reload/reconfig (50)
I:rndc:test read-only control channel access (51)
I:rndc:test rndc status shows running on (52)
I:rndc:test 'rndc reconfig' with loading of a large zone (53)
I:rndc:reloading config
I:rndc:check if zone load was scheduled (54)
I:rndc:check if query for the zone returns SERVFAIL (55)
I:rndc:wait for the zones to be loaded (56)
I:rndc:check if query for the zone returns NOERROR (57)
I:rndc:verify that the full command is logged (58)
I:rndc:test rndc python bindings (59)
I:rndc:check 'rndc ""' is handled (60)
I:rndc:check rndc -4 -6 (61)
I:rndc:check rndc -4 with an IPv6 server address (62)
I:rndc:check rndc nta reports adding to multiple views (63)
I:rndc:check 'rndc retransfer' of primary error message (64)
I:rndc:check 'rndc freeze' with in-view zones works (65)
I:rndc:checking non in-view zone instance is not writable (66)
I:rndc:check 'rndc thaw' with in-view zones works (67)
I:rndc:checking non in-view zone instance is now writable (68)
I:rndc:checking initial in-view zone file is loaded (69)
I:rndc:update in-view zone (69)
I:rndc:checking update (69)
I:rndc:rndc freeze
I:rndc:edit zone files
I:rndc:rndc thaw
I:rndc:rndc reload
I:rndc:ns7 server reload successful
I:rndc:checking zone file edits are loaded (70)
I:rndc:exit status: 0
I:rndc:stopping servers
I:rndc:pytest not installed, skipping python tests
R:rndc:PASS
E:rndc:2022-02-23T15:41:17+0800
S:rootkeysentinel:2022-02-23T15:41:18+0800
T:rootkeysentinel:1:A
A:rootkeysentinel:System test rootkeysentinel
I:rootkeysentinel:PORTRANGE:11400 - 11499
I:rootkeysentinel:starting servers
I:rootkeysentinel:get test ids (1)
I:rootkeysentinel:test id: oldid=40873 (configured)
I:rootkeysentinel:test id: newid=41873 (not configured)
I:rootkeysentinel:test id: badid=48650
I:rootkeysentinel:check authoritative server (expect NOERROR) (2)
I:rootkeysentinel:check test zone resolves with 'root-key-sentinel yes;'
I:rootkeysentinel:  (expect NOERROR) (3)
I:rootkeysentinel:check root-key-sentinel-is-ta with old ta and
I:rootkeysentinel:  'root-key-sentinel yes;' (expect NOERROR) (4)
I:rootkeysentinel:check root-key-sentinel-not-ta with old ta and
I:rootkeysentinel:  'root-key-sentinel yes;' (expect SERVFAIL) (5)
I:rootkeysentinel:check root-key-sentinel-not-ta with old ta, CD=1 and
I:rootkeysentinel:  'root-key-sentinel yes;' (expect NOERROR) (6)
I:rootkeysentinel:check root-key-sentinel-is-ta with new ta and
I:rootkeysentinel:  'root-key-sentinel yes;' (expect SERVFAIL) (7)
I:rootkeysentinel:check root-key-sentinel-is-ta with new ta, CD=1 and
I:rootkeysentinel:  'root-key-sentinel yes;' (expect NOERROR) (8)
I:rootkeysentinel:check root-key-sentinel-not-ta with new ta and
I:rootkeysentinel:  'root-key-sentinel yes;' (expect NOERROR) (9)
I:rootkeysentinel:check root-key-sentinel-is-ta with bad ta and
I:rootkeysentinel:  'root-key-sentinel yes;' (expect SERVFAIL) (10)
I:rootkeysentinel:check root-key-sentinel-is-ta with bad ta, CD=1 and
I:rootkeysentinel:  'root-key-sentinel yes;' (expect NXDOMAIN) (11)
I:rootkeysentinel:check root-key-sentinel-not-ta with bad ta and
I:rootkeysentinel:  'root-key-sentinel yes;' (expect NXDOMAIN) (12)
I:rootkeysentinel:check root-key-sentinel-is-ta with out-of-range ta and
I:rootkeysentinel:  'root-key-sentinel yes;' (expect NXDOMAIN) (13)
I:rootkeysentinel:check root-key-sentinel-not-ta with out-of-range ta and
I:rootkeysentinel:  'root-key-sentinel yes;' (expect NXDOMAIN) (14)
I:rootkeysentinel:check root-key-sentinel-is-ta with no-zero-pad ta and
I:rootkeysentinel:  'root-key-sentinel yes;' (expect NXDOMAIN) (15)
I:rootkeysentinel:check root-key-sentinel-not-ta with no-zero-pad ta and
I:rootkeysentinel:  'root-key-sentinel yes;' (expect NXDOMAIN) (16)
I:rootkeysentinel:check CNAME to root-key-sentinel-is-ta with old ta and
I:rootkeysentinel:  'root-key-sentinel yes;' (expect NOERROR) (17)
I:rootkeysentinel:check CNAME to root-key-sentinel-not-ta with old ta and
I:rootkeysentinel:  'root-key-sentinel yes;' (expect NOERROR) (18)
I:rootkeysentinel:check CNAME to root-key-sentinel-is-ta with new ta and
I:rootkeysentinel:  'root-key-sentinel yes;' (expect NOERROR) (19)
I:rootkeysentinel:check CNAME to root-key-sentinel-not-ta with new ta and
I:rootkeysentinel:  'root-key-sentinel yes;' (expect NOERROR) (20)
I:rootkeysentinel:check CNAME to root-key-sentinel-is-ta with bad ta and
I:rootkeysentinel:  'root-key-sentinel yes;' (expect NXDOMAIN) (21)
I:rootkeysentinel:check CNAME to root-key-sentinel-not-ta with bad ta and
I:rootkeysentinel:  'root-key-sentinel yes;' (expect NXDOMAIN) (22)
I:rootkeysentinel:check test zone resolves with 'root-key-sentinel no;'
I:rootkeysentinel:  (expect NOERROR) (23)
I:rootkeysentinel:check root-key-sentinel-is-ta with old ta and
I:rootkeysentinel:  'root-key-sentinel no;' (expect NOERROR) (24)
I:rootkeysentinel:check root-key-sentinel-not-ta with old ta and
I:rootkeysentinel:  'root-key-sentinel no;' (expect NOERROR) (25)
I:rootkeysentinel:check root-key-sentinel-is-ta with new ta and
I:rootkeysentinel:  'root-key-sentinel no;' (expect NOERROR) (26)
I:rootkeysentinel:check root-key-sentinel-not-ta with new ta and
I:rootkeysentinel:  'root-key-sentinel no;' (expect NOERROR) (27)
I:rootkeysentinel:check root-key-sentinel-is-ta with bad ta and
I:rootkeysentinel:  'root-key-sentinel no;' (expect NXDOMAIN) (28)
I:rootkeysentinel:check root-key-sentinel-not-ta with bad ta and
I:rootkeysentinel:  'root-key-sentinel no;' (expect NXDOMAIN) (29)
I:rootkeysentinel:check root-key-sentinel-is-ta with out-of-range ta and
I:rootkeysentinel:  'root-key-sentinel no;' (expect NXDOMAIN) (30)
I:rootkeysentinel:check root-key-sentinel-not-ta with out-of-range ta and
I:rootkeysentinel:  'root-key-sentinel no;' (expect NXDOMAIN) (31)
I:rootkeysentinel:check root-key-sentinel-is-ta with no-zero-pad ta and
I:rootkeysentinel:  'root-key-sentinel no;' (expect NXDOMAIN) (32)
I:rootkeysentinel:check root-key-sentinel-not-ta with no-zero-pad ta and
I:rootkeysentinel:  'root-key-sentinel no;' (expect NXDOMAIN) (33)
I:rootkeysentinel:check CNAME to root-key-sentinel-is-ta with old ta and
I:rootkeysentinel:  'root-key-sentinel no;' (expect NOERROR) (34)
I:rootkeysentinel:check CNAME to root-key-sentinel-not-ta with old ta and
I:rootkeysentinel:  'root-key-sentinel no;' (expect NOERROR) (35)
I:rootkeysentinel:check CNAME to root-key-sentinel-is-ta with new ta and
I:rootkeysentinel:  'root-key-sentinel no;' (expect NOERROR) (36)
I:rootkeysentinel:check CNAME to root-key-sentinel-not-ta with new ta and
I:rootkeysentinel:  'root-key-sentinel no;' (expect NOERROR) (37)
I:rootkeysentinel:check CNAME to root-key-sentinel-is-ta with bad ta and
I:rootkeysentinel:  'root-key-sentinel no;' (expect NXDOMAIN) (38)
I:rootkeysentinel:check CNAME to root-key-sentinel-not-ta with bad ta and
I:rootkeysentinel:  'root-key-sentinel no;' (expect NXDOMAIN) (39)
I:rootkeysentinel:exit status: 0
I:rootkeysentinel:stopping servers
I:rootkeysentinel:pytest not installed, skipping python tests
R:rootkeysentinel:PASS
E:rootkeysentinel:2022-02-23T15:41:26+0800
S:rpz:2022-02-23T15:41:26+0800
T:rpz:1:A
A:rpz:System test rpz
I:rpz:PORTRANGE:11500 - 11599
I:rpz:starting servers
I:rpz:running native RPZ sub-test
I:rpz:checking QNAME rewrites (1)
I:rpz:checking NXDOMAIN/NODATA action on QNAME trigger (2)
I:rpz:checking IP rewrites (3)
I:rpz:ns2 zone reload queued
I:rpz:ns2 zone reload queued
I:rpz:checking radix tree deletions (4)
I:rpz:checking NSDNAME rewrites (5)
I:rpz:checking NSIP rewrites (6)
I:rpz:checking walled garden NSIP rewrites (7)
I:rpz:checking policy overrides (8)
I:rpz:checking crashes (9)
I:rpz:performance not checked; queryperf not available
I:rpz:checking that ns3 with broken rpz does not crash (10)
I:rpz:checking rpz failed update will keep previous rpz rules (11)
I:rpz:ns3 zone reload queued
I:rpz:checking reload of a mixed-case RPZ zone (12)
I:rpz:ns3 zone reload queued
I:rpz:checking that ttl values are not zeroed when qtype is '*' (13)
I:rpz:checking rpz updates/transfers with parent nodes added after children (14)
I:rpz:checking that going from an empty policy zone works (15)
I:rpz:ns7 zone refresh queued
I:rpz:checking that add-soa no at rpz zone level works (16)
I:rpz:checking that add-soa yes at response-policy level works (17)
I:rpz:checking that add-soa unset works (18)
I:rpz:checking rpz with delegation fails correctly (19)
I:rpz:checking policies from expired zone are no longer in effect (20)
I:rpz:checking rpz 'CNAME *.' (NODATA) with dns64, AAAA lookup with A-only (21)
I:rpz:checking rpz 'CNAME *.' (NODATA) with dns64, A lookup with A-only (22)
I:rpz:checking rpz 'CNAME *.' (NODATA) with dns64, AAAA lookup with no A or AAAA (23)
I:rpz:checking rpz 'CNAME *.' (NODATA) with dns64, A lookup with no A or AAAA (24)
I:rpz:checking rpz 'CNAME *.' (NODATA) with dns64, AAAA lookup with A and AAAA (25)
I:rpz:checking rpz 'CNAME *.' (NODATA) with dns64, A lookup with A and AAAA (26)
I:rpz:status (native RPZ sub-test): 0 (pass)
I:rpz:attempting to configure servers with DNSRPS...
I:rpz:DNSRPS disabled at compile time
I:rpz:DNSRPS sub-test skipped
I:rpz:stopping servers
I:rpz:pytest not installed, skipping python tests
R:rpz:PASS
E:rpz:2022-02-23T15:43:07+0800
S:rrchecker:2022-02-23T15:43:07+0800
T:rrchecker:1:A
A:rrchecker:System test rrchecker
I:rrchecker:PORTRANGE:11600 - 11699
I:rrchecker:starting servers
I:rrchecker:class list (1)
I:rrchecker:type list (2)
I:rrchecker:private type list (3)
I:rrchecker:check conversions to canonical format (4)
I:rrchecker:check conversions to and from unknown record format (5)
I:rrchecker:exit status: 0
I:rrchecker:stopping servers
I:rrchecker:pytest not installed, skipping python tests
R:rrchecker:PASS
E:rrchecker:2022-02-23T15:43:24+0800
S:rrl:2022-02-23T15:43:24+0800
T:rrl:1:A
A:rrl:System test rrl
I:rrl:PORTRANGE:11700 - 11799
I:rrl:starting servers
I:rrl:exit status: 0
I:rrl:stopping servers
I:rrl:pytest not installed, skipping python tests
R:rrl:PASS
E:rrl:2022-02-23T15:43:50+0800
S:rrsetorder:2022-02-23T15:43:50+0800
T:rrsetorder:1:A
A:rrsetorder:System test rrsetorder
I:rrsetorder:PORTRANGE:11800 - 11899
I:rrsetorder:starting servers
I:rrsetorder:Checking order fixed (primary)
I:rrsetorder:Checking order cyclic (primary + additional)
I:rrsetorder:Checking order cyclic (primary)
I:rrsetorder:Checking order random (primary)
I:rrsetorder:Random selection return 11 of 24 possible orders in 36 samples
I:rrsetorder:Checking order none (primary)
I:rrsetorder:Checking order fixed (secondary)
I:rrsetorder:Checking order cyclic (secondary + additional)
I:rrsetorder:Checking order cyclic (secondary)
I:rrsetorder:Checking order random (secondary)
I:rrsetorder:Random selection return 11 of 24 possible orders in 36 samples
I:rrsetorder:Checking order none (secondary)
I:rrsetorder:Shutting down secondary
I:rrsetorder:Checking for secondary's on disk copy of zone
I:rrsetorder:Re-starting secondary
I:rrsetorder:Checking order fixed (secondary loaded from disk)
I:rrsetorder:Checking order cyclic (secondary + additional, loaded from disk)
I:rrsetorder:Checking order cyclic (secondary loaded from disk)
I:rrsetorder:Checking order random (secondary loaded from disk)
I:rrsetorder:Random selection return 11 of 24 possible orders in 36 samples
I:rrsetorder:Checking order none (secondary loaded from disk)
I:rrsetorder:Checking order fixed (cache)
I:rrsetorder:Checking order cyclic (cache + additional)
I:rrsetorder:Checking order cyclic (cache)
I:rrsetorder:Checking order random (cache)
I:rrsetorder:Random selection return 12 of 24 possible orders in 36 samples
I:rrsetorder:Checking order none (cache)
I:rrsetorder:Checking default order (cache)
I:rrsetorder:Default selection return 11 of 24 possible orders in 36 samples
I:rrsetorder:Checking default order no match in rrset-order (cache)
I:rrsetorder:exit status: 0
I:rrsetorder:stopping servers
I:rrsetorder:pytest not installed, skipping python tests
R:rrsetorder:PASS
E:rrsetorder:2022-02-23T15:44:36+0800
S:rsabigexponent:2022-02-23T15:44:36+0800
T:rsabigexponent:1:A
A:rsabigexponent:System test rsabigexponent
I:rsabigexponent:PORTRANGE:11900 - 11999
I:rsabigexponent:starting servers
I:rsabigexponent:checking 'conf/good01.conf'
I:rsabigexponent:checking 'conf/good02.conf'
I:rsabigexponent:checking 'conf/good03.conf'
I:rsabigexponent:checking 'conf/bad01.conf'
I:rsabigexponent:checking 'conf/bad02.conf'
I:rsabigexponent:checking 'conf/bad03.conf'
I:rsabigexponent:checking that RSA big exponent keys can't be loaded
I:rsabigexponent:checking that RSA big exponent signature can't validate
I:rsabigexponent:exit status: 0
I:rsabigexponent:stopping servers
I:rsabigexponent:pytest not installed, skipping python tests
R:rsabigexponent:PASS
E:rsabigexponent:2022-02-23T15:44:40+0800
S:runtime:2022-02-23T15:44:40+0800
T:runtime:1:A
A:runtime:System test runtime
I:runtime:PORTRANGE:12000 - 12099
I:runtime:starting servers
I:runtime:verifying that named started normally (1)
I:runtime:verifying that named checks for conflicting named processes (2)
I:runtime:verifying that 'lock-file none' disables process check (3)
I:runtime:checking that named refuses to reconfigure if working directory is not writable (4)
I:runtime:failed
I:runtime:checking that named refuses to reconfigure if managed-keys-directory is not writable (5)
I:runtime:failed
I:runtime:checking that named refuses to reconfigure if new-zones-directory is not writable (6)
I:runtime:failed
I:runtime:checking that named recovers when configuration file is valid again (7)
I:runtime:failed
I:runtime:checking that named refuses to start if working directory is not writable (8)
I:runtime:failed
I:runtime:checking that named refuses to start if managed-keys-directory is not writable (9)
I:runtime:failed
I:runtime:checking that named refuses to start if new-zones-directory is not writable (10)
I:runtime:failed
I:runtime:checking that named logs control characters in octal notation (11)
I:runtime:checking that named escapes special characters in the logs (12)
I:runtime:checking that named logs an ellipsis when the command line is larger than 8k bytes (13)
I:runtime:verifying that named switches UID (14)
I:runtime:exit status: 7
I:runtime:stopping servers
R:runtime:FAIL
E:runtime:2022-02-23T15:45:44+0800
S:sfcache:2022-02-23T15:45:44+0800
T:sfcache:1:A
A:sfcache:System test sfcache
I:sfcache:PORTRANGE:12100 - 12199
I:sfcache:starting servers
I:sfcache:checking DNSSEC SERVFAIL is cached (0)
I:sfcache:checking SERVFAIL is returned from cache (1)
I:sfcache:checking that +cd bypasses cache check (2)
I:sfcache:switching to non-dnssec SERVFAIL tests
I:sfcache:checking SERVFAIL is cached (3)
I:sfcache:checking SERVFAIL is returned from cache (4)
I:sfcache:checking cache is bypassed with +cd query (5)
I:sfcache:checking cache is used for subsequent +cd query (6)
I:sfcache:exit status: 0
I:sfcache:stopping servers
I:sfcache:pytest not installed, skipping python tests
R:sfcache:PASS
E:sfcache:2022-02-23T15:45:49+0800
S:shutdown:2022-02-23T15:45:49+0800
T:shutdown:1:A
A:shutdown:System test shutdown
I:shutdown:PORTRANGE:12200 - 12299
I:shutdown:This test requires the pytest framework.
I:shutdown:This test requires the dnspython module.
I:shutdown:Prerequisites missing, skipping test.
R:shutdown:SKIPPED
E:shutdown:2022-02-23T15:45:49+0800
S:smartsign:2022-02-23T15:45:49+0800
T:smartsign:1:A
A:smartsign:System test smartsign
I:smartsign:PORTRANGE:12300 - 12399
I:smartsign:starting servers
I:smartsign:generating child's keys
I:smartsign:revoking key
I:smartsign:setting up sync key
I:smartsign:and future sync key
I:smartsign:generating parent keys
I:smartsign:setting child's activation time
I:smartsign:signing child zone
I:smartsign:signing parent zone
I:smartsign:checking dnssec-signzone output matches expectations
I:smartsign:rechecking dnssec-signzone output with -x
I:smartsign:checking parent zone DNSKEY set
I:smartsign:checking parent zone DS records
I:smartsign:checking child zone DNSKEY set
I:smartsign:checking key TTLs are correct
I:smartsign:checking key TTLs were imported correctly
I:smartsign:re-signing and checking imported TTLs again
I:smartsign:checking child zone signatures
I:smartsign:checking RRSIG expiry date correctness
I:smartsign:waiting 30 seconds for key activation
I:smartsign:re-signing child zone
I:smartsign:checking dnssec-signzone output matches expectations
I:smartsign:checking child zone signatures again
I:smartsign:checking sync record publication
I:smartsign:checking sync record deletion
I:smartsign:exit status: 0
I:smartsign:stopping servers
I:smartsign:pytest not installed, skipping python tests
R:smartsign:PASS
E:smartsign:2022-02-23T15:46:23+0800
S:sortlist:2022-02-23T15:46:23+0800
T:sortlist:1:A
A:sortlist:System test sortlist
I:sortlist:PORTRANGE:12400 - 12499
I:sortlist:starting servers
I:sortlist:test 2-element sortlist statement
I:sortlist:test 1-element sortlist statement and undocumented BIND 8 features
I:sortlist:exit status: 0
I:sortlist:stopping servers
I:sortlist:pytest not installed, skipping python tests
R:sortlist:PASS
E:sortlist:2022-02-23T15:46:24+0800
S:spf:2022-02-23T15:46:24+0800
T:spf:1:A
A:spf:System test spf
I:spf:PORTRANGE:12500 - 12599
I:spf:starting servers
I:spf:checking that SPF warnings have been correctly generated (1)
I:spf:exit status: 0
I:spf:stopping servers
I:spf:pytest not installed, skipping python tests
R:spf:PASS
E:spf:2022-02-23T15:46:26+0800
S:staticstub:2022-02-23T15:46:26+0800
T:staticstub:1:A
A:staticstub:System test staticstub
I:staticstub:PORTRANGE:12600 - 12699
I:staticstub:starting servers
I:staticstub:checking that conf/good01.conf is accepted (1)
I:staticstub:checking that conf/good02.conf is accepted (2)
I:staticstub:checking that conf/good03.conf is accepted (3)
I:staticstub:checking that conf/good04.conf is accepted (4)
I:staticstub:checking that conf/good05.conf is accepted (5)
I:staticstub:checking that conf/bad01.conf is rejected (6)
I:staticstub:checking that conf/bad02.conf is rejected (7)
I:staticstub:checking that conf/bad03.conf is rejected (8)
I:staticstub:checking that conf/bad04.conf is rejected (9)
I:staticstub:checking that conf/bad05.conf is rejected (10)
I:staticstub:checking that conf/bad06.conf is rejected (11)
I:staticstub:checking that conf/bad07.conf is rejected (12)
I:staticstub:checking that conf/bad08.conf is rejected (13)
I:staticstub:checking that conf/bad09.conf is rejected (14)
I:staticstub:checking that conf/bad10.conf is rejected (15)
I:staticstub:checking that conf/bad11.conf is rejected (16)
I:staticstub:trying an axfr that should be denied (NOTAUTH) (17)
I:staticstub:non recursive query for a static-stub zone with server name should be rejected (18)
I:staticstub:non recursive query for a static-stub zone with server name should be rejected (19)
I:staticstub:allow-query ACL (20)
I:staticstub:look for static-stub zone data with recursion (should be found) (21)
I:staticstub:checking authoritative NS is ignored for delegation (22)
I:staticstub:checking queries for a child zone of the static-stub zone (23)
I:staticstub:ns3 server reload successful
I:staticstub:ns3 server reload successful
I:staticstub:checking authoritative NS addresses are ignored for delegation (24)
I:staticstub:ns2 server reload successful
I:staticstub:checking NS of static-stub is ignored when referenced from other domain (25)
I:staticstub:checking static-stub with a server-name (26)
I:staticstub:SKIPPED: checking IPv6 static-stub address (27)
I:staticstub:look for static-stub zone data with DNSSEC validation (28)
I:staticstub:look for a child of static-stub zone data with DNSSEC validation (29)
I:staticstub:checking server reload with a different static-stub config (30)
I:staticstub:ns2 server reload successful
I:staticstub:checking static-stub of a undelegated tld resolves after DS query (31)
I:staticstub:exit status: 0
I:staticstub:stopping servers
I:staticstub:pytest not installed, skipping python tests
R:staticstub:PASS
E:staticstub:2022-02-23T15:46:33+0800
S:statistics:2022-02-23T15:46:33+0800
T:statistics:1:A
A:statistics:System test statistics
I:statistics:PORTRANGE:12700 - 12799
I:statistics:This test requires the Net::DNS library.
I:statistics:Prerequisites missing, skipping test.
R:statistics:SKIPPED
E:statistics:2022-02-23T15:46:33+0800
S:statschannel:2022-02-23T15:46:33+0800
T:statschannel:1:A
A:statschannel:System test statschannel
I:statschannel:PORTRANGE:12800 - 12899
I:statschannel:starting servers
I:statschannel:JSON tests require JSON library; skipping
I:statschannel:XML tests require XML::Simple; skipping
I:statschannel:skipping all tests
I:statschannel:stopping servers
I:statschannel:pytest not installed, skipping python tests
R:statschannel:PASS
E:statschannel:2022-02-23T15:46:36+0800
S:stub:2022-02-23T15:46:36+0800
T:stub:1:A
A:stub:System test stub
I:stub:PORTRANGE:12900 - 12999
I:stub:starting servers
I:stub:check that the stub zone has been saved to disk
I:stub:trying an axfr that should be denied (NOTAUTH) (pass=1)
I:stub:look for stub zone data without recursion (should not be found) (pass=1)
I:stub:look for stub zone data with recursion (should be found) (pass=1)
I:stub:stopping stub server
I:stub:re-starting stub server
I:stub:trying an axfr that should be denied (NOTAUTH) (pass=2)
I:stub:look for stub zone data without recursion (should not be found) (pass=2)
I:stub:look for stub zone data with recursion (should be found) (pass=2)
I:stub:check that glue record is correctly transferred from master when minimal-responses is on
I:stub:exit status: 0
I:stub:stopping servers
I:stub:pytest not installed, skipping python tests
R:stub:PASS
E:stub:2022-02-23T15:46:44+0800
S:synthfromdnssec:2022-02-23T15:46:44+0800
T:synthfromdnssec:1:A
A:synthfromdnssec:System test synthfromdnssec
I:synthfromdnssec:PORTRANGE:13000 - 13099
I:synthfromdnssec:starting servers
I:synthfromdnssec:prime negative NXDOMAIN response (synth-from-dnssec <default>;) (1)
I:synthfromdnssec:prime negative NODATA response (synth-from-dnssec <default>;) (2)
I:synthfromdnssec:prime wildcard response (synth-from-dnssec <default>;) (3)
I:synthfromdnssec:prime wildcard CNAME response (synth-from-dnssec <default>;) (4)
I:synthfromdnssec:prime negative NXDOMAIN response (synth-from-dnssec no;) (5)
I:synthfromdnssec:prime negative NODATA response (synth-from-dnssec no;) (6)
I:synthfromdnssec:prime wildcard response (synth-from-dnssec no;) (7)
I:synthfromdnssec:prime wildcard CNAME response (synth-from-dnssec no;) (8)
I:synthfromdnssec:prime negative NXDOMAIN response (synth-from-dnssec yes;) (9)
I:synthfromdnssec:prime negative NODATA response (synth-from-dnssec yes;) (10)
I:synthfromdnssec:prime wildcard response (synth-from-dnssec yes;) (11)
I:synthfromdnssec:prime wildcard CNAME response (synth-from-dnssec yes;) (12)
I:synthfromdnssec:prime redirect response (+nodnssec) (synth-from-dnssec <default>;) (13)
I:synthfromdnssec:check synthesized NXDOMAIN response (synth-from-dnssec <default>;) (14)
I:synthfromdnssec:check synthesized NODATA response (synth-from-dnssec <default>;) (15)
I:synthfromdnssec:check synthesized wildcard response (synth-from-dnssec <default>;) (16)
I:synthfromdnssec:check synthesized wildcard CNAME response (synth-from-dnssec <default>;) (17)
I:synthfromdnssec:check synthesized NXDOMAIN response (synth-from-dnssec no;) (18)
I:synthfromdnssec:check synthesized NODATA response (synth-from-dnssec no;) (19)
I:synthfromdnssec:check synthesized wildcard response (synth-from-dnssec no;) (20)
I:synthfromdnssec:check synthesized wildcard CNAME response (synth-from-dnssec no;) (21)
I:synthfromdnssec:check synthesized NXDOMAIN response (synth-from-dnssec yes;) (22)
I:synthfromdnssec:check synthesized NODATA response (synth-from-dnssec yes;) (23)
I:synthfromdnssec:check synthesized wildcard response (synth-from-dnssec yes;) (24)
I:synthfromdnssec:check synthesized wildcard CNAME response (synth-from-dnssec yes;) (25)
I:synthfromdnssec:check redirect response (+dnssec) (synth-from-dnssec <default>;) (26)
I:synthfromdnssec:check redirect response (+nodnssec) (synth-from-dnssec <default>;) (27)
I:synthfromdnssec:check DNAME handling (synth-from-dnssec yes;) (28)
I:synthfromdnssec:exit status: 0
I:synthfromdnssec:stopping servers
I:synthfromdnssec:pytest not installed, skipping python tests
R:synthfromdnssec:PASS
E:synthfromdnssec:2022-02-23T15:46:58+0800
S:timeouts:2022-02-23T15:46:58+0800
T:timeouts:1:A
A:timeouts:System test timeouts
I:timeouts:PORTRANGE:13100 - 13199
I:timeouts:This test requires the dnspython >= 2.0.0 module.
I:timeouts:Prerequisites missing, skipping test.
R:timeouts:SKIPPED
E:timeouts:2022-02-23T15:46:58+0800
S:tcp:2022-02-23T15:46:58+0800
T:tcp:1:A
A:tcp:System test tcp
I:tcp:PORTRANGE:13200 - 13299
I:tcp:starting servers
I:tcp:initializing TCP statistics (1)
I:tcp:checking TCP request statistics (resolver) (2)
I:tcp:checking TCP request statistics (forwarder) (3)
I:tcp:checking TCP query repsonse (4)
I:tcp:TCP high-water: check initial statistics (5)
I:tcp:TCP high-water: check value after some TCP connections are established (6)
I:tcp:TCP high-water: check value after some TCP connections are closed (7)
I:tcp:TCP high-water: ensure tcp-clients is an upper bound (8)
I:tcp:checking TCP response recovery (9)
I:tcp:checking that BIND 9 doesn't crash on long TCP messages (10)
Can't locate Net/DNS.pm in @INC (you may need to install the Net::DNS module) (@INC contains: /usr/perl5/site_perl/5.22/i86pc-solaris-64int /usr/perl5/site_perl/5.22 /usr/perl5/vendor_perl/5.22/i86pc-solaris-64int /usr/perl5/vendor_perl/5.22 /usr/perl5/5.22/lib/i86pc-solaris-64int /usr/perl5/5.22/lib .) at ../packet.pl line 62.
BEGIN failed--compilation aborted at ../packet.pl line 62.
I:tcp:exit status: 0
I:tcp:stopping servers
I:tcp:pytest not installed, skipping python tests
R:tcp:PASS
E:tcp:2022-02-23T15:47:10+0800
S:tools:2022-02-23T15:47:10+0800
T:tools:1:A
A:tools:System test tools
I:tools:PORTRANGE:13300 - 13399
I:tools:starting servers
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash *.w.example
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash -r *.w.example
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash 2t7b4g4vsa5smi47k61mv5bv1a22bojr.example
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash -r 2t7b4g4vsa5smi47k61mv5bv1a22bojr.example
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash a.example
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash -r a.example
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash ai.example
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash -r ai.example
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash example
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash -r example
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash ns1.example
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash -r ns1.example
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash ns2.example
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash -r ns2.example
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash w.example
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash -r w.example
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash x.w.example
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash -r x.w.example
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash x.y.w.example
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash -r x.y.w.example
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash xx.example
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash -r xx.example
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash y.w.example
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash -r y.w.example
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash '' com
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash - com
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash -- '' com
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash -- - com
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash -r '' com
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash -r - com
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash missing args
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash extra args
I:tools:checking /export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tools/nsec3hash bad option
I:tools:exit status: 0
I:tools:stopping servers
I:tools:pytest not installed, skipping python tests
R:tools:PASS
E:tools:2022-02-23T15:47:12+0800
S:tsig:2022-02-23T15:47:12+0800
T:tsig:1:A
A:tsig:System test tsig
I:tsig:PORTRANGE:13400 - 13499
I:tsig:starting servers
I:tsig:fetching using hmac-md5 (old form)
I:tsig:fetching using hmac-md5 (new form)
I:tsig:fetching using hmac-sha1
I:tsig:fetching using hmac-sha224
I:tsig:fetching using hmac-sha256
I:tsig:fetching using hmac-sha384
I:tsig:fetching using hmac-sha512
I:tsig:fetching using hmac-md5 (trunc)
I:tsig:fetching using hmac-sha1 (trunc)
I:tsig:fetching using hmac-sha224 (trunc)
I:tsig:fetching using hmac-sha256 (trunc)
I:tsig:fetching using hmac-sha384 (trunc)
I:tsig:fetching using hmac-sha512-256 (trunc)
I:tsig:fetching using hmac-md5-80 (BADTRUNC)
I:tsig:fetching using hmac-sha1-80 (BADTRUNC)
I:tsig:fetching using hmac-sha224-112 (BADTRUNC)
I:tsig:fetching using hmac-sha256-128 (BADTRUNC)
I:tsig:fetching using hmac-sha384-192 (BADTRUNC)
I:tsig:fetching using hmac-sha512-256 (BADTRUNC)
I:tsig:attempting fetch with bad tsig algorithm
I:tsig:checking both OPT and TSIG records are returned when TC=1
I:tsig:check that dnssec-keygen won't generate TSIG keys
I:tsig:check that a 'BADTIME' response with 'QR=0' is handled as a request
Can't locate Net/DNS.pm in @INC (you may need to install the Net::DNS module) (@INC contains: /usr/perl5/site_perl/5.22/i86pc-solaris-64int /usr/perl5/site_perl/5.22 /usr/perl5/vendor_perl/5.22/i86pc-solaris-64int /usr/perl5/vendor_perl/5.22 /usr/perl5/5.22/lib/i86pc-solaris-64int /usr/perl5/5.22/lib .) at ../packet.pl line 62.
BEGIN failed--compilation aborted at ../packet.pl line 62.
I:tsig:failed
I:tsig:check that a malformed truncated response to a TSIG query is handled
I:tsig:exit status: 1
I:tsig:stopping servers
R:tsig:FAIL
E:tsig:2022-02-23T15:47:28+0800
S:tsiggss:2022-02-23T15:47:28+0800
T:tsiggss:1:A
A:tsiggss:System test tsiggss
I:tsiggss:PORTRANGE:13500 - 13599
I:tsiggss:starting servers
I:tsiggss:testing updates to testdc1 as administrator (1)
I:tsiggss:testing update for testdc1.example.nil. A 86400 A 10.53.0.10
I:tsiggss:update failed for testdc1.example.nil. A 86400 A 10.53.0.10
I:Reply from SOA query:
I:;; ->>HEADER<<- opcode: QUERY, status: NXDOMAIN, id:  25991
I:;; flags: qr aa; QUESTION: 1, ANSWER: 0, AUTHORITY: 1, ADDITIONAL: 0
I:;; QUESTION SECTION:
I:;testdc1.example.nil.		IN	SOA
I:
I:;; AUTHORITY SECTION:
I:example.nil.		0	IN	SOA	blu.example.nil. hostmaster.example.nil. 2010113027 172800 14400 3628800 604800
I:
I:Found zone name: example.nil
I:The master is: blu.example.nil
I:start_gssrequest
I:tkey query failed: GSSAPI error: Major = No credentials were supplied, or the credentials were unavailable or inaccessible, Minor = SPNEGO cannot find mechanisms to negotiate.
I:tsiggss:failed
I:tsiggss:testing updates to testdc2 as administrator (2)
I:tsiggss:testing update for testdc2.example.nil. A 86400 A 10.53.0.11
I:tsiggss:update failed for testdc2.example.nil. A 86400 A 10.53.0.11
I:Reply from SOA query:
I:;; ->>HEADER<<- opcode: QUERY, status: NXDOMAIN, id:  55626
I:;; flags: qr aa; QUESTION: 1, ANSWER: 0, AUTHORITY: 1, ADDITIONAL: 0
I:;; QUESTION SECTION:
I:;testdc2.example.nil.		IN	SOA
I:
I:;; AUTHORITY SECTION:
I:example.nil.		0	IN	SOA	blu.example.nil. hostmaster.example.nil. 2010113027 172800 14400 3628800 604800
I:
I:Found zone name: example.nil
I:The master is: blu.example.nil
I:start_gssrequest
I:tkey query failed: GSSAPI error: Major = No credentials were supplied, or the credentials were unavailable or inaccessible, Minor = SPNEGO cannot find mechanisms to negotiate.
I:tsiggss:failed
I:tsiggss:testing updates to denied as administrator (3)
I:tsiggss:testing updates to denied (A) as a user (4)
I:tsiggss:testing updates to denied (TXT) as a user (5)
I:tsiggss:testing update for testdenied.example.nil. TXT 86400 TXT helloworld
I:tsiggss:update failed for testdenied.example.nil. TXT 86400 TXT helloworld
I:Reply from SOA query:
I:;; ->>HEADER<<- opcode: QUERY, status: NXDOMAIN, id:   1415
I:;; flags: qr aa; QUESTION: 1, ANSWER: 0, AUTHORITY: 1, ADDITIONAL: 0
I:;; QUESTION SECTION:
I:;testdenied.example.nil.		IN	SOA
I:
I:;; AUTHORITY SECTION:
I:example.nil.		0	IN	SOA	blu.example.nil. hostmaster.example.nil. 2010113027 172800 14400 3628800 604800
I:
I:Found zone name: example.nil
I:The master is: blu.example.nil
I:start_gssrequest
I:tkey query failed: GSSAPI error: Major = No credentials were supplied, or the credentials were unavailable or inaccessible, Minor = SPNEGO cannot find mechanisms to negotiate.
I:tsiggss:failed
I:tsiggss:testing external update policy (CNAME) (6)
I:tsiggss:testing external update policy (CNAME) with auth sock (7)
I:tsiggss:testing update for testcname.example.nil. CNAME 86400 CNAME testdenied.example.nil
I:tsiggss:update failed for testcname.example.nil. CNAME 86400 CNAME testdenied.example.nil
I:Reply from SOA query:
I:;; ->>HEADER<<- opcode: QUERY, status: NXDOMAIN, id:  44366
I:;; flags: qr aa; QUESTION: 1, ANSWER: 0, AUTHORITY: 1, ADDITIONAL: 0
I:;; QUESTION SECTION:
I:;testcname.example.nil.		IN	SOA
I:
I:;; AUTHORITY SECTION:
I:example.nil.		0	IN	SOA	blu.example.nil. hostmaster.example.nil. 2010113027 172800 14400 3628800 604800
I:
I:Found zone name: example.nil
I:The master is: blu.example.nil
I:start_gssrequest
I:tkey query failed: GSSAPI error: Major = No credentials were supplied, or the credentials were unavailable or inaccessible, Minor = SPNEGO cannot find mechanisms to negotiate.
I:tsiggss:failed
I:tsiggss:testing external update policy (A) (8)
I:tsiggss:testing external policy with SIG(0) key (9)
I:tsiggss:ensure too long realm name is fatal in non-interactive mode (10)
I:tsiggss:ensure too long realm name is not fatal in interactive mode (11)
I:tsiggss:exit status: 4
I:tsiggss:stopping servers
R:tsiggss:FAIL
E:tsiggss:2022-02-23T15:47:31+0800
S:ttl:2022-02-23T15:47:31+0800
T:ttl:1:A
A:ttl:System test ttl
I:ttl:PORTRANGE:13600 - 13699
I:ttl:starting servers
I:ttl:testing min-cache-ttl
I:ttl:testing min-ncache-ttl
I:ttl:testing max-cache-ttl
I:ttl:testing max-ncache-ttl
I:ttl:exit status: 0
I:ttl:stopping servers
I:ttl:pytest not installed, skipping python tests
R:ttl:PASS
E:ttl:2022-02-23T15:47:35+0800
S:unknown:2022-02-23T15:47:35+0800
T:unknown:1:A
A:unknown:System test unknown
I:unknown:PORTRANGE:13700 - 13799
I:unknown:starting servers
I:unknown:querying for various representations of an IN A record (1)
I:unknown:querying for various representations of an IN TXT record (2)
I:unknown:querying for various representations of an IN TYPE123 record (3)
I:unknown:querying for NULL record (4)
I:unknown:querying for empty NULL record (5)
I:unknown:querying for various representations of a CLASS10 TYPE1 record (6)
I:unknown:querying for various representations of a CLASS10 TXT record (7)
I:unknown:querying for various representations of a CLASS10 TYPE123 record (8)
I:unknown:querying for SOAs of zone that should have failed to load (9)
I:unknown:checking large unknown record loading on primary (10)
I:unknown:checking large unknown record loading on secondary (11)
I:unknown:stop and restart secondary
I:unknown:checking large unknown record loading on secondary (12)
I:unknown:checking large unknown record loading on inline secondary (13)
I:unknown:stop and restart inline secondary
I:unknown:checking large unknown record loading on inline secondary (14)
I:unknown:check that '"\\#"' is not treated as the unknown escape sequence (15)
I:unknown:check that 'TXT \# text' is not treated as the unknown escape sequence (16)
I:unknown:check that 'TYPE353 \# cat' produces 'not a valid number' (17)
I:unknown:exit status: 0
I:unknown:stopping servers
I:unknown:pytest not installed, skipping python tests
R:unknown:PASS
E:unknown:2022-02-23T15:47:44+0800
S:upforwd:2022-02-23T15:47:44+0800
T:upforwd:1:A
A:upforwd:System test upforwd
I:upforwd:PORTRANGE:13800 - 13899
I:upforwd:This test requires the Net::DNS library.
I:upforwd:Prerequisites missing, skipping test.
R:upforwd:SKIPPED
E:upforwd:2022-02-23T15:47:44+0800
S:verify:2022-02-23T15:47:44+0800
T:verify:1:A
A:verify:System test verify
I:verify:PORTRANGE:13900 - 13999
I:verify:setting up bad zone: unsigned
I:verify:setting up good zone: zsk-only.nsec
I:verify:setting up good zone: ksk-only.nsec
I:verify:setting up good zone: ksk+zsk.nsec
I:verify:setting up good zone: ksk+zsk.nsec.apex-dname
I:verify:setting up good zone: zsk-only.nsec3
I:verify:setting up good zone: ksk-only.nsec3
I:verify:setting up good zone: ksk+zsk.nsec3
I:verify:setting up good zone: ksk+zsk.optout
I:verify:setting up good zone: ksk+zsk.nsec3.apex-dname
I:verify:setting up good zone: nsec-next-name-case-mismatch
I:verify:setting up bad zone: zsk-only.dnskeyonly
I:verify:setting up bad zone: ksk-only.dnskeyonly
I:verify:setting up bad zone: ksk+zsk.dnskeyonly
I:verify:setting up bad zone: zsk-only.nsec.expired
I:verify:setting up bad zone: ksk-only.nsec.expired
I:verify:setting up bad zone: ksk+zsk.nsec.expired
I:verify:setting up bad zone: zsk-only.nsec3.expired
I:verify:setting up bad zone: ksk-only.nsec3.expired
I:verify:setting up bad zone: ksk+zsk.nsec3.expired
I:verify:setting up bad zone: ksk+zsk.nsec.ksk-expired
I:verify:setting up bad zone: ksk+zsk.nsec3.ksk-expired
I:verify:setting up bad zone: ksk+zsk.nsec.broken-chain
I:verify:setting up bad zone: ksk+zsk.nsec.bad-bitmap
I:verify:setting up bad zone: ksk+zsk.nsec.out-of-zone-nsec
I:verify:setting up bad zone: ksk+zsk.nsec.below-bottom-of-zone-nsec
I:verify:setting up bad zone: ksk+zsk.nsec.below-dname-nsec
I:verify:setting up bad zone: ksk+zsk.nsec3.missing-empty
I:verify:setting up bad zone: ksk+zsk.nsec3.extra-nsec3
I:verify:starting servers
I:verify:checking supposedly good zone: ksk+zsk.nsec.apex-dname (1)
I:verify:checking supposedly good zone: ksk+zsk.nsec (2)
I:verify:checking supposedly good zone: ksk+zsk.nsec3.apex-dname (3)
I:verify:checking supposedly good zone: ksk+zsk.nsec3 (4)
I:verify:checking supposedly good zone: ksk+zsk.optout (5)
I:verify:checking supposedly good zone: ksk-only.nsec (6)
I:verify:checking supposedly good zone: ksk-only.nsec3 (7)
I:verify:checking supposedly good zone: nsec-next-name-case-mismatch (8)
I:verify:checking supposedly good zone: zsk-only.nsec (9)
I:verify:checking supposedly good zone: zsk-only.nsec3 (10)
I:verify:checking supposedly bad zone: ksk+zsk.dnskeyonly (11)
I:verify:checking supposedly bad zone: ksk+zsk.nsec.bad-bitmap (12)
I:verify:checking supposedly bad zone: ksk+zsk.nsec.below-bottom-of-zone-nsec (13)
I:verify:checking supposedly bad zone: ksk+zsk.nsec.below-dname-nsec (14)
I:verify:checking supposedly bad zone: ksk+zsk.nsec.broken-chain (15)
I:verify:checking supposedly bad zone: ksk+zsk.nsec.expired (16)
I:verify:checking supposedly bad zone: ksk+zsk.nsec.ksk-expired (17)
I:verify:checking supposedly bad zone: ksk+zsk.nsec.out-of-zone-nsec (18)
I:verify:checking supposedly bad zone: ksk+zsk.nsec3.expired (19)
I:verify:checking supposedly bad zone: ksk+zsk.nsec3.extra-nsec3 (20)
I:verify:checking supposedly bad zone: ksk+zsk.nsec3.ksk-expired (21)
I:verify:checking supposedly bad zone: ksk+zsk.nsec3.missing-empty (22)
I:verify:checking supposedly bad zone: ksk-only.dnskeyonly (23)
I:verify:checking supposedly bad zone: ksk-only.nsec.expired (24)
I:verify:checking supposedly bad zone: ksk-only.nsec3.expired (25)
I:verify:checking supposedly bad zone: unsigned (26)
I:verify:checking supposedly bad zone: zsk-only.dnskeyonly (27)
I:verify:checking supposedly bad zone: zsk-only.nsec.expired (28)
I:verify:checking supposedly bad zone: zsk-only.nsec3.expired (29)
I:verify:checking error message when -o is not used and a SOA record not at top of zone is found (30)
I:verify:checking error message when an invalid -o is specified and a SOA record not at top of zone is found (31)
I:verify:exit status: 0
I:verify:stopping servers
I:verify:pytest not installed, skipping python tests
R:verify:PASS
E:verify:2022-02-23T15:47:54+0800
S:views:2022-02-23T15:47:54+0800
T:views:1:A
A:views:System test views
I:views:PORTRANGE:14000 - 14099
I:views:starting servers
I:views:fetching a.example from ns2's initial configuration
I:views:fetching a.example from ns3's initial configuration
I:views:copying in new configurations for ns2 and ns3
I:views:reloading ns2 and ns3 with rndc
I:views:ns2 server reload successful
I:views:ns3 server reload successful
I:views:wait for reload to complete
I:views:fetching a.example from ns2's 10.53.0.4, source address 10.53.0.4
I:views:fetching a.example from ns2's 10.53.0.2, source address 10.53.0.2
I:views:fetching a.example from ns3's 10.53.0.3, source address defaulted
I:views:comparing ns3's initial a.example to one from reconfigured 10.53.0.2
I:views:comparing ns3's initial a.example to one from reconfigured 10.53.0.3
I:views:comparing ns2's initial a.example to one from reconfigured 10.53.0.4
I:views:comparing ns2's initial a.example to one from reconfigured 10.53.0.3
I:views:(should be different)
I:views:updating cloned zone in internal view
I:views:sleeping to allow update to take effect
I:views:verifying update affected both views
I:views:verifying forwarder in cloned zone works
I:views:verifying inline zones work with views
I:views:verifying adding of multiple inline zones followed by reconfiguration works
I:views:exit status: 0
I:views:stopping servers
I:views:pytest not installed, skipping python tests
R:views:PASS
E:views:2022-02-23T15:48:17+0800
S:wildcard:2022-02-23T15:48:18+0800
T:wildcard:1:A
A:wildcard:System test wildcard
I:wildcard:PORTRANGE:14100 - 14199
I:wildcard:signed nsec
I:wildcard:signed private.nsec
I:wildcard:signed nsec3
I:wildcard:signed private.nsec3
I:wildcard:signed .
I:wildcard:starting servers
I:wildcard:checking that NSEC wildcard non-existence proof is returned auth (1)
I:wildcard:checking that NSEC wildcard non-existence proof is returned non-validating (2)
I:wildcard:checking that NSEC wildcard non-existence proof is returned validating (3)
I:wildcard:checking that NSEC wildcard non-existence proof is returned validating + CD (4)
I:wildcard:checking that returned NSEC wildcard non-existence proof validates (5)
I:wildcard:checking that NSEC wildcard non-existence proof is returned private, validating (6)
I:wildcard:checking that returned NSEC wildcard non-existence proof for private zone validates (7)
I:wildcard:checking that NSEC3 wildcard non-existence proof is returned auth (8)
I:wildcard:checking that NSEC3 wildcard non-existence proof is returned non-validating (9)
I:wildcard:checking that NSEC3 wildcard non-existence proof is returned validating (10)
I:wildcard:checking that NSEC3 wildcard non-existence proof is returned validating + CD (11)
I:wildcard:checking that returned NSEC3 wildcard non-existence proof validates (12)
I:wildcard:checking that NSEC3 wildcard non-existence proof is returned private, validating (13)
I:wildcard:checking that returned NSEC3 wildcard non-existence proof for private zone validates (14)
I:wildcard:checking RFC 4592 responses ...
I:wildcard:checking RFC 4592: host3.example. QTYPE=MX, QCLASS=IN (15)
I:wildcard:checking RFC 4592: host3.example. QTYPE=A, QCLASS=IN (16)
I:wildcard:checking RFC 4592: foo.bar.example. QTYPE=TXT, QCLASS=IN (17)
I:wildcard:checking RFC 4592: host1.example. QTYPE=MX, QCLASS=IN (18)
I:wildcard:checking RFC 4592: host1.example. QTYPE=MX, QCLASS=IN (19)
I:wildcard:checking RFC 4592: sub.*.example. QTYPE=MX, QCLASS=IN (20)
I:wildcard:checking RFC 4592: _telnet._tcp.host1.example. QTYPE=SRV, QCLASS=IN (21)
I:wildcard:checking RFC 4592: host.subdel.example. QTYPE=A, QCLASS=IN (22)
I:wildcard:checking RFC 4592: ghost.*.example. QTYPE=MX, QCLASS=IN (23)
I:wildcard:check wild card expansions by code point (24)
I:wildcard:exit status: 0
I:wildcard:stopping servers
I:wildcard:pytest not installed, skipping python tests
R:wildcard:PASS
E:wildcard:2022-02-23T15:48:43+0800
S:xfer:2022-02-23T15:48:43+0800
T:xfer:1:A
A:xfer:System test xfer
I:xfer:PORTRANGE:14200 - 14299
I:xfer:This test requires the Net::DNS library.
I:xfer:Prerequisites missing, skipping test.
R:xfer:SKIPPED
E:xfer:2022-02-23T15:48:43+0800
S:xferquota:2022-02-23T15:48:43+0800
T:xferquota:1:A
A:xferquota:System test xferquota
I:xferquota:PORTRANGE:14300 - 14399
I:xferquota:starting servers
I:xferquota:Have 53 zones up in 1 seconds
I:xferquota:Changing test zone...
I:xferquota:Have 81 zones up in 2 seconds
I:xferquota:Have 101 zones up in 3 seconds
I:xferquota:Have 121 zones up in 4 seconds
I:xferquota:Have 141 zones up in 5 seconds
I:xferquota:Have 161 zones up in 6 seconds
I:xferquota:Have 181 zones up in 7 seconds
I:xferquota:Have 200 zones up in 8 seconds
I:xferquota:Have 220 zones up in 9 seconds
I:xferquota:Have 240 zones up in 10 seconds
I:xferquota:Have 260 zones up in 11 seconds
I:xferquota:Have 280 zones up in 12 seconds
I:xferquota:Have 300 zones up in 13 seconds
I:xferquota:exit status: 0
I:xferquota:stopping servers
I:xferquota:pytest not installed, skipping python tests
R:xferquota:PASS
E:xferquota:2022-02-23T15:49:17+0800
S:zero:2022-02-23T15:49:17+0800
T:zero:1:A
A:zero:System test zero
I:zero:PORTRANGE:14400 - 14499
I:zero:This test requires the Net::DNS library.
I:zero:Prerequisites missing, skipping test.
R:zero:SKIPPED
E:zero:2022-02-23T15:49:18+0800
S:zonechecks:2022-02-23T15:49:18+0800
T:zonechecks:1:A
A:zonechecks:System test zonechecks
I:zonechecks:PORTRANGE:14500 - 14599
I:zonechecks:starting servers
I:zonechecks:checking that we detect a NS which refers to a CNAME
I:zonechecks:checking that we detect a NS which is below a DNAME
I:zonechecks:checking that we detect a NS which has no address records (A/AAAA)
I:zonechecks:checking that we detect a NS which has no records
I:zonechecks:checking that we detect a NS which looks like a A record (fail)
I:zonechecks:checking that we detect a NS which looks like a A record (warn=default)
I:zonechecks:checking that we detect a NS which looks like a A record (ignore)
I:zonechecks:checking that we detect a NS which looks like a AAAA record (fail)
I:zonechecks:checking that we detect a NS which looks like a AAAA record (warn=default)
I:zonechecks:checking that we detect a NS which looks like a AAAA record (ignore)
I:zonechecks:checking 'rdnc zonestatus' output
I:zonechecks:ns1 zone reload queued
I:zonechecks:ns1 zone reload queued
I:zonechecks:checking 'rdnc zonestatus' with duplicated zone name
I:zonechecks:checking 'rdnc zonestatus' with big serial value
I:zonechecks:exit status: 0
I:zonechecks:stopping servers
I:zonechecks:pytest not installed, skipping python tests
R:zonechecks:PASS
E:zonechecks:2022-02-23T15:49:24+0800
S:checkdstool:2022-02-23T15:49:24+0800
T:checkdstool:1:A
A:checkdstool:System test checkdstool
I:checkdstool:PORTRANGE:14600 - 14699
I:checkdstool:starting servers
I:checkdstool:checking for correct DS, looking up key via 'dig' (1)
I:checkdstool:checking for correct DS, obtaining key from file (2)
I:checkdstool:checking for incorrect DS, looking up key via 'dig' (3)
I:checkdstool:checking for incorrect DS, obtaining key from file (4)
I:checkdstool:checking for partially missing DS, looking up key via 'dig' (5)
I:checkdstool:checking for partially missing DS, obtaining key from file (6)
I:checkdstool:checking for entirely missing DS, looking up key via 'dig' (7)
I:checkdstool:checking for entirely missing DS, obtaining key from file (8)
I:checkdstool:checking with prepared dsset file (9)
I:checkdstool:exit status: 0
I:checkdstool:stopping servers
I:checkdstool:pytest not installed, skipping python tests
R:checkdstool:PASS
E:checkdstool:2022-02-23T15:49:25+0800
S:coverage:2022-02-23T15:49:26+0800
T:coverage:1:A
A:coverage:System test coverage
I:coverage:PORTRANGE:14700 - 14799
I:coverage:starting servers
I:coverage:checking for DNSSEC key coverage issues
I:coverage:01-ksk-inactive
I:coverage:02-zsk-inactive
I:coverage:03-ksk-unpublished
I:coverage:04-zsk-unpublished
I:coverage:05-ksk-unpub-active
I:coverage:06-zsk-unpub-active
I:coverage:07-ksk-ttl
I:coverage:08-zsk-ttl
I:coverage:09-check-zsk
I:coverage:10-check-ksk
I:coverage:11-cutoff
I:coverage:12-ksk-deletion
I:coverage:13-dotted-dotless
I:coverage:exit status: 0
I:coverage:stopping servers
I:coverage:pytest not installed, skipping python tests
R:coverage:PASS
E:coverage:2022-02-23T15:49:33+0800
S:keymgr:2022-02-23T15:49:33+0800
T:keymgr:1:A
A:keymgr:System test keymgr
I:keymgr:PORTRANGE:14800 - 14899
I:keymgr:set up 01-ksk-inactive
I:keymgr:set up 02-zsk-inactive
I:keymgr:set up 03-ksk-unpublished
I:keymgr:set up 04-zsk-unpublished
I:keymgr:set up 05-ksk-unpub-active
I:keymgr:set up 06-zsk-unpub-active
I:keymgr:set up 07-ksk-ttl
I:keymgr:set up 08-zsk-ttl
I:keymgr:set up 10-change-roll
I:keymgr:set up 11-many-simul
I:keymgr:set up 12-many-active
I:keymgr:set up 13-noroll
I:keymgr:set up 14-wrongalg
I:keymgr:set up 15-unspec
I:keymgr:set up 16-wrongalg-unspec
I:keymgr:set up 17-noforce
I:keymgr:set up 18-nonstd-prepub
I:keymgr:set up 19-old-keys
I:keymgr:starting servers
I:keymgr:checking for DNSSEC key coverage issues
I:keymgr:01-ksk-inactive (1)
I:keymgr:02-zsk-inactive (2)
I:keymgr:03-ksk-unpublished (3)
I:keymgr:04-zsk-unpublished (4)
I:keymgr:05-ksk-unpub-active (5)
I:keymgr:06-zsk-unpub-active (6)
I:keymgr:07-ksk-ttl (7)
I:keymgr:08-zsk-ttl (8)
I:keymgr:09-no-keys (9)
I:keymgr:10-change-roll (10)
I:keymgr:11-many-simul (11)
I:keymgr:12-many-active (12)
I:keymgr:13-noroll (13)
I:keymgr:14-wrongalg (14)
I:keymgr:15-unspec (15)
I:keymgr:16-wrongalg-unspec (16)
I:keymgr:17-noforce (17)
I:keymgr:18-nonstd-prepub (18)
I:keymgr:19-old-keys (19)
I:keymgr:checking domains ending in . (20)
I:keymgr:checking policy.conf parser (21)
I:keymgr:exit status: 0
I:keymgr:stopping servers
I:keymgr:pytest not installed, skipping python tests
R:keymgr:PASS
E:keymgr:2022-02-23T15:49:53+0800
S:cookie:2022-02-23T15:49:53+0800
T:cookie:1:A
A:cookie:System test cookie
I:cookie:PORTRANGE:14900 - 14999
I:cookie:This test requires the dnspython module.
I:cookie:Prerequisites missing, skipping test.
R:cookie:SKIPPED
E:cookie:2022-02-23T15:49:53+0800
S:logfileconfig:2022-02-23T15:49:53+0800
T:logfileconfig:1:A
A:logfileconfig:System test logfileconfig
I:logfileconfig:PORTRANGE:15000 - 15099
I:logfileconfig:starting servers
I:logfileconfig:testing log file validity (named -g + only plain files allowed)
I:logfileconfig:testing plain file (named -g) (1)
I:logfileconfig:testing plain file succeeded
I:logfileconfig:testing directory as log file (named -g) (2)
I:logfileconfig:testing directory as log file failed (expected)
I:logfileconfig:testing pipe file as log file (named -g) (3)
I:logfileconfig:testing pipe file as log file failed (expected)
I:logfileconfig:testing symlink to plain file as log file (named -g) (4)
I:logfileconfig:testing symlink to plain file succeeded
I:logfileconfig:testing log file validity (only plain files allowed)
I:logfileconfig:testing plain file (named -g) (5)
I:logfileconfig:testing plain file succeeded
I:logfileconfig:testing directory as log file (6)
I:logfileconfig:testing directory as log file failed (expected)
I:logfileconfig:testing pipe file as log file (7)
I:logfileconfig:testing pipe file as log file failed (expected)
I:logfileconfig:testing symlink to plain file as log file (8)
I:logfileconfig:testing symlink to plain file succeeded
I:logfileconfig:testing default logfile using named -L file (9)
I:logfileconfig:testing default logfile using named -L succeeded
I:logfileconfig:testing logging functionality
I:logfileconfig:testing iso8601 timestamp (10)
I:logfileconfig:testing iso8601 timestamp succeeded
I:logfileconfig:testing iso8601-utc timestamp (11)
I:logfileconfig:testing iso8601-utc timestamp succeeded
I:logfileconfig:testing explicit versions (12)
I:logfileconfig:testing timestamped versions (13)
I:logfileconfig:testing unlimited versions (14)
I:logfileconfig:exit status: 0
I:logfileconfig:stopping servers
I:logfileconfig:pytest not installed, skipping python tests
R:logfileconfig:PASS
E:logfileconfig:2022-02-23T15:49:59+0800
make[5]: 離開目錄「/export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests/system」
S:ecdsa:2022-02-23T15:49:59+0800
T:ecdsa:1:A
A:ecdsa:System test ecdsa
I:ecdsa:PORTRANGE:5300 - 5399
I:ns1:ns1/sign.sh
I:ecdsa:starting servers
I:ecdsa:checking that ECDSA256 positive validation works (1)
I:ecdsa:checking that ECDSA384 positive validation works (2)
I:ecdsa:exit status: 0
I:ecdsa:stopping servers
I:ecdsa:pytest not installed, skipping python tests
R:ecdsa:PASS
E:ecdsa:2022-02-23T15:50:06+0800
S:eddsa:2022-02-23T15:50:06+0800
T:eddsa:1:A
A:eddsa:System test eddsa
I:eddsa:PORTRANGE:5300 - 5399
I:ns1:ns1/sign.sh
I:ns2:ns2/sign.sh
I:ns3:ns3/sign.sh
I:eddsa:starting servers
I:eddsa:checking that Ed25519 positive validation works (1)
I:eddsa:checking that Ed25519 test vectors match (2)
I:eddsa:checking that Ed448 positive validation works (3)
I:eddsa:checking that Ed448 test vectors match (4)
I:eddsa:exit status: 0
I:eddsa:stopping servers
I:eddsa:pytest not installed, skipping python tests
R:eddsa:PASS
E:eddsa:2022-02-23T15:50:13+0800
S:tkey:2022-02-23T15:50:13+0800
T:tkey:1:A
A:tkey:System test tkey
I:tkey:PORTRANGE:5300 - 5399
I:tkey:starting servers
I:tkey:generating new DH key (1)
I:tkey:creating new key using owner name "." (2)
I:tkey:checking the new key (3)
I:tkey:deleting new key (4)
I:tkey:checking that new key has been deleted (5)
I:tkey:creating new key using owner name "foo.example." (6)
I:tkey:checking the new key (7)
I:tkey:deleting new key (8)
I:tkey:checking that new key has been deleted (9)
I:tkey:creating new key using owner name bar.example. (10)
I:tkey:checking the key with 'rndc tsig-list' (11)
I:tkey:using key in a request (12)
I:tkey:deleting the key with 'rndc tsig-delete' (13)
I:tkey:recreating the bar.example. key (14)
I:tkey:checking the new key with 'rndc tsig-list' (15)
I:tkey:using the new key in a request (16)
I:tkey:exit status: 0
I:tkey:stopping servers
I:tkey:pytest not installed, skipping python tests
R:tkey:PASS
E:tkey:2022-02-23T15:50:15+0800
I:System test result summary:
I:      5 FAIL
I:     78 PASS
I:     21 SKIPPED
I:The following system tests failed:
I:      cds
I:      nsupdate
I:      runtime
I:      tsig
I:      tsiggss
make[4]: *** [Makefile:502：test] 錯誤 1
make[4]: 離開目錄「/export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests/system」
make[3]: *** [Makefile:505：test] 錯誤 2
make[3]: 離開目錄「/export/home/shuryanc/oi-userland/components/network/bind/build/amd64/bin/tests」
make[2]: *** [Makefile:457：test-force] 錯誤 1
make[2]: 離開目錄「/export/home/shuryanc/oi-userland/components/network/bind/build/amd64」
make[1]: *** [Makefile:444：test] 錯誤 2
make[1]: 離開目錄「/export/home/shuryanc/oi-userland/components/network/bind/build/amd64」
