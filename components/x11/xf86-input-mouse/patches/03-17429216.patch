Submitted & accepted upstream:
https://gitlab.freedesktop.org/xorg/driver/xf86-input-mouse/-/merge_requests/6

From 52073e2edc29059a5142d4460c5edc8739981e03 Mon Sep 17 00:00:00 2001
From: Alan Coopersmith <alan.coopersmith@oracle.com>
Date: Wed, 9 Nov 2022 17:01:47 -0800
Subject: [PATCH xf86-input-mouse] sun_mouse: remove entry from vuidMouseList
 in DEVICE_CLOSE

Originally written by fei.feng@oracle.com to fix Oracle Bug 17429216:
"global vuidMouseList should not keep info for removed mouse device"

"During the testing for bug#17251473, I often see the mouse hang in X.
 By debugging, I get that there seems something wrong in mouse_drv.so -
 when a mouse is disconnected, the global vuidMouseList does not cleanup
 the mouse's recorded info. So if a newly inserted mouse allocates a
 input info pInfo which happens to have the same memory address as
 previous pInfo, the driver would go wrong."

Signed-off-by: Alan Coopersmith <alan.coopersmith@oracle.com>
---
 src/sun_mouse.c | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

diff --git a/src/sun_mouse.c b/src/sun_mouse.c
index 3539ba7..20ec10d 100644
--- a/src/sun_mouse.c
+++ b/src/sun_mouse.c
@@ -742,8 +742,21 @@ vuidMouseProc(DeviceIntPtr pPointer, int what)
         }
         break;
 
-    case DEVICE_OFF:
     case DEVICE_CLOSE:
+        if (vuidMouseList == pVuidMse)
+            vuidMouseList = vuidMouseList->next;
+        else {
+            VuidMsePtr m = vuidMouseList;
+
+            while ((m != NULL) && (m->next != pVuidMse)) {
+                m = m->next;
+            }
+
+            if (m != NULL)
+                m->next = pVuidMse->next;
+        }
+        /* fallthrough */
+    case DEVICE_OFF:
         if (pInfo->fd != -1) {
             if (pVuidMse->strmod) {
                 SYSCALL(i = ioctl(pInfo->fd, I_POP, pVuidMse->strmod));
-- 
2.15.2

