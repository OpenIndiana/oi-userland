--- pcs-0.10.1/pcsd/pcs.rb.orig
+++ pcs-0.10.1/pcsd/pcs.rb
@@ -26,6 +26,15 @@
 class InvalidFileNameException < NameError
 end
 
+def solaris_getservice(service)
+    if service == "pacemaker_remote"
+      service = "hacluster-remote"
+    else
+      service = "hacluster"
+    end
+    return service
+end
+
 def getAllSettings(auth_user, cib_dom=nil)
   unless cib_dom
     cib_dom = get_cib_dom(auth_user)
@@ -817,7 +826,11 @@
 end
 
 def pacemaker_running?()
-  is_service_running?('pacemaker')
+	if ISSOLARIS
+	  is_service_running?('pacemakerd')
+	else	
+    is_service_running?('pacemaker')
+  end		
 end
 
 def pacemaker_remote_running?()
@@ -1445,7 +1458,11 @@
 end
 
 def get_node_uptime()
-  uptime = `cat /proc/uptime`.chomp.split(' ')[0].split('.')[0].to_i
+	if ISSOLARIS
+		uptime = Time.now.to_i - `kstat -p unix:0:system_misc:boot_time`.chomp.split(' ')[1].to_i
+	else	
+    uptime = `cat /proc/uptime`.chomp.split(' ')[0].split('.')[0].to_i
+	end	
   mm, ss = uptime.divmod(60)
   hh, mm = mm.divmod(60)
   dd, hh = hh.divmod(24)
@@ -1711,6 +1728,9 @@
 def is_service_enabled?(service)
   if ISSYSTEMCTL
     cmd = ['systemctl', 'is-enabled', "#{service}.service"]
+  elsif ISSOLARIS
+    service = solaris_getservice(service)
+    cmd = ['svcs', '-lv', service, '|','grep enabled|grep true']
   else
     cmd = ['chkconfig', service]
   end
@@ -1721,6 +1741,8 @@
 def is_service_running?(service)
   if ISSYSTEMCTL
     cmd = ['systemctl', 'status', "#{service}.service"]
+	elsif ISSOLARIS
+		cmd = ['pgrep', '-f', service]
   else
     cmd = ['service', service, 'status']
   end
@@ -1729,6 +1751,12 @@
 end
 
 def is_service_installed?(service)
+  if ISSOLARIS
+    service = solaris_getservice(service)
+    cmd = ['svcs', '-lv', service]
+    _, _, retcode = run_cmd(PCSAuth.getSuperuserAuth(), *cmd)
+    return (retcode == 0)
+  end
   unless ISSYSTEMCTL
     stdout, _, retcode = run_cmd(PCSAuth.getSuperuserAuth(), 'chkconfig')
     if retcode != 0
@@ -1763,6 +1791,9 @@
   if ISSYSTEMCTL
     # fails when the service is not installed
     cmd = ['systemctl', 'enable', "#{service}.service"]
+  elsif ISSOLARIS
+    service = solaris_getservice(service)
+    cmd = ['svcadm', 'enable', service]
   else
     # fails when the service is not installed
     cmd = ['chkconfig', service, 'on']
@@ -1779,6 +1810,9 @@
 
   if ISSYSTEMCTL
     cmd = ['systemctl', 'disable', "#{service}.service"]
+  elsif ISSOLARIS
+    service = solaris_getservice(service)
+    cmd = ['svcadm', 'disable', service]
   else
     cmd = ['chkconfig', service, 'off']
   end
@@ -1789,7 +1823,10 @@
 def start_service(service)
   if ISSYSTEMCTL
     cmd = ['systemctl', 'start', "#{service}.service"]
-  else
+  elsif ISSOLARIS
+    service = solaris_getservice(service)
+    cmd = ['svcadm', 'enable', service]
+  else		
     cmd = ['service', service, 'start']
   end
   _, _, retcode = run_cmd(PCSAuth.getSuperuserAuth(), *cmd)
@@ -1802,7 +1839,10 @@
   end
   if ISSYSTEMCTL
     cmd = ['systemctl', 'stop', "#{service}.service"]
-  else
+  elsif ISSOLARIS
+    service = solaris_getservice(service)
+    cmd = ['svcadm', 'disable', service]
+  else		
     cmd = ['service', service, 'stop']
   end
   _, _, retcode = run_cmd(PCSAuth.getSuperuserAuth(), *cmd)
