py$(PYV): remove tox env folder $(@D)/.tox/py$(PYV)
py$(PYV): commands[0]> python -m zope.testrunner --test-path=src -vv
Running tests at level 1
Running zope.testrunner.layer.UnitTests tests:
  Set up zope.testrunner.layer.UnitTests.
  Running:
 test_slice (chameleon.tests.test_astutil.ASTCodeGeneratorTestCase)
 test_bytes_checked_None (chameleon.tests.test_bools_plus_sniffing.HTML5TestCase)
 test_bytes_checked_default (chameleon.tests.test_bools_plus_sniffing.HTML5TestCase)
 test_bytes_checked_false (chameleon.tests.test_bools_plus_sniffing.HTML5TestCase)
 test_bytes_checked_true (chameleon.tests.test_bools_plus_sniffing.HTML5TestCase)
 test_bytes_content_type (chameleon.tests.test_bools_plus_sniffing.HTML5TestCase)
 test_bytes_encoding (chameleon.tests.test_bools_plus_sniffing.HTML5TestCase)
 test_str_checked_None (chameleon.tests.test_bools_plus_sniffing.HTML5TestCase)
 test_str_checked_default (chameleon.tests.test_bools_plus_sniffing.HTML5TestCase)
 test_str_checked_false (chameleon.tests.test_bools_plus_sniffing.HTML5TestCase)
 test_str_checked_true (chameleon.tests.test_bools_plus_sniffing.HTML5TestCase)
 test_str_content_type (chameleon.tests.test_bools_plus_sniffing.HTML5TestCase)
 test_str_encoding (chameleon.tests.test_bools_plus_sniffing.HTML5TestCase)
 test_bytes_content_type (chameleon.tests.test_bools_plus_sniffing.HTML5WithContentTypeAndEncodingTestCase)
 test_bytes_encoding (chameleon.tests.test_bools_plus_sniffing.HTML5WithContentTypeAndEncodingTestCase)
 test_str_content_type (chameleon.tests.test_bools_plus_sniffing.HTML5WithContentTypeAndEncodingTestCase)
 test_str_encoding (chameleon.tests.test_bools_plus_sniffing.HTML5WithContentTypeAndEncodingTestCase)
 test_bytes_checked_None (chameleon.tests.test_bools_plus_sniffing.XMLTestCase)
 test_bytes_checked_default (chameleon.tests.test_bools_plus_sniffing.XMLTestCase)
 test_bytes_checked_false (chameleon.tests.test_bools_plus_sniffing.XMLTestCase)
 test_bytes_checked_true (chameleon.tests.test_bools_plus_sniffing.XMLTestCase)
 test_bytes_content_type (chameleon.tests.test_bools_plus_sniffing.XMLTestCase)
 test_bytes_encoding (chameleon.tests.test_bools_plus_sniffing.XMLTestCase)
 test_str_checked_None (chameleon.tests.test_bools_plus_sniffing.XMLTestCase)
 test_str_checked_default (chameleon.tests.test_bools_plus_sniffing.XMLTestCase)
 test_str_checked_false (chameleon.tests.test_bools_plus_sniffing.XMLTestCase)
 test_str_checked_true (chameleon.tests.test_bools_plus_sniffing.XMLTestCase)
 test_str_content_type (chameleon.tests.test_bools_plus_sniffing.XMLTestCase)
 test_str_encoding (chameleon.tests.test_bools_plus_sniffing.XMLTestCase)
 test_bytes_encoding (chameleon.tests.test_bools_plus_sniffing.XMLWithEncodingTestCase)
 test_str_encoding (chameleon.tests.test_bools_plus_sniffing.XMLWithEncodingTestCase)
 ExpressionEngine (chameleon.compiler)
 ExpressionEvaluator (chameleon.compiler)
 NameTransform (chameleon.compiler)
 TemplateError (chameleon.exc)
 compute_source_marker (chameleon.exc)
 RepeatDict (chameleon.tal)
 _letter (chameleon.tal.RepeatItem)
 parse_defines (chameleon.tal)
 ExistsExpr (chameleon.tales)
 IdentityExpr (chameleon.tales)
 NotExpr (chameleon.tales)
 PythonExpr (chameleon.tales)
 StringExpr (chameleon.tales)
 StructureExpr (chameleon.tales)
 TalesExpr (chameleon.tales)
 Markup (chameleon.utils)
 Scope (chameleon.utils)
 decode_htmlentities (chameleon.utils)
 join (chameleon.utils)
 mangle (chameleon.utils)
 test_keep_token_location_info (chameleon.tests.test_exc.TestTemplateError)
 test_umlaut_exc_to_string (chameleon.tests.test_exc.TestTemplateError)
 test_consecutive_loads (chameleon.tests.test_loader.LoadPageTests)
 test_load_abs (chameleon.tests.test_loader.LoadPageTests)
 test_load_egg (chameleon.tests.test_loader.LoadPageTests)[XX/XX/XX XX:XX:XX] ERROR    listing git files failed - pretending there aren't any                                                                                                                                                      git.py:24

        ********************************************************************************
        Please avoid running ``setup.py`` directly.
        Instead, use pypa/build, pypa/installer or other
        standards-based tools.

        See https://blog.ganssle.io/articles/2021/10/setup-py-deprecated.html for details.
        ********************************************************************************

!!
  self.initialize_options()
$(PYTHON_DIR)/vendor-packages/setuptools/command/build_py.py:207: _Warning: Package 'chameleon_test_pkg.templates' is absent from the `packages` configuration.
!!

        ********************************************************************************
        ############################
        # Package would be ignored #
        ############################
        Python recognizes 'chameleon_test_pkg.templates' as an importable package[^1],
        but it is absent from setuptools' `packages` configuration.

        This leads to an ambiguous overall configuration. If you want to distribute this
        package, please make sure that 'chameleon_test_pkg.templates' is explicitly added
        to the `packages` configuration field.

        Alternatively, you can also rely on setuptools' discovery methods
        (for example by using `find_namespace_packages(...)`/`find_namespace:`
        instead of `find_packages(...)`/`find:`).

        You can read more about "package discovery" on setuptools documentation page:

        - https://setuptools.pypa.io/en/latest/userguide/package_discovery.html

        If you don't want 'chameleon_test_pkg.templates' to be distributed and are
        already explicitly excluding 'chameleon_test_pkg.templates' via
        `find_namespace_packages(...)/find_namespace` or `find_packages(...)/find`,
        you can try to use `exclude_package_data`, or `include-package-data=False` in
        combination with a more fine grained `package-data` configuration.

        You can read more about "package data files" on setuptools documentation page:

        - https://setuptools.pypa.io/en/latest/userguide/datafiles.html


        [^1]: For Python, any directory (with suitable naming) can be imported,
              even if it does not contain any `.py` files.
              On the other hand, currently there is no concept of package data
              directory, all directories are treated like packages.
        ********************************************************************************

!!
  check.warn(importable)

 test_load_relative (chameleon.tests.test_loader.LoadPageTests)
 test_load_relative_badpath_in_searchpath (chameleon.tests.test_loader.LoadPageTests)
 test_load_wheel (chameleon.tests.test_loader.LoadPageTests)[XX/XX/XX XX:XX:XX] ERROR    listing git files failed - pretending there aren't any                                                                                                                                                      git.py:24
$(PYTHON_DIR)/vendor-packages/setuptools/command/build_py.py:207: _Warning: Package 'chameleon_test_pkg.templates' is absent from the `packages` configuration.
!!

        ********************************************************************************
        ############################
        # Package would be ignored #
        ############################
        Python recognizes 'chameleon_test_pkg.templates' as an importable package[^1],
        but it is absent from setuptools' `packages` configuration.

        This leads to an ambiguous overall configuration. If you want to distribute this
        package, please make sure that 'chameleon_test_pkg.templates' is explicitly added
        to the `packages` configuration field.

        Alternatively, you can also rely on setuptools' discovery methods
        (for example by using `find_namespace_packages(...)`/`find_namespace:`
        instead of `find_packages(...)`/`find:`).

        You can read more about "package discovery" on setuptools documentation page:

        - https://setuptools.pypa.io/en/latest/userguide/package_discovery.html

        If you don't want 'chameleon_test_pkg.templates' to be distributed and are
        already explicitly excluding 'chameleon_test_pkg.templates' via
        `find_namespace_packages(...)/find_namespace` or `find_packages(...)/find`,
        you can try to use `exclude_package_data`, or `include-package-data=False` in
        combination with a more fine grained `package-data` configuration.

        You can read more about "package data files" on setuptools documentation page:

        - https://setuptools.pypa.io/en/latest/userguide/datafiles.html


        [^1]: For Python, any directory (with suitable naming) can be imported,
              even if it does not contain any `.py` files.
              On the other hand, currently there is no concept of package data
              directory, all directories are treated like packages.
        ********************************************************************************

!!
  check.warn(importable)

        ********************************************************************************
        Please avoid running ``setup.py`` directly.
        Instead, use pypa/build, pypa/installer or other
        standards-based tools.

        See https://blog.ganssle.io/articles/2021/10/setup-py-deprecated.html for details.
        ********************************************************************************

!!
  self.initialize_options()

 test_build (chameleon.tests.test_loader.ModuleLoadTests)
 test_load_getitem_gets_xml_file (chameleon.tests.test_loader.ZPTLoadTests)
 test_load_text (chameleon.tests.test_loader.ZPTLoadTests)
 test_load_xml (chameleon.tests.test_loader.ZPTLoadTests)
 test_comment_double_hyphen_parsing (chameleon.tests.test_parser.ParserTest)
 test_sample_files (chameleon.tests.test_parser.ParserTest)
 test_html_default_encoding (chameleon.tests.test_sniffing.TypeSniffingTestCase)
 test_html_encoding_by_meta (chameleon.tests.test_sniffing.TypeSniffingTestCase)
 test_xhtml (chameleon.tests.test_sniffing.TypeSniffingTestCase)
 test_xml_encoding (chameleon.tests.test_sniffing.TypeSniffingTestCase)
 test_pagetemplates (chameleon.tests.test_templates.ImportTestCase)
 test_pagetexttemplates (chameleon.tests.test_templates.ImportTestCase)
 test_auto_reload (chameleon.tests.test_templates.TemplateFileTestCase)
 test_cook_check (chameleon.tests.test_templates.TemplateFileTestCase)
 test_relative_is_expanded_to_cwd (chameleon.tests.test_templates.TemplateFileTestCase)
 test_attributes_on_tal_tag_fails (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_boolean_attributes (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_compiler_internals_are_disallowed (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_create_formatted_exception (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_create_formatted_exception_no_subclass (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_custom_encoding_for_str_or_bytes_in_attributes (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_custom_encoding_for_str_or_bytes_in_content (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_debug_flag_on_file (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_debug_flag_on_string (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_default_debug_flag (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_default_marker (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_digest (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_disable_comment_interpolation (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_double_underscore_variable (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_encoded (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_error_handler_makes_safe_copy (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_exception (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_exists_error_leak (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_f_strings (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_i18n_attributes_with_non_identifiers (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_i18n_name_not_in_translation_error (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_null_translate_function (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_object_substitution_coerce_to_str (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_on_error_handler (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_recursion_error (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_render_error_macro_include (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_render_macro_include_subtemplate_containing_error (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_repeat_i18n_name_error (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_repeat_syntax_error_message (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_repr (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_simple_translate_mapping (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_syntax_error_in_non_strict_mode (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_syntax_error_in_strict_mode (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_sys_exc_info_is_clear_after_pipe (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_tag_mismatch (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_translate_is_not_an_internal (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_trim_attribute_space (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_underscore_variable (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_unicode_decode_error (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_utf8_encoded (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_windows_line_endings (chameleon.tests.test_templates.ZopePageTemplatesTest)
 test_pt_files (chameleon.tests.test_templates.ZopeTemplatesTestSuite)
 test_txt_files (chameleon.tests.test_templates.ZopeTemplatesTestSuite)
 test_sample_files (chameleon.tests.test_tokenizer.TokenizerTest)
 test_token (chameleon.tests.test_tokenizer.TokenizerTest)
 test_items (chameleon.tests.test_utils.ScopeTestCase)
 test_keys (chameleon.tests.test_utils.ScopeTestCase)
 test_values (chameleon.tests.test_utils.ScopeTestCase)
  Ran 122 tests with 0 failures, 0 errors and 0 skipped.
Tearing down left over layers:
  Tear down zope.testrunner.layer.UnitTests.
  py$(PYV): OK
  congratulations :)
