--- httpcore-1.0.1/tests/_async/test_integration.py.orig
+++ httpcore-1.0.1/tests/_async/test_integration.py
@@ -6,6 +6,7 @@
 
 
 @pytest.mark.anyio
+@pytest.mark.skip(reason="we have no httpbin")
 async def test_request(httpbin):
     async with httpcore.AsyncConnectionPool() as pool:
         response = await pool.request("GET", httpbin.url)
@@ -13,6 +14,7 @@
 
 
 @pytest.mark.anyio
+@pytest.mark.skip(reason="we have no httpbin")
 async def test_ssl_request(httpbin_secure):
     ssl_context = ssl.create_default_context()
     ssl_context.check_hostname = False
@@ -23,6 +25,7 @@
 
 
 @pytest.mark.anyio
+@pytest.mark.skip(reason="we have no httpbin")
 async def test_extra_info(httpbin_secure):
     ssl_context = ssl.create_default_context()
     ssl_context.check_hostname = False
--- httpcore-1.0.1/tests/_sync/test_integration.py.orig
+++ httpcore-1.0.1/tests/_sync/test_integration.py
@@ -6,6 +6,7 @@
 
 
 
+@pytest.mark.skip(reason="we have no httpbin")
 def test_request(httpbin):
     with httpcore.ConnectionPool() as pool:
         response = pool.request("GET", httpbin.url)
@@ -13,6 +14,7 @@
 
 
 
+@pytest.mark.skip(reason="we have no httpbin")
 def test_ssl_request(httpbin_secure):
     ssl_context = ssl.create_default_context()
     ssl_context.check_hostname = False
@@ -23,6 +25,7 @@
 
 
 
+@pytest.mark.skip(reason="we have no httpbin")
 def test_extra_info(httpbin_secure):
     ssl_context = ssl.create_default_context()
     ssl_context.check_hostname = False
--- httpcore-1.0.1/tests/test_api.py.orig
+++ httpcore-1.0.1/tests/test_api.py
@@ -1,18 +1,23 @@
 import json
 
+import pytest
+
 import httpcore
 
 
+@pytest.mark.skip(reason="we have no httpbin")
 def test_request(httpbin):
     response = httpcore.request("GET", httpbin.url)
     assert response.status == 200
 
 
+@pytest.mark.skip(reason="we have no httpbin")
 def test_stream(httpbin):
     with httpcore.stream("GET", httpbin.url) as response:
         assert response.status == 200
 
 
+@pytest.mark.skip(reason="we have no httpbin")
 def test_request_with_content(httpbin):
     url = f"{httpbin.url}/post"
     response = httpcore.request("POST", url, content=b'{"hello":"world"}')
