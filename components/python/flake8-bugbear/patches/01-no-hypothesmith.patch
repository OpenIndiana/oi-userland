--- flake8-bugbear-23.11.26/tests/test_bugbear.py.orig
+++ flake8-bugbear-23.11.26/tests/test_bugbear.py
@@ -870,19 +870,8 @@
 
 
 class TestFuzz(unittest.TestCase):
-    # TODO: enable this test on py312 once hypothesmith supports py312
-    if sys.version_info < (3, 12):
-        from hypothesis import HealthCheck, given, settings
-        from hypothesmith import from_grammar
-
-        @settings(suppress_health_check=[HealthCheck.too_slow])
-        @given(from_grammar().map(ast.parse))
-        def test_does_not_crash_on_any_valid_code(self, syntax_tree):
-            # Given any syntatically-valid source code, flake8-bugbear should
-            # not crash.  This tests doesn't check that we do the *right* thing,
-            # just that we don't crash on valid-if-poorly-styled code!
-            BugBearVisitor(filename="<string>", lines=[]).visit(syntax_tree)
 
+    @unittest.skip('No hypothesmith packaged yet')
     def test_does_not_crash_on_site_code(self):
         # Because the generator isn't perfect, we'll also test on all the code
         # we can easily find in our current Python environment - this includes
@@ -893,6 +882,7 @@
                     if f.endswith(".py"):
                         BugBearChecker(filename=str(Path(dirname) / f))
 
+    @unittest.skip('No hypothesmith packaged yet')
     def test_does_not_crash_on_tuple_expansion_in_except_statement(self):
         # akin to test_does_not_crash_on_any_valid_code
         # but targets a rare case that's not covered by hypothesmith.from_grammar
@@ -907,6 +897,7 @@
         )
         BugBearVisitor(filename="<string>", lines=[]).visit(syntax_tree)
 
+    @unittest.skip('No hypothesmith packaged yet')
     def test_does_not_crash_on_call_in_except_statement(self):
         # akin to test_does_not_crash_on_tuple_expansion_in_except_statement
         # see https://github.com/PyCQA/flake8-bugbear/issues/171
--- flake8-bugbear-23.11.26/tox.ini.orig
+++ flake8-bugbear-23.11.26/tox.ini
@@ -16,7 +16,6 @@
 deps =
     coverage
     hypothesis
-    hypothesmith
 commands =
     coverage run tests/test_bugbear.py {posargs}
     coverage report -m
