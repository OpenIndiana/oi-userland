ROOT: tox-gh-actions won't override envlist because tox is not running in GitHub Actions
py$(PYV): remove tox env folder $(@D)/.tox/py$(PYV)
py$(PYV): commands[0]> python -m coverage run tests/tests.py --verbose
test_append1 (__main__.TestBaseFile) ... ok
test_append2 (__main__.TestBaseFile) ... ok
test_append3 (__main__.TestBaseFile) ... ok
test_append4 (__main__.TestBaseFile) ... ok
test_comment_ordering (__main__.TestBaseFile)
Test that "# " comments appear before "#. " comments when writing. ... ok
test_find1 (__main__.TestBaseFile) ... ok
test_find2 (__main__.TestBaseFile) ... ok
test_find3 (__main__.TestBaseFile) ... ok
test_find4 (__main__.TestBaseFile) ... ok
test_find5 (__main__.TestBaseFile) ... ok
test_insert1 (__main__.TestBaseFile) ... ok
test_insert2 (__main__.TestBaseFile) ... ok
test_metadata_as_entry (__main__.TestBaseFile) ... ok
test_ordered_metadata (__main__.TestBaseFile) ... ok
test_save1 (__main__.TestBaseFile) ... ok
test_save2 (__main__.TestBaseFile) ... ok
test_sort (__main__.TestBaseFile) ... ok
test_str (__main__.TestBaseFile) ... ok
test_trailing_comment (__main__.TestBaseFile) ... ok
test_unicode1 (__main__.TestBaseFile) ... ok
test_unicode2 (__main__.TestBaseFile) ... ok
test_wrapping (__main__.TestBaseFile) ... ok
test_detect_encoding1 (__main__.TestFunctions)
Test that given encoding is returned when file has no encoding defined. ... ok
test_detect_encoding2 (__main__.TestFunctions)
Test with a .pot file. ... ok
test_detect_encoding3 (__main__.TestFunctions)
Test with an utf8 .po file. ... ok
test_detect_encoding4 (__main__.TestFunctions)
Test with utf8 data (no file). ... ok
test_detect_encoding5 (__main__.TestFunctions)
Test with utf8 .mo file. ... ok
test_detect_encoding6 (__main__.TestFunctions)
Test with iso-8859-15 .po file. ... ok
test_detect_encoding7 (__main__.TestFunctions)
Test with iso-8859-15 .mo file. ... ok
test_empty (__main__.TestFunctions) ... ok
test_escape (__main__.TestFunctions)
Tests the escape function. ... ok
test_indented_pofile (__main__.TestFunctions)
Test that an indented pofile returns a POFile instance. ... ok
test_is_file (__main__.TestFunctions) ... ok
test_linenum_1 (__main__.TestFunctions) ... ok
test_linenum_2 (__main__.TestFunctions) ... ok
test_linenum_3 (__main__.TestFunctions) ... ok
test_mofile_with_subclass (__main__.TestFunctions)
Test that the mofile function correctly returns an instance of the ... ok
test_pofile_and_mofile1 (__main__.TestFunctions)
Test bad usage of pofile/mofile. ... ok
test_pofile_and_mofile10 (__main__.TestFunctions)
Test mofile with a bytes object. ... ok
test_pofile_and_mofile2 (__main__.TestFunctions)
Test that the pofile function returns a POFile instance. ... ok
test_pofile_and_mofile3 (__main__.TestFunctions)
Test  that the mofile function returns a MOFile instance. ... ok
test_pofile_and_mofile4 (__main__.TestFunctions)
Test that check_for_duplicates is passed to the instance. ... ok
test_pofile_and_mofile5 (__main__.TestFunctions)
Test that detect_encoding works as expected. ... ok
test_pofile_and_mofile6 (__main__.TestFunctions)
Test that encoding is default_encoding when detect_encoding is False. ... ok
test_pofile_and_mofile7 (__main__.TestFunctions)
Test that encoding is ok when encoding is explicitly given. ... ok
test_pofile_and_mofile8 (__main__.TestFunctions)
Test that weird occurrences are correctly parsed. ... ok
test_pofile_and_mofile9 (__main__.TestFunctions)
Test that obsolete previous msgid are ignored ... ok
test_pofile_with_subclass (__main__.TestFunctions)
Test that the pofile function correctly returns an instance of the ... ok
test_previous_msgctxt_1 (__main__.TestFunctions)
Test previous msgctxt multiline. ... ok
test_previous_msgctxt_2 (__main__.TestFunctions)
Test previous msgctxt single line. ... ok
test_previous_msgid_1 (__main__.TestFunctions)
Test previous msgid multiline. ... ok
test_previous_msgid_2 (__main__.TestFunctions)
Test previous msgid single line. ... ok
test_previous_msgid_3 (__main__.TestFunctions)
Test saving empty previous msgid. ... ok
test_syntax_error1 (__main__.TestFunctions)
Test that syntax error is raised while processing a symbol parsing. ... ok
test_ufeff_data_pofile (__main__.TestFunctions)
Test that an ufeff prefixed pofile returns a POFile instance. ... ok
test_ufeff_pofile (__main__.TestFunctions)
Test that an ufeff prefixed pofile returns a POFile instance. ... ok
test_unescape (__main__.TestFunctions)
Tests the unescape function. ... ok
test_unescaped_double_quote1 (__main__.TestFunctions)
Test that polib reports an error when unescaped double quote is found. ... ok
test_unescaped_double_quote2 (__main__.TestFunctions)
Test that polib reports an error when unescaped double quote is found. ... ok
test_unescaped_double_quote3 (__main__.TestFunctions)
Test that polib reports an error when unescaped double quote is found at the beginning of the string. ... ok
test_unescaped_double_quote4 (__main__.TestFunctions)
Test that polib reports an error when unescaped double quote is found at the beginning of the string. ... ok
test_windows_path_occurrences (__main__.TestFunctions) ... ok
test_dummy_methods (__main__.TestMoFile)
This is stupid and just here for code coverage. ... ok
test_invalid_version (__main__.TestMoFile) ... ok
test_msgctxt (__main__.TestMoFile) ... ok
test_no_header (__main__.TestMoFile) ... ok
test_save_as_pofile (__main__.TestMoFile)
Test for the MOFile.save_as_pofile() method. ... ok
test_comment_starting_with_two_hashes (__main__.TestPoFile) ... ok
test_compare1 (__main__.TestPoFile) ... ok
test_compare2 (__main__.TestPoFile) ... ok
test_compare3 (__main__.TestPoFile) ... ok
test_compare4 (__main__.TestPoFile) ... ok
test_compare5 (__main__.TestPoFile) ... ok
test_compare6 (__main__.TestPoFile) ... ok
test_compare7 (__main__.TestPoFile) ... ok
test_compare8 (__main__.TestPoFile) ... ok
test_fuzzy_entries (__main__.TestPoFile) ... ok
test_fuzzy_obsolete (__main__.TestPoFile) ... ok
test_merge (__main__.TestPoFile) ... ok
test_obsolete_entries (__main__.TestPoFile) ... ok
test_percent_translated (__main__.TestPoFile) ... ok
test_save_as_mofile (__main__.TestPoFile)
Test for the POFile.save_as_mofile() method. ... ok
test_set_fuzzy (__main__.TestPoFile) ... ok
test_translated_entries (__main__.TestPoFile) ... ok
test_untranslated_entries (__main__.TestPoFile) ... ok
test_unusual_metadata_location (__main__.TestPoFile) ... ok
test_word_garbage (__main__.TestPoFile) ... ok

----------------------------------------------------------------------
Ran 87 tests

OK
  py$(PYV): OK
  congratulations :)
