We have no hatch packaged yet.

--- incremental-24.7.2/requirements_tests.in.orig
+++ incremental-24.7.2/requirements_tests.in
@@ -2,4 +2,3 @@
 coverage
 coverage-p
 twisted
-hatch
--- incremental-24.7.2/tests/test_examples.py.orig
+++ incremental-24.7.2/tests/test_examples.py
@@ -197,40 +197,6 @@
         )
         self.assertEqual(metadata.version("example_hatchling"), "24.7.0")
 
-    def test_hatch_version(self):
-        """
-        The ``hatch version`` command reports the version of a package
-        packaged with hatchling.
-        """
-        proc = run(
-            ["hatch", "version"],
-            cwd=TEST_DIR.child("example_hatchling").path,
-            check=True,
-            capture_output=True,
-        )
-
-        self.assertEqual(proc.stdout, b"24.7.0\n")
-
-    def test_hatch_version_set(self):
-        """
-        The ``hatch version`` command can't set the version so its output
-        tells the user to use ``incremental.update`` instead.
-        """
-        proc = run(
-            ["hatch", "--no-color", "version", "24.8.0"],
-            cwd=TEST_DIR.child("example_hatchling").path,
-            check=False,
-            capture_output=True,
-        )
-        suggestion = b"Run `python -m incremental.version --newversion 24.8.0` to set the version."
-
-        self.assertGreater(proc.returncode, 0)
-        self.assertRegex(
-            proc.stdout,
-            # Hatch may wrap the output, so we are flexible about the specifics of whitespace.
-            suggestion.replace(b".", rb"\.").replace(b" ", b"\\s+"),
-        )
-
     def test_noop(self):
         """
         The Incremental setuptools hook is a silent no-op when there is no Incremental
