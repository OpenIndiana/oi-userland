py$(PYV): remove tox env folder $(@D)/.tox/py$(PYV)
py$(PYV): commands[0]> $(PYTHON) -m unittest -v
test_call_once (tests.test_more.AdjacentTests)
Test that the predicate is only called once per item. ... ok
test_consecutive_true (tests.test_more.AdjacentTests)
Test that when the predicate matches multiple consecutive elements ... ok
test_distance (tests.test_more.AdjacentTests) ... ok
test_empty_iterable (tests.test_more.AdjacentTests) ... ok
test_grouping (tests.test_more.AdjacentTests)
Test interaction of adjacent() with groupby_transform() ... ok
test_large_distance (tests.test_more.AdjacentTests)
Test distance larger than the length of the iterable ... ok
test_length_one (tests.test_more.AdjacentTests) ... ok
test_negative_distance (tests.test_more.AdjacentTests)
Test that adjacent() raises an error with negative distance ... ok
test_typical (tests.test_more.AdjacentTests) ... ok
test_zero_distance (tests.test_more.AdjacentTests)
Test that adjacent() reduces to zip+map when distance is 0 ... ok
test_basic (tests.test_more.AllUniqueTests) ... ok
test_infinite (tests.test_more.AllUniqueTests) ... ok
test_key (tests.test_more.AllUniqueTests) ... ok
test_non_hashable (tests.test_more.AllUniqueTests) ... ok
test_partially_hashable (tests.test_more.AllUniqueTests) ... ok
test_nonseq_reversed (tests.test_more.AlwaysReversibleTests) ... ok
test_regular_reversed (tests.test_more.AlwaysReversibleTests) ... ok
test_basic (tests.test_more.BucketTests) ... ok
test_in (tests.test_more.BucketTests) ... ok
test_list (tests.test_more.BucketTests) ... ok
test_list_validator (tests.test_more.BucketTests) ... ok
test_validator (tests.test_more.BucketTests) ... ok
test_abort (tests.test_more.CallbackIterTests) ... ok
test_basic (tests.test_more.CallbackIterTests) ... ok
test_callback_kwd (tests.test_more.CallbackIterTests) ... ok
test_exception (tests.test_more.CallbackIterTests) ... ok
test_no_result (tests.test_more.CallbackIterTests) ... ok
test_partial_consumption (tests.test_more.CallbackIterTests) ... ok
test_0 (tests.test_more.ChunkedEvenTests) ... ok
test_1 (tests.test_more.ChunkedEvenTests) ... ok
test_4 (tests.test_more.ChunkedEvenTests) ... ok
test_5 (tests.test_more.ChunkedEvenTests) ... ok
test_6 (tests.test_more.ChunkedEvenTests) ... ok
test_7 (tests.test_more.ChunkedEvenTests) ... ok
test_evenness (tests.test_more.ChunkedEvenTests) ... ok
test_infinite (tests.test_more.ChunkedEvenTests) ... ok
test_even (tests.test_more.ChunkedTests)
Test when ``n`` divides evenly into the length of the iterable. ... ok
test_none (tests.test_more.ChunkedTests)
Test when ``n`` has the value ``None``. ... ok
test_odd (tests.test_more.ChunkedTests)
Test when ``n`` does not divide evenly into the length of the ... ok
test_strict_being_true (tests.test_more.ChunkedTests)
Test when ``n`` does not divide evenly into the length of the ... ok
test_strict_being_true_with_size_none (tests.test_more.ChunkedTests)
Test when ``n`` has value ``None`` and the keyword strict is True ... ok
test_strict_false (tests.test_more.ChunkedTests)
Test when ``n`` does not divide evenly into the length of the ... ok
test_duplicates (tests.test_more.CircularShiftsTests) ... ok
test_empty (tests.test_more.CircularShiftsTests) ... ok
test_simple_circular_shifts (tests.test_more.CircularShiftsTests) ... ok
test_invalid_large (tests.test_more.CombinationIndexTests) ... ok
test_invalid_match (tests.test_more.CombinationIndexTests) ... ok
test_invalid_order (tests.test_more.CombinationIndexTests) ... ok
test_long (tests.test_more.CombinationIndexTests) ... ok
test_multiplicity (tests.test_more.CombinationIndexTests) ... ok
test_null (tests.test_more.CombinationIndexTests) ... ok
test_r_equal_to_n (tests.test_more.CombinationIndexTests) ... ok
test_r_less_than_n (tests.test_more.CombinationIndexTests) ... ok
test_custom_ordering (tests.test_more.ConsecutiveGroupsTest) ... ok
test_exotic_ordering (tests.test_more.ConsecutiveGroupsTest) ... ok
test_numbers (tests.test_more.ConsecutiveGroupsTest) ... ok
test_basic (tests.test_more.ConstrainedBatchesTests) ... ok
test_get_len (tests.test_more.ConstrainedBatchesTests) ... ok
test_max_count (tests.test_more.ConstrainedBatchesTests) ... ok
test_strict (tests.test_more.ConstrainedBatchesTests) ... ok
test_consumer (tests.test_more.ConsumerTests) ... ok
test_basic (tests.test_more.CountCycleTests) ... ok
test_empty (tests.test_more.CountCycleTests) ... ok
test_negative (tests.test_more.CountCycleTests) ... ok
test_basic (tests.test_more.CountableTests) ... ok
test_empty (tests.test_more.CountableTests) ... ok
test_custom (tests.test_more.DifferenceTest) ... ok
test_empty (tests.test_more.DifferenceTest) ... ok
test_initial (tests.test_more.DifferenceTest) ... ok
test_normal (tests.test_more.DifferenceTest) ... ok
test_one (tests.test_more.DifferenceTest) ... ok
test_roundtrip (tests.test_more.DifferenceTest) ... ok
test_basic (tests.test_more.DistinctCombinationsTests) ... ok
test_empty (tests.test_more.DistinctCombinationsTests) ... ok
test_negative (tests.test_more.DistinctCombinationsTests) ... ok
test_distinct_permutations (tests.test_more.DistinctPermutationsTests)
Make sure the output for ``distinct_permutations()`` is the same as ... ok
test_other_iterables (tests.test_more.DistinctPermutationsTests)
Make sure ``distinct_permutations()`` accepts a different type of ... ok
test_r (tests.test_more.DistinctPermutationsTests) ... ok
test_basic (tests.test_more.DistributeTest) ... ok
test_invalid_n (tests.test_more.DistributeTest) ... ok
test_large_n (tests.test_more.DistributeTest) ... ok
test_basic (tests.test_more.DivideTest) ... ok
test_invalid_n (tests.test_more.DivideTest) ... ok
test_large_n (tests.test_more.DivideTest) ... ok
test_basic (tests.test_more.DuplicatesEverSeenTests) ... ok
test_key_hashable (tests.test_more.DuplicatesEverSeenTests) ... ok
test_key_non_hashable (tests.test_more.DuplicatesEverSeenTests) ... ok
test_key_partially_hashable (tests.test_more.DuplicatesEverSeenTests) ... ok
test_non_hashable (tests.test_more.DuplicatesEverSeenTests) ... ok
test_partially_hashable (tests.test_more.DuplicatesEverSeenTests) ... ok
test_basic (tests.test_more.DuplicatesJustSeenTests) ... ok
test_key_hashable (tests.test_more.DuplicatesJustSeenTests) ... ok
test_key_non_hashable (tests.test_more.DuplicatesJustSeenTests) ... ok
test_key_partially_hashable (tests.test_more.DuplicatesJustSeenTests) ... ok
test_nested (tests.test_more.DuplicatesJustSeenTests) ... ok
test_non_hashable (tests.test_more.DuplicatesJustSeenTests) ... ok
test_partially_hashable (tests.test_more.DuplicatesJustSeenTests) ... ok
test_empty (tests.test_more.ExactlyNTests)
Return ``True`` if the iterable is empty and ``n`` is 0 ... ok
test_false (tests.test_more.ExactlyNTests)
Iterable does not have ``n`` ``True`` elements ... ok
test_true (tests.test_more.ExactlyNTests)
Iterable has ``n`` ``True`` elements ... ok
test_false (tests.test_more.FilterExceptTests) ... ok
test_multiple (tests.test_more.FilterExceptTests) ... ok
test_no_exceptions_pass (tests.test_more.FilterExceptTests) ... ok
test_no_exceptions_raise (tests.test_more.FilterExceptTests) ... ok
test_raise (tests.test_more.FilterExceptTests) ... ok
test_default (tests.test_more.FirstTests) ... ok
test_empty_stop_iteration (tests.test_more.FirstTests) ... ok
test_many (tests.test_more.FirstTests) ... ok
test_one (tests.test_more.FirstTests) ... ok
test_default_funcs (tests.test_more.GroupByTransformTests) ... ok
test_no_valuefunc (tests.test_more.GroupByTransformTests) ... ok
test_reducefunc (tests.test_more.GroupByTransformTests) ... ok
test_valuefunc (tests.test_more.GroupByTransformTests) ... ok
test_even (tests.test_more.IchunkedTests) ... ok
test_laziness (tests.test_more.IchunkedTests) ... ok
test_memory_in_order (tests.test_more.IchunkedTests)
Test that only one item is kept in memory at a time if chunks are ... ok
test_negative (tests.test_more.IchunkedTests) ... ok
test_odd (tests.test_more.IchunkedTests) ... ok
test_out_of_order (tests.test_more.IchunkedTests) ... ok
test_zero (tests.test_more.IchunkedTests) ... ok
test_basic (tests.test_more.IequalsTests) ... ok
test_empty_iterables (tests.test_more.IequalsTests) ... ok
test_more_than_two_iterable (tests.test_more.IequalsTests) ... ok
test_no_iterables (tests.test_more.IequalsTests) ... ok
test_none_is_not_a_sentinel (tests.test_more.IequalsTests) ... ok
test_not_equal_lengths (tests.test_more.IequalsTests) ... ok
test_not_identical_but_equal (tests.test_more.IequalsTests) ... ok
test_one_iterable (tests.test_more.IequalsTests) ... ok
test_order_matters (tests.test_more.IequalsTests) ... ok
test_ilen (tests.test_more.IlenTests)
Sanity-checks for ``ilen()``. ... ok
test_argument_mismatch_raises (tests.test_more.InterleaveEvenlyTests) ... ok
test_degenerate_empty (tests.test_more.InterleaveEvenlyTests) ... ok
test_degenerate_one (tests.test_more.InterleaveEvenlyTests) ... ok
test_equal_lengths (tests.test_more.InterleaveEvenlyTests) ... ok
test_manual_lengths (tests.test_more.InterleaveEvenlyTests) ... ok
test_many_iters (tests.test_more.InterleaveEvenlyTests) ... ok
test_no_length_raises (tests.test_more.InterleaveEvenlyTests) ... ok
test_not_proportional (tests.test_more.InterleaveEvenlyTests) ... ok
test_proportional (tests.test_more.InterleaveEvenlyTests) ... ok
test_three_iters (tests.test_more.InterleaveEvenlyTests) ... ok
test_even (tests.test_more.InterleaveLongestTests) ... ok
test_mixed_types (tests.test_more.InterleaveLongestTests) ... ok
test_short (tests.test_more.InterleaveLongestTests) ... ok
test_even (tests.test_more.InterleaveTests) ... ok
test_mixed_types (tests.test_more.InterleaveTests) ... ok
test_short (tests.test_more.InterleaveTests) ... ok
test_even (tests.test_more.IntersperseTest) ... ok
test_n (tests.test_more.IntersperseTest) ... ok
test_n_zero (tests.test_more.IntersperseTest) ... ok
test_nested (tests.test_more.IntersperseTest) ... ok
test_not_iterable (tests.test_more.IntersperseTest) ... ok
test_odd (tests.test_more.IntersperseTest) ... ok
test_basic (tests.test_more.IsSortedTests) ... ok
test_all (tests.test_more.IsliceExtendedTests) ... ok
test_invalid_slice (tests.test_more.IsliceExtendedTests) ... ok
test_slicing (tests.test_more.IsliceExtendedTests) ... ok
test_slicing_extensive (tests.test_more.IsliceExtendedTests) ... ok
test_zero_step (tests.test_more.IsliceExtendedTests) ... ok
test_basic (tests.test_more.LastTests) ... ok
test_default (tests.test_more.LastTests) ... ok
test_empty (tests.test_more.LastTests) ... ok
test_custom_pred (tests.test_more.LocateTests) ... ok
test_default_pred (tests.test_more.LocateTests) ... ok
test_no_matches (tests.test_more.LocateTests) ... ok
test_window_size (tests.test_more.LocateTests) ... ok
test_window_size_large (tests.test_more.LocateTests) ... ok
test_window_size_zero (tests.test_more.LocateTests) ... ok
test_basic (tests.test_more.LongestCommonPrefixTests) ... ok
test_contains_infinite_iterables (tests.test_more.LongestCommonPrefixTests) ... ok
test_empty_iterables_only (tests.test_more.LongestCommonPrefixTests) ... ok
test_includes_empty_iterables (tests.test_more.LongestCommonPrefixTests) ... ok
test_infinite_iterables (tests.test_more.LongestCommonPrefixTests) ... ok
test_iterators (tests.test_more.LongestCommonPrefixTests) ... ok
test_no_iterables (tests.test_more.LongestCommonPrefixTests) ... ok
test_non_hashable (tests.test_more.LongestCommonPrefixTests) ... ok
test_prefix_contains_elements_of_the_first_iterable (tests.test_more.LongestCommonPrefixTests) ... ok
test_basic (tests.test_more.MakeDecoratorTests) ... ok
test_result_index (tests.test_more.MakeDecoratorTests) ... ok
test_wrap_class (tests.test_more.MakeDecoratorTests) ... ok
test_multiple (tests.test_more.MapExceptTests) ... ok
test_no_exceptions_pass (tests.test_more.MapExceptTests) ... ok
test_no_exceptions_raise (tests.test_more.MapExceptTests) ... ok
test_raise (tests.test_more.MapExceptTests) ... ok
test_empty (tests.test_more.MapIfTests) ... ok
test_with_func_else (tests.test_more.MapIfTests) ... ok
test_without_func_else (tests.test_more.MapIfTests) ... ok
test_default (tests.test_more.MapReduceTests) ... ok
test_reducefunc (tests.test_more.MapReduceTests) ... ok
test_ret (tests.test_more.MapReduceTests) ... ok
test_valuefunc (tests.test_more.MapReduceTests) ... ok
test_basic (tests.test_more.MarkEndsTests) ... ok
test_basic (tests.test_more.MinMaxTests) ... ok
test_default (tests.test_more.MinMaxTests) ... ok
test_iterables (tests.test_more.MinMaxTests) ... ok
test_key (tests.test_more.MinMaxTests) ... ok
test_unpacked (tests.test_more.MinMaxTests) ... ok
test_basic (tests.test_more.NthOrLastTests) ... ok
test_default_value (tests.test_more.NthOrLastTests) ... ok
test_empty_iterable_no_default (tests.test_more.NthOrLastTests) ... ok
test_basic (tests.test_more.NthProductTests) ... ok
test_invalid_index (tests.test_more.NthProductTests) ... ok
test_long (tests.test_more.NthProductTests) ... ok
test_negative (tests.test_more.NthProductTests) ... ok
test_arg_count (tests.test_more.NumericRangeTests) ... ok
test_bad_key (tests.test_more.NumericRangeTests) ... ok
test_basic (tests.test_more.NumericRangeTests) ... ok
test_bool (tests.test_more.NumericRangeTests) ... ok
test_contains (tests.test_more.NumericRangeTests) ... ok
test_count (tests.test_more.NumericRangeTests) ... ok
test_eq (tests.test_more.NumericRangeTests) ... ok
test_get_item_by_index (tests.test_more.NumericRangeTests) ... ok
test_get_item_by_slice (tests.test_more.NumericRangeTests) ... ok
test_hash (tests.test_more.NumericRangeTests) ... ok
test_index (tests.test_more.NumericRangeTests) ... ok
test_iter_twice (tests.test_more.NumericRangeTests) ... ok
test_len (tests.test_more.NumericRangeTests) ... ok
test_parent_classes (tests.test_more.NumericRangeTests) ... ok
test_pickle (tests.test_more.NumericRangeTests) ... ok
test_repr (tests.test_more.NumericRangeTests) ... ok
test_reversed (tests.test_more.NumericRangeTests) ... ok
test_zero_step (tests.test_more.NumericRangeTests) ... ok
test_basic (tests.test_more.OneTests) ... ok
test_too_long (tests.test_more.OneTests) ... ok
test_too_long_default_message (tests.test_more.OneTests) ... ok
test_too_short (tests.test_more.OneTests) ... ok
test_custom_exception (tests.test_more.OnlyTests) ... ok
test_custom_value (tests.test_more.OnlyTests) ... ok
test_default_exception_message (tests.test_more.OnlyTests) ... ok
test_defaults (tests.test_more.OnlyTests) ... ok
test_invalid_n (tests.test_more.PaddedTest) ... ok
test_next_multiple (tests.test_more.PaddedTest) ... ok
test_no_n (tests.test_more.PaddedTest) ... ok
test_valid_n (tests.test_more.PaddedTest) ... ok
test_duplicates (tests.test_more.PartitionsTest) ... ok
test_empty (tests.test_more.PartitionsTest) ... ok
test_order (tests.test_more.PartitionsTest) ... ok
test_types (tests.test_more.PartitionsTest) ... ok
test_empty (tests.test_more.PeekableTests)
Tests prepending in front of an empty iterable ... ok
test_indexing (tests.test_more.PeekableTests)
Indexing into the peekable shouldn't advance the iterator. ... ok
test_multi_prepend (tests.test_more.PeekableTests)
Tests prepending multiple items and getting them in proper order ... ok
test_multi_prepend_peek (tests.test_more.PeekableTests)
Tests prepending multiple elements and getting them in reverse order ... ok
test_passthrough (tests.test_more.PeekableTests)
Iterating a peekable without using ``peek()`` or ``prepend()`` ... ok
test_peek_default (tests.test_more.PeekableTests)
Make sure passing a default into ``peek()`` works. ... ok
test_prepend (tests.test_more.PeekableTests)
Tests intersperesed ``prepend()`` and ``next()`` calls ... ok
test_prepend_after_stop (tests.test_more.PeekableTests)
Test resuming iteration after a previous exhaustion ... ok
test_prepend_indexing (tests.test_more.PeekableTests)
Tests interaction between prepending and indexing ... ok
test_prepend_iterable (tests.test_more.PeekableTests)
Tests prepending from an iterable ... ok
test_prepend_many (tests.test_more.PeekableTests)
Tests that prepending a huge number of elements works ... ok
test_prepend_reversed (tests.test_more.PeekableTests)
Tests prepending from a reversed iterable ... ok
test_prepend_slicing (tests.test_more.PeekableTests)
Tests interaction between prepending and slicing ... ok
test_prepend_truthiness (tests.test_more.PeekableTests)
Tests that ``__bool__()`` or ``__nonzero__()`` works properly ... ok
test_simple_peeking (tests.test_more.PeekableTests)
Make sure ``next`` and ``peek`` advance and don't advance the ... ok
test_slicing (tests.test_more.PeekableTests)
Slicing the peekable shouldn't advance the iterator. ... ok
test_slicing_error (tests.test_more.PeekableTests) ... ok
test_slicing_reset (tests.test_more.PeekableTests)
Test slicing on a fresh iterable each time ... ok
test_truthiness (tests.test_more.PeekableTests)
Make sure a ``peekable`` tests true iff there are items remaining in ... ok
test_invalid_large (tests.test_more.PermutationIndexTests) ... ok
test_invalid_match (tests.test_more.PermutationIndexTests) ... ok
test_long (tests.test_more.PermutationIndexTests) ... ok
test_multiplicity (tests.test_more.PermutationIndexTests) ... ok
test_null (tests.test_more.PermutationIndexTests) ... ok
test_r_equal_to_n (tests.test_more.PermutationIndexTests) ... ok
test_r_less_than_n (tests.test_more.PermutationIndexTests) ... ok
test_basic (tests.test_more.ProductIndexTests) ... ok
test_invalid_empty (tests.test_more.ProductIndexTests) ... ok
test_invalid_large (tests.test_more.ProductIndexTests) ... ok
test_invalid_match (tests.test_more.ProductIndexTests) ... ok
test_invalid_small (tests.test_more.ProductIndexTests) ... ok
test_long (tests.test_more.ProductIndexTests) ... ok
test_multiplicity (tests.test_more.ProductIndexTests) ... ok
test_basic (tests.test_more.RepeatEachTests) ... ok
test_default (tests.test_more.RepeatEachTests) ... ok
test_empty (tests.test_more.RepeatEachTests) ... ok
test_infinite_input (tests.test_more.RepeatEachTests) ... ok
test_negative_repeat (tests.test_more.RepeatEachTests) ... ok
test_no_repeat (tests.test_more.RepeatEachTests) ... ok
test_basic (tests.test_more.RepeatLastTests) ... ok
test_default_value (tests.test_more.RepeatLastTests) ... ok
test_empty_iterable (tests.test_more.RepeatLastTests) ... ok
test_basic (tests.test_more.ReplaceTests) ... ok
test_count (tests.test_more.ReplaceTests) ... ok
test_iterable_substitutes (tests.test_more.ReplaceTests) ... ok
test_window_size (tests.test_more.ReplaceTests) ... ok
test_window_size_count (tests.test_more.ReplaceTests) ... ok
test_window_size_end (tests.test_more.ReplaceTests) ... ok
test_window_size_large (tests.test_more.ReplaceTests) ... ok
test_window_size_zero (tests.test_more.ReplaceTests) ... ok
test_custom_pred (tests.test_more.RlocateTests) ... ok
test_default_pred (tests.test_more.RlocateTests) ... ok
test_efficient_reversal (tests.test_more.RlocateTests) ... ok
test_no_matches (tests.test_more.RlocateTests) ... ok
test_window_size (tests.test_more.RlocateTests) ... ok
test_window_size_large (tests.test_more.RlocateTests) ... ok
test_window_size_zero (tests.test_more.RlocateTests) ... ok
test_decode (tests.test_more.RunLengthTest) ... ok
test_encode (tests.test_more.RunLengthTest) ... ok
test_invariance_under_permutations_unweighted (tests.test_more.SampleTests)
The order of the data should not matter. This is a stochastic test, ... ok
test_invariance_under_permutations_weighted (tests.test_more.SampleTests)
The order of the data should not matter. This is a stochastic test, ... ok
test_length (tests.test_more.SampleTests)
Check that *k* elements are sampled. ... ok
test_samling_entire_iterable (tests.test_more.SampleTests)
If k=len(iterable), the sample contains the original elements. ... ok
test_scale_invariance_of_weights (tests.test_more.SampleTests)
The probabilit of chosing element a_i is w_i / sum(weights). ... ok
test_unit_case (tests.test_more.SampleTests)
Test against a fixed case by seeding the random module. ... ok
test_elements (tests.test_more.SeekableTest) ... ok
test_exhaustion_reset (tests.test_more.SeekableTest) ... ok
test_forward (tests.test_more.SeekableTest) ... ok
test_maxlen (tests.test_more.SeekableTest) ... ok
test_maxlen_zero (tests.test_more.SeekableTest) ... ok
test_partial_reset (tests.test_more.SeekableTest) ... ok
test_passthrough (tests.test_more.SeekableTest)
Iterating a peekable without using ``peek()`` or ``prepend()`` ... ok
test_past_end (tests.test_more.SeekableTest) ... ok
test_peek_default (tests.test_more.SeekableTest)
Make sure passing a default into ``peek()`` works. ... ok
test_simple_peeking (tests.test_more.SeekableTest)
Make sure ``next`` and ``peek`` advance and don't advance the ... ok
test_truthiness (tests.test_more.SeekableTest)
Make sure a ``peekable`` tests true iff there are items remaining in ... ok
test_abc_methods (tests.test_more.SequenceViewTests) ... ok
test_indexing (tests.test_more.SequenceViewTests) ... ok
test_init (tests.test_more.SequenceViewTests) ... ok
test_slicing (tests.test_more.SequenceViewTests) ... ok
test_update (tests.test_more.SequenceViewTests) ... ok
test_duplicates (tests.test_more.SetPartitionsTests) ... ok
test_each_correct (tests.test_more.SetPartitionsTests) ... ok
test_found_all (tests.test_more.SetPartitionsTests)
small example, hand-checked ... ok
test_no_group (tests.test_more.SetPartitionsTests) ... ok
test_repeated (tests.test_more.SetPartitionsTests) ... ok
test_stirling_numbers (tests.test_more.SetPartitionsTests)
Check against https://en.wikipedia.org/wiki/ ... ok
test_to_many_groups (tests.test_more.SetPartitionsTests) ... ok
test_before_after (tests.test_more.SideEffectTests) ... ok
test_before_fails (tests.test_more.SideEffectTests) ... ok
test_chunked (tests.test_more.SideEffectTests) ... ok
test_individual (tests.test_more.SideEffectTests) ... ok
test_even (tests.test_more.SlicedTests)
Test when the length of the sequence is divisible by *n* ... ok
test_not_sliceable (tests.test_more.SlicedTests) ... ok
test_numpy_like_array (tests.test_more.SlicedTests) ... ok
test_odd (tests.test_more.SlicedTests)
Test when the length of the sequence is not divisible by *n* ... ok
test_odd_and_strict (tests.test_more.SlicedTests) ... ok
test_invalid_key_list (tests.test_more.SortTogetherTest)
tests `key_list` for indexes not available in `iterables` ... ok
test_key_function (tests.test_more.SortTogetherTest)
tests `key` function, including interaction with `key_list` ... ok
test_key_list (tests.test_more.SortTogetherTest)
tests `key_list` including default, iterables include duplicates ... ok
test_reverse (tests.test_more.SortTogetherTest)
tests `reverse` to ensure a reverse sort for `key_list` iterables ... ok
test_uneven_iterables (tests.test_more.SortTogetherTest)
tests trimming of iterables to the shortest length before sorting ... ok
test_ends_with_sep (tests.test_more.SplitAfterTest) ... ok
test_max_split (tests.test_more.SplitAfterTest) ... ok
test_no_sep (tests.test_more.SplitAfterTest) ... ok
test_starts_with_sep (tests.test_more.SplitAfterTest) ... ok
test_basic (tests.test_more.SplitAtTests) ... ok
test_combination (tests.test_more.SplitAtTests) ... ok
test_keep_separator (tests.test_more.SplitAtTests) ... ok
test_maxsplit (tests.test_more.SplitAtTests) ... ok
test_empty_collection (tests.test_more.SplitBeforeTest) ... ok
test_ends_with_sep (tests.test_more.SplitBeforeTest) ... ok
test_max_split (tests.test_more.SplitBeforeTest) ... ok
test_no_sep (tests.test_more.SplitBeforeTest) ... ok
test_starts_with_sep (tests.test_more.SplitBeforeTest) ... ok
test_bool_in_sizes (tests.test_more.SplitIntoTests)
A bool object is present in ``sizes`` is treated as a 1 or 0 for ... ok
test_both_empty (tests.test_more.SplitIntoTests)
Both ``sizes`` and ``iterable`` arguments are empty. An empty ... ok
test_generator_iterable_integrity (tests.test_more.SplitIntoTests)
Check that if ``iterable`` is an iterator, it is consumed only by as ... ok
test_generator_sizes_integrity (tests.test_more.SplitIntoTests)
Check that if ``sizes`` is an iterator, it is consumed only until a ... ok
test_invalid_in_sizes (tests.test_more.SplitIntoTests)
A ValueError is raised if an object in ``sizes`` is neither ``None`` ... ok
test_invalid_in_sizes_after_none (tests.test_more.SplitIntoTests)
A item in ``sizes`` that is invalid will not raise a TypeError if it ... ok
test_iterable_empty (tests.test_more.SplitIntoTests)
``iterable`` argument is empty but ``sizes`` is not. An empty ... ok
test_iterable_empty_using_none (tests.test_more.SplitIntoTests)
``iterable`` argument is empty but ``sizes`` is not. An empty ... ok
test_iterable_just_right (tests.test_more.SplitIntoTests)
Size of ``iterable`` equals the sum of ``sizes``. ... ok
test_iterable_too_large (tests.test_more.SplitIntoTests)
Size of ``iterable`` is larger than sum of ``sizes``. Not all ... ok
test_iterable_too_small (tests.test_more.SplitIntoTests)
Size of ``iterable`` is smaller than sum of ``sizes``. Last return ... ok
test_iterable_too_small_extra (tests.test_more.SplitIntoTests)
Size of ``iterable`` is smaller than sum of ``sizes``. Second last ... ok
test_sizes_empty (tests.test_more.SplitIntoTests)
``sizes`` argument is empty but ``iterable`` is not. An empty ... ok
test_using_none_mid_sizes (tests.test_more.SplitIntoTests)
None is present in ``sizes`` but is not the last item. Last list ... ok
test_using_none_with_leftover (tests.test_more.SplitIntoTests)
Last item of ``sizes`` is None when items still remain in ... ok
test_using_none_without_leftover (tests.test_more.SplitIntoTests)
Last item of ``sizes`` is None when no items remain in ... ok
test_after_emulation_ends_with_sep (tests.test_more.SplitWhenTests) ... ok
test_after_emulation_no_sep (tests.test_more.SplitWhenTests) ... ok
test_after_emulation_starts_with_sep (tests.test_more.SplitWhenTests) ... ok
test_before_emulation_ends_with_sep (tests.test_more.SplitWhenTests) ... ok
test_before_emulation_no_sep (tests.test_more.SplitWhenTests) ... ok
test_before_emulation_starts_with_sep (tests.test_more.SplitWhenTests) ... ok
test_empty_iterable (tests.test_more.SplitWhenTests) ... ok
test_max_split (tests.test_more.SplitWhenTests) ... ok
test_one_element (tests.test_more.SplitWhenTests) ... ok
test_one_element_is_first_item (tests.test_more.SplitWhenTests) ... ok
test_one_element_is_second_item (tests.test_more.SplitWhenTests) ... ok
test_basic (tests.test_more.SpyTests) ... ok
test_immutable (tests.test_more.SpyTests) ... ok
test_too_many (tests.test_more.SpyTests) ... ok
test_unpacking (tests.test_more.SpyTests) ... ok
test_zero (tests.test_more.SpyTests) ... ok
test_default (tests.test_more.StaggerTest) ... ok
test_longest (tests.test_more.StaggerTest) ... ok
test_offsets (tests.test_more.StaggerTest) ... ok
test_basic (tests.test_more.StrictlyNTests) ... ok
test_too_long_custom (tests.test_more.StrictlyNTests) ... ok
test_too_long_default (tests.test_more.StrictlyNTests) ... ok
test_too_short_custom (tests.test_more.StrictlyNTests) ... ok
test_too_short_default (tests.test_more.StrictlyNTests) ... ok
test_hashable (tests.test_more.StripFunctionTests) ... ok
test_math (tests.test_more.StripFunctionTests) ... ok
test_not_hashable (tests.test_more.StripFunctionTests) ... ok
test_basic (tests.test_more.SubstringsIndexesTests) ... ok
test_empty (tests.test_more.SubstringsIndexesTests) ... ok
test_order (tests.test_more.SubstringsIndexesTests) ... ok
test_reverse (tests.test_more.SubstringsIndexesTests) ... ok
test_strings (tests.test_more.SubstringsIndexesTests) ... ok
test_basic (tests.test_more.SubstringsTests) ... ok
test_empty (tests.test_more.SubstringsTests) ... ok
test_order (tests.test_more.SubstringsTests) ... ok
test_strings (tests.test_more.SubstringsTests) ... ok
test_base_type (tests.test_more.TestAlwaysIterable) ... ok
test_generator (tests.test_more.TestAlwaysIterable) ... ok
test_iterables (tests.test_more.TestAlwaysIterable) ... ok
test_none (tests.test_more.TestAlwaysIterable) ... ok
test_single (tests.test_more.TestAlwaysIterable) ... ok
test_strings (tests.test_more.TestAlwaysIterable) ... ok
test_collapse (tests.test_more.TestCollapse) ... ok
test_collapse_flatten (tests.test_more.TestCollapse) ... ok
test_collapse_to_bytes (tests.test_more.TestCollapse) ... ok
test_collapse_to_level (tests.test_more.TestCollapse) ... ok
test_collapse_to_list (tests.test_more.TestCollapse) ... ok
test_collapse_to_string (tests.test_more.TestCollapse) ... ok
test_basic (tests.test_more.TimeLimitedTests) ... ok
test_complete (tests.test_more.TimeLimitedTests) ... ok
test_invalid_limit (tests.test_more.TimeLimitedTests) ... ok
test_zero_limit (tests.test_more.TimeLimitedTests) ... ok
test_basic (tests.test_more.UniqueInWindowTests) ... ok
test_invalid_n (tests.test_more.UniqueInWindowTests) ... ok
test_key (tests.test_more.UniqueInWindowTests) ... ok
test_all_unique (tests.test_more.UniqueToEachTests)
When all the input iterables are unique the output should match ... ok
test_duplicates (tests.test_more.UniqueToEachTests)
When there are duplicates in any of the input iterables that aren't ... ok
test_mixed (tests.test_more.UniqueToEachTests)
When the input iterables contain different types the function should ... ok
test_empty_iterable (tests.test_more.UnzipTests) ... ok
test_improperly_zipped (tests.test_more.UnzipTests) ... ok
test_increasingly_zipped (tests.test_more.UnzipTests) ... ok
test_length_one_iterable (tests.test_more.UnzipTests) ... ok
test_normal_case (tests.test_more.UnzipTests) ... ok
test_complex (tests.test_more.ValueChainTests) ... ok
test_empty (tests.test_more.ValueChainTests) ... ok
test_empty_lists (tests.test_more.ValueChainTests) ... ok
test_more (tests.test_more.ValueChainTests) ... ok
test_simple (tests.test_more.ValueChainTests) ... ok
test_basic (tests.test_more.WindowedCompleteTests) ... ok
test_every_partition (tests.test_more.WindowedCompleteTests) ... ok
test_wrong_length (tests.test_more.WindowedCompleteTests) ... ok
test_zero_length (tests.test_more.WindowedCompleteTests) ... ok
test_basic (tests.test_more.WindowedTests) ... ok
test_fillvalue (tests.test_more.WindowedTests) ... ok
test_fillvalue_step (tests.test_more.WindowedTests) ... ok
test_invalid_step (tests.test_more.WindowedTests) ... ok
test_negative (tests.test_more.WindowedTests) ... ok
test_step (tests.test_more.WindowedTests) ... ok
test_with_iter (tests.test_more.WithIterTests) ... ok
test_basic (tests.test_more.ZipBroadcastTests) ... ok
test_empty (tests.test_more.ZipBroadcastTests) ... ok
test_scalar_types (tests.test_more.ZipBroadcastTests) ... ok
test_strict (tests.test_more.ZipBroadcastTests) ... ok
test_deprecation (tests.test_more.ZipEqualTest) ... skipped 'zip_equal deprecated for 3.10+'
test_equal (tests.test_more.ZipEqualTest) ... ok
test_unequal_lists (tests.test_more.ZipEqualTest) ... ok
test_longest (tests.test_more.ZipOffsetTest) ... ok
test_mismatch (tests.test_more.ZipOffsetTest) ... ok
test_shortest (tests.test_more.ZipOffsetTest) ... ok
SequenceView (more_itertools.more)
Doctest: more_itertools.more.SequenceView ... ok
adjacent (more_itertools.more)
Doctest: more_itertools.more.adjacent ... ok
all_unique (more_itertools.more)
Doctest: more_itertools.more.all_unique ... ok
always_iterable (more_itertools.more)
Doctest: more_itertools.more.always_iterable ... ok
always_reversible (more_itertools.more)
Doctest: more_itertools.more.always_reversible ... ok
bucket (more_itertools.more)
Doctest: more_itertools.more.bucket ... ok
callback_iter (more_itertools.more)
Doctest: more_itertools.more.callback_iter ... ok
chunked (more_itertools.more)
Doctest: more_itertools.more.chunked ... ok
chunked_even (more_itertools.more)
Doctest: more_itertools.more.chunked_even ... ok
circular_shifts (more_itertools.more)
Doctest: more_itertools.more.circular_shifts ... ok
collapse (more_itertools.more)
Doctest: more_itertools.more.collapse ... ok
combination_index (more_itertools.more)
Doctest: more_itertools.more.combination_index ... ok
consecutive_groups (more_itertools.more)
Doctest: more_itertools.more.consecutive_groups ... ok
constrained_batches (more_itertools.more)
Doctest: more_itertools.more.constrained_batches ... ok
consumer (more_itertools.more)
Doctest: more_itertools.more.consumer ... ok
count_cycle (more_itertools.more)
Doctest: more_itertools.more.count_cycle ... ok
countable (more_itertools.more)
Doctest: more_itertools.more.countable ... ok
difference (more_itertools.more)
Doctest: more_itertools.more.difference ... ok
distinct_combinations (more_itertools.more)
Doctest: more_itertools.more.distinct_combinations ... ok
distinct_permutations (more_itertools.more)
Doctest: more_itertools.more.distinct_permutations ... ok
distribute (more_itertools.more)
Doctest: more_itertools.more.distribute ... ok
divide (more_itertools.more)
Doctest: more_itertools.more.divide ... ok
duplicates_everseen (more_itertools.more)
Doctest: more_itertools.more.duplicates_everseen ... ok
duplicates_justseen (more_itertools.more)
Doctest: more_itertools.more.duplicates_justseen ... ok
exactly_n (more_itertools.more)
Doctest: more_itertools.more.exactly_n ... ok
filter_except (more_itertools.more)
Doctest: more_itertools.more.filter_except ... ok
first (more_itertools.more)
Doctest: more_itertools.more.first ... ok
groupby_transform (more_itertools.more)
Doctest: more_itertools.more.groupby_transform ... ok
ichunked (more_itertools.more)
Doctest: more_itertools.more.ichunked ... ok
iequals (more_itertools.more)
Doctest: more_itertools.more.iequals ... ok
ilen (more_itertools.more)
Doctest: more_itertools.more.ilen ... ok
interleave (more_itertools.more)
Doctest: more_itertools.more.interleave ... ok
interleave_evenly (more_itertools.more)
Doctest: more_itertools.more.interleave_evenly ... ok
interleave_longest (more_itertools.more)
Doctest: more_itertools.more.interleave_longest ... ok
intersperse (more_itertools.more)
Doctest: more_itertools.more.intersperse ... ok
is_sorted (more_itertools.more)
Doctest: more_itertools.more.is_sorted ... ok
islice_extended (more_itertools.more)
Doctest: more_itertools.more.islice_extended ... ok
iterate (more_itertools.more)
Doctest: more_itertools.more.iterate ... ok
last (more_itertools.more)
Doctest: more_itertools.more.last ... ok
locate (more_itertools.more)
Doctest: more_itertools.more.locate ... ok
longest_common_prefix (more_itertools.more)
Doctest: more_itertools.more.longest_common_prefix ... ok
lstrip (more_itertools.more)
Doctest: more_itertools.more.lstrip ... ok
make_decorator (more_itertools.more)
Doctest: more_itertools.more.make_decorator ... ok
map_except (more_itertools.more)
Doctest: more_itertools.more.map_except ... ok
map_if (more_itertools.more)
Doctest: more_itertools.more.map_if ... ok
map_reduce (more_itertools.more)
Doctest: more_itertools.more.map_reduce ... ok
mark_ends (more_itertools.more)
Doctest: more_itertools.more.mark_ends ... ok
minmax (more_itertools.more)
Doctest: more_itertools.more.minmax ... ok
nth_or_last (more_itertools.more)
Doctest: more_itertools.more.nth_or_last ... ok
nth_permutation (more_itertools.more)
Doctest: more_itertools.more.nth_permutation ... ok
nth_product (more_itertools.more)
Doctest: more_itertools.more.nth_product ... ok
numeric_range (more_itertools.more)
Doctest: more_itertools.more.numeric_range ... ok
one (more_itertools.more)
Doctest: more_itertools.more.one ... ok
only (more_itertools.more)
Doctest: more_itertools.more.only ... ok
padded (more_itertools.more)
Doctest: more_itertools.more.padded ... ok
partitions (more_itertools.more)
Doctest: more_itertools.more.partitions ... ok
peekable (more_itertools.more)
Doctest: more_itertools.more.peekable ... ok
prepend (more_itertools.more.peekable)
Doctest: more_itertools.more.peekable.prepend ... ok
permutation_index (more_itertools.more)
Doctest: more_itertools.more.permutation_index ... ok
product_index (more_itertools.more)
Doctest: more_itertools.more.product_index ... ok
repeat_each (more_itertools.more)
Doctest: more_itertools.more.repeat_each ... ok
repeat_last (more_itertools.more)
Doctest: more_itertools.more.repeat_last ... ok
replace (more_itertools.more)
Doctest: more_itertools.more.replace ... ok
rlocate (more_itertools.more)
Doctest: more_itertools.more.rlocate ... ok
rstrip (more_itertools.more)
Doctest: more_itertools.more.rstrip ... ok
run_length (more_itertools.more)
Doctest: more_itertools.more.run_length ... ok
sample (more_itertools.more)
Doctest: more_itertools.more.sample ... ok
seekable (more_itertools.more)
Doctest: more_itertools.more.seekable ... ok
set_partitions (more_itertools.more)
Doctest: more_itertools.more.set_partitions ... ok
side_effect (more_itertools.more)
Doctest: more_itertools.more.side_effect ... ok
sliced (more_itertools.more)
Doctest: more_itertools.more.sliced ... ok
sort_together (more_itertools.more)
Doctest: more_itertools.more.sort_together ... ok
split_after (more_itertools.more)
Doctest: more_itertools.more.split_after ... ok
split_at (more_itertools.more)
Doctest: more_itertools.more.split_at ... ok
split_before (more_itertools.more)
Doctest: more_itertools.more.split_before ... ok
split_into (more_itertools.more)
Doctest: more_itertools.more.split_into ... ok
split_when (more_itertools.more)
Doctest: more_itertools.more.split_when ... ok
spy (more_itertools.more)
Doctest: more_itertools.more.spy ... ok
stagger (more_itertools.more)
Doctest: more_itertools.more.stagger ... ok
strictly_n (more_itertools.more)
Doctest: more_itertools.more.strictly_n ... ok
strip (more_itertools.more)
Doctest: more_itertools.more.strip ... ok
substrings (more_itertools.more)
Doctest: more_itertools.more.substrings ... ok
substrings_indexes (more_itertools.more)
Doctest: more_itertools.more.substrings_indexes ... ok
time_limited (more_itertools.more)
Doctest: more_itertools.more.time_limited ... ok
unique_in_window (more_itertools.more)
Doctest: more_itertools.more.unique_in_window ... ok
unique_to_each (more_itertools.more)
Doctest: more_itertools.more.unique_to_each ... ok
unzip (more_itertools.more)
Doctest: more_itertools.more.unzip ... ok
value_chain (more_itertools.more)
Doctest: more_itertools.more.value_chain ... ok
windowed (more_itertools.more)
Doctest: more_itertools.more.windowed ... ok
windowed_complete (more_itertools.more)
Doctest: more_itertools.more.windowed_complete ... ok
zip_broadcast (more_itertools.more)
Doctest: more_itertools.more.zip_broadcast ... ok
zip_equal (more_itertools.more)
Doctest: more_itertools.more.zip_equal ... ok
zip_offset (more_itertools.more)
Doctest: more_itertools.more.zip_offset ... ok
test_empty (tests.test_recipes.AllEqualTests)
Return True if the iterable is empty ... ok
test_false (tests.test_recipes.AllEqualTests)
Not everything is equal ... ok
test_one (tests.test_recipes.AllEqualTests)
Return True if the iterable is singular ... ok
test_tricky (tests.test_recipes.AllEqualTests)
Not everything is identical, but everything is equal ... ok
test_true (tests.test_recipes.AllEqualTests)
Everything is equal ... ok
test_basic (tests.test_recipes.BatchedTests) ... ok
test_empty (tests.test_recipes.BeforeAndAfterTests) ... ok
test_nested_remainder (tests.test_recipes.BeforeAndAfterTests) ... ok
test_never_false (tests.test_recipes.BeforeAndAfterTests) ... ok
test_never_true (tests.test_recipes.BeforeAndAfterTests) ... ok
test_some_true (tests.test_recipes.BeforeAndAfterTests) ... ok
test_negative_consume (tests.test_recipes.ConsumeTests)
Check that negative consumsion throws an error ... ok
test_null_consume (tests.test_recipes.ConsumeTests)
Check the null case ... ok
test_sanity (tests.test_recipes.ConsumeTests)
Test basic functionality ... ok
test_total_consume (tests.test_recipes.ConsumeTests)
Check that iterator is totally consumed by default ... ok
test_derivative (tests.test_recipes.Convolvetests) ... ok
test_infinite_signal (tests.test_recipes.Convolvetests) ... ok
test_moving_average (tests.test_recipes.Convolvetests) ... ok
test_happy_path (tests.test_recipes.DotproductTests)
simple dotproduct example ... ok
test_default (tests.test_recipes.FirstTrueTests)
Test with a default keyword ... ok
test_nothing_true (tests.test_recipes.FirstTrueTests)
Test default return value. ... ok
test_pred (tests.test_recipes.FirstTrueTests)
Test with a custom predicate ... ok
test_something_true (tests.test_recipes.FirstTrueTests)
Test with no keywords ... ok
test_basic_usage (tests.test_recipes.FlattenTests)
ensure list of lists is flattened one level ... ok
test_single_level (tests.test_recipes.FlattenTests)
ensure list of lists is flattened only one level ... ok
test_basic (tests.test_recipes.GrouperTests) ... ok
test_fill (tests.test_recipes.GrouperTests) ... ok
test_ignore (tests.test_recipes.GrouperTests) ... ok
test_invalid_incomplete (tests.test_recipes.GrouperTests) ... ok
test_strict (tests.test_recipes.GrouperTests) ... ok
test_strict_fails (tests.test_recipes.GrouperTests) ... ok
test_exact_exception (tests.test_recipes.IterExceptTests)
ensure the exact specified exception is caught ... ok
test_first (tests.test_recipes.IterExceptTests)
ensure first is run before the function ... ok
test_generic_exception (tests.test_recipes.IterExceptTests)
ensure the generic exception can be caught ... ok
test_multiple (tests.test_recipes.IterExceptTests)
ensure can catch multiple exceptions ... ok
test_uncaught_exception_is_raised (tests.test_recipes.IterExceptTests)
ensure a non-specified exception is raised ... ok
test_happy_path (tests.test_recipes.NcyclesTests)
cycle a sequence three times ... ok
test_null_case (tests.test_recipes.NcyclesTests)
asking for 0 cycles should return an empty iterator ... ok
test_pathalogical_case (tests.test_recipes.NcyclesTests)
asking for negative cycles should return an empty iterator ... ok
test_basic (tests.test_recipes.NthCombinationTests) ... ok
test_invalid_index (tests.test_recipes.NthCombinationTests) ... ok
test_invalid_r (tests.test_recipes.NthCombinationTests) ... ok
test_long (tests.test_recipes.NthCombinationTests) ... ok
test_invalid_index (tests.test_recipes.NthPermutationTests) ... ok
test_invalid_r (tests.test_recipes.NthPermutationTests) ... ok
test_long (tests.test_recipes.NthPermutationTests) ... ok
test_negative_index (tests.test_recipes.NthPermutationTests) ... ok
test_null (tests.test_recipes.NthPermutationTests) ... ok
test_r_equal_to_n (tests.test_recipes.NthPermutationTests) ... ok
test_r_less_than_n (tests.test_recipes.NthPermutationTests) ... ok
test_basic (tests.test_recipes.NthTests)
Make sure the nth item is returned ... ok
test_default (tests.test_recipes.NthTests)
Ensure a default value is returned when nth item not found ... ok
test_negative_item_raises (tests.test_recipes.NthTests)
Ensure asking for a negative item raises an exception ... ok
test_basic (tests.test_recipes.PadnoneTests) ... ok
test_base_case (tests.test_recipes.PairwiseTests)
ensure an iterable will return pairwise ... ok
test_short_case (tests.test_recipes.PairwiseTests)
ensure an empty iterator if there's not enough values to pair ... ok
test_arbitrary (tests.test_recipes.PartitionTests) ... ok
test_bool (tests.test_recipes.PartitionTests) ... ok
test_pred_is_none (tests.test_recipes.PartitionTests) ... ok
test_basic (tests.test_recipes.PolynomialFromRootsTests) ... ok
test_combinatorics (tests.test_recipes.PowersetTests)
Ensure a proper enumeration ... ok
test_basic (tests.test_recipes.PrependTests) ... ok
test_multiple (tests.test_recipes.PrependTests) ... ok
test_custom_predicate (tests.test_recipes.QuantifyTests)
Ensure non-default predicates return as expected ... ok
test_happy_path (tests.test_recipes.QuantifyTests)
Make sure True count is returned ... ok
test_no_replacement (tests.test_recipes.RandomCombinationTests)
ensure that elements are sampled without replacement ... ok
test_pseudorandomness (tests.test_recipes.RandomCombinationTests)
ensure different subsets of the iterable get returned over many ... ok
test_pseudorandomness (tests.test_recipes.RandomCombinationWithReplacementTests)
ensure different subsets of the iterable get returned over many ... ok
test_replacement (tests.test_recipes.RandomCombinationWithReplacementTests)
ensure that elements are sampled with replacement ... ok
test_full_permutation (tests.test_recipes.RandomPermutationTests)
ensure every item from the iterable is returned in a new ordering ... ok
test_partial_permutation (tests.test_recipes.RandomPermutationTests)
ensure all returned items are from the iterable, that the returned ... ok
test_list_with_repeat (tests.test_recipes.RandomProductTests)
ensure multiple items are chosen, and that they appear to be chosen ... ok
test_simple_lists (tests.test_recipes.RandomProductTests)
Ensure that one item is chosen from each list in each pair. ... ok
test_added_arguments (tests.test_recipes.RepeatfuncTests)
ensure arguments are applied to the function ... ok
test_finite_repeat (tests.test_recipes.RepeatfuncTests)
ensure limited repeat when times is provided ... ok
test_null_times (tests.test_recipes.RepeatfuncTests)
repeat 0 should return an empty iterator ... ok
test_simple_repeat (tests.test_recipes.RepeatfuncTests)
test simple repeated functions ... ok
test_even_groups (tests.test_recipes.RoundrobinTests)
Ensure ordered output from evenly populated iterables ... ok
test_uneven_groups (tests.test_recipes.RoundrobinTests)
Ensure ordered output from unevenly populated iterables ... ok
test_basic (tests.test_recipes.SieveTests) ... ok
test_prime_counts (tests.test_recipes.SieveTests) ... ok
test_small_numbers (tests.test_recipes.SieveTests) ... ok
test_basic (tests.test_recipes.SlidingWindowTests) ... ok
test_basic (tests.test_recipes.SubslicesTests) ... ok
test_count (tests.test_recipes.TabulateTests)
Ensure tabulate accepts specific count ... ok
test_simple_tabulate (tests.test_recipes.TabulateTests)
Test the happy path ... ok
test_iterator_equal (tests.test_recipes.TailTests)
Length of iterator is equal to the requested tail ... ok
test_iterator_greater (tests.test_recipes.TailTests)
Length of iterator is greater than requested tail ... ok
test_iterator_less (tests.test_recipes.TailTests)
Length of iterator is less than requested tail ... ok
test_sized_equal (tests.test_recipes.TailTests)
Length of sized iterable is less than requested tail ... ok
test_sized_greater (tests.test_recipes.TailTests)
Length of sized iterable is greater than requested tail ... ok
test_sized_less (tests.test_recipes.TailTests)
Length of sized iterable is less than requested tail ... ok
test_negative_take (tests.test_recipes.TakeTests)
Make sure taking negative items results in a ValueError ... ok
test_null_take (tests.test_recipes.TakeTests)
Check the null case ... ok
test_simple_take (tests.test_recipes.TakeTests)
Test basic usage ... ok
test_take_too_much (tests.test_recipes.TakeTests)
Taking more than an iterator has remaining should return what the ... ok
test_basic (tests.test_recipes.TriplewiseTests) ... ok
test_custom_key (tests.test_recipes.UniqueEverseenTests)
ensure the custom key comparison works ... ok
test_everseen (tests.test_recipes.UniqueEverseenTests)
ensure duplicate elements are ignored ... ok
test_unhashable (tests.test_recipes.UniqueEverseenTests)
ensure things work for unhashable items ... ok
test_unhashable_key (tests.test_recipes.UniqueEverseenTests)
ensure things work for unhashable items with a custom key ... ok
test_custom_key (tests.test_recipes.UniqueJustseenTests)
ensure the custom key comparison works ... ok
test_justseen (tests.test_recipes.UniqueJustseenTests)
ensure only last item is remembered ... ok
_pairwise (more_itertools.recipes)
Doctest: more_itertools.recipes._pairwise ... ok
all_equal (more_itertools.recipes)
Doctest: more_itertools.recipes.all_equal ... ok
batched (more_itertools.recipes)
Doctest: more_itertools.recipes.batched ... ok
before_and_after (more_itertools.recipes)
Doctest: more_itertools.recipes.before_and_after ... ok
consume (more_itertools.recipes)
Doctest: more_itertools.recipes.consume ... ok
convolve (more_itertools.recipes)
Doctest: more_itertools.recipes.convolve ... ok
dotproduct (more_itertools.recipes)
Doctest: more_itertools.recipes.dotproduct ... ok
first_true (more_itertools.recipes)
Doctest: more_itertools.recipes.first_true ... ok
flatten (more_itertools.recipes)
Doctest: more_itertools.recipes.flatten ... ok
grouper (more_itertools.recipes)
Doctest: more_itertools.recipes.grouper ... ok
iter_except (more_itertools.recipes)
Doctest: more_itertools.recipes.iter_except ... ok
ncycles (more_itertools.recipes)
Doctest: more_itertools.recipes.ncycles ... ok
nth (more_itertools.recipes)
Doctest: more_itertools.recipes.nth ... ok
nth_combination (more_itertools.recipes)
Doctest: more_itertools.recipes.nth_combination ... ok
pad_none (more_itertools.recipes)
Doctest: more_itertools.recipes.pad_none ... ok
partition (more_itertools.recipes)
Doctest: more_itertools.recipes.partition ... ok
polynomial_from_roots (more_itertools.recipes)
Doctest: more_itertools.recipes.polynomial_from_roots ... ok
powerset (more_itertools.recipes)
Doctest: more_itertools.recipes.powerset ... ok
prepend (more_itertools.recipes)
Doctest: more_itertools.recipes.prepend ... ok
quantify (more_itertools.recipes)
Doctest: more_itertools.recipes.quantify ... ok
random_combination (more_itertools.recipes)
Doctest: more_itertools.recipes.random_combination ... ok
random_combination_with_replacement (more_itertools.recipes)
Doctest: more_itertools.recipes.random_combination_with_replacement ... ok
random_permutation (more_itertools.recipes)
Doctest: more_itertools.recipes.random_permutation ... ok
random_product (more_itertools.recipes)
Doctest: more_itertools.recipes.random_product ... ok
repeatfunc (more_itertools.recipes)
Doctest: more_itertools.recipes.repeatfunc ... ok
roundrobin (more_itertools.recipes)
Doctest: more_itertools.recipes.roundrobin ... ok
sieve (more_itertools.recipes)
Doctest: more_itertools.recipes.sieve ... ok
sliding_window (more_itertools.recipes)
Doctest: more_itertools.recipes.sliding_window ... ok
subslices (more_itertools.recipes)
Doctest: more_itertools.recipes.subslices ... ok
tabulate (more_itertools.recipes)
Doctest: more_itertools.recipes.tabulate ... ok
tail (more_itertools.recipes)
Doctest: more_itertools.recipes.tail ... ok
take (more_itertools.recipes)
Doctest: more_itertools.recipes.take ... ok
triplewise (more_itertools.recipes)
Doctest: more_itertools.recipes.triplewise ... ok
unique_everseen (more_itertools.recipes)
Doctest: more_itertools.recipes.unique_everseen ... ok
unique_justseen (more_itertools.recipes)
Doctest: more_itertools.recipes.unique_justseen ... ok

----------------------------------------------------------------------
Ran 688 tests

OK (skipped=1)
  py$(PYV): OK
  congratulations :)
