--- maison-1.4.3/tests/unit/test_config.py.orig
+++ maison-1.4.3/tests/unit/test_config.py
@@ -254,6 +254,7 @@
         with pytest.raises(NoSchemaError):
             config.validate()
 
+    @pytest.mark.skip(reason="always fails: https://github.com/dbatten5/maison/issues/288")
     def test_one_schema_with_valid_config(
         self,
         create_pyproject_toml: Callable[..., Path],
@@ -280,6 +281,7 @@
 
         assert config.get_option("bar") == "baz"
 
+    @pytest.mark.skip(reason="always fails: https://github.com/dbatten5/maison/issues/288")
     def test_one_schema_injected_at_validation(
         self,
         create_pyproject_toml: Callable[..., Path],
@@ -305,6 +307,7 @@
 
         assert config.get_option("bar") == "baz"
 
+    @pytest.mark.skip(reason="always fails: https://github.com/dbatten5/maison/issues/288")
     def test_use_schema_values(
         self,
         create_pyproject_toml: Callable[..., Path],
@@ -334,6 +337,7 @@
         assert config.get_option("bar") == "1"
         assert config.get_option("other") == "hello"
 
+    @pytest.mark.skip(reason="always fails: https://github.com/dbatten5/maison/issues/288")
     def test_not_use_schema_values(
         self,
         create_pyproject_toml: Callable[..., Path],
@@ -362,6 +366,7 @@
         assert config.get_option("bar") == 1
         assert config.get_option("other") is None
 
+    @pytest.mark.skip(reason="always fails: https://github.com/dbatten5/maison/issues/288")
     def test_schema_override(
         self,
         create_pyproject_toml: Callable[..., Path],
@@ -393,6 +398,7 @@
 
         assert config.get_option("bar") == "schema_2"
 
+    @pytest.mark.skip(reason="always fails: https://github.com/dbatten5/maison/issues/288")
     def test_invalid_configuration(
         self,
         create_pyproject_toml: Callable[..., Path],
