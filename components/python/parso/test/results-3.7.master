============================= test session starts ==============================
platform sunos5 -- Python $(PYTHON_VERSION).X -- $(PYTHON)
cachedir: .pytest_cache
hypothesis profile 'default' -> database=DirectoryBasedExampleDatabase('$(@D)/.hypothesis/examples')
rootdir: $(@D), configfile: pytest.ini, testpaths: parso, test
collecting ... collected 1319 items

parso/__init__.py::parso PASSED
parso/python/tree.py::parso.python.tree PASSED
parso/tree.py::parso.tree.NodeOrLeaf.dump PASSED
test/test_cache.py::test_cache_last_used_update[False-False] PASSED
test/test_cache.py::test_cache_last_used_update[False-True] PASSED
test/test_cache.py::test_cache_last_used_update[True-False] PASSED
test/test_cache.py::test_cache_last_used_update[True-True] PASSED
test/test_cache.py::test_cache_limit PASSED
test/test_cache.py::test_inactive_cache PASSED
test/test_cache.py::test_modulepickling_change_cache_dir PASSED
test/test_cache.py::test_modulepickling_simulate_deleted_cache PASSED
test/test_cache.py::test_permission_error PASSED
test/test_diff_parser.py::test_add_error_indentation PASSED
test/test_diff_parser.py::test_all_sorts_of_indentation PASSED
test/test_diff_parser.py::test_another_random_indent PASSED
test/test_diff_parser.py::test_async_copy PASSED
test/test_diff_parser.py::test_async_func2 PASSED
test/test_diff_parser.py::test_backslash PASSED
test/test_diff_parser.py::test_backslash_before_def PASSED
test/test_diff_parser.py::test_backslash_insertion PASSED
test/test_diff_parser.py::test_backslash_issue PASSED
test/test_diff_parser.py::test_backslash_with_imports PASSED
test/test_diff_parser.py::test_byte_order_mark PASSED
test/test_diff_parser.py::test_byte_order_mark2 PASSED
test/test_diff_parser.py::test_byte_order_mark3 PASSED
test/test_diff_parser.py::test_change_and_undo PASSED
test/test_diff_parser.py::test_class_with_paren_breaker PASSED
test/test_diff_parser.py::test_classes_with_error_leaves PASSED
test/test_diff_parser.py::test_dedent_end_positions PASSED
test/test_diff_parser.py::test_differing_docstrings PASSED
test/test_diff_parser.py::test_docstring_removal PASSED
test/test_diff_parser.py::test_dont_copy_dedents_in_beginning PASSED
test/test_diff_parser.py::test_dont_copy_error_leaves PASSED
test/test_diff_parser.py::test_end_newline_with_decorator PASSED
test/test_diff_parser.py::test_endless_while_loop PASSED
test/test_diff_parser.py::test_endmarker_newline PASSED
test/test_diff_parser.py::test_error_dedent_in_between PASSED
test/test_diff_parser.py::test_error_dedent_in_function PASSED
test/test_diff_parser.py::test_error_dedent_issues PASSED
test/test_diff_parser.py::test_for_on_one_line PASSED
test/test_diff_parser.py::test_fstring_with_error_leaf PASSED
test/test_diff_parser.py::test_full_copy PASSED
test/test_diff_parser.py::test_func_with_for_and_comment PASSED
test/test_diff_parser.py::test_function_deletion PASSED
test/test_diff_parser.py::test_if_removal_and_reappearence PASSED
test/test_diff_parser.py::test_if_simple PASSED
test/test_diff_parser.py::test_import_opening_bracket PASSED
test/test_diff_parser.py::test_in_class_movements PASSED
test/test_diff_parser.py::test_in_parentheses_newlines PASSED
test/test_diff_parser.py::test_indentation_issue PASSED
test/test_diff_parser.py::test_indentation_issues PASSED
test/test_diff_parser.py::test_invalid_function PASSED
test/test_diff_parser.py::test_invalid_to_valid_nodes PASSED
test/test_diff_parser.py::test_issues_with_error_leaves PASSED
test/test_diff_parser.py::test_many_nested_ifs PASSED
test/test_diff_parser.py::test_nested_class PASSED
test/test_diff_parser.py::test_nested_if_and_scopes PASSED
test/test_diff_parser.py::test_newlines_at_end PASSED
test/test_diff_parser.py::test_node_insertion PASSED
test/test_diff_parser.py::test_one_call_in_function_change PASSED
test/test_diff_parser.py::test_one_line_function_error_recovery PASSED
test/test_diff_parser.py::test_one_line_property_error_recovery PASSED
test/test_diff_parser.py::test_one_statement_func PASSED
test/test_diff_parser.py::test_open_bracket_case1 PASSED
test/test_diff_parser.py::test_open_bracket_case2 PASSED
test/test_diff_parser.py::test_open_parentheses PASSED
test/test_diff_parser.py::test_open_parentheses_at_end PASSED
test/test_diff_parser.py::test_opening_bracket_at_end PASSED
test/test_diff_parser.py::test_paren_before_docstring PASSED
test/test_diff_parser.py::test_paren_in_strange_position PASSED
test/test_diff_parser.py::test_paren_with_indentation PASSED
test/test_diff_parser.py::test_parent_on_decorator PASSED
test/test_diff_parser.py::test_parentheses_before_method PASSED
test/test_diff_parser.py::test_positions PASSED
test/test_diff_parser.py::test_random_character_insertion PASSED
test/test_diff_parser.py::test_random_text_insertion PASSED
test/test_diff_parser.py::test_random_unicode_characters PASSED
test/test_diff_parser.py::test_repeating_invalid_indent PASSED
test/test_diff_parser.py::test_simple PASSED
test/test_diff_parser.py::test_some_other_indentation_issues PASSED
test/test_diff_parser.py::test_some_weird_removals PASSED
test/test_diff_parser.py::test_special_no_newline_ending PASSED
test/test_diff_parser.py::test_totally_wrong_whitespace PASSED
test/test_diff_parser.py::test_unfinished_nodes PASSED
test/test_diff_parser.py::test_weird_ending PASSED
test/test_diff_parser.py::test_whitespace_at_end PASSED
test/test_diff_parser.py::test_with_and_funcdef_in_call[] PASSED
test/test_diff_parser.py::test_with_and_funcdef_in_call[async ] PASSED
test/test_diff_parser.py::test_with_formfeed PASSED
test/test_diff_parser.py::test_word_before_def PASSED
test/test_diff_parser.py::test_wrong_backslash PASSED
test/test_diff_parser.py::test_wrong_indent_in_def PASSED
test/test_diff_parser.py::test_wrong_whitespace PASSED
test/test_diff_parser.py::test_yet_another_backslash PASSED
test/test_dump_tree.py::test_dump_parser_tree[0-Module([\nLambda([\nKeyword('lambda', (1, 0)),\nParam([\nName('x', (1, 7), prefix=' '),\nOperator(',', (1, 8)),\n]),\nParam([\nName('y', (1, 10), prefix=' '),\n]),\nOperator(':', (1, 11)),\nPythonNode('arith_expr', [\nName('x', (1, 13), prefix=' '),\nOperator('+', (1, 15), prefix=' '),\nName('y', (1, 17), prefix=' '),\n]),\n]),\nEndMarker('', (1, 18)),\n])] PASSED
test/test_dump_tree.py::test_dump_parser_tree[4-Module([\n    Lambda([\n        Keyword('lambda', (1, 0)),\n        Param([\n            Name('x', (1, 7), prefix=' '),\n            Operator(',', (1, 8)),\n        ]),\n        Param([\n            Name('y', (1, 10), prefix=' '),\n        ]),\n        Operator(':', (1, 11)),\n        PythonNode('arith_expr', [\n            Name('x', (1, 13), prefix=' '),\n            Operator('+', (1, 15), prefix=' '),\n            Name('y', (1, 17), prefix=' '),\n        ]),\n    ]),\n    EndMarker('', (1, 18)),\n])] PASSED
test/test_dump_tree.py::test_dump_parser_tree[None-Module([Lambda([Keyword('lambda', (1, 0)), Param([Name('x', (1, 7), prefix=' '), Operator(',', (1, 8)), ]), Param([Name('y', (1, 10), prefix=' '), ]), Operator(':', (1, 11)), PythonNode('arith_expr', [Name('x', (1, 13), prefix=' '), Operator('+', (1, 15), prefix=' '), Name('y', (1, 17), prefix=' '), ]), ]), EndMarker('', (1, 18)), ])] PASSED
test/test_dump_tree.py::test_dump_parser_tree[\t-Module([\n\tLambda([\n\t\tKeyword('lambda', (1, 0)),\n\t\tParam([\n\t\t\tName('x', (1, 7), prefix=' '),\n\t\t\tOperator(',', (1, 8)),\n\t\t]),\n\t\tParam([\n\t\t\tName('y', (1, 10), prefix=' '),\n\t\t]),\n\t\tOperator(':', (1, 11)),\n\t\tPythonNode('arith_expr', [\n\t\t\tName('x', (1, 13), prefix=' '),\n\t\t\tOperator('+', (1, 15), prefix=' '),\n\t\t\tName('y', (1, 17), prefix=' '),\n\t\t]),\n\t]),\n\tEndMarker('', (1, 18)),\n])] PASSED
test/test_dump_tree.py::test_dump_parser_tree_invalid_args PASSED
test/test_dump_tree.py::test_dump_parser_tree_not_top_level_module[node0-Function([\n    Keyword('def', (1, 0)),\n    Name('foo', (1, 4), prefix=' '),\n    PythonNode('parameters', [\n        Operator('(', (1, 7)),\n        Param([\n            Name('x', (1, 8)),\n            Operator(',', (1, 9)),\n        ]),\n        Param([\n            Name('y', (1, 11), prefix=' '),\n        ]),\n        Operator(')', (1, 12)),\n    ]),\n    Operator(':', (1, 13)),\n    ReturnStmt([\n        Keyword('return', (1, 15), prefix=' '),\n        PythonNode('arith_expr', [\n            Name('x', (1, 22), prefix=' '),\n            Operator('+', (1, 24), prefix=' '),\n            Name('y', (1, 26), prefix=' '),\n        ]),\n    ]),\n])-def foo(x, y): return x + y] PASSED
test/test_dump_tree.py::test_dump_parser_tree_not_top_level_module[node1-Keyword('def', (1, 0))-def] PASSED
test/test_dump_tree.py::test_dump_parser_tree_not_top_level_module[node2-ErrorLeaf('error_type', 'error_code', (1, 1), prefix=' ')- error_code] PASSED
test/test_dump_tree.py::test_dump_parser_tree_not_top_level_module[node3-TypedLeaf('type', 'value', (1, 1))-value] PASSED
test/test_dump_tree.py::test_eval_dump_recovers_parent PASSED
test/test_error_recovery.py::test_dedent_issues1 PASSED
test/test_error_recovery.py::test_dedent_issues2 PASSED
test/test_error_recovery.py::test_dedent_issues3 PASSED
test/test_error_recovery.py::test_if_else PASSED
test/test_error_recovery.py::test_if_stmt PASSED
test/test_error_recovery.py::test_invalid_token PASSED
test/test_error_recovery.py::test_invalid_token_in_fstr PASSED
test/test_error_recovery.py::test_one_line_function[3.10] PASSED
test/test_error_recovery.py::test_one_line_function[3.6] PASSED
test/test_error_recovery.py::test_one_line_function[3.7] PASSED
test/test_error_recovery.py::test_one_line_function[3.8] PASSED
test/test_error_recovery.py::test_one_line_function[3.9] PASSED
test/test_error_recovery.py::test_with_stmt PASSED
test/test_file_python_errors.py::test_on_itself[3.10] PASSED
test/test_file_python_errors.py::test_on_itself[3.6] PASSED
test/test_file_python_errors.py::test_on_itself[3.7] PASSED
test/test_file_python_errors.py::test_on_itself[3.8] PASSED
test/test_file_python_errors.py::test_on_itself[3.9] PASSED
test/test_fstring.py::test_invalid[f"""\\N{NO\nENTRY}"""] PASSED
test/test_fstring.py::test_invalid[f"""{"""] PASSED
test/test_fstring.py::test_invalid[f"""}"""] PASSED
test/test_fstring.py::test_invalid[f"\\N{ BULLET }"] PASSED
test/test_fstring.py::test_invalid[f"\\N{NO   ENTRY}"] PASSED
test/test_fstring.py::test_invalid[f"abc\ndef"] PASSED
test/test_fstring.py::test_invalid[f"{!:}"] PASSED
test/test_fstring.py::test_invalid[f"{!a}"] PASSED
test/test_fstring.py::test_invalid[f"{!{a}}"] PASSED
test/test_fstring.py::test_invalid[f"{!}"] PASSED
test/test_fstring.py::test_invalid[f"{"] PASSED
test/test_fstring.py::test_invalid[f"{1!{a}}"] PASSED
test/test_fstring.py::test_invalid[f"{1:{:}}"] PASSED
test/test_fstring.py::test_invalid[f"{1:{}}"] PASSED
test/test_fstring.py::test_invalid[f"{1=!{a}}"] PASSED
test/test_fstring.py::test_invalid[f"{:1}"] PASSED
test/test_fstring.py::test_invalid[f"{:}"] PASSED
test/test_fstring.py::test_invalid[f"{:}}}"] PASSED
test/test_fstring.py::test_invalid[f"{}"] PASSED
test/test_fstring.py::test_invalid[f"}"] PASSED
test/test_fstring.py::test_roundtrip[f"""foo] PASSED
test/test_fstring.py::test_roundtrip[f"abc\ndef"] PASSED
test/test_fstring.py::test_roundtrip[f"foo] PASSED
test/test_fstring.py::test_roundtrip[f'''s{\n   str.uppe\n'''\n] PASSED
test/test_fstring.py::test_tokenize_start_pos[f" :{ 1 : } "-positions1] PASSED
test/test_fstring.py::test_tokenize_start_pos[f"""\n {\nfoo\n }"""-positions2] PASSED
test/test_fstring.py::test_tokenize_start_pos[f"\\N{NO ENTRY} and {expr}"-positions3] PASSED
test/test_fstring.py::test_tokenize_start_pos[f"}{"-positions0] PASSED
test/test_fstring.py::test_valid[f""""""] PASSED
test/test_fstring.py::test_valid[f"""\\N{NO ENTRY}"""] PASSED
test/test_fstring.py::test_valid[f"""abc\ndef"""] PASSED
test/test_fstring.py::test_valid[f"""abc{\n123}def"""] PASSED
test/test_fstring.py::test_valid[f"""{1}"""] PASSED
test/test_fstring.py::test_valid[f""] PASSED
test/test_fstring.py::test_valid[f"1{{2{{3"] PASSED
test/test_fstring.py::test_valid[f"Combo {expr} and \\N{NO ENTRY}"] PASSED
test/test_fstring.py::test_valid[f"\\N{BULLET}"] PASSED
test/test_fstring.py::test_valid[f"\\N{DOMINO TILE HORIZONTAL-00-00}"] PASSED
test/test_fstring.py::test_valid[f"\\N{FLEUR-DE-LIS}"] PASSED
test/test_fstring.py::test_valid[f"\\N{NO ENTRY} and {expr}"] PASSED
test/test_fstring.py::test_valid[f"\\N{NO ENTRY}"] PASSED
test/test_fstring.py::test_valid[f"\\N{SOYOMBO LETTER -A}"] PASSED
test/test_fstring.py::test_valid[f"\\N{no entry}"] PASSED
test/test_fstring.py::test_valid[f"\\\n{123}\\\n"] PASSED
test/test_fstring.py::test_valid[f"abc\\\ndef"] PASSED
test/test_fstring.py::test_valid[f"{*x, *y}"] PASSED
test/test_fstring.py::test_valid[f"{*x, y}"] PASSED
test/test_fstring.py::test_valid[f"{*x,}"] PASSED
test/test_fstring.py::test_valid[f"{1!a:1}"] PASSED
test/test_fstring.py::test_valid[f"{1!a}"] PASSED
test/test_fstring.py::test_valid[f"{123:.2\\\nf}"] PASSED
test/test_fstring.py::test_valid[f"{1:1.{32}}"] PASSED
test/test_fstring.py::test_valid[f"{1:1}"] PASSED
test/test_fstring.py::test_valid[f"{1::>4}"] PASSED
test/test_fstring.py::test_valid[f"{1:}"] PASSED
test/test_fstring.py::test_valid[f"{1}"] PASSED
test/test_fstring.py::test_valid[f"{\\\n123}"] PASSED
test/test_fstring.py::test_valid[f"{a()=}"] PASSED
test/test_fstring.py::test_valid[f"{a=}"] PASSED
test/test_fstring.py::test_valid[f"{foo} {bar}"] PASSED
test/test_fstring.py::test_valid[f"{x for x in [1]}"] PASSED
test/test_fstring.py::test_valid[f"{x, *y}"] PASSED
test/test_fstring.py::test_valid[f"{x:{y:1}}"] PASSED
test/test_fstring.py::test_valid[f"{x:{y:}}"] PASSED
test/test_fstring.py::test_valid[f"{x:{y}}"] PASSED
test/test_fstring.py::test_valid[f"{{{1}"] PASSED
test/test_fstring.py::test_valid[f"{{{1}}}"] PASSED
test/test_fstring.py::test_valid[f"{{}}"] PASSED
test/test_fstring.py::test_valid[f"}}"] PASSED
test/test_get_code.py::test_basic_parsing PASSED
test/test_get_code.py::test_carriage_return_at_end[\n\r-types1] PASSED
test/test_get_code.py::test_carriage_return_at_end[\r-types0] PASSED
test/test_get_code.py::test_end_newlines PASSED
test/test_get_code.py::test_full_code_round_trip[    F""" \n3] PASSED
test/test_get_code.py::test_full_code_round_trip[    F""" \n] PASSED
test/test_get_code.py::test_full_code_round_trip[    F"""\n] PASSED
test/test_get_code.py::test_full_code_round_trip[    F"""] PASSED
test/test_get_code.py::test_full_code_round_trip[    f"""\n"""\n] PASSED
test/test_get_code.py::test_full_code_round_trip[    f"""\n"""] PASSED
test/test_get_code.py::test_full_code_round_trip[ ] PASSED
test/test_get_code.py::test_get_code PASSED
test/test_get_code.py::test_operators PASSED
test/test_grammar.py::test_non_unicode PASSED
test/test_load_grammar.py::test_grammar_int_version PASSED
test/test_load_grammar.py::test_invalid_grammar_version[#] PASSED
test/test_load_grammar.py::test_invalid_grammar_version[1.3.4.5] PASSED
test/test_load_grammar.py::test_invalid_grammar_version[1.] PASSED
test/test_load_grammar.py::test_invalid_grammar_version[a] PASSED
test/test_load_grammar.py::test_load_inexisting_grammar PASSED
test/test_load_grammar.py::test_parse_version[1.1-result2] PASSED
test/test_load_grammar.py::test_parse_version[1.1.1-result3] PASSED
test/test_load_grammar.py::test_parse_version[2-result0] PASSED
test/test_load_grammar.py::test_parse_version[3-result1] PASSED
test/test_load_grammar.py::test_parse_version[300.1.31-result4] PASSED
test/test_normalizer_issues_files.py::test_normalizer_issue[E10.py] PASSED
test/test_normalizer_issues_files.py::test_normalizer_issue[E101.py] PASSED
test/test_normalizer_issues_files.py::test_normalizer_issue[E11.py] PASSED
test/test_normalizer_issues_files.py::test_normalizer_issue[E12_first.py] PASSED
test/test_normalizer_issues_files.py::test_normalizer_issue[E12_not_first.py] PASSED
test/test_normalizer_issues_files.py::test_normalizer_issue[E12_not_second.py] PASSED
test/test_normalizer_issues_files.py::test_normalizer_issue[E12_second.py] PASSED
test/test_normalizer_issues_files.py::test_normalizer_issue[E12_third.py] PASSED
test/test_normalizer_issues_files.py::test_normalizer_issue[E20.py] PASSED
test/test_normalizer_issues_files.py::test_normalizer_issue[E21.py] PASSED
test/test_normalizer_issues_files.py::test_normalizer_issue[E22.py] PASSED
test/test_normalizer_issues_files.py::test_normalizer_issue[E23.py] PASSED
test/test_normalizer_issues_files.py::test_normalizer_issue[E25.py] PASSED
test/test_normalizer_issues_files.py::test_normalizer_issue[E26.py] PASSED
test/test_normalizer_issues_files.py::test_normalizer_issue[E27.py] PASSED
test/test_normalizer_issues_files.py::test_normalizer_issue[E29.py] PASSED
test/test_normalizer_issues_files.py::test_normalizer_issue[E30.py] PASSED
test/test_normalizer_issues_files.py::test_normalizer_issue[E30not.py] PASSED
test/test_normalizer_issues_files.py::test_normalizer_issue[E40.py] PASSED
test/test_normalizer_issues_files.py::test_normalizer_issue[E50.py] PASSED
test/test_normalizer_issues_files.py::test_normalizer_issue[E70.py] PASSED
test/test_normalizer_issues_files.py::test_normalizer_issue[E71.py] PASSED
test/test_normalizer_issues_files.py::test_normalizer_issue[E72.py] PASSED
test/test_normalizer_issues_files.py::test_normalizer_issue[E73.py] PASSED
test/test_normalizer_issues_files.py::test_normalizer_issue[allowed_syntax.py] PASSED
test/test_normalizer_issues_files.py::test_normalizer_issue[latin-1.py] PASSED
test/test_normalizer_issues_files.py::test_normalizer_issue[python.py] PASSED
test/test_normalizer_issues_files.py::test_normalizer_issue[utf-8-bom.py] PASSED
test/test_normalizer_issues_files.py::test_normalizer_issue[utf-8.py] PASSED
test/test_old_fast_parser.py::test_additional_indent PASSED
test/test_old_fast_parser.py::test_carriage_return_splitting PASSED
test/test_old_fast_parser.py::test_class_func_if PASSED
test/test_old_fast_parser.py::test_class_with_class_var PASSED
test/test_old_fast_parser.py::test_decorator PASSED
test/test_old_fast_parser.py::test_fake_parentheses PASSED
test/test_old_fast_parser.py::test_for PASSED
test/test_old_fast_parser.py::test_func_with_if PASSED
test/test_old_fast_parser.py::test_multi_line_for PASSED
test/test_old_fast_parser.py::test_multi_line_params PASSED
test/test_old_fast_parser.py::test_nested_funcs PASSED
test/test_old_fast_parser.py::test_parentheses_in_string PASSED
test/test_old_fast_parser.py::test_round_trip PASSED
test/test_old_fast_parser.py::test_strange_parentheses PASSED
test/test_old_fast_parser.py::test_wrong_indentation PASSED
test/test_param_splitting.py::test_kw_only_no_kw[3.10] PASSED
test/test_param_splitting.py::test_kw_only_no_kw[3.6] PASSED
test/test_param_splitting.py::test_kw_only_no_kw[3.7] PASSED
test/test_param_splitting.py::test_kw_only_no_kw[3.8] PASSED
test/test_param_splitting.py::test_kw_only_no_kw[3.9] PASSED
test/test_param_splitting.py::test_split_params_with_separation_star PASSED
test/test_param_splitting.py::test_split_params_with_stars PASSED
test/test_parser.py::test_backslash_dos_style[3.10] PASSED
test/test_parser.py::test_backslash_dos_style[3.6] PASSED
test/test_parser.py::test_backslash_dos_style[3.7] PASSED
test/test_parser.py::test_backslash_dos_style[3.8] PASSED
test/test_parser.py::test_backslash_dos_style[3.9] PASSED
test/test_parser.py::test_basic_parsing[3.10] PASSED
test/test_parser.py::test_basic_parsing[3.6] PASSED
test/test_parser.py::test_basic_parsing[3.7] PASSED
test/test_parser.py::test_basic_parsing[3.8] PASSED
test/test_parser.py::test_basic_parsing[3.9] PASSED
test/test_parser.py::test_carriage_return_statements[3.10] PASSED
test/test_parser.py::test_carriage_return_statements[3.6] PASSED
test/test_parser.py::test_carriage_return_statements[3.7] PASSED
test/test_parser.py::test_carriage_return_statements[3.8] PASSED
test/test_parser.py::test_carriage_return_statements[3.9] PASSED
test/test_parser.py::test_decorator_expression[3.10-a + a] PASSED
test/test_parser.py::test_decorator_expression[3.10-a := lambda x: x] PASSED
test/test_parser.py::test_decorator_expression[3.10-lambda x: x] PASSED
test/test_parser.py::test_decorator_expression[3.6-a + a] PASSED
test/test_parser.py::test_decorator_expression[3.6-a := lambda x: x] PASSED
test/test_parser.py::test_decorator_expression[3.6-lambda x: x] PASSED
test/test_parser.py::test_decorator_expression[3.7-a + a] PASSED
test/test_parser.py::test_decorator_expression[3.7-a := lambda x: x] PASSED
test/test_parser.py::test_decorator_expression[3.7-lambda x: x] PASSED
test/test_parser.py::test_decorator_expression[3.8-a + a] PASSED
test/test_parser.py::test_decorator_expression[3.8-a := lambda x: x] PASSED
test/test_parser.py::test_decorator_expression[3.8-lambda x: x] PASSED
test/test_parser.py::test_decorator_expression[3.9-a + a] PASSED
test/test_parser.py::test_decorator_expression[3.9-a := lambda x: x] PASSED
test/test_parser.py::test_decorator_expression[3.9-lambda x: x] PASSED
test/test_parser.py::test_dedent_at_end[3.10] PASSED
test/test_parser.py::test_dedent_at_end[3.6] PASSED
test/test_parser.py::test_dedent_at_end[3.7] PASSED
test/test_parser.py::test_dedent_at_end[3.8] PASSED
test/test_parser.py::test_dedent_at_end[3.9] PASSED
test/test_parser.py::test_end_pos[3.10] PASSED
test/test_parser.py::test_end_pos[3.6] PASSED
test/test_parser.py::test_end_pos[3.7] PASSED
test/test_parser.py::test_end_pos[3.8] PASSED
test/test_parser.py::test_end_pos[3.9] PASSED
test/test_parser.py::test_end_pos_error_correction[3.10] PASSED
test/test_parser.py::test_end_pos_error_correction[3.6] PASSED
test/test_parser.py::test_end_pos_error_correction[3.7] PASSED
test/test_parser.py::test_end_pos_error_correction[3.8] PASSED
test/test_parser.py::test_end_pos_error_correction[3.9] PASSED
test/test_parser.py::test_extended_rhs_annassign[3.10] PASSED
test/test_parser.py::test_extended_rhs_annassign[3.6] PASSED
test/test_parser.py::test_extended_rhs_annassign[3.7] PASSED
test/test_parser.py::test_extended_rhs_annassign[3.8] PASSED
test/test_parser.py::test_extended_rhs_annassign[3.9] PASSED
test/test_parser.py::test_import_names[3.10] PASSED
test/test_parser.py::test_import_names[3.6] PASSED
test/test_parser.py::test_import_names[3.7] PASSED
test/test_parser.py::test_import_names[3.8] PASSED
test/test_parser.py::test_import_names[3.9] PASSED
test/test_parser.py::test_incomplete_list_comprehension[3.10] PASSED
test/test_parser.py::test_incomplete_list_comprehension[3.6] PASSED
test/test_parser.py::test_incomplete_list_comprehension[3.7] PASSED
test/test_parser.py::test_incomplete_list_comprehension[3.8] PASSED
test/test_parser.py::test_incomplete_list_comprehension[3.9] PASSED
test/test_parser.py::test_named_expression[3.10] PASSED
test/test_parser.py::test_named_expression[3.6] PASSED
test/test_parser.py::test_named_expression[3.7] PASSED
test/test_parser.py::test_named_expression[3.8] PASSED
test/test_parser.py::test_named_expression[3.9] PASSED
test/test_parser.py::test_newline_positions[3.10] PASSED
test/test_parser.py::test_newline_positions[3.6] PASSED
test/test_parser.py::test_newline_positions[3.7] PASSED
test/test_parser.py::test_newline_positions[3.8] PASSED
test/test_parser.py::test_newline_positions[3.9] PASSED
test/test_parser.py::test_no_error_nodes[3.10] PASSED
test/test_parser.py::test_no_error_nodes[3.6] PASSED
test/test_parser.py::test_no_error_nodes[3.7] PASSED
test/test_parser.py::test_no_error_nodes[3.8] PASSED
test/test_parser.py::test_no_error_nodes[3.9] PASSED
test/test_parser.py::test_open_string_literal[3.10-foo """\n] PASSED
test/test_parser.py::test_open_string_literal[3.10-foo """\nbar] PASSED
test/test_parser.py::test_open_string_literal[3.10-foo "] PASSED
test/test_parser.py::test_open_string_literal[3.6-foo """\n] PASSED
test/test_parser.py::test_open_string_literal[3.6-foo """\nbar] PASSED
test/test_parser.py::test_open_string_literal[3.6-foo "] PASSED
test/test_parser.py::test_open_string_literal[3.7-foo """\n] PASSED
test/test_parser.py::test_open_string_literal[3.7-foo """\nbar] PASSED
test/test_parser.py::test_open_string_literal[3.7-foo "] PASSED
test/test_parser.py::test_open_string_literal[3.8-foo """\n] PASSED
test/test_parser.py::test_open_string_literal[3.8-foo """\nbar] PASSED
test/test_parser.py::test_open_string_literal[3.8-foo "] PASSED
test/test_parser.py::test_open_string_literal[3.9-foo """\n] PASSED
test/test_parser.py::test_open_string_literal[3.9-foo """\nbar] PASSED
test/test_parser.py::test_open_string_literal[3.9-foo "] PASSED
test/test_parser.py::test_param_splitting[3.10] PASSED
test/test_parser.py::test_param_splitting[3.6] PASSED
test/test_parser.py::test_param_splitting[3.7] PASSED
test/test_parser.py::test_param_splitting[3.8] PASSED
test/test_parser.py::test_param_splitting[3.9] PASSED
test/test_parser.py::test_positional_only_arguments[3.10-a, /, **kwargs] PASSED
test/test_parser.py::test_positional_only_arguments[3.10-a, /, *, b] PASSED
test/test_parser.py::test_positional_only_arguments[3.10-a, /, b0] PASSED
test/test_parser.py::test_positional_only_arguments[3.10-a, /, b1] PASSED
test/test_parser.py::test_positional_only_arguments[3.10-a, /] PASSED
test/test_parser.py::test_positional_only_arguments[3.10-a=1, /, b=3] PASSED
test/test_parser.py::test_positional_only_arguments[3.10-a=1, /] PASSED
test/test_parser.py::test_positional_only_arguments[3.6-a, /, **kwargs] PASSED
test/test_parser.py::test_positional_only_arguments[3.6-a, /, *, b] PASSED
test/test_parser.py::test_positional_only_arguments[3.6-a, /, b0] PASSED
test/test_parser.py::test_positional_only_arguments[3.6-a, /, b1] PASSED
test/test_parser.py::test_positional_only_arguments[3.6-a, /] PASSED
test/test_parser.py::test_positional_only_arguments[3.6-a=1, /, b=3] PASSED
test/test_parser.py::test_positional_only_arguments[3.6-a=1, /] PASSED
test/test_parser.py::test_positional_only_arguments[3.7-a, /, **kwargs] PASSED
test/test_parser.py::test_positional_only_arguments[3.7-a, /, *, b] PASSED
test/test_parser.py::test_positional_only_arguments[3.7-a, /, b0] PASSED
test/test_parser.py::test_positional_only_arguments[3.7-a, /, b1] PASSED
test/test_parser.py::test_positional_only_arguments[3.7-a, /] PASSED
test/test_parser.py::test_positional_only_arguments[3.7-a=1, /, b=3] PASSED
test/test_parser.py::test_positional_only_arguments[3.7-a=1, /] PASSED
test/test_parser.py::test_positional_only_arguments[3.8-a, /, **kwargs] PASSED
test/test_parser.py::test_positional_only_arguments[3.8-a, /, *, b] PASSED
test/test_parser.py::test_positional_only_arguments[3.8-a, /, b0] PASSED
test/test_parser.py::test_positional_only_arguments[3.8-a, /, b1] PASSED
test/test_parser.py::test_positional_only_arguments[3.8-a, /] PASSED
test/test_parser.py::test_positional_only_arguments[3.8-a=1, /, b=3] PASSED
test/test_parser.py::test_positional_only_arguments[3.8-a=1, /] PASSED
test/test_parser.py::test_positional_only_arguments[3.9-a, /, **kwargs] PASSED
test/test_parser.py::test_positional_only_arguments[3.9-a, /, *, b] PASSED
test/test_parser.py::test_positional_only_arguments[3.9-a, /, b0] PASSED
test/test_parser.py::test_positional_only_arguments[3.9-a, /, b1] PASSED
test/test_parser.py::test_positional_only_arguments[3.9-a, /] PASSED
test/test_parser.py::test_positional_only_arguments[3.9-a=1, /, b=3] PASSED
test/test_parser.py::test_positional_only_arguments[3.9-a=1, /] PASSED
test/test_parser.py::test_started_lambda_stmt[3.10] PASSED
test/test_parser.py::test_started_lambda_stmt[3.6] PASSED
test/test_parser.py::test_started_lambda_stmt[3.7] PASSED
test/test_parser.py::test_started_lambda_stmt[3.8] PASSED
test/test_parser.py::test_started_lambda_stmt[3.9] PASSED
test/test_parser.py::test_subscope_names[3.10] PASSED
test/test_parser.py::test_subscope_names[3.6] PASSED
test/test_parser.py::test_subscope_names[3.7] PASSED
test/test_parser.py::test_subscope_names[3.8] PASSED
test/test_parser.py::test_subscope_names[3.9] PASSED
test/test_parser.py::test_too_many_params PASSED
test/test_parser.py::test_unicode_string PASSED
test/test_parser_tree.py::TestsFunctionAndLambdaParsing::test_annotation[node0] PASSED
test/test_parser_tree.py::TestsFunctionAndLambdaParsing::test_annotation[node1] PASSED
test/test_parser_tree.py::TestsFunctionAndLambdaParsing::test_is_generator[node0] PASSED
test/test_parser_tree.py::TestsFunctionAndLambdaParsing::test_is_generator[node1] PASSED
test/test_parser_tree.py::TestsFunctionAndLambdaParsing::test_name[node0] PASSED
test/test_parser_tree.py::TestsFunctionAndLambdaParsing::test_name[node1] PASSED
test/test_parser_tree.py::TestsFunctionAndLambdaParsing::test_params[node0] PASSED
test/test_parser_tree.py::TestsFunctionAndLambdaParsing::test_params[node1] PASSED
test/test_parser_tree.py::TestsFunctionAndLambdaParsing::test_yields[node0] PASSED
test/test_parser_tree.py::TestsFunctionAndLambdaParsing::test_yields[node1] PASSED
test/test_parser_tree.py::test_annotation_param[3.10] PASSED
test/test_parser_tree.py::test_annotation_param[3.6] PASSED
test/test_parser_tree.py::test_annotation_param[3.7] PASSED
test/test_parser_tree.py::test_annotation_param[3.8] PASSED
test/test_parser_tree.py::test_annotation_param[3.9] PASSED
test/test_parser_tree.py::test_annotation_params[3.10] PASSED
test/test_parser_tree.py::test_annotation_params[3.6] PASSED
test/test_parser_tree.py::test_annotation_params[3.7] PASSED
test/test_parser_tree.py::test_annotation_params[3.8] PASSED
test/test_parser_tree.py::test_annotation_params[3.9] PASSED
test/test_parser_tree.py::test_default_and_annotation_param[3.10] PASSED
test/test_parser_tree.py::test_default_and_annotation_param[3.6] PASSED
test/test_parser_tree.py::test_default_and_annotation_param[3.7] PASSED
test/test_parser_tree.py::test_default_and_annotation_param[3.8] PASSED
test/test_parser_tree.py::test_default_and_annotation_param[3.9] PASSED
test/test_parser_tree.py::test_default_param[3.10] PASSED
test/test_parser_tree.py::test_default_param[3.6] PASSED
test/test_parser_tree.py::test_default_param[3.7] PASSED
test/test_parser_tree.py::test_default_param[3.8] PASSED
test/test_parser_tree.py::test_default_param[3.9] PASSED
test/test_parser_tree.py::test_end_pos_line[3.10] PASSED
test/test_parser_tree.py::test_end_pos_line[3.6] PASSED
test/test_parser_tree.py::test_end_pos_line[3.7] PASSED
test/test_parser_tree.py::test_end_pos_line[3.8] PASSED
test/test_parser_tree.py::test_end_pos_line[3.9] PASSED
test/test_parser_tree.py::test_is_definition[x = 3-0-True-False] PASSED
test/test_parser_tree.py::test_is_definition[x, y = z-0-True-False] PASSED
test/test_parser_tree.py::test_is_definition[x, y = z-1-True-False] PASSED
test/test_parser_tree.py::test_is_definition[x, y = z-2-False-False0] PASSED
test/test_parser_tree.py::test_is_definition[x, y = z-2-False-False1] PASSED
test/test_parser_tree.py::test_is_definition[x.y = 3-0-False-False] PASSED
test/test_parser_tree.py::test_is_definition[x.y = 3-1-True-False] PASSED
test/test_parser_tree.py::test_is_definition[x.y = u.v = z-0-False-False] PASSED
test/test_parser_tree.py::test_is_definition[x.y = u.v = z-1-True-False] PASSED
test/test_parser_tree.py::test_is_definition[x.y = u.v = z-2-False-False] PASSED
test/test_parser_tree.py::test_is_definition[x.y = u.v, w = z-3-True-False] PASSED
test/test_parser_tree.py::test_is_definition[x.y = u.v, w = z-4-True-False] PASSED
test/test_parser_tree.py::test_is_definition[x.y = u.v, w = z-5-False-False] PASSED
test/test_parser_tree.py::test_is_definition[x: int = z-0-True-False] PASSED
test/test_parser_tree.py::test_is_definition[x: int = z-1-False-False] PASSED
test/test_parser_tree.py::test_is_definition[x: int = z-2-False-False] PASSED
test/test_parser_tree.py::test_is_definition[x: int-0-True-False] PASSED
test/test_parser_tree.py::test_is_definition[x: int-1-False-False] PASSED
test/test_parser_tree.py::test_is_definition[x[0] = z-0-False-False] PASSED
test/test_parser_tree.py::test_is_definition[x[0] = z-0-True-True] PASSED
test/test_parser_tree.py::test_is_definition[x[0], y = z-0-False-False] PASSED
test/test_parser_tree.py::test_is_definition[x[0], y = z-0-True-True] PASSED
test/test_parser_tree.py::test_is_definition[x[0], y = z-2-False-False] PASSED
test/test_parser_tree.py::test_is_definition[x[0], y = z-2-False-True] PASSED
test/test_parser_tree.py::test_iter_funcdefs PASSED
test/test_parser_tree.py::test_raises PASSED
test/test_parser_tree.py::test_returns PASSED
test/test_parser_tree.py::test_search_ancestor[node0-node_types0-None] PASSED
test/test_parser_tree.py::test_search_ancestor[node1-node_types1-None] PASSED
test/test_parser_tree.py::test_search_ancestor[node2-node_types2-expected_ancestor2] PASSED
test/test_parser_tree.py::test_search_ancestor[node3-node_types3-None] PASSED
test/test_parser_tree.py::test_search_ancestor[node4-node_types4-expected_ancestor4] PASSED
test/test_parser_tree.py::test_search_ancestor[node5-node_types5-expected_ancestor5] PASSED
test/test_parser_tree.py::test_search_ancestor[node6-node_types6-expected_ancestor6] PASSED
test/test_parser_tree.py::test_search_ancestor[node7-node_types7-None] PASSED
test/test_parser_tree.py::test_search_ancestor[node8-node_types8-None] PASSED
test/test_parser_tree.py::test_search_ancestor[node9-node_types9-None] PASSED
test/test_parser_tree.py::test_with_stmt_get_test_node_from_name PASSED
test/test_parser_tree.py::test_yield_from PASSED
test/test_parser_tree.py::test_yields[3.10] PASSED
test/test_parser_tree.py::test_yields[3.6] PASSED
test/test_parser_tree.py::test_yields[3.7] PASSED
test/test_parser_tree.py::test_yields[3.8] PASSED
test/test_parser_tree.py::test_yields[3.9] PASSED
test/test_pep8.py::test_eof_blankline PASSED
test/test_pep8.py::test_eof_newline PASSED
test/test_pep8.py::test_shebang PASSED
test/test_pgen2.py::test_ambiguities[foo: bar | 'x'\nbar: 'x'\n-foo is ambiguous.*given a ReservedString\\(x\\).*bar or foo] PASSED
test/test_pgen2.py::test_ambiguities[foo: bar | baz\nbar: 'x'\nbaz: "x"\n-foo is ambiguous.*given a ReservedString\\(x\\).*bar or baz] PASSED
test/test_pgen2.py::test_ambiguities[foo: bar | baz\nbar: NAME\nbaz: NAME\n-foo is ambiguous.*given a (PythonTokenTypes\\.)?NAME.*bar or baz] PASSED
test/test_pgen2.py::test_ambiguities[outer: "a" [inner] "b" "c"\ninner: "b" "c" [inner]\n-outer is ambiguous.*given a ReservedString\\(b\\).*inner or outer] PASSED
test/test_pgen2.py::test_ambiguities[outer: "a" [middle] "b" "c"\nmiddle: inner\ninner: "b" "c" [inner]\n-outer is ambiguous.*given a ReservedString\\(b\\).*middle or outer] PASSED
test/test_pgen2.py::test_annotation_1[3.10] PASSED
test/test_pgen2.py::test_annotation_1[3.6] PASSED
test/test_pgen2.py::test_annotation_1[3.7] PASSED
test/test_pgen2.py::test_annotation_1[3.8] PASSED
test/test_pgen2.py::test_annotation_1[3.9] PASSED
test/test_pgen2.py::test_annotation_2[3.10] PASSED
test/test_pgen2.py::test_annotation_2[3.6] PASSED
test/test_pgen2.py::test_annotation_2[3.7] PASSED
test/test_pgen2.py::test_annotation_2[3.8] PASSED
test/test_pgen2.py::test_annotation_2[3.9] PASSED
test/test_pgen2.py::test_annotation_3[3.10] PASSED
test/test_pgen2.py::test_annotation_3[3.6] PASSED
test/test_pgen2.py::test_annotation_3[3.7] PASSED
test/test_pgen2.py::test_annotation_3[3.8] PASSED
test/test_pgen2.py::test_annotation_3[3.9] PASSED
test/test_pgen2.py::test_annotation_4[3.10] PASSED
test/test_pgen2.py::test_annotation_4[3.6] PASSED
test/test_pgen2.py::test_annotation_4[3.7] PASSED
test/test_pgen2.py::test_annotation_4[3.8] PASSED
test/test_pgen2.py::test_annotation_4[3.9] PASSED
test/test_pgen2.py::test_annotation_5[3.10] PASSED
test/test_pgen2.py::test_annotation_5[3.6] PASSED
test/test_pgen2.py::test_annotation_5[3.7] PASSED
test/test_pgen2.py::test_annotation_5[3.8] PASSED
test/test_pgen2.py::test_annotation_5[3.9] PASSED
test/test_pgen2.py::test_annotation_6[3.10] PASSED
test/test_pgen2.py::test_annotation_6[3.6] PASSED
test/test_pgen2.py::test_annotation_6[3.7] PASSED
test/test_pgen2.py::test_annotation_6[3.8] PASSED
test/test_pgen2.py::test_annotation_6[3.9] PASSED
test/test_pgen2.py::test_annotation_7[3.10] PASSED
test/test_pgen2.py::test_annotation_7[3.6] PASSED
test/test_pgen2.py::test_annotation_7[3.7] PASSED
test/test_pgen2.py::test_annotation_7[3.8] PASSED
test/test_pgen2.py::test_annotation_7[3.9] PASSED
test/test_pgen2.py::test_annotation_8[3.10] PASSED
test/test_pgen2.py::test_annotation_8[3.6] PASSED
test/test_pgen2.py::test_annotation_8[3.7] PASSED
test/test_pgen2.py::test_annotation_8[3.8] PASSED
test/test_pgen2.py::test_annotation_8[3.9] PASSED
test/test_pgen2.py::test_async_for[3.10] PASSED
test/test_pgen2.py::test_async_for[3.6] PASSED
test/test_pgen2.py::test_async_for[3.7] PASSED
test/test_pgen2.py::test_async_for[3.8] PASSED
test/test_pgen2.py::test_async_for[3.9] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.10-  [\n    1 async for a in b\n  ]] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.10-[1 async for a in b\n    ]] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.10-[1 async\n    for a in b\n    ]] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.10-[\n    1\n    async for a in b\n    ]] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.10-[\n    1\n    async for a\n    in b\n    ]] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.10-[\n    1\n    async\n    for\n    a\n    in\n    b\n    ]] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.6-  [\n    1 async for a in b\n  ]] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.6-[1 async for a in b\n    ]] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.6-[1 async\n    for a in b\n    ]] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.6-[\n    1\n    async for a in b\n    ]] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.6-[\n    1\n    async for a\n    in b\n    ]] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.6-[\n    1\n    async\n    for\n    a\n    in\n    b\n    ]] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.7-  [\n    1 async for a in b\n  ]] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.7-[1 async for a in b\n    ]] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.7-[1 async\n    for a in b\n    ]] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.7-[\n    1\n    async for a in b\n    ]] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.7-[\n    1\n    async for a\n    in b\n    ]] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.7-[\n    1\n    async\n    for\n    a\n    in\n    b\n    ]] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.8-  [\n    1 async for a in b\n  ]] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.8-[1 async for a in b\n    ]] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.8-[1 async\n    for a in b\n    ]] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.8-[\n    1\n    async for a in b\n    ]] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.8-[\n    1\n    async for a\n    in b\n    ]] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.8-[\n    1\n    async\n    for\n    a\n    in\n    b\n    ]] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.9-  [\n    1 async for a in b\n  ]] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.9-[1 async for a in b\n    ]] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.9-[1 async\n    for a in b\n    ]] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.9-[\n    1\n    async for a in b\n    ]] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.9-[\n    1\n    async for a\n    in b\n    ]] PASSED
test/test_pgen2.py::test_async_for_comprehension_newline[3.9-[\n    1\n    async\n    for\n    a\n    in\n    b\n    ]] PASSED
test/test_pgen2.py::test_async_var[3.10-async = 1] PASSED
test/test_pgen2.py::test_async_var[3.10-await = 1] PASSED
test/test_pgen2.py::test_async_var[3.10-def async(): pass] PASSED
test/test_pgen2.py::test_async_var[3.6-async = 1] PASSED
test/test_pgen2.py::test_async_var[3.6-await = 1] PASSED
test/test_pgen2.py::test_async_var[3.6-def async(): pass] PASSED
test/test_pgen2.py::test_async_var[3.7-async = 1] PASSED
test/test_pgen2.py::test_async_var[3.7-await = 1] PASSED
test/test_pgen2.py::test_async_var[3.7-def async(): pass] PASSED
test/test_pgen2.py::test_async_var[3.8-async = 1] PASSED
test/test_pgen2.py::test_async_var[3.8-await = 1] PASSED
test/test_pgen2.py::test_async_var[3.8-def async(): pass] PASSED
test/test_pgen2.py::test_async_var[3.9-async = 1] PASSED
test/test_pgen2.py::test_async_var[3.9-await = 1] PASSED
test/test_pgen2.py::test_async_var[3.9-def async(): pass] PASSED
test/test_pgen2.py::test_async_with[3.10] PASSED
test/test_pgen2.py::test_async_with[3.6] PASSED
test/test_pgen2.py::test_async_with[3.7] PASSED
test/test_pgen2.py::test_async_with[3.8] PASSED
test/test_pgen2.py::test_async_with[3.9] PASSED
test/test_pgen2.py::test_async_with_invalid[3.10] PASSED
test/test_pgen2.py::test_async_with_invalid[3.6] PASSED
test/test_pgen2.py::test_async_with_invalid[3.7] PASSED
test/test_pgen2.py::test_async_with_invalid[3.8] PASSED
test/test_pgen2.py::test_async_with_invalid[3.9] PASSED
test/test_pgen2.py::test_await_expr[3.10] PASSED
test/test_pgen2.py::test_await_expr[3.6] PASSED
test/test_pgen2.py::test_await_expr[3.7] PASSED
test/test_pgen2.py::test_await_expr[3.8] PASSED
test/test_pgen2.py::test_await_expr[3.9] PASSED
test/test_pgen2.py::test_class_new_syntax[3.10] PASSED
test/test_pgen2.py::test_class_new_syntax[3.6] PASSED
test/test_pgen2.py::test_class_new_syntax[3.7] PASSED
test/test_pgen2.py::test_class_new_syntax[3.8] PASSED
test/test_pgen2.py::test_class_new_syntax[3.9] PASSED
test/test_pgen2.py::test_dict_unpacking[3.10] PASSED
test/test_pgen2.py::test_dict_unpacking[3.6] PASSED
test/test_pgen2.py::test_dict_unpacking[3.7] PASSED
test/test_pgen2.py::test_dict_unpacking[3.8] PASSED
test/test_pgen2.py::test_dict_unpacking[3.9] PASSED
test/test_pgen2.py::test_ellipsis[3.10] PASSED
test/test_pgen2.py::test_ellipsis[3.6] PASSED
test/test_pgen2.py::test_ellipsis[3.7] PASSED
test/test_pgen2.py::test_ellipsis[3.8] PASSED
test/test_pgen2.py::test_ellipsis[3.9] PASSED
test/test_pgen2.py::test_except_new[3.10] PASSED
test/test_pgen2.py::test_except_new[3.6] PASSED
test/test_pgen2.py::test_except_new[3.7] PASSED
test/test_pgen2.py::test_except_new[3.8] PASSED
test/test_pgen2.py::test_except_new[3.9] PASSED
test/test_pgen2.py::test_except_old[3.10] PASSED
test/test_pgen2.py::test_except_old[3.6] PASSED
test/test_pgen2.py::test_except_old[3.7] PASSED
test/test_pgen2.py::test_except_old[3.8] PASSED
test/test_pgen2.py::test_except_old[3.9] PASSED
test/test_pgen2.py::test_formfeed[3.10] PASSED
test/test_pgen2.py::test_formfeed[3.6] PASSED
test/test_pgen2.py::test_formfeed[3.7] PASSED
test/test_pgen2.py::test_formfeed[3.8] PASSED
test/test_pgen2.py::test_formfeed[3.9] PASSED
test/test_pgen2.py::test_left_recursion PASSED
test/test_pgen2.py::test_long_notation[3.10] PASSED
test/test_pgen2.py::test_long_notation[3.6] PASSED
test/test_pgen2.py::test_long_notation[3.7] PASSED
test/test_pgen2.py::test_long_notation[3.8] PASSED
test/test_pgen2.py::test_long_notation[3.9] PASSED
test/test_pgen2.py::test_matrix_multiplication_operator[3.10] PASSED
test/test_pgen2.py::test_matrix_multiplication_operator[3.6] PASSED
test/test_pgen2.py::test_matrix_multiplication_operator[3.7] PASSED
test/test_pgen2.py::test_matrix_multiplication_operator[3.8] PASSED
test/test_pgen2.py::test_matrix_multiplication_operator[3.9] PASSED
test/test_pgen2.py::test_multiline_bytes_literals[3.10] PASSED
test/test_pgen2.py::test_multiline_bytes_literals[3.6] PASSED
test/test_pgen2.py::test_multiline_bytes_literals[3.7] PASSED
test/test_pgen2.py::test_multiline_bytes_literals[3.8] PASSED
test/test_pgen2.py::test_multiline_bytes_literals[3.9] PASSED
test/test_pgen2.py::test_multiline_bytes_tripquote_literals[3.10] PASSED
test/test_pgen2.py::test_multiline_bytes_tripquote_literals[3.6] PASSED
test/test_pgen2.py::test_multiline_bytes_tripquote_literals[3.7] PASSED
test/test_pgen2.py::test_multiline_bytes_tripquote_literals[3.8] PASSED
test/test_pgen2.py::test_multiline_bytes_tripquote_literals[3.9] PASSED
test/test_pgen2.py::test_multiline_str_literals[3.10] PASSED
test/test_pgen2.py::test_multiline_str_literals[3.6] PASSED
test/test_pgen2.py::test_multiline_str_literals[3.7] PASSED
test/test_pgen2.py::test_multiline_str_literals[3.8] PASSED
test/test_pgen2.py::test_multiline_str_literals[3.9] PASSED
test/test_pgen2.py::test_new_binary_notation[3.10] PASSED
test/test_pgen2.py::test_new_binary_notation[3.6] PASSED
test/test_pgen2.py::test_new_binary_notation[3.7] PASSED
test/test_pgen2.py::test_new_binary_notation[3.8] PASSED
test/test_pgen2.py::test_new_binary_notation[3.9] PASSED
test/test_pgen2.py::test_new_octal_notation[3.10] PASSED
test/test_pgen2.py::test_new_octal_notation[3.6] PASSED
test/test_pgen2.py::test_new_octal_notation[3.7] PASSED
test/test_pgen2.py::test_new_octal_notation[3.8] PASSED
test/test_pgen2.py::test_new_octal_notation[3.9] PASSED
test/test_pgen2.py::test_old_octal_notation[3.10] PASSED
test/test_pgen2.py::test_old_octal_notation[3.6] PASSED
test/test_pgen2.py::test_old_octal_notation[3.7] PASSED
test/test_pgen2.py::test_old_octal_notation[3.8] PASSED
test/test_pgen2.py::test_old_octal_notation[3.9] PASSED
test/test_pgen2.py::test_parser_idempotency_extended_unpacking[3.10] PASSED
test/test_pgen2.py::test_parser_idempotency_extended_unpacking[3.6] PASSED
test/test_pgen2.py::test_parser_idempotency_extended_unpacking[3.7] PASSED
test/test_pgen2.py::test_parser_idempotency_extended_unpacking[3.8] PASSED
test/test_pgen2.py::test_parser_idempotency_extended_unpacking[3.9] PASSED
test/test_pgen2.py::test_py2_backticks[3.10] PASSED
test/test_pgen2.py::test_py2_backticks[3.6] PASSED
test/test_pgen2.py::test_py2_backticks[3.7] PASSED
test/test_pgen2.py::test_py2_backticks[3.8] PASSED
test/test_pgen2.py::test_py2_backticks[3.9] PASSED
test/test_pgen2.py::test_py2_string_prefixes[3.10] PASSED
test/test_pgen2.py::test_py2_string_prefixes[3.6] PASSED
test/test_pgen2.py::test_py2_string_prefixes[3.7] PASSED
test/test_pgen2.py::test_py2_string_prefixes[3.8] PASSED
test/test_pgen2.py::test_py2_string_prefixes[3.9] PASSED
test/test_pgen2.py::test_py3_rb[3.10] PASSED
test/test_pgen2.py::test_py3_rb[3.6] PASSED
test/test_pgen2.py::test_py3_rb[3.7] PASSED
test/test_pgen2.py::test_py3_rb[3.8] PASSED
test/test_pgen2.py::test_py3_rb[3.9] PASSED
test/test_pgen2.py::test_raise_2x_style_2[3.10] PASSED
test/test_pgen2.py::test_raise_2x_style_2[3.6] PASSED
test/test_pgen2.py::test_raise_2x_style_2[3.7] PASSED
test/test_pgen2.py::test_raise_2x_style_2[3.8] PASSED
test/test_pgen2.py::test_raise_2x_style_2[3.9] PASSED
test/test_pgen2.py::test_raise_2x_style_3[3.10] PASSED
test/test_pgen2.py::test_raise_2x_style_3[3.6] PASSED
test/test_pgen2.py::test_raise_2x_style_3[3.7] PASSED
test/test_pgen2.py::test_raise_2x_style_3[3.8] PASSED
test/test_pgen2.py::test_raise_2x_style_3[3.9] PASSED
test/test_pgen2.py::test_raise_2x_style_invalid_1[3.10] PASSED
test/test_pgen2.py::test_raise_2x_style_invalid_1[3.6] PASSED
test/test_pgen2.py::test_raise_2x_style_invalid_1[3.7] PASSED
test/test_pgen2.py::test_raise_2x_style_invalid_1[3.8] PASSED
test/test_pgen2.py::test_raise_2x_style_invalid_1[3.9] PASSED
test/test_pgen2.py::test_raise_3x_style[3.10] PASSED
test/test_pgen2.py::test_raise_3x_style[3.6] PASSED
test/test_pgen2.py::test_raise_3x_style[3.7] PASSED
test/test_pgen2.py::test_raise_3x_style[3.8] PASSED
test/test_pgen2.py::test_raise_3x_style[3.9] PASSED
test/test_pgen2.py::test_raise_3x_style_1[3.10] PASSED
test/test_pgen2.py::test_raise_3x_style_1[3.6] PASSED
test/test_pgen2.py::test_raise_3x_style_1[3.7] PASSED
test/test_pgen2.py::test_raise_3x_style_1[3.8] PASSED
test/test_pgen2.py::test_raise_3x_style_1[3.9] PASSED
test/test_pgen2.py::test_raise_3x_style_invalid_1[3.10] PASSED
test/test_pgen2.py::test_raise_3x_style_invalid_1[3.6] PASSED
test/test_pgen2.py::test_raise_3x_style_invalid_1[3.7] PASSED
test/test_pgen2.py::test_raise_3x_style_invalid_1[3.8] PASSED
test/test_pgen2.py::test_raise_3x_style_invalid_1[3.9] PASSED
test/test_pgen2.py::test_raise_3x_style_invalid_2[3.10] PASSED
test/test_pgen2.py::test_raise_3x_style_invalid_2[3.6] PASSED
test/test_pgen2.py::test_raise_3x_style_invalid_2[3.7] PASSED
test/test_pgen2.py::test_raise_3x_style_invalid_2[3.8] PASSED
test/test_pgen2.py::test_raise_3x_style_invalid_2[3.9] PASSED
test/test_pgen2.py::test_raise_3x_style_invalid_3[3.10] PASSED
test/test_pgen2.py::test_raise_3x_style_invalid_3[3.6] PASSED
test/test_pgen2.py::test_raise_3x_style_invalid_3[3.7] PASSED
test/test_pgen2.py::test_raise_3x_style_invalid_3[3.8] PASSED
test/test_pgen2.py::test_raise_3x_style_invalid_3[3.9] PASSED
test/test_pgen2.py::test_raise_3x_style_invalid_4[3.10] PASSED
test/test_pgen2.py::test_raise_3x_style_invalid_4[3.6] PASSED
test/test_pgen2.py::test_raise_3x_style_invalid_4[3.7] PASSED
test/test_pgen2.py::test_raise_3x_style_invalid_4[3.8] PASSED
test/test_pgen2.py::test_raise_3x_style_invalid_4[3.9] PASSED
test/test_pgen2.py::test_set_literal_1[3.10] PASSED
test/test_pgen2.py::test_set_literal_1[3.6] PASSED
test/test_pgen2.py::test_set_literal_1[3.7] PASSED
test/test_pgen2.py::test_set_literal_1[3.8] PASSED
test/test_pgen2.py::test_set_literal_1[3.9] PASSED
test/test_pgen2.py::test_set_literal_2[3.10] PASSED
test/test_pgen2.py::test_set_literal_2[3.6] PASSED
test/test_pgen2.py::test_set_literal_2[3.7] PASSED
test/test_pgen2.py::test_set_literal_2[3.8] PASSED
test/test_pgen2.py::test_set_literal_2[3.9] PASSED
test/test_pgen2.py::test_set_literal_3[3.10] PASSED
test/test_pgen2.py::test_set_literal_3[3.6] PASSED
test/test_pgen2.py::test_set_literal_3[3.7] PASSED
test/test_pgen2.py::test_set_literal_3[3.8] PASSED
test/test_pgen2.py::test_set_literal_3[3.9] PASSED
test/test_pgen2.py::test_set_literal_4[3.10] PASSED
test/test_pgen2.py::test_set_literal_4[3.6] PASSED
test/test_pgen2.py::test_set_literal_4[3.7] PASSED
test/test_pgen2.py::test_set_literal_4[3.8] PASSED
test/test_pgen2.py::test_set_literal_4[3.9] PASSED
test/test_pgen2.py::test_yield_from[3.10] PASSED
test/test_pgen2.py::test_yield_from[3.6] PASSED
test/test_pgen2.py::test_yield_from[3.7] PASSED
test/test_pgen2.py::test_yield_from[3.8] PASSED
test/test_pgen2.py::test_yield_from[3.9] PASSED
test/test_prefix.py::test_prefix_splitting_types[ \t -types5] PASSED
test/test_prefix.py::test_prefix_splitting_types[ \t-types4] PASSED
test/test_prefix.py::test_prefix_splitting_types[# -types0] PASSED
test/test_prefix.py::test_prefix_splitting_types[\\\n-types3] PASSED
test/test_prefix.py::test_prefix_splitting_types[\r\n-types1] PASSED
test/test_prefix.py::test_prefix_splitting_types[\ufeff # -types6] PASSED
test/test_prefix.py::test_prefix_splitting_types[\x0c-types2] PASSED
test/test_prefix.py::test_simple_prefix_splitting[  \n -tokens6] PASSED
test/test_prefix.py::test_simple_prefix_splitting[  \n-tokens5] PASSED
test/test_prefix.py::test_simple_prefix_splitting[ # -tokens2] PASSED
test/test_prefix.py::test_simple_prefix_splitting[ # \n-tokens3] PASSED
test/test_prefix.py::test_simple_prefix_splitting[ # \x0c\n-tokens4] PASSED
test/test_prefix.py::test_simple_prefix_splitting[ \r-tokens10] PASSED
test/test_prefix.py::test_simple_prefix_splitting[ \r\n-tokens9] PASSED
test/test_prefix.py::test_simple_prefix_splitting[ \x0c -tokens7] PASSED
test/test_prefix.py::test_simple_prefix_splitting[ \x0c -tokens8] PASSED
test/test_prefix.py::test_simple_prefix_splitting[#-tokens1] PASSED
test/test_prefix.py::test_simple_prefix_splitting[-tokens0] PASSED
test/test_prefix.py::test_simple_prefix_splitting[\\\n-tokens11] PASSED
test/test_prefix.py::test_simple_prefix_splitting[\\\r\n-tokens12] PASSED
test/test_prefix.py::test_simple_prefix_splitting[\t\t\n\t-tokens13] PASSED
test/test_prefix.py::test_utf8_bom PASSED
test/test_python_errors.py::test_continue_in_finally PASSED
test/test_python_errors.py::test_default_except_error_postition PASSED
test/test_python_errors.py::test_escape_decode_literals[3.10] PASSED
test/test_python_errors.py::test_escape_decode_literals[3.6] PASSED
test/test_python_errors.py::test_escape_decode_literals[3.7] PASSED
test/test_python_errors.py::test_escape_decode_literals[3.8] PASSED
test/test_python_errors.py::test_escape_decode_literals[3.9] PASSED
test/test_python_errors.py::test_forbidden_name[False-(a, *{target}), c = d] PASSED
test/test_python_errors.py::test_forbidden_name[False-a, b, *{target}, c = d] PASSED
test/test_python_errors.py::test_forbidden_name[False-a, b, {target}, c = d] PASSED
test/test_python_errors.py::test_forbidden_name[False-for (x, *{target}), q in y: pass] PASSED
test/test_python_errors.py::test_forbidden_name[False-for x, q, *{target} in y: pass] PASSED
test/test_python_errors.py::test_forbidden_name[False-for x, q, {target} in y: pass] PASSED
test/test_python_errors.py::test_forbidden_name[False-for x, {target} in y: pass] PASSED
test/test_python_errors.py::test_forbidden_name[None-(a, *{target}), c = d] PASSED
test/test_python_errors.py::test_forbidden_name[None-a, b, *{target}, c = d] PASSED
test/test_python_errors.py::test_forbidden_name[None-a, b, {target}, c = d] PASSED
test/test_python_errors.py::test_forbidden_name[None-for (x, *{target}), q in y: pass] PASSED
test/test_python_errors.py::test_forbidden_name[None-for x, q, *{target} in y: pass] PASSED
test/test_python_errors.py::test_forbidden_name[None-for x, q, {target} in y: pass] PASSED
test/test_python_errors.py::test_forbidden_name[None-for x, {target} in y: pass] PASSED
test/test_python_errors.py::test_forbidden_name[True-(a, *{target}), c = d] PASSED
test/test_python_errors.py::test_forbidden_name[True-a, b, *{target}, c = d] PASSED
test/test_python_errors.py::test_forbidden_name[True-a, b, {target}, c = d] PASSED
test/test_python_errors.py::test_forbidden_name[True-for (x, *{target}), q in y: pass] PASSED
test/test_python_errors.py::test_forbidden_name[True-for x, q, *{target} in y: pass] PASSED
test/test_python_errors.py::test_forbidden_name[True-for x, q, {target} in y: pass] PASSED
test/test_python_errors.py::test_forbidden_name[True-for x, {target} in y: pass] PASSED
test/test_python_errors.py::test_forbidden_name[__debug__-(a, *{target}), c = d] PASSED
test/test_python_errors.py::test_forbidden_name[__debug__-a, b, *{target}, c = d] PASSED
test/test_python_errors.py::test_forbidden_name[__debug__-a, b, {target}, c = d] PASSED
test/test_python_errors.py::test_forbidden_name[__debug__-for (x, *{target}), q in y: pass] PASSED
test/test_python_errors.py::test_forbidden_name[__debug__-for x, q, *{target} in y: pass] PASSED
test/test_python_errors.py::test_forbidden_name[__debug__-for x, q, {target} in y: pass] PASSED
test/test_python_errors.py::test_forbidden_name[__debug__-for x, {target} in y: pass] PASSED
test/test_python_errors.py::test_future_import_first PASSED
test/test_python_errors.py::test_indentation_errors[ 1-positions0] PASSED
test/test_python_errors.py::test_indentation_errors[def x():\n    1\n 2-positions1] PASSED
test/test_python_errors.py::test_indentation_errors[def x():\n 1\n  2-positions2] PASSED
test/test_python_errors.py::test_indentation_errors[def x():\n1-positions3] PASSED
test/test_python_errors.py::test_invalid_fstrings[f"\\"-invalid syntax] PASSED
test/test_python_errors.py::test_invalid_fstrings[f'{1+}'-invalid syntax] PASSED
test/test_python_errors.py::test_invalid_fstrings[fr"\\"-invalid syntax] PASSED
test/test_python_errors.py::test_lambda_in_comp_if[[x for x in range(10) if (lambda: 1)]-3.9-True] PASSED
test/test_python_errors.py::test_lambda_in_comp_if[[x for x in range(10) if lambda: 1]-3.8-True] PASSED
test/test_python_errors.py::test_lambda_in_comp_if[[x for x in range(10) if lambda: 1]-3.9-False] PASSED
test/test_python_errors.py::test_named_argument_issues[3.10] PASSED
test/test_python_errors.py::test_named_argument_issues[3.6] PASSED
test/test_python_errors.py::test_named_argument_issues[3.7] PASSED
test/test_python_errors.py::test_named_argument_issues[3.8] PASSED
test/test_python_errors.py::test_named_argument_issues[3.9] PASSED
test/test_python_errors.py::test_non_async_in_async PASSED
test/test_python_errors.py::test_paren_kwarg PASSED
test/test_python_errors.py::test_parenthesized_single_starred_expr[a, ((*b)), c = 1] PASSED
test/test_python_errors.py::test_parenthesized_single_starred_expr[a, ((*b)), c] PASSED
test/test_python_errors.py::test_parenthesized_single_starred_expr[a, (*b), c = 1] PASSED
test/test_python_errors.py::test_parenthesized_single_starred_expr[a, (*b), c] PASSED
test/test_python_errors.py::test_python_exception_matches[ foo] PASSED
test/test_python_errors.py::test_python_exception_matches["" "" = 1] PASSED
test/test_python_errors.py::test_python_exception_matches["" = 1] PASSED
test/test_python_errors.py::test_python_exception_matches["""] PASSED
test/test_python_errors.py::test_python_exception_matches["] PASSED
test/test_python_errors.py::test_python_exception_matches["s" b"" ""] PASSED
test/test_python_errors.py::test_python_exception_matches["s" b""] PASSED
test/test_python_errors.py::test_python_exception_matches["test" += 1] PASSED
test/test_python_errors.py::test_python_exception_matches['''] PASSED
test/test_python_errors.py::test_python_exception_matches['] PASSED
test/test_python_errors.py::test_python_exception_matches[((())): int] PASSED
test/test_python_errors.py::test_python_exception_matches[(()): int] PASSED
test/test_python_errors.py::test_python_exception_matches[((*x))] PASSED
test/test_python_errors.py::test_python_exception_matches[(): int] PASSED
test/test_python_errors.py::test_python_exception_matches[(*x)] PASSED
test/test_python_errors.py::test_python_exception_matches[(True,) = x] PASSED
test/test_python_errors.py::test_python_exception_matches[([False], a) = x] PASSED
test/test_python_errors.py::test_python_exception_matches[(a if a else a) = a] PASSED
test/test_python_errors.py::test_python_exception_matches[(a, b) += 3] PASSED
test/test_python_errors.py::test_python_exception_matches[(a, b): int] PASSED
test/test_python_errors.py::test_python_exception_matches[(a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a, *d) = x] PASSED
test/test_python_errors.py::test_python_exception_matches[(x for 1 in y)] PASSED
test/test_python_errors.py::test_python_exception_matches[(x for x in y) = 1] PASSED
test/test_python_errors.py::test_python_exception_matches[(x if x else y) += 1] PASSED
test/test_python_errors.py::test_python_exception_matches[(x, y if a else q) += 1] PASSED
test/test_python_errors.py::test_python_exception_matches[(x,) += 1] PASSED
test/test_python_errors.py::test_python_exception_matches[(yield from x) += 1] PASSED
test/test_python_errors.py::test_python_exception_matches[(yield) += 1] PASSED
test/test_python_errors.py::test_python_exception_matches[*a += 1] PASSED
test/test_python_errors.py::test_python_exception_matches[*a = 3] PASSED
test/test_python_errors.py::test_python_exception_matches[*a, *b = 3, 3] PASSED
test/test_python_errors.py::test_python_exception_matches[*star,: int] PASSED
test/test_python_errors.py::test_python_exception_matches[*x; 1] PASSED
test/test_python_errors.py::test_python_exception_matches[*x] PASSED
test/test_python_errors.py::test_python_exception_matches[+a += 1] PASSED
test/test_python_errors.py::test_python_exception_matches[... += 1] PASSED
test/test_python_errors.py::test_python_exception_matches[... = 1] PASSED
test/test_python_errors.py::test_python_exception_matches[1 + (*x)] PASSED
test/test_python_errors.py::test_python_exception_matches[1 += 1] PASSED
test/test_python_errors.py::test_python_exception_matches[1 +] PASSED
test/test_python_errors.py::test_python_exception_matches[1 = 1] PASSED
test/test_python_errors.py::test_python_exception_matches[1 and 1 = 3] PASSED
test/test_python_errors.py::test_python_exception_matches[1 | 1 = 3] PASSED
test/test_python_errors.py::test_python_exception_matches[1**1 = 3] PASSED
test/test_python_errors.py::test_python_exception_matches[1.0 += 1] PASSED
test/test_python_errors.py::test_python_exception_matches[1; *x] PASSED
test/test_python_errors.py::test_python_exception_matches[1\n*x] PASSED
test/test_python_errors.py::test_python_exception_matches[?] PASSED
test/test_python_errors.py::test_python_exception_matches[None += 1] PASSED
test/test_python_errors.py::test_python_exception_matches[None = 1] PASSED
test/test_python_errors.py::test_python_exception_matches[True: int] PASSED
test/test_python_errors.py::test_python_exception_matches[[*[] for a in [1]]] PASSED
test/test_python_errors.py::test_python_exception_matches[[1 for *x in 1]] PASSED
test/test_python_errors.py::test_python_exception_matches[[1,2] += 1] PASSED
test/test_python_errors.py::test_python_exception_matches[[] += 10] PASSED
test/test_python_errors.py::test_python_exception_matches[[] += 11] PASSED
test/test_python_errors.py::test_python_exception_matches[[]: int] PASSED
test/test_python_errors.py::test_python_exception_matches[[a, 1] += 3] PASSED
test/test_python_errors.py::test_python_exception_matches[[a, b] += 3] PASSED
test/test_python_errors.py::test_python_exception_matches[[a, b]: int] PASSED
test/test_python_errors.py::test_python_exception_matches[[x for 1 in y]] PASSED
test/test_python_errors.py::test_python_exception_matches[[x for a, 3 in y]] PASSED
test/test_python_errors.py::test_python_exception_matches[[x for x in y] = 1] PASSED
test/test_python_errors.py::test_python_exception_matches[\\blub] PASSED
test/test_python_errors.py::test_python_exception_matches[\ndef glob():\n    global x\n    x: foo = 3\n] PASSED
test/test_python_errors.py::test_python_exception_matches[\ndef glob():\n    x = 3\n    global x] PASSED
test/test_python_errors.py::test_python_exception_matches[\ndef glob():\n    x = 3\n    nonlocal x] PASSED
test/test_python_errors.py::test_python_exception_matches[\ndef glob():\n    x = 3\n    x.z\n    global x] PASSED
test/test_python_errors.py::test_python_exception_matches[\ndef glob():\n    x = 3\n    x.z\n    nonlocal x] PASSED
test/test_python_errors.py::test_python_exception_matches[\ndef glob():\n    x.a: foo\n    global x] PASSED
test/test_python_errors.py::test_python_exception_matches[\ndef glob():\n    x: foo = 5\n    global x] PASSED
test/test_python_errors.py::test_python_exception_matches[\ndef glob():\n    x: foo = 5\n    x\n    global x] PASSED
test/test_python_errors.py::test_python_exception_matches[\ndef glob():\n    x: foo\n    global x] PASSED
test/test_python_errors.py::test_python_exception_matches[\ndef glob():\n    x[0]: foo\n    global x] PASSED
test/test_python_errors.py::test_python_exception_matches[\ndef glob():\n    x\n    global x] PASSED
test/test_python_errors.py::test_python_exception_matches[\ndef glob():\n    x\n    nonlocal x] PASSED
test/test_python_errors.py::test_python_exception_matches[\ndef glob(x):\n    global x\n] PASSED
test/test_python_errors.py::test_python_exception_matches[\ndef glob(x):\n    nonlocal x\n] PASSED
test/test_python_errors.py::test_python_exception_matches[\ndef x():\n    a = 4\n    def y():\n        global a\n        nonlocal a\n] PASSED
test/test_python_errors.py::test_python_exception_matches[\ndef x():\n    a = 4\n    def y():\n        global a\n        print(a)\n        def z():\n            nonlocal a\n] PASSED
test/test_python_errors.py::test_python_exception_matches[\ndef x():\n    a =3\n    def z():\n        nonlocal a\n        a = 3\n        nonlocal a\n] PASSED
test/test_python_errors.py::test_python_exception_matches[\ndef x():\n    def y():\n        nonlocal a\n] PASSED
test/test_python_errors.py::test_python_exception_matches[\ndef x():\n    nonlocal a\n] PASSED
test/test_python_errors.py::test_python_exception_matches[\ndef x(a):\n    def y():\n        a = 10\n        nonlocal a\n] PASSED
test/test_python_errors.py::test_python_exception_matches[__debug__ = 1] PASSED
test/test_python_errors.py::test_python_exception_matches[a + b += 1] PASSED
test/test_python_errors.py::test_python_exception_matches[a == b = 1] PASSED
test/test_python_errors.py::test_python_exception_matches[a > 1 += 1] PASSED
test/test_python_errors.py::test_python_exception_matches[a and b += 1] PASSED
test/test_python_errors.py::test_python_exception_matches[a() += 1] PASSED
test/test_python_errors.py::test_python_exception_matches[a, 1 = x] PASSED
test/test_python_errors.py::test_python_exception_matches[a, b += 1] PASSED
test/test_python_errors.py::test_python_exception_matches[a, b += 3] PASSED
test/test_python_errors.py::test_python_exception_matches[a, b: int = 3] PASSED
test/test_python_errors.py::test_python_exception_matches[async def bla():\n def x():  await bla()] PASSED
test/test_python_errors.py::test_python_exception_matches[async def foo(): await x = 3] PASSED
test/test_python_errors.py::test_python_exception_matches[async def foo(): del await x] PASSED
test/test_python_errors.py::test_python_exception_matches[async def foo(): yield from []] PASSED
test/test_python_errors.py::test_python_exception_matches[async def foo():\n yield x\n return 10] PASSED
test/test_python_errors.py::test_python_exception_matches[async def foo():\n yield x\n return 11] PASSED
test/test_python_errors.py::test_python_exception_matches[b"" "" b"" ""] PASSED
test/test_python_errors.py::test_python_exception_matches[b"" = 10] PASSED
test/test_python_errors.py::test_python_exception_matches[b"" = 11] PASSED
test/test_python_errors.py::test_python_exception_matches[b"\\"] PASSED
test/test_python_errors.py::test_python_exception_matches[b"\\x"] PASSED
test/test_python_errors.py::test_python_exception_matches[b"\xe4"] PASSED
test/test_python_errors.py::test_python_exception_matches[b"s" f""] PASSED
test/test_python_errors.py::test_python_exception_matches[break] PASSED
test/test_python_errors.py::test_python_exception_matches[class X(base for base in bases): pass] PASSED
test/test_python_errors.py::test_python_exception_matches[continue] PASSED
test/test_python_errors.py::test_python_exception_matches[def f():\n  def f():\n    def f():\n      def f():\n        def f():\n          def f():\n            def f():\n              def f():\n                def f():\n                  def f():\n                    def f():\n                      def f():\n                        def f():\n                          def f():\n                            def f():\n                              def f():\n                                def f():\n                                  def f():\n                                    def f():\n                                      def f():\n                                        def f():\n                                          def f():\n                                            def f():\n                                              def f():\n                                                def f():\n                                                  def f():\n                                                    def f():\n                                                      def f():\n                                                        def f():\n                                                          def f():\n                                                            def f():\n                                                              def f():\n                                                                def f():\n                                                                  def f():\n                                                                    def f():\n                                                                      def f():\n                                                                        def f():\n                                                                          def f():\n                                                                            def f():\n                                                                              def f():\n                                                                                def f():\n                                                                                  def f():\n                                                                                    def f():\n                                                                                      def f():\n                                                                                        def f():\n                                                                                          def f():\n                                                                                            def f():\n                                                                                              def f():\n                                                                                                def f():\n                                                                                                  def f():\n                                                                                                    def f():\n                                                                                                      def f():\n                                                                                                        def f():\n                                                                                                          def f():\n                                                                                                            def f():\n                                                                                                              def f():\n                                                                                                                def f():\n                                                                                                                  def f():\n                                                                                                                    def f():\n                                                                                                                      def f():\n                                                                                                                        def f():\n                                                                                                                          def f():\n                                                                                                                            def f():\n                                                                                                                              def f():\n                                                                                                                                def f():\n                                                                                                                                  def f():\n                                                                                                                                    def f():\n                                                                                                                                      def f():\n                                                                                                                                        def f():\n                                                                                                                                          def f():\n                                                                                                                                            def f():\n                                                                                                                                              def f():\n                                                                                                                                                def f():\n                                                                                                                                                  def f():\n                                                                                                                                                    def f():\n                                                                                                                                                      def f():\n                                                                                                                                                        def f():\n                                                                                                                                                          def f():\n                                                                                                                                                            def f():\n                                                                                                                                                              def f():\n                                                                                                                                                                def f():\n                                                                                                                                                                  def f():\n                                                                                                                                                                    def f():\n                                                                                                                                                                      def f():\n                                                                                                                                                                        def f():\n                                                                                                                                                                          def f():\n                                                                                                                                                                            def f():\n                                                                                                                                                                              def f():\n                                                                                                                                                                                def f():\n                                                                                                                                                                                  def f():\n                                                                                                                                                                                    def f():\n                                                                                                                                                                                      def f():\n                                                                                                                                                                                        def f():\n                                                                                                                                                                                          def f():\n                                                                                                                                                                                            def f():\n                                                                                                                                                                                              def f():\n                                                                                                                                                                                                def f():\n                                                                                                                                                                                                  def f():\n                                                                                                                                                                                                    def f():\n                                                                                                                                                                                                      def f():\n                                                                                                                                                                                                        pass] PASSED
test/test_python_errors.py::test_python_exception_matches[def f(x, x): pass] PASSED
test/test_python_errors.py::test_python_exception_matches[def f(x=3, y): pass] PASSED
test/test_python_errors.py::test_python_exception_matches[def foo(): (yield 1) = 3] PASSED
test/test_python_errors.py::test_python_exception_matches[def foo(): del (yield x)] PASSED
test/test_python_errors.py::test_python_exception_matches[def foo(): return *x] PASSED
test/test_python_errors.py::test_python_exception_matches[def foo(): x = yield 1 = 3] PASSED
test/test_python_errors.py::test_python_exception_matches[def foo(): yield *x] PASSED
test/test_python_errors.py::test_python_exception_matches[def x(): from math import *] PASSED
test/test_python_errors.py::test_python_exception_matches[def x():\n    1\n 2] PASSED
test/test_python_errors.py::test_python_exception_matches[def x():\n 1\n  2] PASSED
test/test_python_errors.py::test_python_exception_matches[def x(*): pass] PASSED
test/test_python_errors.py::test_python_exception_matches[del (*x,)] PASSED
test/test_python_errors.py::test_python_exception_matches[del (x, *[y, z])] PASSED
test/test_python_errors.py::test_python_exception_matches[del *a, b] PASSED
test/test_python_errors.py::test_python_exception_matches[del *x,] PASSED
test/test_python_errors.py::test_python_exception_matches[del *x.y,] PASSED
test/test_python_errors.py::test_python_exception_matches[del *x[y::], z] PASSED
test/test_python_errors.py::test_python_exception_matches[del *x[y],] PASSED
test/test_python_errors.py::test_python_exception_matches[del *x] PASSED
test/test_python_errors.py::test_python_exception_matches[del ...] PASSED
test/test_python_errors.py::test_python_exception_matches[del False] PASSED
test/test_python_errors.py::test_python_exception_matches[del None] PASSED
test/test_python_errors.py::test_python_exception_matches[del True] PASSED
test/test_python_errors.py::test_python_exception_matches[del [*x]] PASSED
test/test_python_errors.py::test_python_exception_matches[del [x for x in range(10)]] PASSED
test/test_python_errors.py::test_python_exception_matches[del [x, *(y, [*z])]] PASSED
test/test_python_errors.py::test_python_exception_matches[del bar, 1] PASSED
test/test_python_errors.py::test_python_exception_matches[del x + y] PASSED
test/test_python_errors.py::test_python_exception_matches[del x(y)] PASSED
test/test_python_errors.py::test_python_exception_matches[del x, (y, *z)] PASSED
test/test_python_errors.py::test_python_exception_matches[del x, *y] PASSED
test/test_python_errors.py::test_python_exception_matches[del {x, *y}] PASSED
test/test_python_errors.py::test_python_exception_matches[del {x, y}] PASSED
test/test_python_errors.py::test_python_exception_matches[del {x}] PASSED
test/test_python_errors.py::test_python_exception_matches[del {}] PASSED
test/test_python_errors.py::test_python_exception_matches[f"s" b""] PASSED
test/test_python_errors.py::test_python_exception_matches[f"xxx" += 1] PASSED
test/test_python_errors.py::test_python_exception_matches[f"{#}"] PASSED
test/test_python_errors.py::test_python_exception_matches[f"{'\\'}"] PASSED
test/test_python_errors.py::test_python_exception_matches[f"{'\\n'}"] PASSED
test/test_python_errors.py::test_python_exception_matches[f"{*x}"] PASSED
test/test_python_errors.py::test_python_exception_matches[f"{\\}"] PASSED
test/test_python_errors.py::test_python_exception_matches[f"{}"] PASSED
test/test_python_errors.py::test_python_exception_matches[f'{"}'0] PASSED
test/test_python_errors.py::test_python_exception_matches[f'{"}'1] PASSED
test/test_python_errors.py::test_python_exception_matches[f'{'0] PASSED
test/test_python_errors.py::test_python_exception_matches[f'{'1] PASSED
test/test_python_errors.py::test_python_exception_matches[f'{1!b}'] PASSED
test/test_python_errors.py::test_python_exception_matches[f'{1:{5:{3}}}'] PASSED
test/test_python_errors.py::test_python_exception_matches[f'{1;1}'] PASSED
test/test_python_errors.py::test_python_exception_matches[f'{a;}'] PASSED
test/test_python_errors.py::test_python_exception_matches[f'{b"" ""}'] PASSED
test/test_python_errors.py::test_python_exception_matches[f'{continue}'] PASSED
test/test_python_errors.py::test_python_exception_matches[f'}'] PASSED
test/test_python_errors.py::test_python_exception_matches[f() += 1] PASSED
test/test_python_errors.py::test_python_exception_matches[f(**x, *y)] PASSED
test/test_python_errors.py::test_python_exception_matches[f(**x, y)] PASSED
test/test_python_errors.py::test_python_exception_matches[f(**x, y=3, z)] PASSED
test/test_python_errors.py::test_python_exception_matches[f(lambda: 1=1)] PASSED
test/test_python_errors.py::test_python_exception_matches[f(x for x in bar, 1)] PASSED
test/test_python_errors.py::test_python_exception_matches[f(x=1, x=2)] PASSED
test/test_python_errors.py::test_python_exception_matches[f(x=2, y)] PASSED
test/test_python_errors.py::test_python_exception_matches[foo() = 1] PASSED
test/test_python_errors.py::test_python_exception_matches[foo(+a=3)] PASSED
test/test_python_errors.py::test_python_exception_matches[for (not 1) in []: pass] PASSED
test/test_python_errors.py::test_python_exception_matches[for *x in 1: pass] PASSED
test/test_python_errors.py::test_python_exception_matches[for a in [1]:\n    try:\n        pass\n    finally:\n        continue\n] PASSED
test/test_python_errors.py::test_python_exception_matches[for x, 1 in []: pass] PASSED
test/test_python_errors.py::test_python_exception_matches[from .__future__ import whatever] PASSED
test/test_python_errors.py::test_python_exception_matches[from __future__ import braces] PASSED
test/test_python_errors.py::test_python_exception_matches[from __future__ import whatever] PASSED
test/test_python_errors.py::test_python_exception_matches[from foo import a,] PASSED
test/test_python_errors.py::test_python_exception_matches[if 1: blubb\nif 1:\npass\nTrue and False] PASSED
test/test_python_errors.py::test_python_exception_matches[if 1:\nfoo] PASSED
test/test_python_errors.py::test_python_exception_matches[lambda a: 1 = 1] PASSED
test/test_python_errors.py::test_python_exception_matches[lambda x:None+=1] PASSED
test/test_python_errors.py::test_python_exception_matches[lambda x=3, y: x] PASSED
test/test_python_errors.py::test_python_exception_matches[nonlocal a] PASSED
test/test_python_errors.py::test_python_exception_matches[not 1 = 3] PASSED
test/test_python_errors.py::test_python_exception_matches[return] PASSED
test/test_python_errors.py::test_python_exception_matches[u"""\\U"""] PASSED
test/test_python_errors.py::test_python_exception_matches[u"\\"] PASSED
test/test_python_errors.py::test_python_exception_matches[u"\\Uffffffff"] PASSED
test/test_python_errors.py::test_python_exception_matches[u"\\u"] PASSED
test/test_python_errors.py::test_python_exception_matches[u"\\x"] PASSED
test/test_python_errors.py::test_python_exception_matches[u'''\\N{}'''] PASSED
test/test_python_errors.py::test_python_exception_matches[u'\\N{foo}'] PASSED
test/test_python_errors.py::test_python_exception_matches[with x as foo(): pass] PASSED
test/test_python_errors.py::test_python_exception_matches[with x() as __debug__: pass] PASSED
test/test_python_errors.py::test_python_exception_matches[x = *y] PASSED
test/test_python_errors.py::test_python_exception_matches[x: int = *y] PASSED
test/test_python_errors.py::test_python_exception_matches[yield from []] PASSED
test/test_python_errors.py::test_python_exception_matches[yield] PASSED
test/test_python_errors.py::test_python_exception_matches[{**{} for a in [1]}] PASSED
test/test_python_errors.py::test_python_exception_matches[{*x} += 1] PASSED
test/test_python_errors.py::test_python_exception_matches[{1} += 1] PASSED
test/test_python_errors.py::test_python_exception_matches[{a, b} = 1] PASSED
test/test_python_errors.py::test_python_exception_matches[{a: b} = 1] PASSED
test/test_python_errors.py::test_python_exception_matches[{a:b} += 1] PASSED
test/test_python_errors.py::test_python_exception_matches[{x for 1 in y}] PASSED
test/test_python_errors.py::test_python_exception_matches[{x for x in y} = 1] PASSED
test/test_python_errors.py::test_python_exception_matches[{x:x for 1 in y}] PASSED
test/test_python_errors.py::test_python_exception_matches[{x:x for x in y} = 1] PASSED
test/test_python_errors.py::test_python_exception_matches[{} += 1] PASSED
test/test_python_errors.py::test_python_exception_matches[{}: int] PASSED
test/test_python_errors.py::test_python_exception_matches[~ 1 = 3] PASSED
test/test_python_errors.py::test_repeated_kwarg PASSED
test/test_python_errors.py::test_starred_expr[((*z)) = 1-False] PASSED
test/test_python_errors.py::test_starred_expr[(*a,) = 1-True] PASSED
test/test_python_errors.py::test_starred_expr[(*a,)-True] PASSED
test/test_python_errors.py::test_starred_expr[(*y) = 1-False] PASSED
test/test_python_errors.py::test_starred_expr[(a, *[b, c]) = 1-True] PASSED
test/test_python_errors.py::test_starred_expr[(a, *[b, c])-True] PASSED
test/test_python_errors.py::test_starred_expr[*a, = 1-True] PASSED
test/test_python_errors.py::test_starred_expr[*a,-True] PASSED
test/test_python_errors.py::test_starred_expr[*a.b, = 1-True] PASSED
test/test_python_errors.py::test_starred_expr[*a.b,-True] PASSED
test/test_python_errors.py::test_starred_expr[*a[b::], c = 1-True] PASSED
test/test_python_errors.py::test_starred_expr[*a[b::], c-True] PASSED
test/test_python_errors.py::test_starred_expr[*a[b], = 1-True] PASSED
test/test_python_errors.py::test_starred_expr[*a[b],-True] PASSED
test/test_python_errors.py::test_starred_expr[*x = 2-False] PASSED
test/test_python_errors.py::test_starred_expr[[*(1,2,3), *(4,5,6)]-True] PASSED
test/test_python_errors.py::test_starred_expr[[*(1,2,3),]-True] PASSED
test/test_python_errors.py::test_starred_expr[[*(1,2,3)]-True] PASSED
test/test_python_errors.py::test_starred_expr[[*a] = 1-True] PASSED
test/test_python_errors.py::test_starred_expr[[*a]-True] PASSED
test/test_python_errors.py::test_starred_expr[[0, *(1,2,3)]-True] PASSED
test/test_python_errors.py::test_starred_expr[[a, *(b, [*c])] = 1-True] PASSED
test/test_python_errors.py::test_starred_expr[[a, *(b, [*c])]-True] PASSED
test/test_python_errors.py::test_starred_expr[a, (*b, c), d = 1-True] PASSED
test/test_python_errors.py::test_starred_expr[a, (*b, c), d-True] PASSED
test/test_python_errors.py::test_starred_expr[a, *b = 1-True] PASSED
test/test_python_errors.py::test_starred_expr[a, *b, c = 1-True] PASSED
test/test_python_errors.py::test_starred_expr[a, *b, c-True] PASSED
test/test_python_errors.py::test_starred_expr[a, *b-True] PASSED
test/test_python_errors.py::test_starred_expr[{*(1,2,3), *(4,5,6)}-True] PASSED
test/test_python_errors.py::test_starred_expr[{*(1,2,3),}-True] PASSED
test/test_python_errors.py::test_starred_expr[{*(1,2,3)}-True] PASSED
test/test_python_errors.py::test_starred_expr[{0, *(4,5,6)}-True] PASSED
test/test_python_errors.py::test_statically_nested_blocks PASSED
test/test_python_errors.py::test_syntax_errors[1 + * * 2-positions13] PASSED
test/test_python_errors.py::test_syntax_errors[1 +-positions0] PASSED
test/test_python_errors.py::test_syntax_errors[1 +\n-positions1] PASSED
test/test_python_errors.py::test_syntax_errors[1 +\n2 +-positions2] PASSED
test/test_python_errors.py::test_syntax_errors[1+?-positions7] PASSED
test/test_python_errors.py::test_syntax_errors[? * ?-positions12] PASSED
test/test_python_errors.py::test_syntax_errors[? ?-positions10] PASSED
test/test_python_errors.py::test_syntax_errors[?-positions8] PASSED
test/test_python_errors.py::test_syntax_errors[??-positions9] PASSED
test/test_python_errors.py::test_syntax_errors[?\n1\n?-positions14] PASSED
test/test_python_errors.py::test_syntax_errors[?\n?-positions11] PASSED
test/test_python_errors.py::test_syntax_errors[[\n-positions4] PASSED
test/test_python_errors.py::test_syntax_errors[[\ndef x(): pass-positions5] PASSED
test/test_python_errors.py::test_syntax_errors[[\nif 1: pass-positions6] PASSED
test/test_python_errors.py::test_syntax_errors[x + 2-positions3] PASSED
test/test_python_errors.py::test_too_many_levels_of_indentation PASSED
test/test_python_errors.py::test_trailing_comma[from foo import (\nbar,\n rab,\n)] PASSED
test/test_python_errors.py::test_trailing_comma[from foo import (bar, rab, )] PASSED
test/test_python_errors.py::test_unparenthesized_genexp[a((a for a in b), c)-True] PASSED
test/test_python_errors.py::test_unparenthesized_genexp[a(a for a in b)-True] PASSED
test/test_python_errors.py::test_unparenthesized_genexp[a(a for a in b, a)-False] PASSED
test/test_python_errors.py::test_unparenthesized_genexp[a(a for a in b,)-False] PASSED
test/test_python_errors.py::test_unparenthesized_genexp[a(a, a for a in b)-False] PASSED
test/test_python_errors.py::test_unparenthesized_genexp[a(a, b, (a for a in b), c, d)-True] PASSED
test/test_python_errors.py::test_unparenthesized_genexp[a(a, b, a for a in b, c, d)-False] PASSED
test/test_python_errors.py::test_unparenthesized_genexp[a(c, (a for a in b))-True] PASSED
test/test_python_errors.py::test_valid_del[del ()] PASSED
test/test_python_errors.py::test_valid_del[del (x, [y, z])] PASSED
test/test_python_errors.py::test_valid_del[del (x, y)] PASSED
test/test_python_errors.py::test_valid_del[del []] PASSED
test/test_python_errors.py::test_valid_del[del [x, y]] PASSED
test/test_python_errors.py::test_valid_del[del f(x)[y::]] PASSED
test/test_python_errors.py::test_valid_del[del x, y] PASSED
test/test_python_errors.py::test_valid_del[del x,] PASSED
test/test_python_errors.py::test_valid_del[del x.y, x[y]] PASSED
test/test_python_errors.py::test_valid_del[del x[[*y]::]] PASSED
test/test_python_errors.py::test_valid_del[del x[[*y]]] PASSED
test/test_python_errors.py::test_valid_del[del x] PASSED
test/test_python_errors.py::test_valid_empty_assignment[() = ()] PASSED
test/test_python_errors.py::test_valid_empty_assignment[() = []] PASSED
test/test_python_errors.py::test_valid_empty_assignment[[] = ()] PASSED
test/test_python_errors.py::test_valid_empty_assignment[[] = []] PASSED
test/test_python_errors.py::test_valid_fstrings[def foo(): return f"{yield 1}"] PASSED
test/test_python_errors.py::test_valid_fstrings[f"\\""] PASSED
test/test_python_errors.py::test_valid_fstrings[f"\\\\\\""] PASSED
test/test_python_errors.py::test_valid_fstrings[f'{*args,}'] PASSED
test/test_python_errors.py::test_valid_fstrings[fr"\\""] PASSED
test/test_python_errors.py::test_valid_fstrings[fr"\\\\\\""] PASSED
test/test_python_errors.py::test_valid_fstrings[print(f'Some {x:.2f} and some {y}')] PASSED
test/test_python_errors.py::test_valid_namedexpr[[total := total + v for v in range(10)]] PASSED
test/test_python_errors.py::test_valid_namedexpr[[x4 := x ** 5 for x in range(7)]] PASSED
test/test_python_errors.py::test_valid_namedexpr[a = (b := 1)] PASSED
test/test_python_errors.py::test_valid_namedexpr[a[(b:=0):1:2]] PASSED
test/test_python_errors.py::test_valid_namedexpr[a[(b:=0)]] PASSED
test/test_python_errors.py::test_valid_namedexpr[a[(b:=0, c:=0)]] PASSED
test/test_python_errors.py::test_valid_namedexpr[numbers = [y := math.factorial(x), y**2, y**3]] PASSED
test/test_python_errors.py::test_valid_namedexpr[while chunk := file.read(2):\n pass] PASSED
test/test_python_errors.py::test_valid_namedexpr[{(a:="a"): (b:=1)}] PASSED
test/test_python_errors.py::test_valid_namedexpr[{(y:=1): 2 for x in range(5)}] PASSED
test/test_python_errors.py::test_valid_namedexpr_index[a[b:=0, c:=0]] PASSED
test/test_python_errors.py::test_valid_namedexpr_index[a[b:=0]] PASSED
test/test_python_errors.py::test_valid_namedexpr_set[{x := 1, 2, 3}] PASSED
test/test_python_errors.py::test_valid_namedexpr_set[{x4 := x ** 5 for x in range(7)}] PASSED
test/test_tokenize.py::test_backslash PASSED
test/test_tokenize.py::test_brackets_no_indentation PASSED
test/test_tokenize.py::test_carriage_return PASSED
test/test_tokenize.py::test_end_pos_multi_line PASSED
test/test_tokenize.py::test_end_pos_one_line PASSED
test/test_tokenize.py::test_endmarker_end_pos PASSED
test/test_tokenize.py::test_error_literal PASSED
test/test_tokenize.py::test_error_string PASSED
test/test_tokenize.py::test_error_token_after_dedent PASSED
test/test_tokenize.py::test_form_feed PASSED
test/test_tokenize.py::test_fstring_assignment_expression[3.10-f"{(x:=10)}"-types1] PASSED
test/test_tokenize.py::test_fstring_assignment_expression[3.10-f"{x:=10}"-types0] PASSED
test/test_tokenize.py::test_fstring_assignment_expression[3.8-f"{(x:=10)}"-types1] PASSED
test/test_tokenize.py::test_fstring_assignment_expression[3.8-f"{x:=10}"-types0] PASSED
test/test_tokenize.py::test_fstring_assignment_expression[3.9-f"{(x:=10)}"-types1] PASSED
test/test_tokenize.py::test_fstring_assignment_expression[3.9-f"{x:=10}"-types0] PASSED
test/test_tokenize.py::test_fstring_end_error_pos[3.10] PASSED
test/test_tokenize.py::test_fstring_end_error_pos[3.8] PASSED
test/test_tokenize.py::test_fstring_end_error_pos[3.9] PASSED
test/test_tokenize.py::test_fstring_token_types[3.10-f" "{}-types3] PASSED
test/test_tokenize.py::test_fstring_token_types[3.10-f" {}"-types2] PASSED
test/test_tokenize.py::test_fstring_token_types[3.10-f"""abc\ndef"""-types7] PASSED
test/test_tokenize.py::test_fstring_token_types[3.10-f"""abc{\n123}def"""-types8] PASSED
test/test_tokenize.py::test_fstring_token_types[3.10-f""-types1] PASSED
test/test_tokenize.py::test_fstring_token_types[3.10-f"-types0] PASSED
test/test_tokenize.py::test_fstring_token_types[3.10-f"Some {x:.2f}{y}"-types6] PASSED
test/test_tokenize.py::test_fstring_token_types[3.10-f"\\""-types4] PASSED
test/test_tokenize.py::test_fstring_token_types[3.10-f"\\""-types5] PASSED
test/test_tokenize.py::test_fstring_token_types[3.10-f"\\\n{123}\\\n"-types10] PASSED
test/test_tokenize.py::test_fstring_token_types[3.10-f"abc\\\ndef"-types9] PASSED
test/test_tokenize.py::test_fstring_token_types[3.10-f"abc\ndef"-types13] PASSED
test/test_tokenize.py::test_fstring_token_types[3.10-f"{ ""}"-types15] PASSED
test/test_tokenize.py::test_fstring_token_types[3.10-f"{ f""}"-types16] PASSED
test/test_tokenize.py::test_fstring_token_types[3.10-f"{123:.2\\\nf}"-types12] PASSED
test/test_tokenize.py::test_fstring_token_types[3.10-f"{\\\n123}"-types11] PASSED
test/test_tokenize.py::test_fstring_token_types[3.10-print(f"Some {x:.2f}a{y}")-types14] PASSED
test/test_tokenize.py::test_fstring_token_types[3.6-f" "{}-types3] PASSED
test/test_tokenize.py::test_fstring_token_types[3.6-f" {}"-types2] PASSED
test/test_tokenize.py::test_fstring_token_types[3.6-f"""abc\ndef"""-types7] PASSED
test/test_tokenize.py::test_fstring_token_types[3.6-f"""abc{\n123}def"""-types8] PASSED
test/test_tokenize.py::test_fstring_token_types[3.6-f""-types1] PASSED
test/test_tokenize.py::test_fstring_token_types[3.6-f"-types0] PASSED
test/test_tokenize.py::test_fstring_token_types[3.6-f"Some {x:.2f}{y}"-types6] PASSED
test/test_tokenize.py::test_fstring_token_types[3.6-f"\\""-types4] PASSED
test/test_tokenize.py::test_fstring_token_types[3.6-f"\\""-types5] PASSED
test/test_tokenize.py::test_fstring_token_types[3.6-f"\\\n{123}\\\n"-types10] PASSED
test/test_tokenize.py::test_fstring_token_types[3.6-f"abc\\\ndef"-types9] PASSED
test/test_tokenize.py::test_fstring_token_types[3.6-f"abc\ndef"-types13] PASSED
test/test_tokenize.py::test_fstring_token_types[3.6-f"{ ""}"-types15] PASSED
test/test_tokenize.py::test_fstring_token_types[3.6-f"{ f""}"-types16] PASSED
test/test_tokenize.py::test_fstring_token_types[3.6-f"{123:.2\\\nf}"-types12] PASSED
test/test_tokenize.py::test_fstring_token_types[3.6-f"{\\\n123}"-types11] PASSED
test/test_tokenize.py::test_fstring_token_types[3.6-print(f"Some {x:.2f}a{y}")-types14] PASSED
test/test_tokenize.py::test_fstring_token_types[3.7-f" "{}-types3] PASSED
test/test_tokenize.py::test_fstring_token_types[3.7-f" {}"-types2] PASSED
test/test_tokenize.py::test_fstring_token_types[3.7-f"""abc\ndef"""-types7] PASSED
test/test_tokenize.py::test_fstring_token_types[3.7-f"""abc{\n123}def"""-types8] PASSED
test/test_tokenize.py::test_fstring_token_types[3.7-f""-types1] PASSED
test/test_tokenize.py::test_fstring_token_types[3.7-f"-types0] PASSED
test/test_tokenize.py::test_fstring_token_types[3.7-f"Some {x:.2f}{y}"-types6] PASSED
test/test_tokenize.py::test_fstring_token_types[3.7-f"\\""-types4] PASSED
test/test_tokenize.py::test_fstring_token_types[3.7-f"\\""-types5] PASSED
test/test_tokenize.py::test_fstring_token_types[3.7-f"\\\n{123}\\\n"-types10] PASSED
test/test_tokenize.py::test_fstring_token_types[3.7-f"abc\\\ndef"-types9] PASSED
test/test_tokenize.py::test_fstring_token_types[3.7-f"abc\ndef"-types13] PASSED
test/test_tokenize.py::test_fstring_token_types[3.7-f"{ ""}"-types15] PASSED
test/test_tokenize.py::test_fstring_token_types[3.7-f"{ f""}"-types16] PASSED
test/test_tokenize.py::test_fstring_token_types[3.7-f"{123:.2\\\nf}"-types12] PASSED
test/test_tokenize.py::test_fstring_token_types[3.7-f"{\\\n123}"-types11] PASSED
test/test_tokenize.py::test_fstring_token_types[3.7-print(f"Some {x:.2f}a{y}")-types14] PASSED
test/test_tokenize.py::test_fstring_token_types[3.8-f" "{}-types3] PASSED
test/test_tokenize.py::test_fstring_token_types[3.8-f" {}"-types2] PASSED
test/test_tokenize.py::test_fstring_token_types[3.8-f"""abc\ndef"""-types7] PASSED
test/test_tokenize.py::test_fstring_token_types[3.8-f"""abc{\n123}def"""-types8] PASSED
test/test_tokenize.py::test_fstring_token_types[3.8-f""-types1] PASSED
test/test_tokenize.py::test_fstring_token_types[3.8-f"-types0] PASSED
test/test_tokenize.py::test_fstring_token_types[3.8-f"Some {x:.2f}{y}"-types6] PASSED
test/test_tokenize.py::test_fstring_token_types[3.8-f"\\""-types4] PASSED
test/test_tokenize.py::test_fstring_token_types[3.8-f"\\""-types5] PASSED
test/test_tokenize.py::test_fstring_token_types[3.8-f"\\\n{123}\\\n"-types10] PASSED
test/test_tokenize.py::test_fstring_token_types[3.8-f"abc\\\ndef"-types9] PASSED
test/test_tokenize.py::test_fstring_token_types[3.8-f"abc\ndef"-types13] PASSED
test/test_tokenize.py::test_fstring_token_types[3.8-f"{ ""}"-types15] PASSED
test/test_tokenize.py::test_fstring_token_types[3.8-f"{ f""}"-types16] PASSED
test/test_tokenize.py::test_fstring_token_types[3.8-f"{123:.2\\\nf}"-types12] PASSED
test/test_tokenize.py::test_fstring_token_types[3.8-f"{\\\n123}"-types11] PASSED
test/test_tokenize.py::test_fstring_token_types[3.8-print(f"Some {x:.2f}a{y}")-types14] PASSED
test/test_tokenize.py::test_fstring_token_types[3.9-f" "{}-types3] PASSED
test/test_tokenize.py::test_fstring_token_types[3.9-f" {}"-types2] PASSED
test/test_tokenize.py::test_fstring_token_types[3.9-f"""abc\ndef"""-types7] PASSED
test/test_tokenize.py::test_fstring_token_types[3.9-f"""abc{\n123}def"""-types8] PASSED
test/test_tokenize.py::test_fstring_token_types[3.9-f""-types1] PASSED
test/test_tokenize.py::test_fstring_token_types[3.9-f"-types0] PASSED
test/test_tokenize.py::test_fstring_token_types[3.9-f"Some {x:.2f}{y}"-types6] PASSED
test/test_tokenize.py::test_fstring_token_types[3.9-f"\\""-types4] PASSED
test/test_tokenize.py::test_fstring_token_types[3.9-f"\\""-types5] PASSED
test/test_tokenize.py::test_fstring_token_types[3.9-f"\\\n{123}\\\n"-types10] PASSED
test/test_tokenize.py::test_fstring_token_types[3.9-f"abc\\\ndef"-types9] PASSED
test/test_tokenize.py::test_fstring_token_types[3.9-f"abc\ndef"-types13] PASSED
test/test_tokenize.py::test_fstring_token_types[3.9-f"{ ""}"-types15] PASSED
test/test_tokenize.py::test_fstring_token_types[3.9-f"{ f""}"-types16] PASSED
test/test_tokenize.py::test_fstring_token_types[3.9-f"{123:.2\\\nf}"-types12] PASSED
test/test_tokenize.py::test_fstring_token_types[3.9-f"{\\\n123}"-types11] PASSED
test/test_tokenize.py::test_fstring_token_types[3.9-print(f"Some {x:.2f}a{y}")-types14] PASSED
test/test_tokenize.py::test_function_whitespace PASSED
test/test_tokenize.py::test_identifier_contains_unicode PASSED
test/test_tokenize.py::test_indent_error_recovery PASSED
test/test_tokenize.py::test_quoted_strings PASSED
test/test_tokenize.py::test_simple_no_whitespace PASSED
test/test_tokenize.py::test_simple_with_whitespace PASSED
test/test_tokenize.py::test_token_types[  )\n foo-types11] PASSED
test/test_tokenize.py::test_token_types[  foo\n bar \n baz-types2] PASSED
test/test_tokenize.py::test_token_types[  foo\n bar-types1] PASSED
test/test_tokenize.py::test_token_types[ 1 \\\ndef-types13] PASSED
test/test_tokenize.py::test_token_types[ \x00a-types9] PASSED
test/test_tokenize.py::test_token_types[ foo-types0] PASSED
test/test_tokenize.py::test_token_types[ foo\nbar-types3] PASSED
test/test_tokenize.py::test_token_types[1foo1-types4] PASSED
test/test_tokenize.py::test_token_types[\u0bae\u0bc6\u0bb2\u0bcd\u0bb2\u0bbf\u0ba9\u0bae\u0bcd-types5] PASSED
test/test_tokenize.py::test_token_types[\xb2-types6] PASSED
test/test_tokenize.py::test_token_types[\xe4\xb2\xf6-types7] PASSED
test/test_tokenize.py::test_token_types[\xe4\xe4\xb2\xb9\xf6\xf6-types8] PASSED
test/test_tokenize.py::test_token_types[a\n b\n  )\n c-types12] PASSED
test/test_tokenize.py::test_token_types[class BaseCache:\n        a\n    def\n        b\n    def\n        c\n-types10] PASSED
test/test_tokenize.py::test_tokenize_multiline_I PASSED
test/test_tokenize.py::test_tokenize_multiline_II PASSED
test/test_tokenize.py::test_tokenize_multiline_III PASSED
test/test_tokenize.py::test_ur_literals PASSED
test/test_utils.py::test_bytes_to_unicode_failing_encoding[# coding: wtf-12\nfoo-replace] PASSED
test/test_utils.py::test_bytes_to_unicode_failing_encoding[# coding: wtf-12\nfoo-strict] PASSED
test/test_utils.py::test_bytes_to_unicode_failing_encoding[# coding: wtf-12\r\nfoo-replace] PASSED
test/test_utils.py::test_bytes_to_unicode_failing_encoding[# coding: wtf-12\r\nfoo-strict] PASSED
test/test_utils.py::test_bytes_to_unicode_failing_encoding[# coding: wtf-12\rfoo-replace] PASSED
test/test_utils.py::test_bytes_to_unicode_failing_encoding[# coding: wtf-12\rfoo-strict] PASSED
test/test_utils.py::test_parse_version_string[3-version0] PASSED
test/test_utils.py::test_parse_version_string[3.10-version3] PASSED
test/test_utils.py::test_parse_version_string[3.10a9-version4] PASSED
test/test_utils.py::test_parse_version_string[3.10b9-version5] PASSED
test/test_utils.py::test_parse_version_string[3.10rc9-version6] PASSED
test/test_utils.py::test_parse_version_string[3.6-version1] PASSED
test/test_utils.py::test_parse_version_string[3.6.10-version2] PASSED
test/test_utils.py::test_python_bytes_to_unicode_unicode_text PASSED
test/test_utils.py::test_split_lines[-expected_result10-False] PASSED
test/test_utils.py::test_split_lines[-expected_result11-True] PASSED
test/test_utils.py::test_split_lines[\n-expected_result12-False] PASSED
test/test_utils.py::test_split_lines[\n-expected_result13-True] PASSED
test/test_utils.py::test_split_lines[\r-expected_result14-False] PASSED
test/test_utils.py::test_split_lines[\r-expected_result15-True] PASSED
test/test_utils.py::test_split_lines[\x0casd\r\n-expected_result8-False] PASSED
test/test_utils.py::test_split_lines[\x0casd\r\n-expected_result9-True] PASSED
test/test_utils.py::test_split_lines[\x1c-expected_result18-False] PASSED
test/test_utils.py::test_split_lines[\x1c-expected_result19-True] PASSED
test/test_utils.py::test_split_lines[a\x0bb-expected_result16-False] PASSED
test/test_utils.py::test_split_lines[a\x0bb-expected_result17-True] PASSED
test/test_utils.py::test_split_lines[asd\n-expected_result4-False] PASSED
test/test_utils.py::test_split_lines[asd\n-expected_result5-True] PASSED
test/test_utils.py::test_split_lines[asd\r-expected_result2-False] PASSED
test/test_utils.py::test_split_lines[asd\r-expected_result3-True] PASSED
test/test_utils.py::test_split_lines[asd\r\n-expected_result0-False] PASSED
test/test_utils.py::test_split_lines[asd\r\n-expected_result1-True] PASSED
test/test_utils.py::test_split_lines[asd\r\n\x0c-expected_result6-False] PASSED
test/test_utils.py::test_split_lines[asd\r\n\x0c-expected_result7-True] PASSED
test/test_utils.py::test_utf8_bom PASSED

=============================== warnings summary ===============================
../../../../../../../..$(PYTHON_DIR)/vendor-packages/pytest_freezegun.py:17: 2638 warnings
  $(PYTHON_DIR)/vendor-packages/pytest_freezegun.py:17: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    if LooseVersion(pytest.__version__) < LooseVersion('3.6.0'):

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======== 1319 passed, 2638 warnings ========
