https://github.com/tox-dev/py-filelock/issues/234

--- filelock-3.12.0.orig/tox.ini
+++ filelock-3.12.0/tox.ini
@@ -0,0 +1,108 @@
+[tox]
+requires =
+    tox>=4.2
+env_list =
+    fix
+    py311
+    py310
+    py39
+    py38
+    py37
+    type
+    coverage
+    docs
+    readme
+skip_missing_interpreters = true
+
+[testenv]
+description = run tests with {basepython}
+package = wheel
+wheel_build_env = .pkg
+extras =
+    testing
+pass_env =
+    PYTEST_ADDOPTS
+set_env =
+    COVERAGE_FILE = {toxworkdir}{/}.coverage.{envname}
+commands =
+    pytest {tty:--color=yes} {posargs: \
+      --junitxml {toxworkdir}{/}junit.{envname}.xml --cov {envsitepackagesdir}{/}filelock --cov {toxinidir}{/}tests \
+      --cov-config=pyproject.toml --no-cov-on-fail --cov-report term-missing:skip-covered --cov-context=test \
+      --cov-report html:{envtmpdir}{/}htmlcov --cov-report xml:{toxworkdir}{/}coverage.{envname}.xml \
+      tests
+    diff-cover --compare-branch {env:DIFF_AGAINST:origin/main} {toxworkdir}{/}coverage.{envname}.xml}
+
+[testenv:fix]
+description = format the code base to adhere to our styles, and complain about what we cannot do automatically
+base_python = python3.10
+skip_install = true
+deps =
+    pre-commit>=3.2.2
+commands =
+    pre-commit run --all-files --show-diff-on-failure
+    python -c 'import pathlib; print("hint: run \{\} install to add checks as pre-commit hook".format(pathlib.Path(r"{envdir}") / "bin" / "pre-commit"))'
+
+[testenv:type]
+description = run type check on code base
+deps =
+    mypy==1.2
+set_env =
+    {tty:MYPY_FORCE_COLOR = 1}
+commands =
+    mypy --strict src/filelock
+    mypy --strict tests
+
+[testenv:coverage]
+description = combine coverage files and generate diff (against DIFF_AGAINST defaulting to origin/main)
+skip_install = true
+deps =
+    covdefaults>=2.3
+    coverage[toml]>=7.2.3
+    diff-cover>=7.5
+extras =
+parallel_show_output = true
+pass_env =
+    DIFF_AGAINST
+set_env =
+    COVERAGE_FILE = {toxworkdir}/.coverage
+commands =
+    coverage combine
+    coverage report --skip-covered --show-missing
+    coverage xml -o {toxworkdir}/coverage.xml
+    coverage html -d {toxworkdir}/htmlcov
+    diff-cover --compare-branch {env:DIFF_AGAINST:origin/main} {toxworkdir}/coverage.xml
+depends =
+    py311
+    py310
+    py39
+    py38
+    py37
+
+[testenv:docs]
+description = build documentation
+extras =
+    docs
+commands =
+    sphinx-build -d "{envtmpdir}{/}doctree" docs "{toxworkdir}{/}docs_out" --color -b html -W {posargs}
+    python -c 'print(r"documentation available under file://{toxworkdir}{/}docs_out{/}index.html")'
+
+[testenv:readme]
+description = check that the long description is valid (need for PyPI)
+skip_install = true
+deps =
+    build[virtualenv]>=0.10
+    twine>=4.0.2
+extras =
+commands =
+    pyproject-build -o {envtmpdir} --wheel --sdist .
+    twine check {envtmpdir}/*
+
+[testenv:dev]
+description = generate a DEV environment
+package = editable
+extras =
+    docs
+    testing
+commands =
+    python -m pip list --format=columns
+    python -c 'import sys; print(sys.executable)'
