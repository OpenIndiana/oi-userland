This patch corrects code constructs that do not work for OI or
that do not work for python3.

--- dbus-python-1.2.18/dbus/gobject_service.py-orig	Thu Sep 12 04:03:47 2019
+++ dbus-python-1.2.18/dbus/gobject_service.py	Thu Jan 13 12:38:05 2022
@@ -33,6 +33,9 @@
 and using dbus.gi_service instead of dbus.gobject_service, is recommended.
 """), DeprecationWarning, stacklevel=2)
 
+# The test below only works if gi is already imported
+import gi
+
 if 'gi' in sys.modules:
     # this worked in dbus-python 1.0, so preserve the functionality
     from gi.repository import GObject as gobject
@@ -50,7 +53,7 @@
         gobject.GObject.__class__.__init__(cls, name, bases, dct)
         dbus.service.InterfaceType.__init__(cls, name, bases, dct)
 
-class ExportedGObject(gobject.GObject, dbus.service.Object):
+class ExportedGObject(gobject.GObject, dbus.service.Object, metaclass=ExportedGObjectType):
     """A GObject which is exported on the D-Bus.
 
     Because GObject and `dbus.service.Object` both have custom metaclasses,
@@ -58,7 +61,6 @@
     class has `ExportedGObjectType` as its metaclass, which is sufficient
     to make it work correctly.
     """
-    __metaclass__ = ExportedGObjectType
 
     def __init__(self, conn=None, object_path=None, **kwargs):
         """Initialize an exported GObject.
