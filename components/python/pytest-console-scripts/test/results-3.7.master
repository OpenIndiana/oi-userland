py$(PYV) create: $(@D)/.tox/py$(PYV)
py$(PYV) run-test: commands[0] | python -m pytest tests
============================= test session starts ==============================
platform sunos5 -- Python $(PYTHON_VERSION).X -- $(@D)/.tox/py$(PYV)/bin/python
cachedir: .tox/py$(PYV)/.pytest_cache
hypothesis profile 'default' -> database=DirectoryBasedExampleDatabase('$(@D)/.hypothesis/examples')
rootdir: $(@D)
collecting ... collected 40 items

tests/test_console_scripts.py::test_command_line_option[None] PASSED
tests/test_console_scripts.py::test_command_line_option[both] PASSED
tests/test_console_scripts.py::test_command_line_option[inprocess] PASSED
tests/test_console_scripts.py::test_command_line_option[subprocess] PASSED
tests/test_console_scripts.py::test_config_option[None] PASSED
tests/test_console_scripts.py::test_config_option[both] PASSED
tests/test_console_scripts.py::test_config_option[inprocess] PASSED
tests/test_console_scripts.py::test_config_option[subprocess] PASSED
tests/test_console_scripts.py::test_help_message PASSED
tests/test_console_scripts.py::test_override_launch_mode_with_mark[None] PASSED
tests/test_console_scripts.py::test_override_launch_mode_with_mark[both] PASSED
tests/test_console_scripts.py::test_override_launch_mode_with_mark[inprocess] PASSED
tests/test_console_scripts.py::test_override_launch_mode_with_mark[subprocess] PASSED
tests/test_run_scripts.py::test_abnormal_exit[inprocess] PASSED
tests/test_run_scripts.py::test_abnormal_exit[subprocess] PASSED
tests/test_run_scripts.py::test_cwd[inprocess] PASSED
tests/test_run_scripts.py::test_elsewhere_in_the_path[inprocess] PASSED
tests/test_run_scripts.py::test_elsewhere_in_the_path[subprocess] PASSED
tests/test_run_scripts.py::test_env[inprocess] PASSED
tests/test_run_scripts.py::test_env[subprocess] PASSED
tests/test_run_scripts.py::test_exception[inprocess] PASSED
tests/test_run_scripts.py::test_exception[subprocess] PASSED
tests/test_run_scripts.py::test_global_logging[inprocess] PASSED
tests/test_run_scripts.py::test_hide_run_result_arg[inprocess] PASSED
tests/test_run_scripts.py::test_hide_run_result_opt[inprocess] PASSED
tests/test_run_scripts.py::test_logging[inprocess] PASSED
tests/test_run_scripts.py::test_mocking[inprocess] PASSED
tests/test_run_scripts.py::test_not_installed[inprocess] PASSED
tests/test_run_scripts.py::test_not_installed[subprocess] PASSED
tests/test_run_scripts.py::test_print_stdio_on_error[inprocess-inprocess-False] PASSED
tests/test_run_scripts.py::test_print_stdio_on_error[inprocess-inprocess-True] PASSED
tests/test_run_scripts.py::test_print_stdio_on_error[subprocess-inprocess-False] PASSED
tests/test_run_scripts.py::test_print_stdio_on_error[subprocess-inprocess-True] PASSED
tests/test_run_scripts.py::test_return_None[inprocess] PASSED
tests/test_run_scripts.py::test_run_pytest[inprocess-inprocess] PASSED
tests/test_run_scripts.py::test_run_pytest[inprocess-subprocess] PASSED
tests/test_run_scripts.py::test_run_pytest[subprocess-inprocess] PASSED
tests/test_run_scripts.py::test_run_pytest[subprocess-subprocess] PASSED
tests/test_run_scripts.py::test_stdin[inprocess] PASSED
tests/test_run_scripts.py::test_stdin[subprocess] PASSED

=============================== warnings summary ===============================
tests/test_run_scripts.py: 8 warnings
tests/test_console_scripts.py: 13 warnings
  $(PYTHON_DIR)/vendor-packages/pytest_travis_fold.py:186: PytestDeprecationWarning: The hookimpl pytest_configure uses old-style configuration options (marks or attributes).
  Please use the pytest.hookimpl(trylast=True) decorator instead
   to configure the hooks.
   See https://docs.pytest.org/en/latest/deprecations.html#configuring-hook-specs-impls-using-markers
    @pytest.mark.trylast  # to let 'terminalreporter' be registered first

tests/test_run_scripts.py: 8 warnings
tests/test_console_scripts.py: 13 warnings
  $(PYTHON_DIR)/vendor-packages/pytest_cov/plugin.py:136: PytestDeprecationWarning: The hookimpl pytest_load_initial_conftests uses old-style configuration options (marks or attributes).
  Please use the pytest.hookimpl(tryfirst=True) decorator instead
   to configure the hooks.
   See https://docs.pytest.org/en/latest/deprecations.html#configuring-hook-specs-impls-using-markers
    @pytest.mark.tryfirst

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======== 40 passed, 42 warnings ========
___________________________________ summary ____________________________________
  py$(PYV): commands succeeded
  congratulations :)
