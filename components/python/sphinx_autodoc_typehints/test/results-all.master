py$(PYV): remove tox env folder $(@D)/.tox/py$(PYV)
py$(PYV): commands[0]> python -m pytest --junitxml $(@D)/.tox/junit.py$(PYV).xml --cov $(PYTHON_DIR)/site-packages/sphinx_autodoc_typehints --cov $(@D)/tests --cov-config=pyproject.toml --no-cov-on-fail --cov-report term-missing:skip-covered --cov-context=test --cov-report html:$(@D)/.tox/py$(PYV)/tmp/htmlcov --cov-report xml:$(@D)/.tox/coverage.py$(PYV).xml tests
============================= test session starts ==============================
platform sunos5 -- Python $(PYTHON_VERSION).X -- $(@D)/.tox/py$(PYV)/bin/python
cachedir: .tox/py$(PYV)/.pytest_cache
rootdir: $(@D)
configfile: pyproject.toml
collecting ... collected 182 items

  self.warn(f"Module {pkg} was never imported.", slug="module-not-imported")
$(PYTHON_DIR)/vendor-packages/coverage/inorout.py:503: CoverageWarning: Module $(PYTHON_DIR)/site-packages/sphinx_autodoc_typehints was never imported. (module-not-imported)
tests/test_integration.py::test_integration[ClassWithTypehintsNotInline] PASSED
tests/test_integration.py::test_integration[ClassWithTypehints] PASSED
tests/test_integration.py::test_integration[Class] PASSED
tests/test_integration.py::test_integration[DataClass] PASSED
tests/test_integration.py::test_integration[Decorator] PASSED
tests/test_integration.py::test_integration[DummyException] PASSED
tests/test_integration.py::test_integration[ParamAndAttributeHaveSameName] PASSED
tests/test_integration.py::test_integration[TestClassAttributeDocs] PASSED
tests/test_integration.py::test_integration[decorator_2] PASSED
tests/test_integration.py::test_integration[docstring_with_bullet_list_after_params] PASSED
tests/test_integration.py::test_integration[docstring_with_definition_list_after_params] PASSED
tests/test_integration.py::test_integration[docstring_with_definition_list_after_params_no_blank_line] PASSED
tests/test_integration.py::test_integration[docstring_with_enum_list_after_params] PASSED
tests/test_integration.py::test_integration[docstring_with_multiline_note_after_params] PASSED
tests/test_integration.py::test_integration[empty_line_between_parameters] PASSED
tests/test_integration.py::test_integration[func_with_code_block] PASSED
tests/test_integration.py::test_integration[func_with_definition_list] PASSED
tests/test_integration.py::test_integration[func_with_examples] PASSED
tests/test_integration.py::test_integration[func_with_examples_and_returns_after] PASSED
tests/test_integration.py::test_integration[func_with_overload] PASSED
tests/test_integration.py::test_integration[func_with_parameters_and_stuff_after] PASSED
tests/test_integration.py::test_integration[func_with_rtype_in_weird_spot] PASSED
tests/test_integration.py::test_integration[function] PASSED
tests/test_integration.py::test_integration[function_with_escaped_default] PASSED
tests/test_integration.py::test_integration[function_with_starred_documentation_param_names] PASSED
tests/test_integration.py::test_integration[function_with_typehint_comment] PASSED
tests/test_integration.py::test_integration[function_with_typehint_comment_not_inline] PASSED
tests/test_integration.py::test_integration[function_with_unresolvable_annotation] PASSED
tests/test_integration.py::test_integration[get_local_function] PASSED
tests/test_integration.py::test_integration[google_docstrings] PASSED
tests/test_integration.py::test_integration[has_newtype] PASSED
tests/test_integration.py::test_integration[has_typevar] PASSED
tests/test_integration.py::test_integration[mocked_import] PASSED
tests/test_integration.py::test_integration[napoleon_returns] PASSED
tests/test_integration.py::test_integration[typehints_use_signature] PASSED
tests/test_integration.py::test_integration[undocumented_function] PASSED
tests/test_sphinx_autodoc_typehints.py::test_always_document_param_types[doc_param_type] PASSED
tests/test_sphinx_autodoc_typehints.py::test_always_document_param_types[no_doc_param_type] PASSED
tests/test_sphinx_autodoc_typehints.py::test_bound_class_method[from_magic] PASSED
tests/test_sphinx_autodoc_typehints.py::test_bound_class_method[method] PASSED
tests/test_sphinx_autodoc_typehints.py::test_default_annotation_without_typehints PASSED
tests/test_sphinx_autodoc_typehints.py::test_default_no_signature[1] PASSED
tests/test_sphinx_autodoc_typehints.py::test_default_no_signature[cmp_to_key] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[A-:py:class:`~test_sphinx_autodoc_typehints.A`] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[AnyStr-:py:data:`~typing.AnyStr`] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[B-:py:class:`~test_sphinx_autodoc_typehints.B`] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[C-:py:class:`~test_sphinx_autodoc_typehints.C`] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[Callable-:py:class:`~collections.abc.Callable`\\ \\[\\[:py:class:`int`, :py:class:`str`], :py:class:`bool`]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[Callable-:py:class:`~collections.abc.Callable`] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[D-:py:class:`~test_sphinx_autodoc_typehints.D`] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[E-:py:class:`~test_sphinx_autodoc_typehints.E`] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[IO-:py:class:`~typing.IO`] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[Metaclass-:py:class:`~test_sphinx_autodoc_typehints.Metaclass`] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[NoneType-:py:obj:`None`] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[P-:py:class:`~typing.ParamSpec`\\ \\(``P``)] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[P_bound-:py:class:`~typing.ParamSpec`\\ \\(``P_bound``, bound= :py:class:`str`)] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[P_co-:py:class:`~typing.ParamSpec`\\ \\(``P_co``, covariant=True)] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[P_contra-:py:class:`~typing.ParamSpec`\\ \\(``P_contra``, contravariant=True)] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[S-:py:class:`~typing.TypeVar`\\ \\(``S``, bound= miss)] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[StringIO-:py:class:`~io.StringIO`] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[T-:py:class:`~typing.TypeVar`\\ \\(``T``)] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[U_co-:py:class:`~typing.TypeVar`\\ \\(``U_co``, covariant=True)] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[V_contra-:py:class:`~typing.TypeVar`\\ \\(``V_contra``, contravariant=True)] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[W-:py:func:`~typing.NewType`\\ \\(``W``, :py:class:`str`)] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[X-:py:class:`~typing.TypeVar`\\ \\(``X``, :py:class:`str`, :py:class:`int`)] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[Y-:py:class:`~typing.TypeVar`\\ \\(``Y``, bound= :py:class:`str`)] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[Z-:py:class:`~typing.TypeVar`\\ \\(``Z``, bound= A)] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation10-:py:data:`~typing.Any`] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation12-:py:class:`~typing.Generic`\\ \\[:py:class:`~typing.TypeVar`\\ \\(``T``)]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation13-:py:class:`~typing.Mapping`] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation14-:py:class:`~typing.Mapping`\\ \\[:py:class:`~typing.TypeVar`\\ \\(``T``), :py:class:`int`]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation15-:py:class:`~typing.Mapping`\\ \\[:py:class:`str`, :py:class:`~typing.TypeVar`\\ \\(``V_contra``, contravariant=True)]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation16-:py:class:`~typing.Mapping`\\ \\[:py:class:`~typing.TypeVar`\\ \\(``T``), :py:class:`~typing.TypeVar`\\ \\(``U_co``, covariant=True)]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation17-:py:class:`~typing.Mapping`\\ \\[:py:class:`str`, :py:class:`bool`]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation18-:py:class:`~typing.Dict`] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation19-:py:class:`~typing.Dict`\\ \\[:py:class:`~typing.TypeVar`\\ \\(``T``), :py:class:`int`]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation20-:py:class:`~typing.Dict`\\ \\[:py:class:`str`, :py:class:`~typing.TypeVar`\\ \\(``V_contra``, contravariant=True)]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation21-:py:class:`~typing.Dict`\\ \\[:py:class:`~typing.TypeVar`\\ \\(``T``), :py:class:`~typing.TypeVar`\\ \\(``U_co``, covariant=True)]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation22-:py:class:`~typing.Dict`\\ \\[:py:class:`str`, :py:class:`bool`]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation23-:py:data:`~typing.Tuple`] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation24-:py:data:`~typing.Tuple`\\ \\[:py:class:`str`, :py:class:`bool`]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation25-:py:data:`~typing.Tuple`\\ \\[:py:class:`int`, :py:class:`int`, :py:class:`int`]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation26-:py:data:`~typing.Tuple`\\ \\[:py:class:`str`, :py:data:`...<Ellipsis>`]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation27-:py:data:`~typing.Union`] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation28-:py:data:`~typing.Union`\\ \\[:py:class:`str`, :py:class:`bool`]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation29-:py:data:`~typing.Union`\\ \\[:py:class:`str`, :py:class:`bool`, :py:obj:`None`]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation30-:py:data:`~typing.Union`\\ \\[:py:class:`str`, :py:data:`~typing.Any`]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation31-:py:data:`~typing.Optional`\\ \\[:py:class:`str`]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation32-:py:data:`~typing.Optional`\\ \\[:py:class:`str`]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation33-:py:data:`~typing.Union`\\ \\[:py:class:`str`, :py:class:`bool`, :py:obj:`None`]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation34-:py:data:`~typing.Callable`] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation35-:py:data:`~typing.Callable`\\ \\[:py:data:`...<Ellipsis>`, :py:class:`int`]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation36-:py:data:`~typing.Callable`\\ \\[\\[:py:class:`int`], :py:class:`int`]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation37-:py:data:`~typing.Callable`\\ \\[\\[:py:class:`int`, :py:class:`str`], :py:class:`bool`]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation38-:py:data:`~typing.Callable`\\ \\[\\[:py:class:`int`, :py:class:`str`], :py:obj:`None`]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation39-:py:data:`~typing.Callable`\\ \\[\\[:py:class:`~typing.TypeVar`\\ \\(``T``)], :py:class:`~typing.TypeVar`\\ \\(``T``)]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation41-:py:class:`~typing.Pattern`] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation42-:py:class:`~typing.Pattern`\\ \\[:py:class:`str`]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation44-:py:class:`~typing.IO`\\ \\[:py:class:`str`]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation48-:py:class:`~test_sphinx_autodoc_typehints.B`\\ \\[:py:class:`int`]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation52-:py:class:`~test_sphinx_autodoc_typehints.E`\\ \\[:py:class:`int`]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation65-:py:data:`~typing.Tuple`] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation66-:py:data:`~typing.Tuple`\\ \\[:py:class:`int`]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation67-:py:data:`~typing.Tuple`\\ \\[:py:class:`int`, :py:class:`int`]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation68-:py:data:`~typing.Tuple`\\ \\[:py:class:`int`, :py:data:`...<Ellipsis>`]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation69-:py:data:`~typing.Union`\\ \\[:py:class:`int`, :py:class:`~typing.List`\\ \\[RecList]]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation70-:py:data:`~typing.Union`\\ \\[:py:class:`bool`, :py:class:`~typing.List`\\ \\[MutualRecB]]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation8-:py:class:`~typing.Type`] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[annotation9-:py:class:`~typing.Type`\\ \\[:py:class:`~test_sphinx_autodoc_typehints.A`]] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[function-:py:class:`~types.FunctionType`] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[int-:py:class:`int`] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[module-:py:class:`~types.ModuleType`] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[str-:py:class:`str`] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation[type-:py:class:`type`] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation_both_libs[ClassVar-int-:py:data:`~typing.ClassVar`\\ \\[:py:class:`int`]-typing] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation_both_libs[ClassVar-int-:py:data:`~typing.ClassVar`\\ \\[:py:class:`int`]-typing_extensions] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation_both_libs[Literal-params2-:py:data:`~typing.Literal`\\ \\[``'a'``, ``1``]-typing] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation_both_libs[Literal-params2-:py:data:`~typing.Literal`\\ \\[``'a'``, ``1``]-typing_extensions] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation_both_libs[NoReturn-None-:py:data:`~typing.NoReturn`-typing] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation_both_libs[NoReturn-None-:py:data:`~typing.NoReturn`-typing_extensions] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation_both_libs[Type-None-:py:class:`~typing.Type`-typing] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation_both_libs[Type-None-:py:class:`~typing.Type`-typing_extensions] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation_both_libs[Type-params4-:py:class:`~typing.Type`\\ \\[:py:class:`~test_sphinx_autodoc_typehints.A`]-typing] PASSED
tests/test_sphinx_autodoc_typehints.py::test_format_annotation_both_libs[Type-params4-:py:class:`~typing.Type`\\ \\[:py:class:`~test_sphinx_autodoc_typehints.A`]-typing_extensions] PASSED
tests/test_sphinx_autodoc_typehints.py::test_no_source_code_type_guard PASSED
tests/test_sphinx_autodoc_typehints.py::test_normalize_source_lines_async_def PASSED
tests/test_sphinx_autodoc_typehints.py::test_normalize_source_lines_def_starting_decorator_parameter PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[A] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[AnyStr] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[Any] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[B] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[C] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[Callable] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[Callable_all_types] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[Callable_returntype] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[CodeType] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[CoroutineType] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[D] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[Dict] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[Dict_parametrized] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[Dict_typevar] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[E] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[E_parametrized] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[FunctionType] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[IO] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[Inner] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[Match] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[Match_parametrized] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[Metaclass] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[ModuleType] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[None] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[P] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[P_args] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[P_kwargs] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[Pattern] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[Pattern_parametrized] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[Slotted] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[Tuple] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[Tuple_parametrized] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[Union] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[W] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[collections.abc.Callable_all_types] PASSED
tests/test_sphinx_autodoc_typehints.py::test_parse_annotation[str] PASSED
tests/test_sphinx_autodoc_typehints.py::test_process_docstring_slot_wrapper PASSED
tests/test_sphinx_autodoc_typehints.py::test_resolve_typing_guard_attrs_imports PASSED
tests/test_sphinx_autodoc_typehints.py::test_resolve_typing_guard_imports PASSED
tests/test_sphinx_autodoc_typehints.py::test_sphinx_output_default_role PASSED
tests/test_sphinx_autodoc_typehints.py::test_sphinx_output_defaults[None-("int") -- bar] PASSED
tests/test_sphinx_autodoc_typehints.py::test_sphinx_output_defaults[braces-("int" (default: "1")) -- bar] PASSED
tests/test_sphinx_autodoc_typehints.py::test_sphinx_output_defaults[braces-after-("int") -- bar (default: "1")] PASSED
tests/test_sphinx_autodoc_typehints.py::test_sphinx_output_defaults[comma-("int", default: "1") -- bar] PASSED
tests/test_sphinx_autodoc_typehints.py::test_sphinx_output_defaults[comma-after-expected4] PASSED
tests/test_sphinx_autodoc_typehints.py::test_sphinx_output_formatter[<lambda>-expected1] PASSED
tests/test_sphinx_autodoc_typehints.py::test_sphinx_output_formatter[None-expected0] PASSED
tests/test_sphinx_autodoc_typehints.py::test_sphinx_output_formatter[some string-expected2] PASSED
tests/test_sphinx_autodoc_typehints.py::test_sphinx_output_formatter_no_use_rtype PASSED
tests/test_sphinx_autodoc_typehints.py::test_sphinx_output_future_annotations PASSED
tests/test_sphinx_autodoc_typehints.py::test_sphinx_output_with_use_signature PASSED
tests/test_sphinx_autodoc_typehints.py::test_sphinx_output_with_use_signature_and_return PASSED
tests/test_sphinx_autodoc_typehints.py::test_sphinx_output_with_use_signature_return PASSED
tests/test_sphinx_autodoc_typehints.py::test_syntax_error_backfill PASSED
tests/test_version.py::test_version PASSED

=============================== warnings summary ===============================
tests/conftest.py:10
  $(@D)/tests/conftest.py:10: RemovedInSphinx90Warning: 'sphinx.testing.path' is deprecated. Use 'os.path' or 'pathlib' instead.
    from sphinx.testing.path import path

tests/test_integration.py: 26 warnings
tests/test_sphinx_autodoc_typehints.py: 82 warnings
  $(PROTO_DIR)$(PYTHON_DIR)/vendor-packages/sphinx_autodoc_typehints/__init__.py:796: DeprecationWarning: The frontend.OptionParser class will be replaced by a subclass of argparse.ArgumentParser in Docutils 0.21 or later.
    settings = OptionParser(components=(RSTParser,)).get_default_values()

tests/test_integration.py: 1794 warnings
tests/test_sphinx_autodoc_typehints.py: 5658 warnings
  $(PYTHON_DIR)/optparse.py:1000: DeprecationWarning: The frontend.Option class will be removed in Docutils 0.21 or later.
    option = self.option_class(*args, **kwargs)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
- generated xml file: $(@D)/.tox/junit.py$(PYV).xml -

1 file skipped due to complete coverage.
Coverage HTML written to dir $(@D)/.tox/py$(PYV)/tmp/htmlcov
Coverage XML written to file $(@D)/.tox/coverage.py$(PYV).xml

Required test coverage of 85.0% reached. Total coverage: 88.78%
======== 182 passed, 7561 warnings ========
  py$(PYV): OK
  congratulations :)
