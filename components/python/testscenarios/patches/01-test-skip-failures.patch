https://bugs.launchpad.net/testscenarios/+bug/1930149
https://github.com/testing-cabal/testscenarios/issues/5

--- testscenarios-0.5.0/testscenarios/tests/test_testcase.py.orig
+++ testscenarios-0.5.0/testscenarios/tests/test_testcase.py
@@ -22,6 +22,8 @@
 
 import testscenarios
 
+import pytest
+
 class TestTestWithScenarios(testtools.TestCase):
 
     scenarios = testscenarios.scenarios.per_module_scenarios(
@@ -35,6 +37,7 @@
             pass
         return Implementation
 
+    @pytest.mark.skip(reason="always fails: https://github.com/testing-cabal/testscenarios/issues/5")
     def test_no_scenarios_no_error(self):
         class ReferenceTest(self.Implementation):
             def test_pass(self):
@@ -45,6 +48,7 @@
         self.assertTrue(result.wasSuccessful())
         self.assertEqual(1, result.testsRun)
 
+    @pytest.mark.skip(reason="always fails: https://github.com/testing-cabal/testscenarios/issues/5")
     def test_with_one_scenario_one_run(self):
         class ReferenceTest(self.Implementation):
             scenarios = [('demo', {})]
@@ -59,6 +63,7 @@
         self.expectThat(
             log[0][1].id(), EndsWith('ReferenceTest.test_pass(demo)'))
 
+    @pytest.mark.skip(reason="always fails: https://github.com/testing-cabal/testscenarios/issues/5")
     def test_with_two_scenarios_two_run(self):
         class ReferenceTest(self.Implementation):
             scenarios = [('1', {}), ('2', {})]
@@ -75,6 +80,7 @@
         self.expectThat(
             log[4][1].id(), EndsWith('ReferenceTest.test_pass(2)'))
 
+    @pytest.mark.skip(reason="always fails: https://github.com/testing-cabal/testscenarios/issues/5")
     def test_attributes_set(self):
         class ReferenceTest(self.Implementation):
             scenarios = [
@@ -89,6 +95,7 @@
         self.assertTrue(result.wasSuccessful())
         self.assertEqual(2, result.testsRun)
 
+    @pytest.mark.skip(reason="always fails: https://github.com/testing-cabal/testscenarios/issues/5")
     def test_scenarios_attribute_cleared(self):
         class ReferenceTest(self.Implementation):
             scenarios = [
@@ -106,6 +113,7 @@
         self.assertEqual(None, log[0][1].scenarios)
         self.assertEqual(None, log[4][1].scenarios)
 
+    @pytest.mark.skip(reason="always fails: https://github.com/testing-cabal/testscenarios/issues/5")
     def test_countTestCases_no_scenarios(self):
         class ReferenceTest(self.Implementation):
             def test_check_foo(self):
@@ -113,6 +121,7 @@
         test = ReferenceTest("test_check_foo")
         self.assertEqual(1, test.countTestCases())
 
+    @pytest.mark.skip(reason="always fails: https://github.com/testing-cabal/testscenarios/issues/5")
     def test_countTestCases_empty_scenarios(self):
         class ReferenceTest(self.Implementation):
             scenarios = []
@@ -121,6 +130,7 @@
         test = ReferenceTest("test_check_foo")
         self.assertEqual(1, test.countTestCases())
 
+    @pytest.mark.skip(reason="always fails: https://github.com/testing-cabal/testscenarios/issues/5")
     def test_countTestCases_1_scenarios(self):
         class ReferenceTest(self.Implementation):
             scenarios = [('1', {'foo': 1, 'bar': 2})]
@@ -129,6 +139,7 @@
         test = ReferenceTest("test_check_foo")
         self.assertEqual(1, test.countTestCases())
 
+    @pytest.mark.skip(reason="always fails: https://github.com/testing-cabal/testscenarios/issues/5")
     def test_countTestCases_2_scenarios(self):
         class ReferenceTest(self.Implementation):
             scenarios = [
@@ -139,6 +150,7 @@
         test = ReferenceTest("test_check_foo")
         self.assertEqual(2, test.countTestCases())
 
+    @pytest.mark.skip(reason="always fails: https://github.com/testing-cabal/testscenarios/issues/5")
     def test_debug_2_scenarios(self):
         log = []
         class ReferenceTest(self.Implementation):
