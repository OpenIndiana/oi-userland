ROOT: tox-gh-actions won't override envlist because tox is not running in GitHub Actions
py$(PYV): remove tox env folder $(@D)/.tox/py$(PYV)
py$(PYV): commands[0]> python tests/test_all.py -v
test_base (test_resources.CacheTestCase) ... ok
test_filepath (test_resources.CacheTestCase) ... ok
test_basic (test_version.CompatibilityTestCase) ... ok
test_final_example_glob (test_database.DataFilesTestCase) ... ok
test_get_file (test_database.DataFilesTestCase) ... ok
test_glob_in_base (test_database.DataFilesTestCase) ... ok
test_multiple_match (test_database.DataFilesTestCase) ... ok
test_recursive_glob (test_database.DataFilesTestCase) ... ok
test_set_match (test_database.DataFilesTestCase) ... ok
test_set_match_exclude (test_database.DataFilesTestCase) ... ok
test_set_match_multiple (test_database.DataFilesTestCase) ... ok
test_simple_glob (test_database.DataFilesTestCase) ... ok
test_dependent_dists (test_database.DepGraphTestCase) ... ok
test_dependent_dists_egg (test_database.DepGraphTestCase) ... ok
test_graph_bad_version_to_dot (test_database.DepGraphTestCase) ... ok
test_graph_disconnected_to_dot (test_database.DepGraphTestCase) ... ok
test_graph_to_dot (test_database.DepGraphTestCase) ... ok
test_make_graph (test_database.DepGraphTestCase) ... ok
test_make_graph_egg (test_database.DepGraphTestCase) ... ok
test_repr (test_database.DepGraphTestCase) ... ok
test_required_dists (test_database.DepGraphTestCase) ... ok
test_byte_compile (test_util.FileOpsTestCase) ... ok
test_commit (test_util.FileOpsTestCase) ... ok
test_copy_check (test_util.FileOpsTestCase) ... ok
test_ensure_dir (test_util.FileOpsTestCase) ... ok
test_ensure_removed (test_util.FileOpsTestCase) ... ok
test_is_writable (test_util.FileOpsTestCase) ... ok
test_rollback (test_util.FileOpsTestCase) ... ok
test_bytes_path (test_resources.FileResourceTestCase) ... skipped 'This test on Python 2 only'
test_contents (test_resources.FileResourceTestCase) ... ok
test_existing_resource (test_resources.FileResourceTestCase) ... ok
test_iterator (test_resources.FileResourceTestCase) ... ok
test_nested (test_resources.FileResourceTestCase) ... ok
test_nonexistent_resource (test_resources.FileResourceTestCase) ... ok
test_root_resources (test_resources.FileResourceTestCase) ... ok
test_get_extras (test_util.GlobTestCase) ... ok
test_glob_all (test_util.GlobTestCase) ... ok
test_glob_set_head (test_util.GlobTestCase) ... ok
test_glob_set_middle (test_util.GlobTestCase) ... ok
test_glob_set_tail (test_util.GlobTestCase) ... ok
test_invalid_glob_pattern (test_util.GlobTestCase) ... ok
test_parse_requirement (test_util.GlobTestCase) ... ok
test_recursive_glob_head (test_util.GlobTestCase) ... ok
test_recursive_glob_middle (test_util.GlobTestCase) ... ok
test_recursive_glob_tail (test_util.GlobTestCase) ... ok
test_regex_rich_glob (test_util.GlobTestCase) ... ok
test_simple_glob (test_util.GlobTestCase) ... ok
test_simple_glob_in_dir (test_util.GlobTestCase) ... ok
test_write_exports (test_util.GlobTestCase) ... ok
test_attribute_access (test_metadata.LegacyMetadataTestCase) ... ok
test_check_author (test_metadata.LegacyMetadataTestCase) ... ok
test_check_homepage (test_metadata.LegacyMetadataTestCase) ... ok
test_check_matchers (test_metadata.LegacyMetadataTestCase) ... ok
test_check_name (test_metadata.LegacyMetadataTestCase) ... ok
test_check_name_strict (test_metadata.LegacyMetadataTestCase) ... ok
test_check_version (test_metadata.LegacyMetadataTestCase) ... ok
test_check_version_strict (test_metadata.LegacyMetadataTestCase) ... ok
test_description (test_metadata.LegacyMetadataTestCase) ... ok
test_description_folding (test_metadata.LegacyMetadataTestCase) ... ok
test_fields (test_metadata.LegacyMetadataTestCase) ... ok
test_fullname (test_metadata.LegacyMetadataTestCase) ... ok
test_instantiation (test_metadata.LegacyMetadataTestCase) ... ok
test_mapping_api (test_metadata.LegacyMetadataTestCase) ... ok
test_metadata_read_write (test_metadata.LegacyMetadataTestCase) ... ok
test_metadata_versions (test_metadata.LegacyMetadataTestCase) ... ok
test_obsoletes_dist (test_metadata.LegacyMetadataTestCase) ... ok
test_project_url (test_metadata.LegacyMetadataTestCase) ... ok
test_provides_dist (test_metadata.LegacyMetadataTestCase) ... ok
test_read_metadata (test_metadata.LegacyMetadataTestCase) ... ok
test_requires_dist (test_metadata.LegacyMetadataTestCase) ... ok
test_version (test_metadata.LegacyMetadataTestCase) ... ok
test_write_metadata (test_metadata.LegacyMetadataTestCase) ... ok
test_absolute (test_version.LegacyVersionTestCase) ... ok
test_equality (test_version.LegacyVersionTestCase) ... ok
test_ordering (test_version.LegacyVersionTestCase) ... ok
test_prereleases (test_version.LegacyVersionTestCase) ... ok
test_aggregation (test_locators.LocatorTestCase) ... ok
test_all_versions (test_locators.LocatorTestCase) ... ok
test_dependency_finder (test_locators.LocatorTestCase) ... skipped 'Optimised metadata is not up-to-date'
test_dir (test_locators.LocatorTestCase) ... ok
test_dir_nonrecursive (test_locators.LocatorTestCase) ... ok
test_dist_reqts (test_locators.LocatorTestCase) ... ok
test_dist_reqts_extras (test_locators.LocatorTestCase) ... ok
test_get_all_dist_names (test_locators.LocatorTestCase) ... skipped 'PyPI XML-RPC not available'
test_json (test_locators.LocatorTestCase) ... ok
test_nonexistent (test_locators.LocatorTestCase) ... ok
test_path (test_locators.LocatorTestCase) ... ok
test_prereleases (test_locators.LocatorTestCase) ... ok
test_scraper (test_locators.LocatorTestCase) ... ok
test_unicode_project_name (test_locators.LocatorTestCase) ... ok
test_url_preference (test_locators.LocatorTestCase) ... ok
test_xmlrpc (test_locators.LocatorTestCase) ... skipped 'PyPI XML-RPC not available'
test_add (test_manifest.ManifestTestCase) ... ok
test_add_many (test_manifest.ManifestTestCase) ... ok
test_clear (test_manifest.ManifestTestCase) ... ok
test_default_action (test_manifest.ManifestTestCase) ... ok
test_exclude (test_manifest.ManifestTestCase) ... ok
test_exclude_regex_re (test_manifest.ManifestTestCase) ... ok
test_exclude_regex_str (test_manifest.ManifestTestCase) ... ok
test_find_warnings (test_manifest.ManifestTestCase) ... ok
test_findall (test_manifest.ManifestTestCase) ... ok
test_global_exclude (test_manifest.ManifestTestCase) ... ok
test_global_include (test_manifest.ManifestTestCase) ... ok
test_graft (test_manifest.ManifestTestCase) ... ok
test_include (test_manifest.ManifestTestCase) ... ok
test_invalid (test_manifest.ManifestTestCase) ... ok
test_prune (test_manifest.ManifestTestCase) ... ok
test_recursive_exclude (test_manifest.ManifestTestCase) ... ok
test_recursive_include (test_manifest.ManifestTestCase) ... ok
test_sorting (test_manifest.ManifestTestCase) ... ok
test_interpret (test_markers.MarkersTestCase) ... ok
test_add_requirements (test_metadata.MetadataTestCase) ... ok
test_init (test_metadata.MetadataTestCase)
Test initialisation ... ok
test_requirements (test_metadata.MetadataTestCase) ... ok
test_valid (test_metadata.MetadataTestCase)
Tests to check that missing and invalid metadata is caught. ... ok
test_write (test_metadata.MetadataTestCase) ... ok
test_download (test_index.PackageIndexTestCase) ... ok
test_invalid (test_index.PackageIndexTestCase) ... ok
test_register (test_index.PackageIndexTestCase)
Test registration ... skipped 'The PyPI API changed, so this test is temporarily skipped'
test_save_configuration (test_index.PackageIndexTestCase) ... ok
test_search (test_index.PackageIndexTestCase) ... skipped 'skipping due to temporary changes in PyPI'
test_ssl_verification (test_index.PackageIndexTestCase) ... ok
test_upload (test_index.PackageIndexTestCase)
Test upload ... skipped 'The PyPI API changed, so this test is temporarily skipped'
test_upload_documentation (test_index.PackageIndexTestCase)
Test upload of documentation ... skipped 'Skipped, as pythonhosted.org is being de-emphasised and this functionality may no longer be available'
test_verify_signature (test_index.PackageIndexTestCase) ... ok
test_basic (test_util.ProgressTestCase) ... ok
test_unknown (test_util.ProgressTestCase) ... ok
test_args_on_copy (test_scripts.ScriptTestCase) ... ok
test_clobber (test_scripts.ScriptTestCase) ... ok
test_custom_shebang (test_scripts.ScriptTestCase) ... ok
test_dry_run (test_scripts.ScriptTestCase) ... ok
test_enquote_executable (test_scripts.ScriptTestCase) ... ok
test_generation (test_scripts.ScriptTestCase) ... ok
test_interpreter_args (test_scripts.ScriptTestCase) ... ok
test_launcher_run (test_scripts.ScriptTestCase) ... skipped 'Test is Windows-specific'
test_launcher_run_with_interpreter_args (test_scripts.ScriptTestCase) ... skipped 'Test is Windows-specific'
test_launchers (test_scripts.ScriptTestCase) ... skipped 'Test is Windows-specific'
test_mode (test_scripts.ScriptTestCase) ... ok
test_multiple (test_scripts.ScriptTestCase) ... ok
test_script_run (test_scripts.ScriptTestCase) ... ok
test_shebangs (test_scripts.ScriptTestCase) ... ok
test_shebangs_custom_executable (test_scripts.ScriptTestCase) ... ok
test_variant_configuration (test_scripts.ScriptTestCase) ... ok
test_windows (test_scripts.ScriptTestCase) ... skipped 'Test is Windows-specific'
test_windows_run (test_scripts.ScriptTestCase) ... skipped 'Test is Windows-specific'
test_basic (test_version.SemanticVersionTestCase) ... ok
test_ordering (test_version.SemanticVersionTestCase) ... ok
test_prereleases (test_version.SemanticVersionTestCase) ... ok
test_caches (test_database.TestDatabase) ... ok
test_distinfo_dirname (test_database.TestDatabase) ... ok
test_exports_iteration (test_database.TestDatabase) ... ok
test_get_distribution (test_database.TestDatabase) ... ok
test_get_distributions (test_database.TestDatabase) ... ok
test_modules (test_database.TestDatabase) ... ok
test_provides (test_database.TestDatabase) ... ok
test_read_exports (test_database.TestDatabase) ... ok
test_yield_distribution (test_database.TestDatabase) ... ok
test_check_installed_files (test_database.TestDistribution) ... ok
test_comparison (test_database.TestDistribution) ... ok
test_get_distinfo_file (test_database.TestDistribution) ... ok
test_get_resources_path (test_database.TestDistribution) ... ok
test_hash (test_database.TestDistribution) ... ok
test_instantiation (test_database.TestDistribution) ... ok
test_list_distinfo_files (test_database.TestDistribution) ... ok
test_list_installed_files (test_database.TestDistribution) ... ok
test_repr (test_database.TestDistribution) ... ok
test_str (test_database.TestDistribution) ... ok
test_comparison (test_database.TestEggInfoDistribution) ... ok
test_hash (test_database.TestEggInfoDistribution) ... ok
test_instantiation (test_database.TestEggInfoDistribution) ... ok
test_list_installed_files (test_database.TestEggInfoDistribution) ... skipped 'not implemented yet'
test_repr (test_database.TestEggInfoDistribution) ... ok
test_str (test_database.TestEggInfoDistribution) ... ok
test_cache_base (test_util.UtilTestCase) ... skipped "Test depends on user's home"
test_configurator (test_util.UtilTestCase) ... ok
test_convert_path (test_util.UtilTestCase) ... ok
test_ensure_slash (test_util.UtilTestCase) ... ok
test_events (test_util.UtilTestCase) ... ok
test_export_entry (test_util.UtilTestCase) ... ok
test_package_data (test_util.UtilTestCase) ... ok
test_parse_credentials (test_util.UtilTestCase) ... ok
test_path_to_cache_dir_nt (test_util.UtilTestCase) ... skipped 'Test is only valid for Windows'
test_path_to_cache_dir_posix (test_util.UtilTestCase) ... ok
test_resolve (test_util.UtilTestCase) ... ok
test_sequencer_basic (test_util.UtilTestCase) ... ok
test_sequencer_cycle (test_util.UtilTestCase) ... ok
test_sequencer_removal (test_util.UtilTestCase) ... ok
test_split_filename (test_util.UtilTestCase) ... ok
test_string_sequence (test_util.UtilTestCase) ... ok
test_unarchive (test_util.UtilTestCase) ... ok
test_zip_dir (test_util.UtilTestCase) ... ok
test_440 (test_version.VersionTestCase) ... ok
test_basic_versions (test_version.VersionTestCase) ... ok
test_comparison (test_version.VersionTestCase) ... ok
test_comparison_pep440 (test_version.VersionTestCase) ... ok
test_fix_200 (test_version.VersionTestCase) ... ok
test_hash (test_version.VersionTestCase) ... ok
test_huge_version (test_version.VersionTestCase) ... ok
test_matcher (test_version.VersionTestCase) ... ok
test_matcher_local (test_version.VersionTestCase) ... ok
test_matcher_name (test_version.VersionTestCase) ... ok
test_prereleases (test_version.VersionTestCase) ... ok
test_repr (test_version.VersionTestCase) ... ok
test_schemes (test_version.VersionTestCase) ... ok
test_suggest_normalized_version (test_version.VersionTestCase) ... ok
test_suggestions_other (test_version.VersionTestCase) ... ok
test_unsupported_versions (test_version.VersionTestCase) ... ok
test_abi (test_wheel.WheelTestCase) ... ok
test_build_and_install_data (test_wheel.WheelTestCase) ... skipped 'The test distribution is not 3.x compatible'
test_build_and_install_plat (test_wheel.WheelTestCase) ... skipped 'The test distribution only builds on Linux'
test_build_and_install_pure (test_wheel.WheelTestCase) ... skipped 'The test distribution is not 3.7+ compatible'
test_build_and_install_scripts (test_wheel.WheelTestCase) ... skipped 'The test distribution is not 3.x compatible'
test_build_tags (test_wheel.WheelTestCase) ... ok
test_compatible_tags (test_wheel.WheelTestCase) ... ok
test_custom_executable (test_wheel.WheelTestCase) ... ok
test_info (test_wheel.WheelTestCase) ... ok
test_invalid (test_wheel.WheelTestCase) ... ok
test_invalid_filename (test_wheel.WheelTestCase) ... ok
test_is_compatible (test_wheel.WheelTestCase) ... ok
test_local_version (test_wheel.WheelTestCase) ... ok
test_metadata (test_wheel.WheelTestCase) ... ok
test_mount (test_wheel.WheelTestCase) ... skipped 'The test wheel is only 2.7 mountable'
test_mount_extensions (test_wheel.WheelTestCase) ... skipped 'Suitable wheel not found.'
test_update (test_wheel.WheelTestCase) ... ok
test_valid_filename (test_wheel.WheelTestCase) ... ok
test_valid_name (test_wheel.WheelTestCase) ... ok
test_verify (test_wheel.WheelTestCase) ... ok
test_version_incompatibility (test_wheel.WheelTestCase) ... ok
test_contents (test_resources.ZipResourceTestCase) ... ok
test_dir_in_zip (test_resources.ZipResourceTestCase) ... ok
test_existing_resource (test_resources.ZipResourceTestCase) ... ok
test_finder_for_path (test_resources.ZipResourceTestCase) ... ok
test_iterator (test_resources.ZipResourceTestCase) ... ok
test_non_package (test_resources.ZipResourceTestCase) ... ok
test_nonexistent_resource (test_resources.ZipResourceTestCase) ... ok
test_root_resources (test_resources.ZipResourceTestCase) ... ok

----------------------------------------------------------------------
Ran 236 tests

OK (skipped=22)
  py$(PYV): OK
  congratulations :)
