py$(PYV): remove tox env folder $(@D)/.tox/py$(PYV)
py$(PYV): commands[0]> python -m pytest
============================= test session starts ==============================
platform sunos5 -- Python $(PYTHON_VERSION).X -- $(@D)/.tox/py$(PYV)/bin/python
cachedir: .tox/py$(PYV)/.pytest_cache
rootdir: $(@D)
configfile: pytest.ini
collecting ... collected 14 items

jaraco/develop/filters.py::jaraco.develop.filters PASSED
jaraco/develop/git.py::jaraco.develop.git.Project PASSED
jaraco/develop/git.py::jaraco.develop.git.URLScheme PASSED
jaraco/develop/git.py::jaraco.develop.git.exists PASSED
jaraco/develop/git.py::jaraco.develop.git.make_args PASSED
jaraco/develop/git.py::jaraco.develop.git.resolve PASSED
jaraco/develop/github.py::jaraco.develop.github.Repo.find_needed_secrets PASSED
jaraco/develop/indent.py::jaraco.develop.indent.to_spaces PASSED
jaraco/develop/merge.py::jaraco.develop.merge.Conflict PASSED
jaraco/develop/merge.py::jaraco.develop.merge._enable_rtd PASSED
jaraco/develop/merge.py::jaraco.develop.merge._retain_rtd PASSED
jaraco/develop/towncrier.py::jaraco.develop.towncrier.get_version PASSED
.::project PASSED
.::project PASSED

=============================== warnings summary ===============================
jaraco/develop/merge.py::jaraco.develop.merge.Conflict
  $(PYTHON_DIR)/sre_parse.py:174: ResourceWarning: unclosed file <_io.FileIO name='/tmp/pytest-of-marcel/pytest-14/jaraco_develop_git_resolve0/projects.txt' mode='rb' closefd=True>
    self.data.append(code)
  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.

.::project
  <frozen importlib._bootstrap_external>:647: ResourceWarning: unclosed file <_io.BufferedReader name='/tmp/pytest-of-marcel/pytest-14/jaraco_develop_filters0/projects.txt'>
  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html

======== 14 passed, 2 warnings ========
  py$(PYV): OK
  congratulations :)
