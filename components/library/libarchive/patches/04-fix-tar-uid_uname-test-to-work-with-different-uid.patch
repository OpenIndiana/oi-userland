--- libarchive-3.1.2/tar/test/test_option_uid_uname.c.uid~	2015-02-20 13:39:47.493404637 +0100
+++ libarchive-3.1.2/tar/test/test_option_uid_uname.c	2015-02-20 13:40:10.416363055 +0100
@@ -45,24 +45,32 @@ DEFINE_TEST(test_option_uid_uname)
 	/* Again with both --uid and --uname */
 	failure("Error invoking %s c", testprog);
 	assertEqualInt(0,
-	    systemf("%s cf archive2 --uid=17 --uname=foofoofoo --format=ustar file >stdout2.txt 2>stderr2.txt",
+	    systemf("%s cf archive2 --uid=65123 --uname=foofoofoo --format=ustar file >stdout2.txt 2>stderr2.txt",
 		testprog));
 	assertEmptyFile("stdout2.txt");
 	assertEmptyFile("stderr2.txt");
 	data = slurpfile(&s, "archive2");
 	/* Should force uid and uname fields in ustar header. */
-	assertEqualMem(data + 108, "000021 \0", 8);
+	assertEqualMem(data + 108, "177143 \0", 8);
 	assertEqualMem(data + 265, "foofoofoo\0", 10);
 
 	/* Again with just --uid */
 	failure("Error invoking %s c", testprog);
 	assertEqualInt(0,
-	    systemf("%s cf archive3 --uid=17 --format=ustar file >stdout3.txt 2>stderr3.txt",
+	    /* --numeric-owner would make more sense if wanting to guarantee no
+	     * username in ustar header, otherwise it will automatically be added
+	     * if a user with the same uid exists on the system...
+	     * But for all that I know, the intent is to test under the specific
+	     * scenario of where no user with the specified uid exists on system,
+	     * therefore we'll change uid to a more unlikely one to be found any
+	     * users with on the system...
+	     */
+	    systemf("%s cf archive3 --uid=65123 --format=ustar file >stdout3.txt 2>stderr3.txt",
 		testprog));
 	assertEmptyFile("stdout3.txt");
 	assertEmptyFile("stderr3.txt");
 	data = slurpfile(&s, "archive3");
-	assertEqualMem(data + 108, "000021 \0", 8);
+	assertEqualMem(data + 108, "177143 \0", 8);
 	/* Uname field in ustar header should be empty. */
 	assertEqualMem(data + 265, "\0", 1);
 
