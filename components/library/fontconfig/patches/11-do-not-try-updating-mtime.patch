
Do not try updating mtime when unlink was failed

Akira TAGOH

diff --git a/src/fccache.c b/src/fccache.c
index a5e0ea377d9db6c7564bb0a4fd1a2988829cf29b..87073ba506b42e96e23c9a1a14feaa1cc23a4ca1 100644
--- a/src/fccache.c
+++ b/src/fccache.c
@@ -171,20 +171,23 @@ FcDirCacheDeleteUUID (const FcChar8  *dir,
     }
     target = FcStrBuildFilename (d, ".uuid", NULL);
     ret = unlink ((char *) target) == 0;
-    times[0].tv_sec = statb.st_atime;
-    times[1].tv_sec = statb.st_mtime;
+    if (ret)
+    {
+	times[0].tv_sec = statb.st_atime;
+	times[1].tv_sec = statb.st_mtime;
 #ifdef HAVE_STRUCT_STAT_ST_MTIM
-    times[0].tv_usec = statb.st_atim.tv_nsec / 1000;
-    times[1].tv_usec = statb.st_mtim.tv_nsec / 1000;
+	times[0].tv_usec = statb.st_atim.tv_nsec / 1000;
+	times[1].tv_usec = statb.st_mtim.tv_nsec / 1000;
 #else
-    times[0].tv_usec = 0;
-    times[1].tv_usec = 0;
+	times[0].tv_usec = 0;
+	times[1].tv_usec = 0;
 #endif
-    if (utimes ((const char *) d, times) != 0)
-    {
-	fprintf (stderr, "Unable to revert mtime: %s\n", d);
+	if (utimes ((const char *) d, times) != 0)
+	{
+	    fprintf (stderr, "Unable to revert mtime: %s\n", d);
+	}
+	FcHashTableRemove (config->uuid_table, target);
     }
-    FcHashTableRemove (config->uuid_table, target);
     FcStrFree (target);
 bail:
     FcStrFree (d);
