$NetBSD: patch-js_src_gc_Memory.cpp,v 1.1 2018/06/28 14:04:10 ryoon Exp $

Support SunOS/x86_64.

--- a/js/src/gc/Memory.cpp.orig	2018-06-05 19:47:29.000000000 +0000
+++ b/js/src/gc/Memory.cpp
@@ -504,6 +504,7 @@ MapMemoryAt(void* desired, size_t length
                                 off_t offset = 0) {
 
 #if defined(__ia64__) || defined(__aarch64__) ||  \
+    (defined(__sun) && defined(__x86_64__)) || \
     (defined(__sparc__) && defined(__arch64__) && \
      (defined(__NetBSD__) || defined(__linux__)))
   MOZ_ASSERT((0xffff800000000000ULL & (uintptr_t(desired) + length - 1)) == 0);
@@ -554,8 +555,8 @@ MapMemory(size_t length, int prot = PROT
     return nullptr;
   }
   return region;
-#elif defined(__aarch64__) || \
-    (defined(__sparc__) && defined(__arch64__) && defined(__linux__))
+#elif defined(__aarch64__) || \
+    (defined(__sparc__) && defined(__arch64__) && defined(__linux__)) || (defined(__sun) && defined(__x86_64__))
   /*
    * There might be similar virtual address issue on arm64 which depends on
    * hardware and kernel configurations. But the work around is slightly
