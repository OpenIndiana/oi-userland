Backported of:

From dec9ca22d70c0f0d4492333b4e8147afb038afd2 Mon Sep 17 00:00:00 2001
From: Dhiru Kholia <dhiru.kholia@gmail.com>
Date: Thu, 30 Nov 2017 02:36:26 +0100
Subject: ico: Fix potential integer overflow

Which relies on undefined behaviour. Instead of checking for an
overflowed integer after the fact, check whether the addition would
be possible at all.

Fixes: CVE-2017-6312

Index: gdk-pixbuf-2.32.2/gdk-pixbuf/io-ico.c
===================================================================
--- gdk-pixbuf-2.32.2.orig/gdk-pixbuf/io-ico.c
+++ gdk-pixbuf-2.32.2/gdk-pixbuf/io-ico.c
@@ -25,6 +25,8 @@
 #undef DUMPBIH
 #define DEBUG(s)
 
+#define INFOHEADER_SIZE 40
+
 /*
 
 Icons are just like BMP's, except for the header.
@@ -317,10 +319,8 @@ static void DecodeHeader(guchar *Data, g
 			return;
 		}
 
-		/* We know how many bytes are in the "header" part. */
-		State->HeaderSize = entry->DIBoffset + 40; /* 40 = sizeof(InfoHeader) */
-
-		if (State->HeaderSize < 0) {
+		/* Avoid invoking undefined behavior in the State->HeaderSize calculation below */
+		if (entry->DIBoffset > G_MAXINT - INFOHEADER_SIZE) {
 			g_set_error (error,
 			             GDK_PIXBUF_ERROR,
 			             GDK_PIXBUF_ERROR_CORRUPT_IMAGE,
@@ -328,6 +328,10 @@ static void DecodeHeader(guchar *Data, g
 			return;
 		}
 
+		/* We know how many bytes are in the "header" part. */
+		State->HeaderSize = entry->DIBoffset + INFOHEADER_SIZE;
+
+
 		if (State->HeaderSize>State->BytesInHeaderBuf) {
 			guchar *tmp=g_try_realloc(State->HeaderBuf,State->HeaderSize);
 			if (!tmp) {
