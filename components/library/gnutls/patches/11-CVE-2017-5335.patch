Backport of:

From 785af1ab577f899d2e54172ff120f404709bf172 Mon Sep 17 00:00:00 2001
From: Nikos Mavrogiannopoulos <nmav@redhat.com>
Date: Wed, 4 Jan 2017 15:22:13 +0100
Subject: [PATCH] opencdk: added error checking in the stream reading functions

This addresses an out of memory error. Issue found using oss-fuzz:
  https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=337

Signed-off-by: Nikos Mavrogiannopoulos <nmav@redhat.com>
---
 lib/opencdk/read-packet.c | 40 +++++++++++++++++++++++++++++++++++-----
 1 file changed, 35 insertions(+), 5 deletions(-)

Index: gnutls26-2.12.23/lib/opencdk/read-packet.c
===================================================================
--- gnutls26-2.12.23.orig/lib/opencdk/read-packet.c	2017-01-26 13:32:12.432482071 -0500
+++ gnutls26-2.12.23/lib/opencdk/read-packet.c	2017-01-26 13:36:30.839799347 -0500
@@ -52,13 +52,13 @@
 read_32 (cdk_stream_t s)
 {
   byte buf[4];
-  size_t nread;
+  size_t nread = 0;
 
   assert (s != NULL);
 
   stream_read (s, buf, 4, &nread);
   if (nread != 4)
-    return (u32) - 1;
+    return (u32) -1;
   return buf[0] << 24 | buf[1] << 16 | buf[2] << 8 | buf[3];
 }
 
@@ -68,7 +68,7 @@
 read_16 (cdk_stream_t s)
 {
   byte buf[2];
-  size_t nread;
+  size_t nread = 0;
 
   assert (s != NULL);
 
@@ -570,7 +570,7 @@
 static cdk_error_t
 read_subpkt (cdk_stream_t inp, cdk_subpkt_t * r_ctx, size_t * r_nbytes)
 {
-  byte c, c1;
+  int c, c1;
   size_t size, nread, n;
   cdk_subpkt_t node;
   cdk_error_t rc;
@@ -585,14 +585,21 @@
   *r_nbytes = 0;
   c = cdk_stream_getc (inp);
   n++;
+
   if (c == 255)
     {
       size = read_32 (inp);
+      if (size == (u32)-1)
+        return CDK_Inv_Packet;
+
       n += 4;
     }
   else if (c >= 192 && c < 255)
     {
       c1 = cdk_stream_getc (inp);
+      if (c1 == EOF)
+        return CDK_Inv_Packet;
+
       n++;
       if (c1 == 0)
         return 0;
@@ -860,24 +867,36 @@
 read_old_length (cdk_stream_t inp, int ctb, size_t * r_len, size_t * r_size)
 {
   int llen = ctb & 0x03;
+  int c;
 
   if (llen == 0)
     {
-      *r_len = cdk_stream_getc (inp);
+      c = cdk_stream_getc(inp);
+      if (c == EOF)
+        goto fail;
+
+      *r_len = c;
       (*r_size)++;
     }
   else if (llen == 1)
     {
       *r_len = read_16 (inp);
+      if (*r_len == (u16)-1)
+        goto fail;
       (*r_size) += 2;
     }
   else if (llen == 2)
     {
       *r_len = read_32 (inp);
+      if (*r_len == (u32)-1) {
+        goto fail;
+      }
+
       (*r_size) += 4;
     }
   else
     {
+ fail:
       *r_len = 0;
       *r_size = 0;
     }
@@ -892,18 +911,28 @@
   int c, c1;
 
   c = cdk_stream_getc (inp);
+  if (c == EOF)
+    return;
+
   (*r_size)++;
   if (c < 192)
     *r_len = c;
   else if (c >= 192 && c <= 223)
     {
       c1 = cdk_stream_getc (inp);
+      if (c1 == EOF)
+        return;
+
       (*r_size)++;
       *r_len = ((c - 192) << 8) + c1 + 192;
     }
   else if (c == 255)
     {
       *r_len = read_32 (inp);
+      if (*r_len == (u32)-1) {
+        return;
+      }
+
       (*r_size) += 4;
     }
   else
