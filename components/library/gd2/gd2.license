John Ellson  (ellson@graphviz.org)  Oct 31, 1997

==============================================================================

/********************************************/
/* gd interface to freetype library         */
/*                                          */
/* John Ellson   ellson@graphviz.org        */
/********************************************/

==============================================================================

/*
    This is a header file for gd font, generated using
    bdftogd version 0.51 by Jan Pazdziora, adelton@fi.muni.cz
    from bdf font
    -Misc-Fixed-Bold-R-Normal-Sans-15-140-75-75-C-90-ISO8859-2
    at Mon Jan 26 14:45:58 1998.
    The original bdf was holding following copyright:
    "Libor Skarvada, libor@informatics.muni.cz"
 */

==============================================================================

/*
 * gd_jpeg.c: Read and write JPEG (JFIF) format image files using the
 * gd graphics library (http://www.libgd.org).
 * 
 * This software is based in part on the work of the Independent JPEG
 * Group.  For more information on the IJG JPEG software (and JPEG
 * documentation, etc.), see ftp://ftp.uu.net/graphics/jpeg/.
 *
 * NOTE: IJG 12-bit JSAMPLE (BITS_IN_JSAMPLE == 12) mode is not
 * supported at all on read in gd 2.0, and is not supported on write
 * except for palette images, which is sort of pointless (TBB). Even that
 * has never been tested according to DB.
 *
 * Copyright 2000 Doug Becker, mailto:thebeckers@home.com
 *
 * Modification 4/18/00 TBB: JPEG_DEBUG rather than just DEBUG,
 * so VC++ builds don't spew to standard output, causing
 * major CGI brain damage
 *
 * 2.0.10: more efficient gdImageCreateFromJpegCtx, thanks to
 * Christian Aberger 
 */
==============================================================================

/*---------------------------------------------------------------------------
    gd_png.c                 Copyright 1999 Greg Roelofs and Thomas Boutell
---------------------------------------------------------------------------*/

==============================================================================

/* Code drawn from ppmtogif.c, from the pbmplus package
**
** Based on GIFENCOD by David Rowley <mgardi@watdscu.waterloo.edu>. A
** Lempel-Zim compression based on "compress".
**
** Modified by Marcel Wijkstra <wijkstra@fwi.uva.nl>
**
** Copyright (C) 1989 by Jef Poskanzer.
**
** Permission to use, copy, modify, and distribute this software and its
** documentation for any purpose and without fee is hereby granted, provided
** that the above copyright notice appear in all copies and that both that
** copyright notice and this permission notice appear in supporting
** documentation.  This software is provided "as is" without express or
** implied warranty.
**
** The Graphics Interchange Format(c) is the Copyright property of
** CompuServe Incorporated.  GIF(sm) is a Service Mark property of
** CompuServe Incorporated.
*/

==============================================================================

/*
   * io.c
   *
   * Implements the simple I/O 'helper' routines.
   *
   * Not really essential, but these routines were used extensively in GD,
   * so they were moved here. They also make IOCtx calls look better...
   *
   * Written (or, at least, moved) 1999, Philip Warner.
   *
 */

==============================================================================


/*
   * gd_security.c
   *
   * Implements buffer overflow check routines.
   *
   * Written 2004, Phil Knirsch.
   * Based on netpbm fixes by Alan Cox.
   *
 */

==============================================================================

/*
   WBMP: Wireless Bitmap Type 0: B/W, Uncompressed Bitmap
   Specification of the WBMP format can be found in the file: 
   SPEC-WAESpec-19990524.pdf
   You can download the WAP specification on: http://www.wapforum.com/ 

   gd_wbmp.c

   Copyright (C) Johan Van den Brande (johan@vandenbrande.com)

   Fixed: gdImageWBMPPtr, gdImageWBMP

   Recoded: gdImageWBMPCtx for use with my wbmp library
   (wbmp library included, but you can find the latest distribution
   at http://www.vandenbrande.com/wbmp)

   Implemented: gdImageCreateFromWBMPCtx, gdImageCreateFromWBMP 

   ---------------------------------------------------------------------------

   Parts of this code are from Maurice Smurlo.


   ** Copyright (C) Maurice Szmurlo --- T-SIT --- January 2000
   ** (Maurice.Szmurlo@info.unicaen.fr)

   ** Permission to use, copy, modify, and distribute this software and its
   ** documentation for any purpose and without fee is hereby granted, provided
   ** that the above copyright notice appear in all copies and that both that
   ** copyright notice and this permission notice appear in supporting
   ** documentation.  This software is provided "as is" without express or
   ** implied warranty.

   ---------------------------------------------------------------------------
   Parts od this code are inspired by  'pbmtowbmp.c' and 'wbmptopbm.c' by 
   Terje Sannum <terje@looplab.com>.
   **
   ** Permission to use, copy, modify, and distribute this software and its
   ** documentation for any purpose and without fee is hereby granted, provided
   ** that the above copyright notice appear in all copies and that both that
   ** copyright notice and this permission notice appear in supporting
   ** documentation.  This software is provided "as is" without express or
   ** implied warranty.
   **
   -------------------------------------------------------------------------- */

==============================================================================

/*
 * gd_topal, adapted from jquant2.c
 *
 * Copyright (C) 1991-1996, Thomas G. Lane.
 * This file is part of the Independent JPEG Group's software.
 * For conditions of distribution and use, see the accompanying README file.
 *
 * This file contains 2-pass color quantization (color mapping) routines.
 * These routines provide selection of a custom color map for an image,
 * followed by mapping of the image to that color map, with optional
 * Floyd-Steinberg dithering.
 * It is also possible to use just the second pass to map to an arbitrary
 * externally-given color map.
 *
 * Note: ordered dithering is not supported, since there isn't any fast
 * way to compute intercolor distances; it's unclear that ordered dither's
 * fundamental assumptions even hold with an irregularly spaced color map.
 */

==============================================================================




