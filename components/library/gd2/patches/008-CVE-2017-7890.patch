From c613bc169802bb4b639ee2e15c61b25b80a88424 Mon Sep 17 00:00:00 2001
From: "Christoph M. Becker" <cmbecker69@gmx.de>
Date: Thu, 10 Aug 2017 18:31:29 +0200
Subject: [PATCH] Close #339: Fix unitialized memory read vulnerability in GIF
 reading

The stack allocated color map buffers were not zeroed before usage, and
so undefined palette indexes could cause information leakage.

This issue has been reported by Matviy Kotoniy to security@libgd.org in
<CAKm_7a-AO++B6cXYWM_DtycPENG5WNWK7NSEvQ5OmZziMY_JyA@mail.gmail.com>.
---
 src/gd_gif_in.c                       |  3 +++
 tests/gif/CMakeLists.txt              |  1 +
 tests/gif/Makemodule.am               |  6 +++--
 tests/gif/uninitialized_memory_read.c | 42 +++++++++++++++++++++++++++++++++++
 4 files changed, 50 insertions(+), 2 deletions(-)
 create mode 100644 tests/gif/uninitialized_memory_read.c

diff --git a/src/gd_gif_in.c b/src/gd_gif_in.c
index 008d1ec..c195448 100644
--- a/src/gd_gif_in.c
+++ b/src/gd_gif_in.c
@@ -216,6 +216,9 @@ BGD_DECLARE(gdImagePtr) gdImageCreateFromGifCtx(gdIOCtxPtr fd)
 
 	gdImagePtr im = 0;
 
+	memset(ColorMap, 0, 3 * MAXCOLORMAPSIZE);
+	memset(localColorMap, 0, 3 * MAXCOLORMAPSIZE);
+
 	if(!ReadOK(fd, buf, 6)) {
 		return 0;
 	}
diff --git a/tests/gif/CMakeLists.txt b/tests/gif/CMakeLists.txt
index f9aa0e2..c21a4b1 100644
--- a/tests/gif/CMakeLists.txt
+++ b/tests/gif/CMakeLists.txt
@@ -8,6 +8,7 @@ SET(TESTS_FILES
 	bug00066
 	bug00181
 	bug00227
+	uninitialized_memory_read
 )
 
 ADD_GD_TESTS()
diff --git a/tests/gif/Makemodule.am b/tests/gif/Makemodule.am
index 50f671f..0bdeab7 100644
--- a/tests/gif/Makemodule.am
+++ b/tests/gif/Makemodule.am
@@ -2,7 +2,8 @@ libgd_test_programs += \
 	gif/bug00005_2 \
 	gif/bug00181 \
 	gif/bug00227 \
-	gif/gif_null
+	gif/gif_null \
+	gif/uninitialized_memory_read
 
 if HAVE_LIBPNG
 libgd_test_programs += \
@@ -22,4 +23,5 @@ EXTRA_DIST += \
 	gif/bug00005_3.gif \
 	gif/bug00060.gif \
 	gif/bug00066.gif \
-	gif/bug00066_exp.png
+	gif/bug00066_exp.png \
+	gif/unitialized_memory_read.gif
diff --git a/tests/gif/uninitialized_memory_read.c b/tests/gif/uninitialized_memory_read.c
new file mode 100644
index 0000000..566fc4a
--- /dev/null
+++ b/tests/gif/uninitialized_memory_read.c
@@ -0,0 +1,42 @@
+/**
+ * Test for uninitialized color map entries
+ *
+ * We're reading a crafted GIF which consists of 16x16 color blocks and which
+ * has only two palette entries in the global color map, but uses other palette
+ * indexes as well. We verify whether all undefined palette indexes produce the
+ * color black.
+ *
+ * See also <CAKm_7a-AO++B6cXYWM_DtycPENG5WNWK7NSEvQ5OmZziMY_JyA@mail.gmail.com>
+ * which had been sent to security@libgd.org.
+ */
+
+
+#include "gd.h"
+#include "gdtest.h"
+
+
+int main()
+{
+    gdImagePtr im;
+    FILE *fp;
+    int i, j, col;
+
+    fp = gdTestFileOpen2("gif", "unitialized_memory_read.gif");
+    gdTestAssert(fp != NULL);
+    im = gdImageCreateFromGif(fp);
+    gdTestAssert(im != NULL);
+    fclose(fp);
+
+    for (i = 0; i < gdImageSX(im); i += 16) {
+        for (j = 0; j < gdImageSY(im); j += 16) {
+            if (gdImageGetPixel(im, i, j) >= 2) {
+                col = gdImageGetTrueColorPixel(im, i, j);
+                gdTestAssertMsg(col == 0, "(%d,%d): expected color 0, but got %d\n", i, j, col);
+            }
+        }
+    }
+
+    gdImageDestroy(im);
+
+    return gdNumFailures();
+}
-- 
2.7.4

