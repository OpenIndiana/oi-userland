Contact: Aurelien Larcher <aurelien.larcher@gmail.com>

The gdlib-config script generated by Autotools has been deprecated for
gd-2.2 in favour of pkg-config according to:

https://github.com/libgd/libgd/issues/376

Problem is that the test suite works with CMake only so that it does not
pick our flags and the CMake-based build system is otherwise broken.

It seems that the project is in-between build systems, so two options:
1. We build with Autotools: the test suite is broken.
2. We build with CMake: pkg-config files and gdlib-config are not created.

Moreover not shipping gdlib-config will break a lot of existing software.
The script was already broken as it does not report --majorversion and
also --minorversion.

Another issue is that the feature GD_VPX has been renamed GD_WEBP and this
may also cause some issues ... so let us assume that a consumer will grep
for either GD_VPX or GD_WEBP in the features.

diff -urb libgd-gd-2.2.4/CMakeLists.txt libgd-gd-2.2.4.oi/CMakeLists.txt
--- libgd-gd-2.2.4/CMakeLists.txt	2017-06-10 04:27:39.082779237 +0000
+++ libgd-gd-2.2.4.oi/CMakeLists.txt	2017-06-10 04:27:14.743734043 +0000
@@ -144,10 +144,14 @@
 		FIND_PACKAGE(FontConfig)
 	endif (ENABLE_FONTCONFIG)
 
+	# Follow configure.ac, GIF is always built
+	SET(GDLIB_FEATURES "GD_GIF GD_GIFANIM GD_OPENPOLYGON")
+
 	if (FREETYPE_FOUND)
 		INCLUDE_DIRECTORIES(${FREETYPE_INCLUDE_DIRS})
 		SET(HAVE_FT2BUILD_H 1)
 		SET(HAVE_LIBFREETYPE 1)
+		SET(GDLIB_FEATURES "${GDLIB_FEATURES} GD_FREETYPE")
 	ENDIF(FREETYPE_FOUND)
 
 	IF(ZLIB_FOUND)
@@ -158,11 +162,13 @@
 	IF(WEBP_FOUND)
 		INCLUDE_DIRECTORIES(${WEBP_INCLUDE_DIR})
 		SET(HAVE_LIBWEBP 1)
+		SET(GDLIB_FEATURES "${GDLIB_FEATURES} GD_WEBP GD_VPX")
 	ENDIF(WEBP_FOUND)
 
 	IF(PNG_FOUND)
 		INCLUDE_DIRECTORIES(${PNG_INCLUDE_DIR})
 		SET(HAVE_LIBPNG 1)
+		SET(GDLIB_FEATURES "${GDLIB_FEATURES} GD_PNG")
 	ENDIF(PNG_FOUND)
 	
 	IF(ICONV_FOUND)
@@ -174,26 +180,31 @@
 	IF(LIQ_FOUND)
 		INCLUDE_DIRECTORIES(${LIQ_INCLUDE_DIR})
 		SET(HAVE_LIBIMAGEQUANT 1)
+		SET(GDLIB_FEATURES "${GDLIB_FEATURES} GD_LIQ")
 	ENDIF(LIQ_FOUND)
 
 	IF(XPM_FOUND)
 		INCLUDE_DIRECTORIES(${XPM_INCLUDE_DIR})
 		SET(HAVE_LIBXPM 1)
+		SET(GDLIB_FEATURES "${GDLIB_FEATURES} GD_XPM")
 	ENDIF(XPM_FOUND)
 
 	IF(JPEG_FOUND)
 		INCLUDE_DIRECTORIES(${JPEG_INCLUDE_DIR})
 		SET(HAVE_LIBJPEG 1)
+		SET(GDLIB_FEATURES "${GDLIB_FEATURES} GD_JPEG")
 	ENDIF(JPEG_FOUND)
 
 	IF(TIFF_FOUND)
 		INCLUDE_DIRECTORIES(${TIFF_INCLUDE_DIR})
 		SET(HAVE_LIBTIFF 1)
+		SET(GDLIB_FEATURES "${GDLIB_FEATURES} GD_TIFF")
 	ENDIF(TIFF_FOUND)
 
 	IF(FONTCONFIG_FOUND)
 		INCLUDE_DIRECTORIES(${FONTCONFIG_INCLUDE_DIR})
 		SET(HAVE_LIBFONTCONFIG 1)
+		SET(GDLIB_FEATURES "${GDLIB_FEATURES} GD_FONTCONFIG")
 	ELSE (FONTCONFIG_FOUND)
 		SET(FONTCONFIG_LIBRARY "")
 		SET(FONTCONFIG_INCLUDE_DIR "")
@@ -287,6 +298,13 @@
 INSTALL(FILES examples/tiffread.c DESTINATION ${GDLIB_DOCDIR})
 INSTALL(FILES examples/windows.c DESTINATION ${GDLIB_DOCDIR})
 
+configure_file( ${CMAKE_CURRENT_SOURCE_DIR}/config/gdlib.pc.in
+		${CMAKE_CURRENT_BINARY_DIR}/gdlib.pc @ONLY)
+install(FILES ${CMAKE_CURRENT_BINARY_DIR}/gdlib.pc DESTINATION "${CMAKE_INSTALL_LIBDIR}/pkgconfig")
+
+configure_file( ${CMAKE_CURRENT_SOURCE_DIR}/config/gdlib-config.in
+		${CMAKE_CURRENT_BINARY_DIR}/gdlib-config @ONLY)
+install(FILES ${CMAKE_CURRENT_BINARY_DIR}/gdlib-config DESTINATION "${CMAKE_INSTALL_BINDIR}")
 
 set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_SOURCE_DIR}/COPYING")
 
diff -urb libgd-gd-2.2.4/config/gdlib-config.in libgd-gd-2.2.4.oi/config/gdlib-config.in
--- libgd-gd-2.2.4/config/gdlib-config.in	2017-01-18 12:02:07.000000000 +0000
+++ libgd-gd-2.2.4.oi/config/gdlib-config.in	2017-06-10 04:21:57.134683225 +0000
@@ -4,15 +4,12 @@
 #
 # Modeled after pdflib-config
 
-echo "gdlib-config: warning: this script is deprecated;" \
-     "please use the pkg-config file instead." >&2
-
 # installation directories
-prefix=@prefix@
-exec_prefix=@exec_prefix@
-libdir=@libdir@
-includedir=@includedir@
-bindir=@bindir@
+prefix=@CMAKE_INSTALL_PREFIX@
+exec_prefix=@CMAKE_INSTALL_PREFIX@
+libdir=@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_LIBDIR@
+includedir=@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_INCLUDEDIR@
+bindir=@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_BINDIR@
 
 usage()
 {
@@ -31,7 +28,7 @@
 	--cflags          # options required for compiling GD library apps
 	--includes        # same as --cflags
 	--features        # lists features compiled into gd, separated by spaces.
-                          # Currently (as of @VERSION@) the optional features
+                          # Currently (as of @GDLIB_VERSION@) the optional features
                           # are GD_PNG, GD_JPEG, GD_XPM, GD_FREETYPE, and 
                           # GD_FONTCONFIG. When these features are reported by
                           # --features, it is safe to include calls to the
@@ -53,43 +50,43 @@
 
     case $1 in
     --libdir)
-	echo $libdir
+	echo "${libdir}"
 	;;
     --includedir)
-	echo $includedir
+	echo "${includedir}"
 	;;
     --version)
-	echo @VERSION@
+	echo "@GDLIB_VERSION@"
 	;;
     --majorversion)
-	echo @GDLIB_MAJOR@
+	echo "@GDLIB_MAJOR@"
 	;;
     --minorversion)
-	echo @GDLIB_MINOR@
+	echo "@GDLIB_MINOR@"
 	;;
     --revision)
-	echo @GDLIB_REVISION@
+	echo "@GDLIB_REVISION@"
 	;;
     --ldflags)
-	echo @LDFLAGS@
+	echo "@CMAKE_MODULE_LINKER_FLAGS@"
 	;;
     --libs)
-	echo -lgd @LIBS@ @LIBICONV@
+	echo "-lgd @GDLIB_PRIVATE_LIBS@"
 	;;
     --cflags|--includes)
-	echo -I@includedir@
+	echo "-I${includedir}"
 	;;
     --features)
-	echo @FEATURES@
+	echo "@GDLIB_FEATURES@"
 	;;
     --all)
-	echo "GD library  @VERSION@"
-	echo "includedir: $includedir"
-	echo "cflags:     -I@includedir@"
-	echo "ldflags:    @LDFLAGS@"
-	echo "libs:       @LIBS@ @LIBICONV@"
-	echo "libdir:     $libdir"
-	echo "features:   @FEATURES@"
+	echo "GD library  @GDLIB_VERSION@"
+	echo "includedir: ${includedir}"
+	echo "cflags:     -I${includedir}"
+	echo "ldflags:    @CMAKE_MODULE_LINKER_FLAGS@"
+	echo "libs:       @GDLIB_PRIVATE_LIBS@"
+	echo "libdir:     ${libdir}"
+	echo "features:   @GDLIB_FEATURES@"
 	;;
     *)
 	usage 1 1>&2
diff -urb libgd-gd-2.2.4/config/gdlib.pc.in libgd-gd-2.2.4.oi/config/gdlib.pc.in
--- libgd-gd-2.2.4/config/gdlib.pc.in	2017-01-18 12:02:07.000000000 +0000
+++ libgd-gd-2.2.4.oi/config/gdlib.pc.in	2017-06-10 04:21:57.134766759 +0000
@@ -1,11 +1,11 @@
-prefix=@prefix@
-exec_prefix=@exec_prefix@
-libdir=@libdir@
-includedir=@includedir@
+prefix=@CMAKE_INSTALL_PREFIX@
+exec_prefix=${prefix}
+libdir=${prefix}/@CMAKE_INSTALL_LIBDIR@
+includedir=${prefix}/@CMAKE_INSTALL_INCLUDEDIR@
 
 Name: gd
 Description: GD graphics library
-Version: @VERSION@
+Version: @GDLIB_VERSION@
 Cflags: -I${includedir}
-Libs.private: @LIBS@ @LIBICONV@
+Libs.private: @GDLIB_PRIVATE_LIBS@
 Libs: -L${libdir} -lgd
diff -urb libgd-gd-2.2.4/src/CMakeLists.txt libgd-gd-2.2.4.oi/src/CMakeLists.txt
--- libgd-gd-2.2.4/src/CMakeLists.txt	2017-06-10 04:27:39.082453802 +0000
+++ libgd-gd-2.2.4.oi/src/CMakeLists.txt	2017-06-10 04:21:57.149669046 +0000
@@ -118,6 +118,9 @@
 	${FONTCONFIG_LIBRARY}
 	${WEBP_LIBRARIES}
 )
+STRING(REGEX REPLACE ";[-/a-zA-Z0-9]+lib([^.]+).so" "-l\\1 " GDLIB_PRIVATE_LIBS ";${LIBGD_DEP_LIBS}")
+SET(GDLIB_PRIVATE_LIBS "${GDLIB_PRIVATE_LIBS}" PARENT_SCOPE)
+
 if (BUILD_SHARED_LIBS)
 	target_link_libraries(${GD_LIB} ${LIBGD_DEP_LIBS})
 endif()
