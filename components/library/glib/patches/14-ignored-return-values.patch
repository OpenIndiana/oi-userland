This patch fixes ON builds where linter is not happy with unused variables.
https://bug.oraclecorp.com/pls/bug/webbug_print.show?c_rptno=28964691

Even though it fixes specific behavior of our build environment,
it can be suitable for upstream.

--- glib-2.82.0/glib/gstring.h.orig
+++ glib-2.82.0/glib/gstring.h
@@ -206,7 +206,7 @@
       gstring->str[gstring->len] = 0;
     }
   else
-    g_string_insert_c (gstring, -1, c);
+    (void) g_string_insert_c (gstring, -1, c);
   return gstring;
 }
 
--- glib-2.82.0/glib/glib-autocleanups.h.orig
+++ glib-2.82.0/glib/glib-autocleanups.h
@@ -36,7 +36,7 @@
 g_autoptr_cleanup_gstring_free (GString *string)
 {
   if (string)
-    g_string_free (string, TRUE);
+    (void) g_string_free (string, TRUE);
 }
 
 /* Ignore deprecations in case we refer to a type which was added in a more
--- glib-2.82.0/gobject/gobject.h.orig
+++ glib-2.82.0/gobject/gobject.h
@@ -746,7 +746,7 @@
     return FALSE;
 
   if (new_object != NULL)
-    g_object_ref (new_object);
+    (void) g_object_ref (new_object);
 
   *object_ptr = new_object;
 
