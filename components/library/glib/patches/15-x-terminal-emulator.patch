--- glib-2.57.1/gio/gdesktopappinfo.c.~1~	2018-05-22 13:42:46.000000000 +0000
+++ glib-2.57.1/gio/gdesktopappinfo.c	2018-06-03 14:01:40.330616000 +0000
@@ -25,6 +25,7 @@
 #include "config.h"
 
 #include <errno.h>
+#include <limits.h>
 #include <string.h>
 #include <unistd.h>
 
@@ -2473,6 +2474,7 @@ prepend_terminal_to_vector (int    *argc
   int term_argc = 0;
   char *check;
   char **the_argv;
+  char buf[SYMLINK_MAX+1];
 
   g_return_val_if_fail (argc != NULL, FALSE);
   g_return_val_if_fail (argv != NULL, FALSE);
@@ -2497,6 +2499,29 @@ prepend_terminal_to_vector (int    *argc
   check = g_find_program_in_path ("gnome-terminal");
   if (check != NULL)
     {
+       memset(buf,0, SYMLINK_MAX+1);
+       if(readlink(check,buf,SYMLINK_MAX)){
+           g_debug("Found %s pointing to %s\n", check, buf);
+           if(!strcmp(buf,"gnome-terminal"))
+             {
+                 term_argv[1] = g_strdup ("-x");
+             }
+           else
+             {
+                 term_argv[1] = g_strdup("-e");
+             }
+           term_argv[0] = check;
+       } else {
+           g_warning ("Could not read x-terminal-emulator link, refusing to use it");
+           g_free(check);
+           check = NULL;
+       }
+    }
+  if (check == NULL)
+    {
+      check = g_find_program_in_path ("gnome-terminal");
+      if (check != NULL)
+        {
       term_argv[0] = check;
       /* Note that gnome-terminal takes -x and
        * as -e in gnome-terminal is broken we use that. */
@@ -2511,6 +2536,8 @@ prepend_terminal_to_vector (int    *argc
       if (check == NULL)
         check = g_find_program_in_path ("rxvt");
       if (check == NULL)
+            check = g_find_program_in_path ("xterm");
+          if (check == NULL)
         check = g_find_program_in_path ("dtterm");
       if (check == NULL)
         {
@@ -2520,6 +2547,7 @@ prepend_terminal_to_vector (int    *argc
       term_argv[0] = check;
       term_argv[1] = g_strdup ("-e");
     }
+    }
 
   real_argc = term_argc + *argc;
   real_argv = g_new (char *, real_argc + 1);
