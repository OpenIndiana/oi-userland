--- glib-2.62.3/gio/gdesktopappinfo.c.~1~	2019-11-19 20:51:31.000000000 +0000
+++ glib-2.62.3/gio/gdesktopappinfo.c	2019-12-18 22:23:38.635394306 +0000
@@ -29,6 +29,7 @@
 #define GLIB_DISABLE_DEPRECATION_WARNINGS
 
 #include <errno.h>
+#include <limits.h>
 #include <string.h>
 #include <unistd.h>
 
@@ -2523,6 +2524,7 @@
   int term_argc = 0;
   char *check;
   char **the_argv;
+  char buf[SYMLINK_MAX+1];
 
   g_return_val_if_fail (argc != NULL, FALSE);
   g_return_val_if_fail (argv != NULL, FALSE);
@@ -2544,9 +2546,32 @@
   term_argc = 2;
   term_argv = g_new0 (char *, 3);
 
-  check = g_find_program_in_path ("gnome-terminal");
+  check = g_find_program_in_path ("x-terminal-emulator");
   if (check != NULL)
     {
+       memset(buf,0, SYMLINK_MAX+1);
+       if(readlink(check,buf,SYMLINK_MAX)){
+           g_debug("Found %s pointing to %s\n", check, buf);
+           if(!strcmp(buf,"gnome-terminal"))
+             {
+                 term_argv[1] = g_strdup ("-x");
+             }
+           else
+             {
+                 term_argv[1] = g_strdup("-e");
+             }
+           term_argv[0] = check;
+       } else {
+           g_warning ("Could not read x-terminal-emulator link, refusing to use it");
+           g_free(check);
+           check = NULL;
+       }
+    }
+  if (check == NULL)
+    {
+      check = g_find_program_in_path ("gnome-terminal");
+      if (check != NULL)
+        {
       term_argv[0] = check;
       /* Since 2017, gnome-terminal has preferred `--` over `-x` or `-e`. */
       term_argv[1] = g_strdup ("--");
@@ -2573,6 +2598,8 @@
           if (check == NULL)
             check = g_find_program_in_path ("rxvt");
           if (check == NULL)
+            check = g_find_program_in_path ("xterm");
+          if (check == NULL)
             check = g_find_program_in_path ("dtterm");
           if (check == NULL)
             {
@@ -2583,6 +2610,7 @@
           term_argv[1] = g_strdup ("-e");
         }
     }
+    }
 
   real_argc = term_argc + *argc;
   real_argv = g_new (char *, real_argc + 1);
