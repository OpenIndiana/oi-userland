--- vte-0.78.1/src/reaper.cc.orig
+++ vte-0.78.1/src/reaper.cc
@@ -187,7 +187,7 @@
                         _exit(30);
                         break;
                 default:
-                        g_print("[parent] Starting to wait for %d.\n", p);
+                        g_print("[parent] Starting to wait for %ld.\n", (long) p);
                         vte_reaper_add_child(p);
                         child = p;
                         g_signal_connect(reaper,
@@ -211,7 +211,7 @@
                         _exit(5);
                         break;
                 default:
-                        g_print("[parent] Not waiting for %d.\n", q);
+                        g_print("[parent] Not waiting for %ld.\n", (long) q);
                         break;
         }
 
--- vte-0.78.1/src/vte.cc.orig
+++ vte-0.78.1/src/vte.cc
@@ -3708,15 +3708,15 @@
                 return;
 
         _VTE_DEBUG_IF (VTE_DEBUG_LIFECYCLE) {
-                g_printerr ("Child[%d] exited with status %d\n",
-                            pid, status);
+                g_printerr ("Child[%ld] exited with status %d\n",
+                            (long)pid, status);
 #ifdef HAVE_SYS_WAIT_H
                 if (WIFEXITED (status)) {
-                        g_printerr ("Child[%d] exit code %d.\n",
-                                    pid, WEXITSTATUS (status));
+                        g_printerr ("Child[%ld] exit code %d.\n",
+                                    (long)pid, WEXITSTATUS (status));
                 } else if (WIFSIGNALED (status)) {
-                        g_printerr ("Child[%d] dies with signal %d.\n",
-                                    pid, WTERMSIG (status));
+                        g_printerr ("Child[%ld] dies with signal %d.\n",
+                                    (long)pid, WTERMSIG (status));
                 }
 #endif
         }
--- vte-0.78.1/src/widget.cc.orig
+++ vte-0.78.1/src/widget.cc
@@ -20,7 +20,7 @@
 
 #include "widget.hh"
 
-#include <sys/wait.h> // for W_EXITCODE
+#define W_EXITCODE(ret, sig) ((ret) << 8 | (sig))
 
 #include <exception>
 #include <new>
