--- gedit-2.30.4.original/gedit/bacon-message-connection.c	2010-09-27 21:23:51.000000000 +0200
+++ gedit-2.30.4/gedit/bacon-message-connection.c	2012-05-09 06:40:48.923548188 +0200
@@ -39,6 +39,7 @@
 	gboolean is_server;
 
 	/* The socket path itself */
+	char *socketdir;
 	char *path;
 
 	/* File descriptor of the socket */
@@ -222,18 +223,39 @@
 }
 
 static char *
-socket_filename (const char *prefix)
+socket_tempdir(const char *prefix)
 {
-	char *pattern, *newfile, *path, *filename;
+	struct stat s;
 	const char *tmpdir;
+	tmpdir = g_strdup_printf("%s/%s-%s", g_get_tmp_dir (), prefix, g_get_user_name ());
+
+	if (stat (tmpdir, &s) == -1)
+	{
+		mkdir(tmpdir, 0700);
+		return tmpdir;
+	}
+
+	if (s.st_uid != geteuid ())
+		return NULL;
+
+	if ((s.st_mode & S_IRGRP) || (s.st_mode & S_IROTH))
+		return NULL;
+
+	return tmpdir;
+
+}
+
+static char *
+socket_filename (const char *tmpdir, const char *prefix)
+{
+	char *pattern, *newfile, *path, *filename;
+
+	pattern = g_strdup_printf ("socket.*");
 
-	pattern = g_strdup_printf ("%s.%s.*", prefix, g_get_user_name ());
-	tmpdir = g_get_tmp_dir ();
 	filename = find_file_with_pattern (tmpdir, pattern);
 	if (filename == NULL)
 	{
-		newfile = g_strdup_printf ("%s.%s.%u", prefix,
-				g_get_user_name (), g_random_int ());
+		newfile = g_strdup_printf ("socket.%u", g_random_int ());
 		path = g_build_filename (tmpdir, newfile, NULL);
 		g_free (newfile);
 	} else {
@@ -293,7 +315,9 @@
 	g_return_val_if_fail (prefix != NULL, NULL);
 
 	conn = g_new0 (BaconMessageConnection, 1);
-	conn->path = socket_filename (prefix);
+
+	conn->socketdir = socket_tempdir(prefix);
+	conn->path = socket_filename (conn->socketdir, prefix);
 
 	if (test_is_socket (conn->path) == FALSE)
 	{
@@ -310,6 +334,7 @@
 	if (try_client (conn) == FALSE)
 	{
 		unlink (conn->path);
+		rmdir (conn->socketdir);
 		try_server (conn);
 		if (conn->fd == -1)
 		{
@@ -353,6 +378,7 @@
 
 	if (conn->is_server != FALSE) {
 		unlink (conn->path);
+		rmdir (conn->socketdir);
 	}
 	if (conn->fd != -1) {
 		close (conn->fd);
