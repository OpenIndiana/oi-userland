<?xml version="1.0"?>
<!--
#
# This file and its contents are supplied under the terms of the
# Common Development and Distribution License ("CDDL"), version 1.0.
# You may only use this file in accordance with the terms of version
# 1.0 of the CDDL.
#
# A full copy of the text of the CDDL should have accompanied this
# source.  A copy of the CDDL is also available via the Internet at
# http://www.illumos.org/license/CDDL.
#
-->

<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">
<!--
#
# Copyright 2016 Jim Klimov
#
-->

<service_bundle type='manifest' name='nut:allInOne'>

	<service name='system/power/nut' type='service' version='1'>

	<!--
	  Configure a default instance for the service since it doesn't
	  require additional configuration intervention before it starts.
	-->
		<create_default_instance enabled='false' />
			
	<!--
	  Wait for all local and usr filesystem to be mounted - project is
	  located in /usr/sbin.
	-->
		<dependency
		name='fs-local'
		type='service'
		grouping='require_all'
		restart_on='none'>
			<service_fmri value='svc:/system/filesystem/local' />
		</dependency>
		
		<dependency
		name='filesystem-usr'
		grouping='require_all'
		restart_on='none'
		type='service'>
			<service_fmri
		value='svc:/system/filesystem/usr:default'/>
		</dependency>

	<!--
	  Wait for syslog to be started in order to write system
	  messages from the kernel. -- Not a hard requirement good for everybody.
	-->
<!--
		<dependency
		name='syslog'
		grouping='optional_all'
		restart_on='none'
		type='service'>
			<service_fmri
		value='svc:/system/system-log:default'/>
		</dependency>
-->

	<!--
	  Wait for network to be started in order to reach remote hosts.
	  - Not required on standalone machines using serial or USB UPSes
	-->
<!--
		<dependency
		name='network-service'
		grouping='require_all'
		restart_on='none'
		type='service'>
			<service_fmri value='svc:/network/service' />
		</dependency>
-->

	<!--
	  The nut start/stop methods.
	-->

		<exec_method
		type='method'
		name='start'
		exec='/lib/svc/method/svc-nut %m'
		timeout_seconds='60'/>

		<exec_method
		type='method'
		name='stop'
		exec='/lib/svc/method/svc-nut %m'
		timeout_seconds='60' />

		<property_group name='startd' type='framework'>
		<!--
		  Sub-process core dumps and external kill signals are not
		  considered errors, so the service should be restarted.
			-->
			<propval name='ignore_error' type='astring'
			 value='core,signal' />
		</property_group>

	<!-- Really unstable - this service should be evolved! -->
		<stability value='Unstable' />

		<template>
			<common_name>
				<loctext xml:lang='C'>
				NUT all-in-one SMF wrapper
				</loctext>
			</common_name>
			<documentation>
				<manpage title='upsdrvctl' section='8'
				manpath='/usr/share/man' />
				<manpage title='upsd' section='8'
				manpath='/usr/share/man' />
				<manpage title='upsmon' section='8'
				manpath='/usr/share/man' />
				<manpage title='ups.conf' section='5'
				manpath='/usr/share/man' />
				<manpage title='upsmon.conf' section='5'
				manpath='/usr/share/man' />
				<manpage title='upsd.conf' section='5'
				manpath='/usr/share/man' />
				<manpage title='upsd.users' section='5'
				manpath='/usr/share/man' />
			</documentation>
		</template>
	</service>

</service_bundle>
