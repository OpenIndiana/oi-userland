<?xml version="1.0"?>
<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">
<!--
	CDDL HEADER START

	The contents of this file are subject to the terms of the
	Common Development and Distribution License (the "License").
	You may not use this file except in compliance with the License.

	You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
	or http://www.opensolaris.org/os/licensing.
	See the License for the specific language governing permissions
	and limitations under the License.

	When distributing Covered Code, include this CDDL HEADER in each
	file and include the License file at usr/src/OPENSOLARIS.LICENSE.
	If applicable, add the following below this CDDL HEADER, with the
	fields enclosed by brackets "[]" replaced with your own identifying
	information: Portions Copyright [yyyy] [name of copyright owner]

	CDDL HEADER END

	Copyright (c) 2009, 2011, Oracle and/or its affiliates. All rights reserved.

	NOTE:  This service manifest is not editable; its contents will
	be overwritten by package or patch operations, including
	operating system upgrade.  Make customizations in a different
	file.
-->

<service_bundle type='manifest' name='SUNWsnortr:snort'>

<service
	name='network/snort'
	type='service'
	version='1'>

	<create_default_instance enabled='false' />

	<single_instance />

	<dependency name='fs-local'
		grouping='require_all'
		restart_on='none'
		type='service'>
		<service_fmri
			value='svc:/system/filesystem/local' />
	</dependency>

	<dependency name='fs-autofs'
		grouping='optional_all'
		restart_on='none'
		type='service'>
		<service_fmri value='svc:/system/filesystem/autofs' />
	</dependency>

	<dependency
                name='network'
                grouping='optional_all'
                restart_on='error'
                type='service'>
                <service_fmri value='svc:/milestone/network' />
        </dependency>

	<dependency name='net-loopback'
		grouping='require_all'
		restart_on='none'
		type='service'>
		<service_fmri value='svc:/network/loopback' />
	</dependency>

	<dependency name='net-physical'
		grouping='require_all'
		restart_on='none'
		type='service'>
		<service_fmri value='svc:/network/physical' />
	</dependency>

	<exec_method
		type='method'
		name='start'
		exec='/lib/svc/method/snortd start'
		timeout_seconds='60'>
		<method_context>
                        <method_credential
				user='noaccess'
				group='noaccess'
				privileges='basic,net_rawaccess' />
                </method_context>
	</exec_method>

	<exec_method
		type='method'
		name='stop'
		exec=':kill -9'
		timeout_seconds='60' />

	<property_group name='startd'
		type='framework'>
		<!-- sub-process core dumps shouldn't restart session -->
		<propval name='ignore_error'
		    type='astring' value='core,signal' />
	</property_group>

        <property_group name='general' type='framework'>
                <!-- to start stop snortd -->
                <propval name='action_authorization' type='astring'
                        value='solaris.smf.manage.snort' />
                <propval name='value_authorization' type='astring'
                        value='solaris.smf.manage.snort' />
        </property_group>

	<stability value='Unstable' />

	<template>
		<common_name>
			<loctext xml:lang='C'>
			Snort daemon 
			</loctext>
		</common_name>
		<documentation>
			<manpage title='snort' section='1M' manpath='/usr/share/man' />
		</documentation>
	</template>

</service>

</service_bundle>
