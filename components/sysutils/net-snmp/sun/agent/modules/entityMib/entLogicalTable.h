/*
 * Copyright (c) 2003, 2011, Oracle and/or its affiliates. All rights reserved.
 *
 * U.S. Government Rights - Commercial software. Government users are subject
 * to the Sun Microsystems, Inc. standard license agreement and applicable
 * provisions of the FAR and its supplements.
 *
 *
 * This distribution may include materials developed by third parties. Sun,
 * Sun Microsystems, the Sun logo and Solaris are trademarks or registered
 * trademarks of Sun Microsystems, Inc. in the U.S. and other countries.
 *
 */
/*
 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.iterate.conf,v 5.5 2002/12/16 22:50:18 hardaker Exp $
 */
#ifndef ENTLOGICALTABLE_H
#define ENTLOGICALTABLE_H

/* function declarations */
void init_entLogicalTable(void);
void initialize_table_entLogicalTable(void);
Netsnmp_Node_Handler entLogicalTable_handler;

Netsnmp_First_Data_Point  entLogicalTable_get_first_data_point;
Netsnmp_Next_Data_Point   entLogicalTable_get_next_data_point;

#define ENT_LOGICAL_TABLE "ENT_LOGICAL_TABLE"

/* column number definitions for table entLogicalTable */
       #define COLUMN_ENTLOGICALINDEX		1
       #define COLUMN_ENTLOGICALDESCR		2
       #define COLUMN_ENTLOGICALTYPE		3
       #define COLUMN_ENTLOGICALCOMMUNITY		4
       #define COLUMN_ENTLOGICALTADDRESS		5
       #define COLUMN_ENTLOGICALTDOMAIN		6
       #define COLUMN_ENTLOGICALCONTEXTENGINEID		7
       #define COLUMN_ENTLOGICALCONTEXTNAME		8

typedef struct entLogicalEntry_s {

   int_l   entLogicalIndex;
   char *entLogicalDescr;
   oid  *entLogicalType;
   int_l   entLogicalTypeSize;
   char *entLogicalCommunity;
   char *entLogicalTAddress;
   oid  *entLogicalTDomain; 
   int_l   entLogicalTDomainSize; 
   char *entLogicalContextEngineId;
   char *entLogicalContextName;
   struct entLogicalEntry_s* pNextEntry;

} entLogicalEntry_t;

extern void populate_entLogicalEntry(entLogicalEntry_t*, char*, oid*, int, char*, char*, oid*, int, char*, char*);

extern int allocLogicalEntry(int , entLogicalEntry_t*);

extern entLogicalEntry_t* getLogicalTableEntry(int xLogicalIndex);
extern entLogicalEntry_t* getLogicalTableStaleEntry(int xLogicalIndex);
extern int deleteLogicalTableEntry(int xLogicalIndex);
extern int makeLogicalTableEntryStale(int xLogicalIndex);
extern int makeLogicalTableEntryLive(int xLogicalIndex);


#endif /* ENTLOGICALTABLE_H */
