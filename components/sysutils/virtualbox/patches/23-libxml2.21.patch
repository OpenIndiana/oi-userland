with this patch it is possible to compile Vbox on libxml-2.12

diff --git a/src/VBox/Runtime/r3/xml.cpp b/src/VBox/Runtime/r3/xml.cpp
index 7b3317d..8e1ac5f 100644
--- a/src/VBox/Runtime/r3/xml.cpp
+++ b/src/VBox/Runtime/r3/xml.cpp
@@ -1837,7 +1837,7 @@ static void xmlParserBaseGenericError(void *pCtx, const char *pszMsg, ...)
     va_end(args);
 }
 
-static void xmlParserBaseStructuredError(void *pCtx, xmlErrorPtr error)
+static void xmlParserBaseStructuredError(void *pCtx, const xmlError *error)
 {
     NOREF(pCtx);
     /* we expect that there is always a trailing NL */
diff --git a/src/VBox/Runtime/r3/xml.cpp b/src/VBox/Runtime/r3/xml.cpp
index 8e1ac5f..20f36d7 100644
--- a/src/VBox/Runtime/r3/xml.cpp
+++ b/src/VBox/Runtime/r3/xml.cpp
@@ -117,7 +117,7 @@ LogicError::LogicError(RT_SRC_POS_DECL)
     RTStrFree(msg);
 }
 
-XmlError::XmlError(xmlErrorPtr aErr)
+XmlError::XmlError(const xmlError *aErr)
 {
     if (!aErr)
         throw EInvalidArg(RT_SRC_POS);
@@ -131,7 +131,7 @@ XmlError::XmlError(xmlErrorPtr aErr)
  * Composes a single message for the given error. The caller must free the
  * returned string using RTStrFree() when no more necessary.
  */
-/* static */ char *XmlError::Format(xmlErrorPtr aErr)
+/* static */ char *XmlError::Format(const xmlError *aErr)
 {
     const char *msg = aErr->message ? aErr->message : "<none>";
     size_t msgLen = strlen(msg);
diff --git a/include/iprt/cpp/xml.h b/include/iprt/cpp/xml.h
index be6b7c0..900cd73 100644
--- a/include/iprt/cpp/xml.h
+++ b/include/iprt/cpp/xml.h
@@ -100,9 +100,9 @@ public:
 class RT_DECL_CLASS XmlError : public RuntimeError
 {
 public:
-    XmlError(xmlErrorPtr aErr);
+    XmlError(const xmlError *aErr);
 
-    static char* Format(xmlErrorPtr aErr);
+    static char* Format(const xmlError *aErr);
 };
 
 // Logical errors
