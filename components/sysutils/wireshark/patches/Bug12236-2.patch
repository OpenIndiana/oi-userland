From af8de1a7c5dc944cb0f49dd4dd8004c400d87a00 Mon Sep 17 00:00:00 2001
From: Guy Harris <guy@alum.mit.edu>
Date: Tue, 15 Mar 2016 16:08:06 -0700
Subject: [PATCH] More "FT_BOOLEAN is 64-bit" fixes.

Change-Id: Iaacd492858ca2fb98c4947d587fbbd26fc102a7d
Reviewed-on: https://code.wireshark.org/review/14486
Reviewed-by: Guy Harris <guy@alum.mit.edu>
---
 epan/print.c             | 2 +-
 epan/proto.c             | 6 +++---
 epan/wslua/wslua_field.c | 2 +-
 rawshark.c               | 4 ++--
 ui/gtk/packet_win.c      | 2 +-
 5 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/epan/print.c b/epan/print.c
index 5e25ed5..ca4aa71 100644
--- epan/print.c
+++ epan/print.c
@@ -434,13 +434,13 @@ proto_tree_write_node_pdml(proto_node *node, gpointer data)
                         case FT_UINT16:
                         case FT_UINT24:
                         case FT_UINT32:
-                        case FT_BOOLEAN:
                             fprintf(pdata->fh, "%X", fvalue_get_uinteger(&fi->value));
                             break;
                         case FT_INT40:
                         case FT_INT48:
                         case FT_INT56:
                         case FT_INT64:
+                        case FT_BOOLEAN:
                             fprintf(pdata->fh, "%" G_GINT64_MODIFIER "X", fvalue_get_sinteger64(&fi->value));
                             break;
                         case FT_UINT40:
diff --git a/epan/proto.c b/epan/proto.c
index 416b036..87043c9 100644
--- epan/proto.c
+++ epan/proto.c
@@ -5002,18 +5002,18 @@ proto_custom_set(proto_tree* tree, GSList *field_ids, gint occurrence,
 						break;
 
 					case FT_BOOLEAN:
-						number = fvalue_get_uinteger(&finfo->value);
+						number64 = fvalue_get_uinteger64(&finfo->value);
 						tfstring = (const true_false_string *)&tfs_true_false;
 						if (hfinfo->strings) {
 							tfstring = (const struct true_false_string*) hfinfo->strings;
 						}
 						offset_r += protoo_strlcpy(result+offset_r,
-								number ?
+								number64 ?
 								tfstring->true_string :
 								tfstring->false_string, size-offset_r);
 
 						offset_e += protoo_strlcpy(expr+offset_e,
-								number ? "1" : "0", size-offset_e);
+								number64 ? "1" : "0", size-offset_e);
 						break;
 
 						/* XXX - make these just FT_NUMBER? */
diff --git a/epan/wslua/wslua_field.c b/epan/wslua/wslua_field.c
index 0bb3e26..598931a 100644
--- epan/wslua/wslua_field.c
+++ epan/wslua/wslua_field.c
@@ -95,7 +95,7 @@ WSLUA_METAMETHOD FieldInfo__call(lua_State* L) {
 
     switch(fi->ws_fi->hfinfo->type) {
         case FT_BOOLEAN:
-                lua_pushboolean(L,(int)fvalue_get_uinteger(&(fi->ws_fi->value)));
+                lua_pushboolean(L,(int)fvalue_get_uinteger64(&(fi->ws_fi->value)));
                 return 1;
         case FT_UINT8:
         case FT_UINT16:
diff --git a/rawshark.c b/rawshark.c
index 523313c..8fe7713 100644
--- rawshark.c
+++ rawshark.c
@@ -1313,9 +1313,9 @@ static gboolean print_field_value(field_info *finfo, int cmd_line_index)
                     case SF_STRVAL:
                         switch(hfinfo->type) {
                             case FT_BOOLEAN:
-                                uvalue = fvalue_get_uinteger(&finfo->value);
+                                uvalue64 = fvalue_get_uinteger64(&finfo->value);
                                 tfstring = (const struct true_false_string*) hfinfo->strings;
-                                g_string_append(label_s, uvalue ? tfstring->true_string : tfstring->false_string);
+                                g_string_append(label_s, uvalue64 ? tfstring->true_string : tfstring->false_string);
                                 break;
                             case FT_INT8:
                             case FT_INT16:
diff --git a/ui/gtk/packet_win.c b/ui/gtk/packet_win.c
index 179988b..7459019 100644
--- ui/gtk/packet_win.c
+++ ui/gtk/packet_win.c
@@ -611,7 +611,7 @@ new_finfo_window(GtkWidget *w, struct FieldinfoWinData *DataPtr)
 
 	} else if (finfo_type == FT_BOOLEAN) {
 		fvalue_edit = gtk_check_button_new();
-		gtk_toggle_button_set_active(GTK_TOGGLE_BUTTON(fvalue_edit), (fvalue_get_uinteger(&finfo->value) != 0));
+		gtk_toggle_button_set_active(GTK_TOGGLE_BUTTON(fvalue_edit), (fvalue_get_uinteger64(&finfo->value) != 0));
 		g_signal_connect(fvalue_edit, "toggled", G_CALLBACK(finfo_boolean_changed), DataPtr);
 
 	} else if (finfo_type == FT_IPv4) {
