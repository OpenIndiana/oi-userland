When boost is installed in /usr we have say it to 
avoid using include_next. By default it is done on Linux 
(as major distributions ship it there),  so in this 
we pretend to be Linux

test case:
echo '#include <boost/math/distributions/normal.hpp>' > test.cc
g++ -c -I/usr/include/boost/tr1/tr1  test.cc

Without patch you'll get error
config_all.hpp:151:26: error: no include path in which to search for utility

--- boost_1_58_0/boost/tr1/detail/config.hpp.orig	2015-06-21 03:11:57.944576008 +0000
+++ boost_1_58_0/boost/tr1/detail/config.hpp	2015-06-21 03:15:37.248341033 +0000
@@ -9,6 +9,7 @@
 #include <cstddef>
 
 #if (defined(__GNUC__) && !(defined(linux) || defined(__linux) || defined(__linux__))) \
+   || (!(defined(__sun) || defined(__sun__)) && defined(__GNUC__)) \
    || (!defined(__FreeBSD__) && defined(__GNUC__)) \
    || (!defined(_AIX) && defined(__IBMCPP__)  && (__IBMCPP__ >= 800)) 
    // Disable use of #include_next on Linux as typically we are installed in a 
    // directory that is searched *after* the std lib include path.
+   // Do the same on OI Hipster - we install boost in /usr
 #if !defined(BOOST_HAS_INCLUDE_NEXT)
 #  define BOOST_HAS_INCLUDE_NEXT
 #endif
--- boost_1_58_0/boost/tr1/detail/config_all.hpp.orig	2015-06-22 19:50:19.060553996 +0000
+++ boost_1_58_0/boost/tr1/detail/config_all.hpp	2015-06-22 19:51:28.596217225 +0000
@@ -114,7 +114,7 @@
 #    endif
 
 #      if !defined(BOOST_TR1_DISABLE_INCLUDE_NEXT) && !defined(__ICC) \
-            && (defined(__FreeBSD__) || defined(linux) || defined(__linux) || defined(__linux__) || defined(__GNU__) || defined(__GLIBC__))
+            && (defined(__FreeBSD__) || defined(linux) || defined(__linux) || defined(__linux__) || defined(__GNU__) || defined(__GLIBC__) || defined(__sun) || defined(__sun__))
          // Disable use of #include_next on Linux as typically we are installed in a directory that is searched
          // *after* the std lib include path:
 #        define BOOST_TR1_DISABLE_INCLUDE_NEXT
