From b606c81df41e2501cfd5d97158339e1658dbc315 Mon Sep 17 00:00:00 2001
From: Stas Boukarev <stassats@gmail.com>
Date: Tue, 23 Jul 2019 13:22:23 +0300
Subject: [PATCH 1/2] Fix sb-posix mk[s]temp tests if XXXXXX is replaced with a
 dot.

Like on Solaris.

Fixes lp#1837495
---
 contrib/sb-posix/posix-tests.lisp | 21 ++++++++++++++++-----
 1 file changed, 16 insertions(+), 5 deletions(-)

diff --git a/contrib/sb-posix/posix-tests.lisp b/contrib/sb-posix/posix-tests.lisp
index 95cec1cb8..7dfe57589 100644
--- a/contrib/sb-posix/posix-tests.lisp
+++ b/contrib/sb-posix/posix-tests.lisp
@@ -811,6 +811,19 @@
     (equal (sb-unix::posix-getcwd) (sb-posix:getcwd))
   t)
 
+(defun parse-native-namestring (namestring &key as-directory)
+  ;; XXXXXX can contain a dot changing pathname-type
+  (let* ((dot (and (not as-directory)
+                   (position #\. namestring)))
+         (type (and dot
+                    (subseq namestring (1+ dot)))))
+    (make-pathname :type type
+                   :defaults
+                   (sb-ext:parse-native-namestring namestring nil
+                                                   *default-pathname-defaults*
+                                                   :as-directory as-directory
+                                                   :end dot))))
+
 #-win32
 (deftest mkstemp.1
     (multiple-value-bind (fd temp)
@@ -818,7 +831,7 @@
                            :name "mkstemp-1"
                            :type "XXXXXX"
                            :defaults *test-directory*))
-      (let ((pathname (sb-ext:parse-native-namestring temp)))
+      (let ((pathname (parse-native-namestring temp)))
         (unwind-protect
              (values (integerp fd) (pathname-name pathname))
           (delete-file temp))))
@@ -830,13 +843,11 @@
 ;;; But it is implemented on OpenSolaris 2008.11
 (deftest mkdtemp.1
     (let ((pathname
-           (sb-ext:parse-native-namestring
+           (parse-native-namestring
             (sb-posix:mkdtemp (make-pathname
                                :name "mkdtemp-1"
                                :type "XXXXXX"
                                :defaults *test-directory*))
-            nil
-            *default-pathname-defaults*
             :as-directory t)))
       (unwind-protect
            (values (let* ((xxx (car (last (pathname-directory pathname))))
@@ -849,7 +860,7 @@
 
 #-win32
 (deftest mktemp.1
-    (let ((pathname (sb-ext:parse-native-namestring
+    (let ((pathname (parse-native-namestring
                      (sb-posix:mktemp #p"mktemp.XXXXXX"))))
       (values (equal "mktemp" (pathname-name pathname))
               (not (equal "XXXXXX" (pathname-type pathname)))))
-- 
2.21.0

