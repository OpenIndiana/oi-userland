See http://hg.openjdk.java.net/jdk/jdk/rev/1096ad4dbf62

The problem is that we want a guard based on platform, but
_GNU_SOURCE is a per-toolchain define for the gcc toolchain.
It "fixes" AIX because that's using the xlc toolchain.

diff -wpruN '--exclude=*.orig' a~/src/hotspot/share/runtime/os.cpp a/src/hotspot/share/runtime/os.cpp
--- a~/src/hotspot/share/runtime/os.cpp	1970-01-01 00:00:00
+++ a/src/hotspot/share/runtime/os.cpp	1970-01-01 00:00:00
@@ -154,7 +154,7 @@ char* os::iso8601_time(char* buffer, siz
   // No offset when dealing with UTC
   time_t UTC_to_local = 0;
   if (!utc) {
-#if defined(_ALLBSD_SOURCE) || defined(_GNU_SOURCE)
+#if defined(_ALLBSD_SOURCE) || defined(_BSD_SOURCE)
     UTC_to_local = -(time_struct.tm_gmtoff);
 #elif defined(_WINDOWS)
     long zone;
@@ -165,7 +165,7 @@ char* os::iso8601_time(char* buffer, siz
 #endif
 
     // tm_gmtoff already includes adjustment for daylight saving
-#if !defined(_ALLBSD_SOURCE) && !defined(_GNU_SOURCE)
+#if !defined(_ALLBSD_SOURCE) && !defined(_BSD_SOURCE)
     // If daylight savings time is in effect,
     // we are 1 hour East of our time zone
     if (time_struct.tm_isdst > 0) {
