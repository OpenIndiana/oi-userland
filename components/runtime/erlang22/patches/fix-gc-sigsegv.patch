On SPARC platform, the Elixir unit tests might fail
with the segmentation fault in any_heap_refs function.
The crash is caused by a pointer overflow and the
subsequent access to the invalid address.

The issue was reported to Erlang team:
https://bugs.erlang.org/browse/ERL-1188

John HÃ¶gberg provided a patch to fix the issue:

From 8f4f8b2a2a6cce3d7fe8e3a422d9fb442f1e13f8 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?John=20H=C3=B6gberg?= <john@erlang.org>
Date: Tue, 17 Mar 2020 16:16:19 +0100
Subject: [PATCH] WIP: Dirty fix for ERL-1088

---
 erts/emulator/beam/erl_process.c | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

diff --git a/erts/emulator/beam/erl_process.c b/erts/emulator/beam/erl_process.c
index 5b29023fdc..4c697e6331 100644
--- a/erts/emulator/beam/erl_process.c
+++ b/erts/emulator/beam/erl_process.c
@@ -10370,9 +10370,15 @@ execute_sys_tasks(Process *c_p, erts_aint32_t *statep, int in_reds)
 	    else
 		fcalls = reds - CONTEXT_REDS;
 	    do_gc = st->arg[0] == am_true;
-	    st_res = erts_proc_copy_literal_area(c_p, &cla_reds,
-						 fcalls, do_gc);
-            reds -= cla_reds;
+
+            if (!(c_p-> flags & F_DISABLE_GC)) {
+                st_res = erts_proc_copy_literal_area(c_p, &cla_reds,
+                                                     fcalls, do_gc);
+                reds -= cla_reds;
+            } else {
+                st_res = THE_NON_VALUE;
+            }
+
 	    if (is_non_value(st_res)) {
 		if (c_p->flags & F_DIRTY_CLA) {
 		    save_dirty_task(c_p, st);
