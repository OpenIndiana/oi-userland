Backport of:

From 659615c7b100a89eafe6253e7a5b9d84d0e8df74 Mon Sep 17 00:00:00 2001
From: Damien Doligez <damien.doligez-inria.fr>
Date: Mon, 19 Oct 2015 15:47:33 +0000
Subject: [PATCH] fix PR#7003 and a few other bugs caused by misuse of Int_val

git-svn-id: http://caml.inria.fr/svn/ocaml/trunk@16525 f963ae5c-01c2-4b8c-9fe0-0dff7051ff02
---
 Changes          | 4 +++-
 VERSION          | 2 +-
 byterun/alloc.c  | 4 ++--
 byterun/intern.c | 2 +-
 byterun/str.c    | 4 ++--
 5 files changed, 9 insertions(+), 7 deletions(-)

Index: ocaml-4.01.0/byterun/alloc.c
===================================================================
--- ocaml-4.01.0.orig/byterun/alloc.c	2016-05-05 15:14:48.060690126 -0400
+++ ocaml-4.01.0/byterun/alloc.c	2016-05-05 15:14:48.052690032 -0400
@@ -145,7 +145,7 @@
 
 CAMLprim value caml_alloc_dummy(value size)
 {
-  mlsize_t wosize = Int_val(size);
+  mlsize_t wosize = Long_val(size);
 
   if (wosize == 0) return Atom(0);
   return caml_alloc (wosize, 0);
@@ -153,7 +153,7 @@
 
 CAMLprim value caml_alloc_dummy_float (value size)
 {
-  mlsize_t wosize = Int_val(size) * Double_wosize;
+  mlsize_t wosize = Long_val(size) * Double_wosize;
 
   if (wosize == 0) return Atom(0);
   return caml_alloc (wosize, 0);
Index: ocaml-4.01.0/byterun/str.c
===================================================================
--- ocaml-3.11.2/byterun/str.c.~1~	2007-01-30 12:52:08.000000000 +0000
+++ ocaml-3.11.2/byterun/str.c	2017-10-10 16:48:17.535625546 +0000
@@ -123,7 +123,7 @@
 CAMLprim value caml_blit_string(value s1, value ofs1, value s2, value ofs2,
                                 value n)
 {
-  memmove(&Byte(s2, Long_val(ofs2)), &Byte(s1, Long_val(ofs1)), Int_val(n));
+  memmove(&Byte(s2, Long_val(ofs2)), &Byte(s1, Long_val(ofs1)), Long_val(n));
   return Val_unit;
 }
 
@@ -150,7 +150,7 @@
 
 CAMLprim value caml_bitvect_test(value bv, value n)
 {
-  int pos = Int_val(n);
+  intnat pos = Long_val(n);
   return Val_int(Byte_u(bv, pos >> 3) & (1 << (pos & 7)));
 }
 
