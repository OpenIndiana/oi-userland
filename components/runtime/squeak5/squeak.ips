#!/bin/sh
#
# Loosely based on Ian Piumarta's SqueakV4 wrapper script
# this script also uses the 'ckformat' binary to check the Squeak image
# and then launches a 32bit or 64bit vm (based on ckformat)
#
# The script then sets the LD_LIBRARY_PATH to the SQUEAK_PLUGINS directory.

CK=/usr/bin/ckformat
DBX=
PLUGIN_REV=5.0-202105050900
LIB32=/usr/lib/squeak/$PLUGIN_REV
LIB64=/usr/lib/amd64/squeak/$PLUGIN_REV

if [ "${SQUEAK_PLUGINS-unset}" = unset ]; then
	SQUEAK_PLUGINS="$LIB32"
	export SQUEAK_PLUGINS
fi

while test "$#" -gt "0"; do
case $1 in
  -dbx)
	DBX='dbx -C'
        ;;
  -gdb)
	DBX='gdb'
        ;;
  --)   break;; # pass to VM
   *)   if test ! "$image" -a \( -f "$1.image" -o -f "$1" \); then image="$1"; fi;;
esac
shift
done

# set the image

if test   -z "${image}";        then image="${SQUEAK_IMAGE}"; fi
if test   -z "${image}";        then image="squeak";          fi
if test   -f "${image}.image";  then image="${image}.image";  fi

if test -x "${CK}" -a -f "${image}"; then
    format=`"${CK}" "${image}"`
    case "${format}" in
        6521) 
  	  export SQUEAK_PLUGINS="$LIB32";;
        68021)  
  	  export SQUEAK_PLUGINS="$LIB64";;
        *)  echo "Unknown Squeak image format ${format}";exit 0;;
    esac
else
    echo "No image found, run default VM with args"
fi

LD_LIBRARY_PATH="${SQUEAK_PLUGINS}:${LD_LIBRARY_PATH}" exec $DBX "$SQUEAK_PLUGINS/squeak" $image

