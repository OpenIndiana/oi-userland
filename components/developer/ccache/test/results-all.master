      Start  1: unittest
 1/46 Test  #1: unittest .........................***Failed    
      Start  2: test.base
 2/46 Test  #2: test.base ........................   Passed   
      Start  3: test.basedir
 3/46 Test  #3: test.basedir .....................   Passed    
      Start  4: test.cache_levels
 4/46 Test  #4: test.cache_levels ................   Passed    
      Start  5: test.cleanup
 5/46 Test  #5: test.cleanup .....................***Skipped   
      Start  6: test.color_diagnostics
 6/46 Test  #6: test.color_diagnostics ...........***Skipped   
      Start  7: test.config
 7/46 Test  #7: test.config ......................   Passed    
      Start  8: test.cpp1
 8/46 Test  #8: test.cpp1 ........................   Passed    
      Start  9: test.debug_prefix_map
 9/46 Test  #9: test.debug_prefix_map ............***Failed    
      Start 10: test.depend
10/46 Test #10: test.depend ......................   Passed    
      Start 11: test.direct
11/46 Test #11: test.direct ......................   Passed   
      Start 12: test.fileclone
12/46 Test #12: test.fileclone ...................***Skipped   
      Start 13: test.hardlink
13/46 Test #13: test.hardlink ....................   Passed    
      Start 14: test.inode_cache
14/46 Test #14: test.inode_cache .................***Skipped   
      Start 15: test.input_charset
15/46 Test #15: test.input_charset ...............***Skipped   
      Start 16: test.ivfsoverlay
16/46 Test #16: test.ivfsoverlay .................***Skipped   
      Start 17: test.masquerading
17/46 Test #17: test.masquerading ................   Passed    
      Start 18: test.modules
18/46 Test #18: test.modules .....................***Skipped   
      Start 19: test.multi_arch
19/46 Test #19: test.multi_arch ..................***Skipped   
      Start 20: test.namespace
20/46 Test #20: test.namespace ...................   Passed    
      Start 21: test.no_compression
21/46 Test #21: test.no_compression ..............   Passed    
      Start 22: test.nocpp2
22/46 Test #22: test.nocpp2 ......................   Passed   
      Start 23: test.nvcc
23/46 Test #23: test.nvcc ........................***Skipped   
      Start 24: test.nvcc_direct
24/46 Test #24: test.nvcc_direct .................***Skipped   
      Start 25: test.nvcc_ldir
25/46 Test #25: test.nvcc_ldir ...................***Skipped   
      Start 26: test.nvcc_nocpp2
26/46 Test #26: test.nvcc_nocpp2 .................***Skipped   
      Start 27: test.pch
27/46 Test #27: test.pch .........................***Failed    
      Start 28: test.profiling
28/46 Test #28: test.profiling ...................***Failed    
      Start 29: test.profiling_clang
29/46 Test #29: test.profiling_clang .............***Skipped   
      Start 30: test.profiling_gcc
30/46 Test #30: test.profiling_gcc ...............   Passed    
      Start 31: test.profiling_hip_clang
31/46 Test #31: test.profiling_hip_clang .........***Skipped   
      Start 32: test.readonly
32/46 Test #32: test.readonly ....................***Skipped   
      Start 33: test.readonly_direct
33/46 Test #33: test.readonly_direct .............***Skipped   
      Start 34: test.remote_file
34/46 Test #34: test.remote_file .................   Passed    
      Start 35: test.remote_http
35/46 Test #35: test.remote_http .................   Passed    
      Start 36: test.remote_only
36/46 Test #36: test.remote_only .................   Passed    
      Start 37: test.remote_redis
37/46 Test #37: test.remote_redis ................***Skipped   
      Start 38: test.remote_redis_unix
38/46 Test #38: test.remote_redis_unix ...........***Skipped   
      Start 39: test.remote_url
39/46 Test #39: test.remote_url ..................   Passed    
      Start 40: test.sanitize_blacklist
40/46 Test #40: test.sanitize_blacklist ..........***Skipped   
      Start 41: test.serialize_diagnostics
41/46 Test #41: test.serialize_diagnostics .......***Skipped   
      Start 42: test.source_date_epoch
42/46 Test #42: test.source_date_epoch ...........   Passed    
      Start 43: test.split_dwarf
43/46 Test #43: test.split_dwarf .................   Passed    
      Start 44: test.stats_log
44/46 Test #44: test.stats_log ...................   Passed    
      Start 45: test.trim_dir
45/46 Test #45: test.trim_dir ....................***Skipped   
      Start 46: test.upgrade
46/46 Test #46: test.upgrade .....................   Passed    
91% tests passed, 4 tests failed out of 46
	  5 - test.cleanup (Skipped)
	  6 - test.color_diagnostics (Skipped)
	 12 - test.fileclone (Skipped)
	 14 - test.inode_cache (Skipped)
	 15 - test.input_charset (Skipped)
	 16 - test.ivfsoverlay (Skipped)
	 18 - test.modules (Skipped)
	 19 - test.multi_arch (Skipped)
	 23 - test.nvcc (Skipped)
	 24 - test.nvcc_direct (Skipped)
	 25 - test.nvcc_ldir (Skipped)
	 26 - test.nvcc_nocpp2 (Skipped)
	 29 - test.profiling_clang (Skipped)
	 31 - test.profiling_hip_clang (Skipped)
	 32 - test.readonly (Skipped)
	 33 - test.readonly_direct (Skipped)
	 37 - test.remote_redis (Skipped)
	 38 - test.remote_redis_unix (Skipped)
	 40 - test.sanitize_blacklist (Skipped)
	 41 - test.serialize_diagnostics (Skipped)
	 45 - test.trim_dir (Skipped)
	  1 - unittest (Failed)
	  9 - test.debug_prefix_map (Failed)
	 27 - test.pch (Failed)
	 28 - test.profiling (Failed)
Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.
