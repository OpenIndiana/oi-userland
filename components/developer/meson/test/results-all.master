test_meson_exe_windows (__main__.CommandTests) ... skipped 'NOT IMPLEMENTED'
test_meson_installed (__main__.CommandTests) ... warning: no files found matching '__main__.py'
test_meson_uninstalled (__main__.CommandTests) ... ok
test_meson_zipapp (__main__.CommandTests) ... ok
test_compiler_args_class_clike (__main__.InternalTests) ... ok
test_compiler_args_class_d (__main__.InternalTests) ... ok
test_compiler_args_class_gnuld (__main__.InternalTests) ... ok
test_compiler_args_class_none_flush (__main__.InternalTests) ... ok
test_compiler_args_remove_system (__main__.InternalTests) ... ok
test_dependency_factory_order (__main__.InternalTests) ... ok
test_depfile (__main__.InternalTests) ... ok
test_extract_as_list (__main__.InternalTests) ... ok
test_find_library_patterns (__main__.InternalTests)
Unit test for the library search patterns used by find_library() ... ok
test_listify (__main__.InternalTests) ... ok
test_log_once (__main__.InternalTests) ... ok
test_log_once_ansi (__main__.InternalTests) ... ok
test_mode_symbolic_to_bits (__main__.InternalTests) ... ok
test_msvc_toolset_version (__main__.InternalTests)
Ensure that the toolset version returns the correct value for this MSVC ... skipped 'Test only applies to MSVC-like compilers'
test_needs_exe_wrapper_override (__main__.InternalTests) ... ok
test_pkgconfig_module (__main__.InternalTests) ... ok
test_pkgconfig_parse_libs (__main__.InternalTests)
Unit test for parsing of pkg-config output to search for libraries ... ok
test_quote_arg (__main__.InternalTests) ... ok
test_sort_libpaths (__main__.InternalTests) ... ok
test_split_args (__main__.InternalTests) ... ok
test_string_templates_substitution (__main__.InternalTests) ... ok
test_typed_pos_args_max_varargs (__main__.InternalTests) ... ok
test_typed_pos_args_max_varargs_exceeded (__main__.InternalTests) ... ok
test_typed_pos_args_min_and_max_varargs_exceeded (__main__.InternalTests) ... ok
test_typed_pos_args_min_and_max_varargs_not_met (__main__.InternalTests) ... ok
test_typed_pos_args_min_optargs_max_exceeded (__main__.InternalTests) ... ok
test_typed_pos_args_min_optargs_not_met (__main__.InternalTests) ... ok
test_typed_pos_args_min_varargs (__main__.InternalTests) ... ok
test_typed_pos_args_min_varargs_not_met (__main__.InternalTests) ... ok
test_typed_pos_args_optargs_all_given (__main__.InternalTests) ... ok
test_typed_pos_args_optargs_not_given (__main__.InternalTests) ... ok
test_typed_pos_args_optargs_some_given (__main__.InternalTests) ... ok
test_typed_pos_args_types (__main__.InternalTests) ... ok
test_typed_pos_args_types_invalid (__main__.InternalTests) ... ok
test_typed_pos_args_types_wrong_number (__main__.InternalTests) ... ok
test_typed_pos_args_varargs (__main__.InternalTests) ... ok
test_typed_pos_args_varargs_invalid (__main__.InternalTests) ... ok
test_typed_pos_args_varargs_invalid_mulitple_types (__main__.InternalTests) ... ok
test_typed_pos_args_varargs_not_given (__main__.InternalTests) ... ok
test_typed_pos_args_variadic_and_optional (__main__.InternalTests) ... ok
test_unholder (__main__.InternalTests) ... ok
test_validate_json (__main__.InternalTests)
Validate the json schema for the test cases. ... ok
test_version_compare (__main__.InternalTests) ... ok
test_version_number (__main__.InternalTests) ... ok
test_all_functions_defined_in_ast_interpreter (__main__.DataTests)
Ensure that the all functions defined in the Interpreter are also defined ... skipped 'Skipping because this is a tarball release'
test_builtin_options_documented (__main__.DataTests)
Test that universal options and base options are documented in ... skipped 'Skipping because this is a tarball release'
test_compiler_options_documented (__main__.DataTests)
Test that C and C++ compiler options and base options are documented in ... skipped 'Skipping because this is a tarball release'
test_cpu_families_documented (__main__.DataTests) ... skipped 'Skipping because this is a tarball release'
test_markdown_files_in_sitemap (__main__.DataTests)
Test that each markdown files in docs/markdown is referenced in sitemap.txt ... skipped 'Skipping because this is a tarball release'
test_mesondata_is_up_to_date (__main__.DataTests) ... skipped 'Skipping because this is a tarball release'
test_snippets (__main__.DataTests) ... skipped 'Skipping because this is a tarball release'
test_vim_syntax_highlighting (__main__.DataTests)
Ensure that vim syntax highlighting files were updated for new ... skipped 'Skipping because this is a tarball release'
test_absolute_prefix_libdir (__main__.AllPlatformTests)
Tests that setting absolute paths for --prefix and --libdir work. Can't ... ok
test_adding_subproject_to_configure_project (__main__.AllPlatformTests) ... ok
test_alias_target (__main__.AllPlatformTests) ... ok
test_all_forbidden_targets_tested (__main__.AllPlatformTests)
Test that all forbidden targets are tested in the '150 reserved targets' ... ok
test_always_prefer_c_compiler_for_asm (__main__.AllPlatformTests) ... ok
test_array_option_bad_change (__main__.AllPlatformTests) ... ok
test_array_option_change (__main__.AllPlatformTests) ... ok
test_array_option_empty_equivalents (__main__.AllPlatformTests)
Array options treat -Dopt=[] and -Dopt= as equivalent. ... ok
test_build_b_options (__main__.AllPlatformTests) ... ok
test_build_by_default (__main__.AllPlatformTests) ... ok
test_buildtype_setting (__main__.AllPlatformTests) ... ok
test_cflags_cppflags (__main__.AllPlatformTests) ... ok
test_check_module_linking (__main__.AllPlatformTests)
Test that link_with: a shared module issues a warning ... ok
test_clang_format (__main__.AllPlatformTests) ... ok
test_clang_format_check (__main__.AllPlatformTests) ... ok
test_clang_tidy (__main__.AllPlatformTests) ... skipped 'clang-tidy not found'
test_clike_get_library_dirs (__main__.AllPlatformTests) ... ok
test_cmake_parser (__main__.AllPlatformTests) ... ok
test_cmake_prefix_path (__main__.AllPlatformTests) ... ok
test_command_line (__main__.AllPlatformTests) ... ok
test_commands_documented (__main__.AllPlatformTests)
Test that all listed meson commands are documented in Commands.md. ... skipped 'Doc directory does not exist.'
test_compiler_detection (__main__.AllPlatformTests)
Test that automatic compiler detection and setting from the environment ... ok
test_compiler_run_command (__main__.AllPlatformTests)
The test checks that the compiler object can be passed to ... ok
test_configure (__main__.AllPlatformTests) ... ok
test_configure_file_warnings (__main__.AllPlatformTests) ... ok
test_conflicting_d_dash_option (__main__.AllPlatformTests) ... ok
test_coverage (__main__.AllPlatformTests) ... skipped 'gcovr not found, or too old'
test_coverage_complex (__main__.AllPlatformTests) ... skipped 'gcovr not found, or too old'
test_coverage_html (__main__.AllPlatformTests) ... skipped 'gcovr not found, or too old'
test_coverage_text (__main__.AllPlatformTests) ... skipped 'gcovr not found, or too old'
test_coverage_xml (__main__.AllPlatformTests) ... skipped 'gcovr not found, or too old'
test_cross_file_constants (__main__.AllPlatformTests) ... ok
test_custom_target_changes_cause_rebuild (__main__.AllPlatformTests)
Test that in a custom target, changes to the input files, the ... ok
test_custom_target_exe_data_deterministic (__main__.AllPlatformTests) ... ok
test_custom_target_implicit_include (__main__.AllPlatformTests) ... ok
test_dash_d_dedup (__main__.AllPlatformTests) ... ok
test_default_options_prefix (__main__.AllPlatformTests)
Tests that setting a prefix in default_options in project() works. ... ok
test_default_options_prefix_dependent_defaults (__main__.AllPlatformTests)
Tests that setting a prefix in default_options in project() sets prefix ... ok
test_devenv (__main__.AllPlatformTests) ... ok
test_dirs (__main__.AllPlatformTests) ... ok
test_dist_git (__main__.AllPlatformTests) ... ok
test_dist_git_script (__main__.AllPlatformTests) ... ok
test_dist_hg (__main__.AllPlatformTests) ... ok
test_do_conf_file_by_format (__main__.AllPlatformTests) ... ok
test_do_conf_file_preserve_newlines (__main__.AllPlatformTests) ... ok
test_env_flags_to_linker (__main__.AllPlatformTests) ... ok
test_error_location_path (__main__.AllPlatformTests)
Test locations in meson errors contain correct paths ... ok
test_feature_check_usage_subprojects (__main__.AllPlatformTests) ... ok
test_flock (__main__.AllPlatformTests) ... ok
test_force_fallback_for (__main__.AllPlatformTests) ... ok
test_forcefallback (__main__.AllPlatformTests) ... ok
test_free_stringarray_setting (__main__.AllPlatformTests) ... ok
test_guessed_linker_dependencies (__main__.AllPlatformTests)
Test that meson adds dependencies for libraries based on the final ... ok
test_identical_target_name_in_subdir_flat_layout (__main__.AllPlatformTests)
Test that identical targets in different subdirs do not collide ... ok
test_identical_target_name_in_subproject_flat_layout (__main__.AllPlatformTests)
Test that identical targets in different subprojects do not collide ... ok
test_identity_cross (__main__.AllPlatformTests) ... ok
test_implicit_forcefallback (__main__.AllPlatformTests) ... ok
test_install_introspection (__main__.AllPlatformTests)
Tests that the Meson introspection API exposes install filenames correctly ... ok
test_install_introspection_multiple_outputs (__main__.AllPlatformTests)
Tests that the Meson introspection API exposes multiple install filenames correctly without crashing ... ok
test_install_log_content (__main__.AllPlatformTests)
Tests that the install-log.txt is consistent with the installed files and directories. ... ok
test_install_skip_subprojects (__main__.AllPlatformTests) ... ok
test_install_subdir_introspection (__main__.AllPlatformTests)
Test that the Meson introspection API also contains subdir install information ... ok
test_internal_include_order (__main__.AllPlatformTests) ... ok
test_introspect_ast_source (__main__.AllPlatformTests) ... ok
test_introspect_buildoptions_cross_only (__main__.AllPlatformTests) ... ok
test_introspect_buildoptions_without_configured_build (__main__.AllPlatformTests) ... ok
test_introspect_config_update (__main__.AllPlatformTests) ... ok
test_introspect_dependencies_from_source (__main__.AllPlatformTests) ... ok
test_introspect_file_dump_equals_all (__main__.AllPlatformTests) ... ok
test_introspect_json_dump (__main__.AllPlatformTests) ... ok
test_introspect_json_flat (__main__.AllPlatformTests) ... ok
test_introspect_meson_info (__main__.AllPlatformTests) ... ok
test_introspect_projectinfo_subproject_dir (__main__.AllPlatformTests) ... ok
test_introspect_projectinfo_subproject_dir_from_source (__main__.AllPlatformTests) ... ok
test_introspect_projectinfo_subprojects (__main__.AllPlatformTests) ... ok
test_introspect_projectinfo_without_configured_build (__main__.AllPlatformTests) ... ok
test_introspect_targets_from_source (__main__.AllPlatformTests) ... ok
test_introspection_target_subproject (__main__.AllPlatformTests) ... ok
test_junit_valid_exitcode (__main__.AllPlatformTests) ... ok
test_junit_valid_gtest (__main__.AllPlatformTests) ... skipped 'Project requested skipping: $(SOURCE_DIR)/test cases/frameworks/2 gtest'
test_junit_valid_tap (__main__.AllPlatformTests) ... ok
test_libdir_must_be_inside_prefix (__main__.AllPlatformTests)
Tests that libdir is forced to be inside prefix no matter how it is set. ... ok
test_link_language_linker (__main__.AllPlatformTests) ... ok
test_lto_mode (__main__.AllPlatformTests) ... skipped 'b_lto_mode not available with gcc'
test_lto_threads (__main__.AllPlatformTests) ... ok
test_meson_compile (__main__.AllPlatformTests)
Test the meson compile command. ... ok
test_meson_configure_from_source_does_not_crash (__main__.AllPlatformTests) ... ok
test_meson_version_compare (__main__.AllPlatformTests) ... ok
test_minor_version_does_not_reconfigure_wipe (__main__.AllPlatformTests) ... ok
test_multi_output_custom_target_no_warning (__main__.AllPlatformTests) ... ok
test_native_dep_pkgconfig (__main__.AllPlatformTests) ... ok
test_ndebug_if_release_disabled (__main__.AllPlatformTests) ... ok
test_ndebug_if_release_enabled (__main__.AllPlatformTests) ... ok
test_nested_cmake_rebuild (__main__.AllPlatformTests) ... ok
test_noop_changes_cause_no_rebuilds (__main__.AllPlatformTests)
Test that no-op changes to the build files such as mtime do not cause ... ok
test_nopromote (__main__.AllPlatformTests) ... ok
test_nostdlib (__main__.AllPlatformTests) ... skipped 'Requires ASM compiler for x86 or x86_64 platform currently only available on Linux CI runners'
test_options_with_choices_changing (__main__.AllPlatformTests)
Detect when options like arrays or combos have their choices change. ... ok
test_permitted_method_kwargs (__main__.AllPlatformTests) ... ok
test_pkg_config_libdir (__main__.AllPlatformTests) ... ok
test_pkgconfig_gen_escaping (__main__.AllPlatformTests) ... ok
test_pkgconfig_static (__main__.AllPlatformTests)
Test that the we prefer static libraries when `static: true` is ... ok
test_prebuilt_object (__main__.AllPlatformTests) ... ok
test_prebuilt_shared_lib (__main__.AllPlatformTests) ... ok
test_prebuilt_static_lib (__main__.AllPlatformTests) ... ok
test_prefix_dependent_defaults (__main__.AllPlatformTests)
Tests that configured directory paths are set to prefix dependent ... ok
test_preprocessor_checks_CPPFLAGS (__main__.AllPlatformTests)
Test that preprocessor compiler checks read CPPFLAGS and also CFLAGS but ... ok
test_reconfigure (__main__.AllPlatformTests) ... ok
test_rpath_uses_ORIGIN (__main__.AllPlatformTests)
Test that built targets use $ORIGIN in rpath, which ensures that they ... FAIL
test_run_target_files_path (__main__.AllPlatformTests)
Test that run_targets are run from the correct directory ... ok
test_run_target_subdir (__main__.AllPlatformTests)
Test that run_targets are run from the correct directory ... ok
test_same_d_option_twice (__main__.AllPlatformTests) ... ok
test_same_d_option_twice_configure (__main__.AllPlatformTests) ... ok
test_same_dash_option_twice (__main__.AllPlatformTests) ... ok
test_same_dash_option_twice_configure (__main__.AllPlatformTests) ... ok
test_same_project_d_option_twice (__main__.AllPlatformTests) ... ok
test_same_project_d_option_twice_configure (__main__.AllPlatformTests) ... ok
test_source_changes_cause_rebuild (__main__.AllPlatformTests)
Test that changes to sources and headers cause rebuilds, but not ... ok
test_source_generator_program_cause_rebuild (__main__.AllPlatformTests)
Test that changes to generator programs in the source tree cause ... ok
test_spurious_reconfigure_built_dep_file (__main__.AllPlatformTests) ... ok
test_static_compile_order (__main__.AllPlatformTests)
Test that the order of files in a compiler command-line while compiling ... ok
test_static_library_lto (__main__.AllPlatformTests)
Test that static libraries can be built with LTO and linked to ... ok
test_static_library_overwrite (__main__.AllPlatformTests)
Tests that static libraries are never appended to, always overwritten. ... ok
test_subproject_promotion (__main__.AllPlatformTests) ... ok
test_subproject_promotion_wrap (__main__.AllPlatformTests) ... ok
test_suite_selection (__main__.AllPlatformTests) ... ok
test_summary (__main__.AllPlatformTests) ... ok
test_target_construct_id_from_path (__main__.AllPlatformTests) ... ok
test_templates (__main__.AllPlatformTests) ... c++: error: /tmp/tmpvue37gy6/sanitycheckobjcpp.mm: Objective-C++ compiler not installed on this system
test_testrepeat (__main__.AllPlatformTests) ... ok
test_testsetup_default (__main__.AllPlatformTests) ... ok
test_testsetup_selection (__main__.AllPlatformTests) ... ok
test_testsetups (__main__.AllPlatformTests) ... ok
test_uninstall (__main__.AllPlatformTests) ... ok
test_unstable_coredata (__main__.AllPlatformTests) ... ok
test_version_file (__main__.AllPlatformTests) ... ok
test_warning_level_0 (__main__.AllPlatformTests) ... ok
test_warning_location (__main__.AllPlatformTests) ... ok
test_wipe_from_builddir (__main__.AllPlatformTests) ... ok
test_wrap_git (__main__.AllPlatformTests) ... ok
test_wrap_redirect (__main__.AllPlatformTests) ... ok
test_apple_frameworks_dependency (__main__.FailureTests) ... skipped 'only run on macOS'
test_assert_default_message (__main__.FailureTests) ... ok
test_boost_BOOST_ROOT_dependency (__main__.FailureTests) ... ok
test_boost_notfound_dependency (__main__.FailureTests) ... ok
test_dependency (__main__.FailureTests) ... ok
test_dependency_invalid_method (__main__.FailureTests) ... ok
test_dict_forbids_duplicate_keys (__main__.FailureTests) ... ok
test_dict_forbids_integer_key (__main__.FailureTests) ... ok
test_dict_requires_key_value_pairs (__main__.FailureTests) ... ok
test_error_func (__main__.FailureTests) ... ok
test_exception_exit_status (__main__.FailureTests)
Test exit status on python exception ... ok
test_extraframework_dependency_method (__main__.FailureTests) ... ok
test_get_variable_on_not_found_project (__main__.FailureTests) ... ok
test_gnustep_notfound_dependency (__main__.FailureTests) ... ok
test_llvm_dependency (__main__.FailureTests) ... ok
test_message (__main__.FailureTests) ... ok
test_missing_subproject_not_required_and_required (__main__.FailureTests) ... ok
test_objc_cpp_detection (__main__.FailureTests)
Test that when we can't detect objc or objcpp, we fail gracefully. ... skipped "objc and objcpp found, can't test detection failure"
test_override_dependency_twice (__main__.FailureTests) ... ok
test_override_resolved_dependency (__main__.FailureTests) ... ok
test_sdl2_notfound_dependency (__main__.FailureTests) ... skipped 'sdl2-config found'
test_subproject_variables (__main__.FailureTests)
Test that: ... ok
test_using_recent_feature (__main__.FailureTests) ... ok
test_using_too_recent_feature (__main__.FailureTests) ... ok
test_using_too_recent_feature_dependency (__main__.FailureTests) ... ok
test_vcs_tag_featurenew_build_always_stale (__main__.FailureTests)
https://github.com/mesonbuild/meson/issues/3904 ... ok
test_version_checked_before_parsing_options (__main__.FailureTests)
https://github.com/mesonbuild/meson/issues/5281 ... ok
test_warning (__main__.FailureTests) ... ok
test_wrap_nofallback (__main__.FailureTests) ... ok
test_wx_dependency (__main__.FailureTests) ... ok
test_wx_notfound_dependency (__main__.FailureTests) ... skipped 'wx-config, wx-config-3.0 or wx-config-gtk3 found'
test_versions (__main__.PythonTests) ... ERROR
test_builtin_options (__main__.NativeFileTests) ... ok
test_builtin_options_compiler_properties (__main__.NativeFileTests) ... ok
test_builtin_options_compiler_properties_legacy (__main__.NativeFileTests) ... ok
test_builtin_options_conf_overrides_env (__main__.NativeFileTests) ... ok
test_builtin_options_paths (__main__.NativeFileTests) ... ok
test_builtin_options_paths_legacy (__main__.NativeFileTests) ... ok
test_builtin_options_subprojects (__main__.NativeFileTests) ... ok
test_builtin_options_subprojects_dont_inherits_parent_override (__main__.NativeFileTests) ... ok
test_builtin_options_subprojects_overrides_buildfiles (__main__.NativeFileTests) ... ok
test_c_compiler (__main__.NativeFileTests) ... skipped "Env var 'CC' set, skipping"
test_compile_sys_path (__main__.NativeFileTests)
Compiling with a native file stored in a system path works. ... ok
test_config_tool_dep (__main__.NativeFileTests) ... ok
test_cpp_compiler (__main__.NativeFileTests) ... ok
test_cs_compiler (__main__.NativeFileTests) ... skipped 'No cs compiler found.'
test_d_compiler (__main__.NativeFileTests) ... skipped 'No d compiler found.'
test_find_program (__main__.NativeFileTests) ... ok
test_fortran_compiler (__main__.NativeFileTests) ... skipped 'No alternate Fortran implementation.'
test_java_compiler (__main__.NativeFileTests) ... ok
test_multiple_native_files (__main__.NativeFileTests) ... ok
test_multiple_native_files_override (__main__.NativeFileTests) ... ok
test_native_file_dirs (__main__.NativeFileTests) ... ok
test_native_file_dirs_overridden (__main__.NativeFileTests) ... ok
test_native_file_is_pipe (__main__.NativeFileTests) ... ok
test_objc_compiler (__main__.NativeFileTests) ... ok
test_objcpp_compiler (__main__.NativeFileTests) ... ok
test_option_bool (__main__.NativeFileTests) ... ok
test_option_integer (__main__.NativeFileTests) ... ok
test_python3_module (__main__.NativeFileTests) ... ok
test_python_module (__main__.NativeFileTests) ... ERROR
1/1 extmod FAIL               exit status 1
1/1 extmod FAIL               exit status 1
FAILED: meson-test 
test_rust_compiler (__main__.NativeFileTests) ... ok
test_swift_compiler (__main__.NativeFileTests) ... skipped 'No swift compiler found.'
test_user_options (__main__.NativeFileTests) ... ok
test_user_options_command_line_overrides (__main__.NativeFileTests) ... ok
test_user_options_subproject (__main__.NativeFileTests) ... ok
test_vala_compiler (__main__.NativeFileTests) ... ok
test_default_options_delete (__main__.RewriterTests) ... ok
test_default_options_set (__main__.RewriterTests) ... ok
test_kwargs_add (__main__.RewriterTests) ... ok
test_kwargs_delete (__main__.RewriterTests) ... ok
test_kwargs_info (__main__.RewriterTests) ... ok
test_kwargs_remove (__main__.RewriterTests) ... ok
test_kwargs_remove_regex (__main__.RewriterTests) ... ok
test_kwargs_set (__main__.RewriterTests) ... ok
test_target_add_sources (__main__.RewriterTests) ... ok
test_target_add_sources_abs (__main__.RewriterTests) ... ok
test_target_add_subdir (__main__.RewriterTests) ... ok
test_target_remove (__main__.RewriterTests) ... ok
test_target_remove_sources (__main__.RewriterTests) ... ok
test_target_remove_subdir (__main__.RewriterTests) ... ok
test_target_same_name_skip (__main__.RewriterTests) ... ok
test_target_source_list (__main__.RewriterTests) ... ok
test_target_source_sorting (__main__.RewriterTests) ... ok
test_target_subdir (__main__.RewriterTests) ... ok
test_tatrget_add (__main__.RewriterTests) ... ok
test_builtin_options (__main__.CrossFileTests) ... ok
test_builtin_options_conf_overrides_env (__main__.CrossFileTests) ... ok
test_builtin_options_per_machine (__main__.CrossFileTests)
Test options that are allowed to be set on a per-machine basis. ... ok
test_cross_exe_passed_no_wrapper (__main__.CrossFileTests) ... ok
test_cross_file_dirs (__main__.CrossFileTests) ... ok
test_cross_file_dirs_chain (__main__.CrossFileTests) ... ok
test_cross_file_dirs_overridden (__main__.CrossFileTests) ... ok
test_cross_file_system_paths (__main__.CrossFileTests) ... ok
test_for_build_env_vars (__main__.CrossFileTests) ... ok
test_needs_exe_wrapper_false (__main__.CrossFileTests) ... ok
test_needs_exe_wrapper_true (__main__.CrossFileTests) ... ok
test_needs_exe_wrapper_true_wrapper (__main__.CrossFileTests) ... ok
test_project_options_native_only (__main__.CrossFileTests) ... ok
test_user_options (__main__.CrossFileTests) ... ok
test_diagnostics (__main__.TAPParserTests) ... ok
test_directive_case (__main__.TAPParserTests) ... ok
test_directive_explanation (__main__.TAPParserTests) ... ok
test_empty (__main__.TAPParserTests) ... ok
test_empty_line (__main__.TAPParserTests) ... ok
test_empty_plan (__main__.TAPParserTests) ... ok
test_many_early_plan (__main__.TAPParserTests) ... ok
test_many_late_plan (__main__.TAPParserTests) ... ok
test_middle_plan (__main__.TAPParserTests) ... ok
test_one_test_early_plan (__main__.TAPParserTests) ... ok
test_one_test_late_plan (__main__.TAPParserTests) ... ok
test_one_test_not_ok (__main__.TAPParserTests) ... ok
test_one_test_ok (__main__.TAPParserTests) ... ok
test_one_test_skip (__main__.TAPParserTests) ... ok
test_one_test_skip_failure (__main__.TAPParserTests) ... ok
test_one_test_todo (__main__.TAPParserTests) ... ok
test_one_test_with_name (__main__.TAPParserTests) ... ok
test_one_test_with_number (__main__.TAPParserTests) ... ok
test_out_of_order (__main__.TAPParserTests) ... ok
test_plan_directive (__main__.TAPParserTests) ... ok
test_too_few (__main__.TAPParserTests) ... ok
test_too_few_bailout (__main__.TAPParserTests) ... ok
test_too_many (__main__.TAPParserTests) ... ok
test_too_many_plans (__main__.TAPParserTests) ... ok
test_unexpected (__main__.TAPParserTests) ... ok
test_version (__main__.TAPParserTests) ... ok
test_yaml (__main__.TAPParserTests) ... ok
test_foreach (__main__.SubprojectsCommandTests) ... ok
test_git_update (__main__.SubprojectsCommandTests) ... ok
test_purge (__main__.SubprojectsCommandTests) ... ok
test_as_link_whole (__main__.LinuxlikeTests) ... ok
test_basic_soname (__main__.LinuxlikeTests)
Test that the soname is set correctly for shared libraries. This can't ... ok
test_build_rpath (__main__.LinuxlikeTests) ... FAIL
test_build_rpath_pkgconfig (__main__.LinuxlikeTests)
Test that current build artefacts (libs) are found first on the rpath, ... FAIL
test_compiler_c_stds (__main__.LinuxlikeTests)
Test that C stds specified for this compiler can all be used. Can't be ... ok
test_compiler_check_flags_order (__main__.LinuxlikeTests)
Test that compiler check flags override all other flags. This can't be ... ok
test_compiler_cpp_stds (__main__.LinuxlikeTests)
Test that C++ stds specified for this compiler can all be used. Can't ... ok
test_compiler_libs_static_dedup (__main__.LinuxlikeTests) ... ok
test_cpp_std_override (__main__.LinuxlikeTests) ... ok
test_cross_find_program (__main__.LinuxlikeTests) ... ok
test_custom_soname (__main__.LinuxlikeTests)
Test that the soname is set correctly for shared libraries when ... ok
test_deterministic_dep_order (__main__.LinuxlikeTests)
Test that the dependencies are always listed in a deterministic order. ... ok
test_deterministic_rpath_order (__main__.LinuxlikeTests)
Test that the rpaths are always listed in a deterministic order. ... ok
test_generate_gir_with_address_sanitizer (__main__.LinuxlikeTests) ... skipped 'Project requested skipping: $(SOURCE_DIR)/test cases/frameworks/7 gnome'
test_global_rpath (__main__.LinuxlikeTests) ... FAIL
test cases/unit/47 native file binary/meson.build:18:2: ERROR: <ExternalProgram 'python3' -> ['$(SOURCE_DIR)/tmpzc_a925m/binary_wrapper0.py']> is not a valid python or it is missing setuptools
test cases/unit/47 native file binary/meson.build:18:2: ERROR: <ExternalProgram 'python3' -> ['$(SOURCE_DIR)/tmpzc_a925m/binary_wrapper0.py']> is not a valid python or it is missing setuptools
test_identity_cross (__main__.LinuxlikeTests) ... ok
test_identity_cross_env (__main__.LinuxlikeTests) ... ok
test_install_subdir_symlinks (__main__.LinuxlikeTests) ... ok
test_install_subdir_symlinks_with_default_umask (__main__.LinuxlikeTests) ... ok
test_install_subdir_symlinks_with_default_umask_and_mode (__main__.LinuxlikeTests) ... ok
test_install_umask (__main__.LinuxlikeTests)
Test that files are installed with correct permissions using default ... ok
test_installed_modes (__main__.LinuxlikeTests)
Test that files installed by these tests have the correct permissions. ... FAIL
test_installed_modes_extended (__main__.LinuxlikeTests)
Test that files are installed with correct permissions using install_mode. ... FAIL
test_installed_soname (__main__.LinuxlikeTests) ... ok
test_introspect_dependencies (__main__.LinuxlikeTests)
Tests that mesonintrospect --dependencies returns expected output. ... skipped 'Project requested skipping: $(SOURCE_DIR)/test cases/frameworks/7 gnome'
test_introspect_installed (__main__.LinuxlikeTests) ... ok
test_ld_environment_variable_bfd (__main__.LinuxlikeTests) ... skipped 'Solaris currently cannot override the linker.'
test_ld_environment_variable_cpp (__main__.LinuxlikeTests) ... skipped 'Solaris currently cannot override the linker.'
test_ld_environment_variable_d (__main__.LinuxlikeTests) ... skipped 'No d compiler found.'
test_ld_environment_variable_fortran (__main__.LinuxlikeTests) ... skipped 'Solaris currently cannot override the linker.'
test_ld_environment_variable_gold (__main__.LinuxlikeTests) ... skipped 'Solaris currently cannot override the linker.'
test_ld_environment_variable_lld (__main__.LinuxlikeTests) ... skipped 'Solaris currently cannot override the linker.'
test_ld_environment_variable_objc (__main__.LinuxlikeTests) ... skipped 'Solaris currently cannot override the linker.'
test_ld_environment_variable_objcpp (__main__.LinuxlikeTests) ... skipped 'Solaris currently cannot override the linker.'
test_ld_environment_variable_rust (__main__.LinuxlikeTests) ... skipped 'ld.gold not found'
test_ldflag_dedup (__main__.LinuxlikeTests) ... skipped 'Not applicable for linkers without --export-dynamic'
test_lookup_system_after_broken_fallback (__main__.LinuxlikeTests) ... ok
test_no_rpath_for_static (__main__.LinuxlikeTests) ... FAIL
test_noncross_options (__main__.LinuxlikeTests) ... ok
test_old_gnome_module_codepaths (__main__.LinuxlikeTests)
A lot of code in the GNOME module is conditional on the version of the ... skipped 'Project requested skipping.'
test_order_of_l_arguments (__main__.LinuxlikeTests) ... ok
test_override_with_exe_dep (__main__.LinuxlikeTests)
Test that we produce the correct dependencies when a program is overridden with an executable. ... ok
test_pch_with_address_sanitizer (__main__.LinuxlikeTests) ... ok
test_pic (__main__.LinuxlikeTests)
Test that -fPIC is correctly added to static libraries when b_staticpic ... ok
test_pkg_unfound (__main__.LinuxlikeTests) ... ok
test_pkgconfig_csharp_library (__main__.LinuxlikeTests) ... skipped 'No cs compiler found.'
test_pkgconfig_duplicate_path_entries (__main__.LinuxlikeTests) ... ok
test_pkgconfig_formatting (__main__.LinuxlikeTests) ... ok
test_pkgconfig_gen (__main__.LinuxlikeTests)
Test that generated pkg-config files can be found and have the correct ... FAIL
test_pkgconfig_gen_deps (__main__.LinuxlikeTests)
Test that generated pkg-config files correctly handle dependencies ... ok
test_pkgconfig_internal_libraries (__main__.LinuxlikeTests) ... ok
test_pkgconfig_link_order (__main__.LinuxlikeTests)
Test that libraries are listed before their dependencies. ... ok
test_pkgconfig_relative_paths (__main__.LinuxlikeTests) ... ok
test_pkgconfig_uninstalled (__main__.LinuxlikeTests) ... ok
test_pkgconfig_usage (__main__.LinuxlikeTests) ... ok
test_prelinking (__main__.LinuxlikeTests) ... ERROR
test_qt5dependency_qmake_detection (__main__.LinuxlikeTests)
Test that qt5 detection with qmake works. This can't be an ordinary ... ok
test_qt6dependency_qmake_detection (__main__.LinuxlikeTests)
Test that qt6 detection with qmake works. This can't be an ordinary ... skipped 'Qmake found, but it is not for Qt 6.'
test_qtdependency_pkgconfig_detection (__main__.LinuxlikeTests)
Test that qt4 and qt5 detection with pkgconfig works. ... ERROR
test cases/common/190 install_mode/meson.build:27: WARNING: The variable(s) 'empty' in the input file 'config.h.in' are not present in the given configuration data.
test cases/frameworks/4 qt/meson.build:48:4: ERROR: Assert failed: qtmodule.has_tools()
test cases/frameworks/4 qt/meson.build:48:4: ERROR: Assert failed: qtmodule.has_tools()
test_reconfigure (__main__.LinuxlikeTests) ... ok
test_run_installed (__main__.LinuxlikeTests) ... ok
test_soname (__main__.LinuxlikeTests) ... ok
test_static_archive_stripping (__main__.LinuxlikeTests)
Check that Meson produces valid static archives with --strip enabled ... ok
test_static_link (__main__.LinuxlikeTests) ... ok
test_unity_subproj (__main__.LinuxlikeTests) ... ok
test_usage_external_library (__main__.LinuxlikeTests)
Test that uninstalled usage of an external library (from the system or ... ok
test_usage_pkgconfig_prefixes (__main__.LinuxlikeTests)
Build and install two external libraries, to different prefixes, ... ok
test_vala_c_warnings (__main__.LinuxlikeTests)
Test that no warnings are emitted for C code generated by Vala. This ... ok
test_vala_generated_source_buildir_inside_source_tree (__main__.LinuxlikeTests)
Test that valac outputs generated C files in the expected location when ... ok
test_wrap_with_file_url (__main__.LinuxlikeTests) ... ok
test_cflags_cross_environment_pollution (__main__.LinuxCrossArmTests)
Test that the CFLAGS environment variable does not pollute the cross ... skipped 'requires ability to cross compile to ARM'
test_cross_file_overrides_always_args (__main__.LinuxCrossArmTests)
Test that $lang_args in cross files always override get_always_args(). ... skipped 'requires ability to cross compile to ARM'
test_cross_libdir (__main__.LinuxCrossArmTests) ... skipped 'requires ability to cross compile to ARM'
test_cross_libdir_subproject (__main__.LinuxCrossArmTests) ... skipped 'requires ability to cross compile to ARM'
test_pkg_config_option (__main__.LinuxCrossArmTests) ... skipped 'requires ability to cross compile to ARM'
test_run_native_test (__main__.LinuxCrossArmTests)
https://github.com/mesonbuild/meson/issues/7997 ... skipped 'requires ability to cross compile to ARM'
test_std_remains (__main__.LinuxCrossArmTests) ... skipped 'requires ability to cross compile to ARM'
test_cross_pkg_config_option (__main__.LinuxCrossMingwTests) ... skipped 'requires ability to cross compile with MinGW'
test_exe_wrapper_behaviour (__main__.LinuxCrossMingwTests)
Test that an exe wrapper that isn't found doesn't cause compiler sanity ... skipped 'requires ability to cross compile with MinGW'
test_compiler_checks_vscrt (__main__.WindowsTests)
Test that the correct VS CRT is used when running compiler checks ... skipped 'requires Windows (or Windows via Cygwin)'
test_find_program (__main__.WindowsTests)
Test that Windows-specific edge-cases in find_program are functioning ... skipped 'requires Windows (or Windows via Cygwin)'
test_ignore_libs (__main__.WindowsTests)
Test that find_library on libs that are to be ignored returns an empty ... skipped 'requires Windows (or Windows via Cygwin)'
test_install_pdb_introspection (__main__.WindowsTests) ... skipped 'requires Windows (or Windows via Cygwin)'
test_link_environment_variable_d (__main__.WindowsTests) ... skipped 'requires Windows (or Windows via Cygwin)'
test_link_environment_variable_link (__main__.WindowsTests) ... skipped 'requires Windows (or Windows via Cygwin)'
test_link_environment_variable_lld_link (__main__.WindowsTests) ... skipped 'requires Windows (or Windows via Cygwin)'
test_link_environment_variable_optlink (__main__.WindowsTests) ... skipped 'requires Windows (or Windows via Cygwin)'
test_link_environment_variable_rust (__main__.WindowsTests) ... skipped 'requires Windows (or Windows via Cygwin)'
test_modules (__main__.WindowsTests) ... skipped 'requires Windows (or Windows via Cygwin)'
test_msvc_cpp17 (__main__.WindowsTests) ... skipped 'requires Windows (or Windows via Cygwin)'
test_pefile_checksum (__main__.WindowsTests) ... skipped 'requires Windows (or Windows via Cygwin)'
test_qt5dependency_vscrt (__main__.WindowsTests)
Test that qt5 dependencies use the debug module suffix when b_vscrt is ... skipped 'requires Windows (or Windows via Cygwin)'
test_rc_depends_files (__main__.WindowsTests) ... skipped 'requires Windows (or Windows via Cygwin)'
test_apple_bitcode (__main__.DarwinTests)
Test that -fembed-bitcode is correctly added while compiling and ... skipped 'requires Darwin'
test_apple_bitcode_modules (__main__.DarwinTests)
Same as above, just for shared_module() ... skipped 'requires Darwin'
test_duplicate_rpath (__main__.DarwinTests) ... skipped 'requires Darwin'
test_library_versioning (__main__.DarwinTests)
Ensure that compatibility_version and current_version are set correctly ... skipped 'requires Darwin'
test_removing_unused_linker_args (__main__.DarwinTests) ... skipped 'requires Darwin'
ERROR: test_versions (__main__.PythonTests)
1/1 extmod FAIL               exit status 1
1/1 extmod FAIL               exit status 1
FAILED: meson-test 
ERROR: test_python_module (__main__.NativeFileTests)
test cases/unit/47 native file binary/meson.build:18:2: ERROR: <ExternalProgram 'python3' -> ['$(SOURCE_DIR)/tmpzc_a925m/binary_wrapper0.py']> is not a valid python or it is missing setuptools
test cases/unit/47 native file binary/meson.build:18:2: ERROR: <ExternalProgram 'python3' -> ['$(SOURCE_DIR)/tmpzc_a925m/binary_wrapper0.py']> is not a valid python or it is missing setuptools
ERROR: test_prelinking (__main__.LinuxlikeTests)
ERROR: test_qtdependency_pkgconfig_detection (__main__.LinuxlikeTests)
test cases/frameworks/4 qt/meson.build:48:4: ERROR: Assert failed: qtmodule.has_tools()
test cases/frameworks/4 qt/meson.build:48:4: ERROR: Assert failed: qtmodule.has_tools()
FAIL: test_rpath_uses_ORIGIN (__main__.AllPlatformTests)
FAIL: test_build_rpath (__main__.LinuxlikeTests)
FAIL: test_build_rpath_pkgconfig (__main__.LinuxlikeTests)
FAIL: test_global_rpath (__main__.LinuxlikeTests)
FAIL: test_installed_modes (__main__.LinuxlikeTests)
FAIL: test_installed_modes_extended (__main__.LinuxlikeTests)
test cases/common/190 install_mode/meson.build:27: WARNING: The variable(s) 'empty' in the input file 'config.h.in' are not present in the given configuration data.
FAIL: test_no_rpath_for_static (__main__.LinuxlikeTests)
FAIL: test_pkgconfig_gen (__main__.LinuxlikeTests)
FAILED (failures=8, errors=4, skipped=71)
Total passed tests: 508
Total failed tests: 13
Total skipped tests: 113
test cases/common/103 has header symbol/meson.build:12:2: ERROR: Assert failed: FILE structure is defined in stdio.h, not stdlib.h
FAILED: libbob.so 
FAILED: libbob-conf.so 
FAILED: sub/libfoo.so 
FAILED: libbob-files.so 
test cases/linuxlike/10 large file support/meson.build:16:0: ERROR: Assert failed: Large file support was not enabled
ERROR: Could not find a JDK platform include directory for your OS, please open an issue or provide a pull request.
test cases/java/9 jdk/meson.build:15:0: ERROR: Dependency "jdk" not found
FAILED: prog 
FAILED: libdir/storer.cpython-o.p/meson-generated_.._storer_pyx.c.o 
21/3 qt5test      FAIL               killed by signal 9 SIGKILL
22/3 qt5maninclude FAIL               killed by signal 9 SIGKILL
23/3 qtubfolder FAIL            0.07s   killed by signal 9 SIGKILL
test cases/frameworks/4 qt/meson.build:48:4: ERROR: Assert failed: qtmodule.has_tools()
23/3 qt5test      FAIL               killed by signal 9 SIGKILL
24/3 qt5maninclude FAIL               killed by signal 9 SIGKILL
25/3 qtubfolder FAIL            0.02s   killed by signal 9 SIGKILL
FAILED: exef.p/main.f90.o 
FAILED: libsample.so 
FAILED: basic 
FAILED: basic 
