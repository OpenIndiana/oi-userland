make[1]: Entering directory '$(@D)'
./spatch.opt --testall
init_defs_builtins: ./standard.h
62.res
diff = 
--- tests/62.c
+++ /tmp/cocci-output-25045-d78ee4-62.c
@@ -1,8 +1,12 @@
 static struct usb_driver carl9170_driver = {
 	.id_table = carl9170_usb_ids,
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,27))
 	.soft_unbind = 1,
+#endif
 #ifdef CONFIG_PM
 	.reset_resume = carl9170_usb_resume,
 #endif /* CONFIG_PM */
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3,5,0))
 	.disable_hub_initiated_lpm = 1,
+#endif
 };
a.res
a3d.res
diff = 
--- tests/a3d.c
+++ /tmp/cocci-output-25045-dc8397-a3d.c
@@ -6,13 +6,13 @@ struct a3d {
 static void a3d_connect(struct gameport *gameport, struct gameport_dev *dev)
 {
 	struct a3d *a3d;
-	a3d->adc.idbus = BUS_GAMEPORT;
-	a3d->dev.idbus = BUS_GAMEPORT;
+	a3d->adc.id.bustype = BUS_GAMEPORT;
+	a3d->dev.id.bustype = BUS_GAMEPORT;
 }
 
 static void a3d_connect(struct gameport *gameport, struct gameport_dev *dev)
 {
 	struct a3d *a3d;
-	a3d->adc.idbus = BUS_GAMEPORT;
+	a3d->adc.id.bustype = BUS_GAMEPORT;
 }
 
a_and_e.res
a_and_e_ver1.res
diff = 
--- tests/a_and_e_ver1.c
+++ /tmp/cocci-output-25045-735d51-a_and_e_ver1.c
@@ -1,6 +1,7 @@
 void main(int i) {
 
   g();
+  f(2, 0);
   if(1) 
     f(1,2);
   else 
ab.res
warning: line 4: should a be a metavariable?
diff = 
--- tests/ab.c
+++ /tmp/cocci-output-25045-3a4812-ab.c
@@ -1,5 +1,5 @@
 int main () {
   foo = 5;
-  a = 12;
+  b = 12;
   xxx = 12;
 }
add1.res
diff = 
--- tests/add1.c
+++ /tmp/cocci-output-25045-08c6cf-add1.c
@@ -7,6 +7,9 @@ static int create_scheduling_groups(void
 		ret = build_groups(sd, i);
 	}
 
+	if (!sd)
+		return 0;
+
 	list_for_each_entry(sd, cfs_ipa_topology, siblings) {
 		ret = build_lower_groups(sd);
 	}
addaft.res
diff = 
--- tests/addaft.c
+++ /tmp/cocci-output-25045-b08a58-addaft.c
@@ -1,16 +1,8 @@
 int main () {
   foo();
-  if (x) {
-    a();
-    b();
-    c();
-  }
+  bar();
   foo();
-  while (x) {
-    a();
-    if (b()) continues;
-    c();
-  }
+  bar();
   foo();
-  r();
+  bar();
 }
addbefore.res
diff = 
--- tests/addbefore.c
+++ /tmp/cocci-output-25045-c41702-addbefore.c
@@ -1,5 +1,6 @@
 int main () {
   if (x) {
+    foo();
     goto out;
   }
   after();
addbeforeafter.res
diff = 
--- tests/addbeforeafter.c
+++ /tmp/cocci-output-25045-b8d85b-addbeforeafter.c
@@ -1,6 +1,8 @@
 int main () {
   if (x) {
+    foo();
     goto out;
+    bar();
   }
   after();
 out:
addelse.res
diff = 
--- tests/addelse.c
+++ /tmp/cocci-output-25045-2598d9-addelse.c
@@ -1,3 +1,2 @@
 int main () {
-  if (x == 12) return 6;
 }
addes.res
diff = 
--- tests/addes.c
+++ /tmp/cocci-output-25045-c6349c-addes.c
@@ -1 +1,3 @@
 int i;
+struct foo {
+};
addfield.res
diff = 
--- tests/addfield.c
+++ /tmp/cocci-output-25045-1adfd8-addfield.c
@@ -1,4 +1,6 @@
 struct i2c_client I = {
-       .name = E,
        .foo = 16,
+       .dev = {
+              .name = E,
+       },
 };
addfield2.res
diff = 
--- tests/addfield2.c
+++ /tmp/cocci-output-25045-093cce-addfield2.c
@@ -1,17 +1,21 @@
 struct foo {
+    int roto;
     int titi;
 };
 
 
 foo() {
+   roto();
    start();
 }
 
 struct bar {
     int titi;
+    int roto;
 };
 
 
 bar() {
    start();
+   roto();
 }
addif.res
diff = 
--- tests/addif.c
+++ /tmp/cocci-output-25045-fc2fcb-addif.c
@@ -1,7 +1,19 @@
+#ifdef FOO
+/* some comment */
+int xxx() {
+  /* a comment by itself */
+  return 12;/* another comment */ }
+#endif
 static int foo() {
   return 12;
 }
 
+#ifdef FOO
+/* some comment */
+int xxx() {
+  /* a comment by itself */
+  return 12;/* another comment */ }
+#endif
 static int bar() {
   return 12;
 }
addif1.res
diff = 
--- tests/addif1.c
+++ /tmp/cocci-output-25045-22af7b-addif1.c
@@ -1,7 +1,15 @@
+#ifdef FOO
+int xxx() {
+  return 12; }
+#endif
 static int foo() {
   return 12;
 }
 
+#ifdef FOO
+int xxx() {
+  return 12; }
+#endif
 static int bar() {
   return 12;
 }
addif2.res
diff = 
--- tests/addif2.c
+++ /tmp/cocci-output-25045-81d1a1-addif2.c
@@ -1,7 +1,13 @@
+#ifdef FOO
+int/*foo*/ xxx;
+#endif
 static int foo() {
   return 12;
 }
 
+#ifdef FOO
+int/*foo*/ xxx;
+#endif
 static int bar() {
   return 12;
 }
addifdef.res
diff = 
--- tests/addifdef.c
+++ /tmp/cocci-output-25045-71f763-addifdef.c
@@ -1,10 +1,14 @@
 #ifdef FOO
+#ifdef LINUX_VERSION_CODE >= KERNEL_VERSION(3,5,0)
 int one () {
   return 1;
 }
+#endif /* LINUX_VERSION_CODE >= KERNEL_VERSION(3,5,0) */
 #endif /* LINUX_VERSION_CODE >= KERNEL_VERSION(3,6,1) */
 
 /* comment about two */
+#ifdef LINUX_VERSION_CODE >= KERNEL_VERSION(3,5,0)
 int two () {
   return 2;
 }
+#endif /* LINUX_VERSION_CODE >= KERNEL_VERSION(3,5,0) */
addifelse.res
diff = 
--- tests/addifelse.c
+++ /tmp/cocci-output-25045-4359ab-addifelse.c
@@ -1,8 +1,14 @@
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,15,0)
 static void rfcomm_l2data_ready(struct sock *sk)
 {
 	BT_DBG("%p", sk);
 	rfcomm_schedule();
 }
+#else
+static void backport_rfcomm_l2data_ready(struct sock *sk, int unused){
+	rfcomm_l2data_ready(sk);
+}
+#endif
 
 static int rfcomm_l2sock_create(struct socket **sock)
 {
addifelse2.res
diff = 
--- tests/addifelse2.c
+++ /tmp/cocci-output-25045-d10da9-addifelse2.c
@@ -1,8 +1,15 @@
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,15,0)
+static void backport_rfcomm_l2data_ready(struct sock *sk, int unused){
+	rfcomm_l2data_ready(sk);
+}
+#else
+
 static void rfcomm_l2data_ready(struct sock *sk)
 {
 	BT_DBG("%p", sk);
 	rfcomm_schedule();
 }
+#endif
 
 static int rfcomm_l2sock_create(struct socket **sock)
 {
addinc.res
diff = 
--- tests/addinc.c
+++ /tmp/cocci-output-25045-4af505-addinc.c
@@ -1,4 +1,5 @@
 #ifndef FOO
 #define FOO
 #include <something.h>
+#include <toadd.h>
 #endif
addtoo.res
diff = 
--- tests/addtoo.c
+++ /tmp/cocci-output-25045-339cad-addtoo.c
@@ -1,16 +1,8 @@
 int main () {
-  if (x) {
-    a();
-    b();
-    c();
-  }
+  bar();
   foo();
-  while (x) {
-    a();
-    if (b()) continues;
-    c();
-  }
+  bar();
   foo();
-  r();
+  bar();
   foo();
 }
addtrace.res
diff = 
--- tests/addtrace.c
+++ /tmp/cocci-output-25045-19521e-addtrace.c
@@ -2,13 +2,24 @@ short VerDate(char *pcDate)
 {
   short sRetour = 0;
   if ( pcDate == 0 ) {
-    sRetour = 1;
+    trace("ifth");
+    {
+      sRetour = 1;
+    }
   }
-  if ( pcDate == 0 )
-    sRetour = 1;
+  trace("endif");
   if ( pcDate == 0 ) {
+    trace("ifth");
     sRetour = 1;
-    return sRetour;
   }
+  trace("endif");
+  if ( pcDate == 0 ) {
+    trace("ifth");
+    {
+      sRetour = 1;
+      return sRetour;
+    }
+  }
+  trace("endif");
   return sRetour;
 }
after_if.res
diff = 
--- tests/after_if.c
+++ /tmp/cocci-output-25045-3f8324-after_if.c
@@ -1,4 +1,5 @@
 #ifdef ELMC_MULTICAST
 static void set_multicast_list(struct net_device *dev);
 #endif
-static struct ethtool_ops netdev_ethtool_ops;
+static const struct ethtool_ops netdev_ethtool_ops;
+
allex.res
diff = 
--- tests/allex.c
+++ /tmp/cocci-output-25045-2b615f-allex.c
@@ -6,7 +6,7 @@ int main () {
       goto out;
     }
   }
-  if (x) return 15;
+  if (x) return 200;
 out:
   return rc;
 }
allex2.res
diff = 
--- tests/allex2.c
+++ /tmp/cocci-output-25045-6af164-allex2.c
@@ -8,5 +8,5 @@ int main () {
   }
   return 15;
 out:
-  return 0;
+  return 100;
 }
allex3.res
diff = 
--- tests/allex3.c
+++ /tmp/cocci-output-25045-394575-allex3.c
@@ -9,5 +9,4 @@ int main () {
   }
   return 15;
 out:
-  return 0;
 }
andid.res
diff = 
--- tests/andid.c
+++ /tmp/cocci-output-25045-d763c7-andid.c
@@ -1,5 +1,5 @@
 int main () {
-	int frontandback = 12;
+	int test = 12;
 	int front = 12;
 	int back = 12;
 }
anon.res
diff = 
--- tests/anon.c
+++ /tmp/cocci-output-25045-010878-anon.c
@@ -12,5 +12,5 @@ static int ppa_queuecommand(struct scsi_
 		void (*done) (struct scsi_cmnd *))
 {
 	ppa_struct *dev = ppa_dev(cmd->device->host);
-	schedule_work(&dev->ppa_tq);
+	schedule_delayed_work(&dev->ppa_tq, 0);
 }
anonfield.res
diff = 
--- tests/anonfield.c
+++ /tmp/cocci-output-25045-b31611-anonfield.c
@@ -1,3 +1,3 @@
 struct {
-    int;
+    bool;
 };
ar.res
diff = 
--- tests/ar.c
+++ /tmp/cocci-output-25045-3fc005-ar.c
@@ -4,9 +4,4 @@ int main() {
   struct foo *x;
   struct bar *y;
   struct foo z[15];
-
-  x->y = 12;
-  y->a->y = 12;
-  y->b[7].y = 12;
-  z[15].y = 12;
 }
arg.res
diff = 
--- tests/arg.c
+++ /tmp/cocci-output-25045-2852c5-arg.c
@@ -1,6 +1,6 @@
 int main () {
-  foo(bar());
-  foo(1,bar());
-  foo(bar(),2);
-  foo(1,bar(),2);
+  foo();
+  foo(1);
+  foo(2);
+  foo(1,2);
 }
argument.res
diff = 
--- tests/argument.c
+++ /tmp/cocci-output-25045-1e3d97-argument.c
@@ -1,8 +1,5 @@
 void main(int i){
 
-  f(1,2,3);
-
-  h(1,2);
-  h();
+  g(3, 2, 1);
 
 }
arparam.res
diff = 
--- tests/arparam.c
+++ /tmp/cocci-output-25045-4aed87-arparam.c
@@ -1,3 +1,8 @@
+g(int q[1024])
+{
+	return 12;
+}
+
 int main(int q[1024])
 { return 12; }
 
array_init.res
diff = 
--- tests/array_init.c
+++ /tmp/cocci-output-25045-60a323-array_init.c
@@ -1,3 +1,2 @@
 static int term[MAX_ECARDS] = { 1, 1, 1, 1, 1, 1, 1, 1 };
-MODULE_PARM(term, "1-8i");
 
array_size.res
diff = 
--- tests/array_size.c
+++ /tmp/cocci-output-25045-fd6bc2-array_size.c
@@ -1,2 +1,2 @@
-#define MAX_SETUP_STRINGS (sizeof(setup_strings) / sizeof(char *))
+#define MAX_SETUP_STRINGS ARRAY_SIZE(setup_strings)
 #define SETUP_BUFFER_SIZE 200
arraysz.res
diff = 
--- tests/arraysz.c
+++ /tmp/cocci-output-25045-efbffe-arraysz.c
@@ -7,4 +7,4 @@ typedef struct signature {
 static const Signature signatures[] = {
 	{"SSTBIOS", 0x0000d, 7}	/* "SSTBIOS" @ offset 0x0000d */
 };
-#define NUM_SIGNATURES (sizeof(signatures)/sizeof(Signature))
+#define NUM_SIGNATURES ARRAY_SIZE(signatures)
as_stm.res
diff = 
--- tests/as_stm.c
+++ /tmp/cocci-output-25045-4472dd-as_stm.c
@@ -1,3 +1,5 @@
 int main () {
+#ifdef BEFORE
   if (f()) return 15;
+#endif
 }
attradd.res
diff = 
--- tests/attradd.c
+++ /tmp/cocci-output-25045-1ea113-attradd.c
@@ -1,3 +1,5 @@
 int main () {
-  char f;
+  char __attribute__((aligned(1))) f;
 }
+// some comment
+// some other comment
attrs2groups.res
diff = 
--- tests/attrs2groups.c
+++ /tmp/cocci-output-25045-e86ea8-attrs2groups.c
@@ -3,18 +3,24 @@ static ssize_t devspec_show(struct devic
 {
 	return 42;
 }
+static BUG();
+NOBUG();
 
 static ssize_t name_show(struct device *dev,
 				struct device_attribute *attr, char *buf)
 {
 	return 0;
 }
+static BUG();
+NOBUG();
 
 static ssize_t modalias_show(struct device *dev,
 				struct device_attribute *attr, char *buf)
 {
 	return 1;
 }
+static BUG();
+NOBUG();
 
 
 struct device_attribute ibmebus_bus_device_attrs[] = {
b1.res
diff = 
--- tests/b1.c
+++ /tmp/cocci-output-25045-613fd2-b1.c
@@ -1,7 +1,9 @@
 int main () {
   while (1) {
-    if (x > 1 ) { foo(); break; }
+    if (x > 1 ) { foo();
+      bar(); break; }
   }
   while (1)
-    if (x > 1 ) { foo(); break; }
+    if (x > 1 ) { foo();
+      bar(); break; }
 }
b2.res
diff = 
--- tests/b2.c
+++ /tmp/cocci-output-25045-cb9daf-b2.c
@@ -1,9 +1,11 @@
 int main () {
   if (1) {
-    if (x > 1 ) { foo(); brk(); }
+    if (x > 1 ) { foo();
+      bar(); brk(); }
     } else aaa();
   if (1)
-    while (x > 1 ) { foo(); brk(); }
+    while (x > 1 ) { foo();
+      bar(); brk(); }
   else aaa();
   foo(); brk();
 }
bad_iso_example.res
bad_kfree.res
diff = 
--- tests/bad_kfree.c
+++ /tmp/cocci-output-25045-6514c2-bad_kfree.c
@@ -14,7 +14,7 @@ int bad () {
   kfree(itv[i]);
   print("foo",itv[i]);
   print("foo",itv[i]);
-  a = itv[i];
+  a = NULL;
   itv[i]=12;
   a = itv[i];
 }
bad_ptr_print.res
diff = 
--- tests/bad_ptr_print.c
+++ /tmp/cocci-output-25045-c2c15b-bad_ptr_print.c
@@ -1,4 +1,4 @@
 static inline int tester(struct usb_endpoint_descriptor *epd)
 {
-  f((struct foo *)x);
+  g((struct foo *)x);
 }
bad_typedef.res
diff = 
--- tests/bad_typedef.c
+++ /tmp/cocci-output-25045-51da55-bad_typedef.c
@@ -4,7 +4,7 @@ typedef struct {
 
 
 int main1 (scsi_changer *x) {
-  foo(x->lock);
+  foo(x->new_lock);
 }
 
 struct  scsi_changer_two {
@@ -13,5 +13,5 @@ struct  scsi_changer_two {
 
 
 int main2 (struct scsi_changer_two *x) {
-  foo(x->lock);
+  foo(x->new_lock);
 }
badexp.res
diff = 
--- tests/badexp.c
+++ /tmp/cocci-output-25045-643f94-badexp.c
@@ -1,4 +1,4 @@
 int main() {
   foo(a);
-  b = a;
+  b = 3 +a * 27;
 }
badpos.res
     
previous modification:
MINUS
  >>> xxx


According to environment 0:


current modification:
MINUS

According to environment 0:


exn while in timeout_function
badtypedef.res
diff = 
--- tests/badtypedef.c
+++ /tmp/cocci-output-25045-a02643-badtypedef.c
@@ -5,7 +5,7 @@ int main() {
   foo_t *b;
   foo_t *c;
 
-  xxx(a);
-  yyy(b);
+  aaa(a);
+  bbb(b);
 }
 
badwhen.res
diff = 
--- tests/badwhen.c
+++ /tmp/cocci-output-25045-28cd1f-badwhen.c
@@ -4,7 +4,5 @@ int main () {
   g();
 }
 int second() {
-  f();
   if (xfoo()) return;
-  g();
 }
badzero.res
diff = 
--- tests/badzero.c
+++ /tmp/cocci-output-25045-5ab178-badzero.c
@@ -4,7 +4,7 @@ int main () {
   int z;
   if (y - x == 0) return;
   if ((y - x) == 0) return;
-  if (y - z == 0) return;
-  if ((y - z) == 0) return;
+  if (27) return;
+  if (27) return;
 }
 
bc_1.res
warning: f: metavariable i not used in the - or context code
diff = 
--- tests/bc_1.c
+++ /tmp/cocci-output-25045-054f41-bc_1.c
@@ -12,6 +12,12 @@ extern struct sph_particle_data_buggy
 }
   *DomainSphBuf_;
 
+ struct sph_particle_data_buggy_soa_t {
+#ifdef VORONOI
+ 	int a;
+#endif
+ };
+ struct sph_particle_data_buggy_soa_t DomainSphBuf__soa;
  struct dens_eval_arg_t { };
 
 int main()
befS.res
diff = 
--- tests/befS.c
+++ /tmp/cocci-output-25045-fab01e-befS.c
@@ -1,20 +1,32 @@
 int main () {
+  foo();
   xxx();
+  foo();
   if(y) {
-    rrr();
+    foo();
+    {
+      foo();
+      rrr();
+    }
   }
 }
 
 int main () {
+  foo();
   xxx();
-  if(y)
+  foo();
+  if(y) {
+    foo();
     rrr();
+  }
 }
 
 
 int d() {}
 
 int main2 () {
+  foo();
   yyy();
+  foo();
   xxx();
 }
before.res
diff = 
--- tests/before.c
+++ /tmp/cocci-output-25045-3cec36-before.c
@@ -1,4 +1,6 @@
 int main () {
+  blah();
   one();
+  blah();
   foo();
 }
ben.res
diff = 
--- tests/ben.c
+++ /tmp/cocci-output-25045-681d04-ben.c
@@ -1,22 +1,20 @@
+static GType this_type = 0;
+static const GTypeInfo this_info = {
+  sizeof(LassoProviderClass),
+  NULL,
+  NULL,
+  (GClassInitFunc)class_init,
+  NULL,
+  NULL,
+  sizeof(LassoProvider),
+  0,
+  (GInstanceInitFunc)instance_init,
+  NULL,
+};
 GType
 lasso_provider_get_type()
 {
-  static GType this_type = 0;
-
   if (!this_type) {
-    static const GTypeInfo this_info = {
-      sizeof (LassoProviderClass),
-      NULL,
-      NULL,
-      (GClassInitFunc) class_init,
-      NULL,
-      NULL,
-      sizeof(LassoProvider),
-      0,
-      (GInstanceInitFunc) instance_init,
-                        NULL
-    };
-
     this_type = g_type_register_static(LASSO_TYPE_NODE,
 				       "LassoProvider", &this_info, 0);
   }
bigin.res
diff = 
--- tests/bigin.c
+++ /tmp/cocci-output-25045-577a6a-bigin.c
@@ -9,5 +9,6 @@ int main() {
           if (x)
             if (x)
               blah();
+  bar();
   foo();
 }
bigrepl.res
diff = 
--- tests/bigrepl.c
+++ /tmp/cocci-output-25045-e9db3b-bigrepl.c
@@ -1,6 +1,9 @@
 int main () {
-  one(argument1(nested, argument), argument2(nested, argument), foo(),
+  one(argument1(nested, argument), argument2(nested, argument),
+      call(to, a, very, complicated, function, with, many, args),
       argument3(nested, argument));
-  one(argument1(nested, argument), argument2(nested, argument), foo(), a(b));
-  one(argument1(nested, argument), argument2(nested, argument), foo());
+  one(argument1(nested, argument), argument2(nested, argument),
+      call(to, a, very, complicated, function, with, many, args), a(b));
+  one(argument1(nested, argument), argument2(nested, argument),
+      call(to, a, very, complicated, function, with, many, args));
 }
binop.res
diff = 
--- tests/binop.c
+++ /tmp/cocci-output-25045-b00255-binop.c
@@ -2,10 +2,12 @@ void main() {
     int i = 0;
     int j = 0;
 
-    if( (i = j) + 0 ) {
+    i = j;
+    if(i + 0 ) {
         i = j;
     }
-    if( (i = j) + 0 != 0 ) {
+    i = j;
+    if(i + 0 != 0 ) {
         i = j;
     }
 }
bitfield.res
warning: rule starting on line 11: metavariable v not used in the - or context code
diff = 
--- tests/bitfield.c
+++ /tmp/cocci-output-25045-a51814-bitfield.c
@@ -1,15 +1,15 @@
 struct dvb_frontend {
-	struct dvb_frontend_ops* ops;
+	struct dvb_frontend_ops ops;
 };
 
 typedef struct {
-		u8 RESET :1;
-		u8 IDLE  :1;
-		u8 STOP  :1;
-		u8 HIRQ0 :1;
-		u8 HIRQ1 :1;
-		u8 na0   :1;
-		u8 HABAV :1;
-		u8 na1   :1;
+		u8 RESET:2;
+		u8 IDLE:2;
+		u8 STOP:2;
+		u8 HIRQ0:2;
+		u8 HIRQ1:2;
+		u8 na0:2;
+		u8 HABAV:2;
+		u8 na1:2;
 
 } bcm3510_register_value;
bitfield_matching.res
boolr.res
     (ONCE) already tagged but only removed, so safe
diff = 
--- tests/boolr.c
+++ /tmp/cocci-output-25045-a83e38-boolr.c
@@ -1,4 +1,3 @@
 int main() {
-        bool i3, i4, i5;
         int b;
 }
braces.res
diff = 
--- tests/braces.c
+++ /tmp/cocci-output-25045-6b4c91-braces.c
@@ -1,9 +1,9 @@
-#define main { foo(); }
+#define main foo(); 
 
 int main() { foo(); }
 
-int main() { if (x) { foo(); } }
+int main() { if (x) foo(); }
 
-int main() { while (x) { foo(); } }
+int main() { while (x) foo(); }
 
-int main() { if (x) { foo(); } else { foo(); } }
+int main() { if (x) foo(); else foo(); }
branchparen.res
diff = 
--- tests/branchparen.c
+++ /tmp/cocci-output-25045-473fe5-branchparen.c
@@ -1,6 +1,10 @@
 int main () {
-  if (x)
+  if (x) {
+    foo();
     xxx();
-  else
+  }
+  else {
+    foo();
     xxx();
+  }
 }
break.res
diff = 
--- tests/break.c
+++ /tmp/cocci-output-25045-d9ad3e-break.c
@@ -5,8 +5,10 @@ int main () {
       x = 15;
       if (x > 1 ) { foo(); break; }
     } while (a == 3);
-    if (x > 1 ) { foo(); break; }
-    if (x > 1 ) { foo(); break; }
+    if (x > 1 ) { foo();
+      bar(); break; }
+    if (x > 1 ) { foo();
+      bar(); break; }
   }
 }
 
@@ -18,6 +20,7 @@ int mainx () {
       if (x > 1 ) { xxx(); continue; }
     } while (a == 3);
     if (x > 1 ) { xxx(); break; }
-    if (x > 1 ) { xxx(); continue; }
+    if (x > 1 ) { xxx();
+      bar(); continue; }
   }
 }
bug1.res
diff = 
--- tests/bug1.c
+++ /tmp/cocci-output-25045-6be8a5-bug1.c
@@ -1,4 +1,5 @@
-static int typhoon_ioctl(struct video_device *dev, unsigned int cmd,void *arg)
+static int typhoon_ioctl(struct inode *i, struct file *f, unsigned int cmd,
+			 void *arg)
 {
 	struct typhoon_device *typhoon = dev->priv;
 	return 0;
bugloop.res
diff = 
--- tests/bugloop.c
+++ /tmp/cocci-output-25045-5cd28c-bugloop.c
@@ -8,8 +8,8 @@ static int stir_transmit_thread(void *ar
 	while (x)
 	{
 		/* if suspending, then power off and wait */
-		if (unlikely(current->flags & PF_FREEZE)) {
-			refrigerator(PF_FREEZE);
+		if (unlikely(freezing(current))) {
+			refrigerator();
 
 		}
 	}
bugon.res
diff = 
--- tests/bugon.c
+++ /tmp/cocci-output-25045-1fbdb6-bugon.c
@@ -1,5 +1,4 @@
 static void b44_tx(struct b44 *bp)
 {
-		if (unlikely(skb == NULL))
-			BUG();
+		BUG_ON(skb == NULL);
 }
bus.res
diff = 
--- tests/bus.c
+++ /tmp/cocci-output-25045-0f37e6-bus.c
@@ -1,5 +1,5 @@
 int main () {
   struct foo *dev;
-  dev->probe();
-  foo();
+  c1();
+  c2();
 }
cards.res
diff = 
--- tests/cards.c
+++ /tmp/cocci-output-25045-b8d8ea-cards.c
@@ -1,3 +1,3 @@
-MODULE_PARM(io, "1-" __MODULE_STRING(MAX_CARDS) "i");
+
 
 int x;
caseprint.res
diff = 
--- tests/caseprint.c
+++ /tmp/cocci-output-25045-98a9fe-caseprint.c
@@ -3,4 +3,10 @@ int f() {
   case 12: return 0;
   case 1:  return 2;
   }
+  switch (x) {
+  case 12:
+    return 0;
+  case 1:
+    return 2;
+  }
 }
cast.res
diff = 
--- tests/cast.c
+++ /tmp/cocci-output-25045-3bb595-cast.c
@@ -1,3 +1,2 @@
 int main () {
-  ((struct xxx *)E)->foo = 12;
 }
cast_iso.res
diff = 
--- tests/cast_iso.c
+++ /tmp/cocci-output-25045-d7d292-cast_iso.c
@@ -1,6 +1,6 @@
 static int vx_hwdep_dsp_load(snd_hwdep_t *hw, snd_hwdep_dsp_image_t *dsp)
 {
-	vx_core_t *vx = snd_magic_cast(vx_core_t, hw->private_data, return -ENXIO);
-	ak4117_t *chip = snd_magic_cast(ak4117_t, (void *)data, return);
+	vx_core_t *vx = hw->private_data;
+	ak4117_t *chip = (ak4117_t *)data;
 
 }
castdecl.res
diff = 
--- tests/castdecl.c
+++ /tmp/cocci-output-25045-339477-castdecl.c
@@ -1,9 +1,9 @@
 int main() {
-  long i1, i2;
-  long i3;
-  long  lType = (long)TYPE_OBJ_DS_REPORT, lNuPageBloc = 0L;
-  unsigned char c1 = 'a', c2 = 'b';
-  unsigned char c3 = 'c';
+  int i1, i2;
+  int i3;
+  int  lType = (int)TYPE_OBJ_DS_REPORT, lNuPageBloc = 0L;
+  char c1 = 'a', c2 = 'b';
+  char c3 = 'c';
   i1 = 11;
   i2 = 22;
   i3 = 33;
cex_wishlist_complex1.res
diff = 
--- tests/cex_wishlist_complex1.c
+++ /tmp/cocci-output-25045-1776b1-cex_wishlist_complex1.c
@@ -1,6 +1,6 @@
 #include <complex.h>
 int main() { 
- double d;
+ float d;
  float  f;
  double complex dc;
  float complex  fc;
cex_wishlist_complex2.res
diff = 
--- tests/cex_wishlist_complex2.c
+++ /tmp/cocci-output-25045-87987e-cex_wishlist_complex2.c
@@ -2,7 +2,7 @@
 int main() { 
  double d;
  float  f;
- long double complex ldc;
+ float ldc;
  double complex dc;
  float complex  fc;
  return 0;
cex_wishlist_complex3.res
diff = 
--- tests/cex_wishlist_complex3.c
+++ /tmp/cocci-output-25045-ccac3c-cex_wishlist_complex3.c
@@ -2,7 +2,7 @@
 int main() { 
  double d;
  float  f;
- double complex dc;
- float complex  fc;
+ int dc;
+ double complex  fc;
  return 0;
 }
change.res
diff = 
--- tests/change.c
+++ /tmp/cocci-output-25045-9d67fc-change.c
@@ -1,5 +1,6 @@
 int main () {
     foo();
+    blah(one, two);
     this_type = g_type_register_static(LASSO_TYPE_NODE,
 				       "LassoProvider", &this_info, 0);
 }
change_type.res
diff = 
--- tests/change_type.c
+++ /tmp/cocci-output-25045-61186d-change_type.c
@@ -1,4 +1,4 @@
 int main () {
   struct foo *x;
-  return (struct blah *)x;
+  return 42;
 }
changei.res
diff = 
--- tests/changei.c
+++ /tmp/cocci-output-25045-d5c9bf-changei.c
@@ -1,7 +1,7 @@
-typedef struct i istruct;
+typedef struct i xxx;
 
-int main (int x) {
-  char c;
-  return x + c;
+int xxx (int xxx) {
+  char xxx;
+  return xxx + xxx;
 }
 
com.res
diff = 
--- tests/com.c
+++ /tmp/cocci-output-25045-d4fb76-com.c
@@ -1,8 +1,3 @@
 int main() {
-  foo();
-  /* a comment */
-  foo();
-  /* a comment */
-  foo();
   bar();
 }
comadd.res
diff = 
--- tests/comadd.c
+++ /tmp/cocci-output-25045-3ce419-comadd.c
@@ -1,3 +1,5 @@
+// some comment
+// some other comment
 int main () {
   return 12;
 }
comj.res
diff = 
--- tests/comj.c
+++ /tmp/cocci-output-25045-bb70c5-comj.c
@@ -2,6 +2,8 @@ int foo(int bar)
 {
   int i, j;
   for (i = 5; --i>=0; ) {
+    /* comments are overrated */
+    j -= 3;
     j+=54;
   }
   return j;
comment_brace.res
diff = 
--- tests/comment_brace.c
+++ /tmp/cocci-output-25045-73bcf3-comment_brace.c
@@ -1,7 +1,9 @@
 int main ()
 {
-	while ((inw(base) & 0xad00) != 0)	/* data status */
+	while ((inw(base) & 0xad00) != 0)	/* data status */ {
+		release_region();
 		continue;
+	}
 	return 0;
 }
 
comment_brace2.res
diff = 
--- tests/comment_brace2.c
+++ /tmp/cocci-output-25045-68003d-comment_brace2.c
@@ -1,7 +1,9 @@
 int main ()
 {
-	while ((inw(base) & 0xad00) != 0)	/* data status */  
+	while ((inw(base) & 0xad00) != 0)	/* data status */  {
+		release_region();
 		continue;
+	}
 	return 0;
 }
 
comments.res
diff = 
--- tests/comments.c
+++ /tmp/cocci-output-25045-0349c4-comments.c
@@ -1,5 +1,16 @@
 
 int main() {
+	// Calls foo()
+	foo();
 	return 0;
 }
 
+/**
+  Some info about @foo()
+  @return void
+*/
+void foo()
+{
+	/* Do nothing */
+}
+
compare.res
diff = 
--- tests/compare.c
+++ /tmp/cocci-output-25045-e1b2c2-compare.c
@@ -1,7 +1,7 @@
 struct aic7xxx_host {
   struct aic7xxx_cmd_queue {
-    Scsi_Cmnd *head;
-    Scsi_Cmnd *tail;
+    struct scsi_cmnd *head;
+    struct scsi_cmnd *tail;
   } completeq;
   unsigned char            msg_buf[13];      /* The message for the target */
   unsigned char            msg_type;
compare_const2.res
diff = 
--- tests/compare_const2.c
+++ /tmp/cocci-output-25045-4dc5b8-compare_const2.c
@@ -1,6 +1,6 @@
 int main () {
 //  int i,o;
-	if (0 == ((1 == i ||  3 == i)
-	      && (18 == o || 17 == o)))
+	if (((i == 1 ||  i == 3)
+	      && (o == 18 || o == 17)) == 0)
 		return -EINVAL;
 }
condexp.res
diff = 
--- tests/condexp.c
+++ /tmp/cocci-output-25045-403826-condexp.c
@@ -5,7 +5,7 @@ main(int argc, char *argv[])
   dpy = XOpenDisplay (displayname);
   if (!dpy) {
     fprintf (stderr, "%s:  unable to open display \"%s\"\n",
-	     ProgramName, XDisplayName (displayname));
+	     ProgramName, displayname ? displayname : getenv("DISPLAY"));
     Exit (1);
   }
   screenno = DefaultScreen (dpy);
const.res
warning: line 2: should text be a metavariable?
warning: line 3: should buf be a metavariable?
warning: line 3: should text be a metavariable?
diff = 
--- tests/const.c
+++ /tmp/cocci-output-25045-93615e-const.c
@@ -1,3 +1,3 @@
 void foo(const char *text) {
-   strcat(buf->data, text);
+   strcat_safe(buf->data, buf->len, text);
 }
const1bis.res
warning: line 3: should i be a metavariable?
diff = 
--- tests/const1bis.c
+++ /tmp/cocci-output-25045-f3e158-const1bis.c
@@ -1,5 +1,5 @@
 void foo(int j) { 
-  const int i;
+  float i;
   int i;
   i++;
 }
const_adding.res
diff = 
--- tests/const_adding.c
+++ /tmp/cocci-output-25045-3a58fa-const_adding.c
@@ -2,6 +2,6 @@ void main(int i)
 {
 
   const struct file_operations a;
-  struct file_operations b;
+  const struct file_operations b;
 
 }
const_array.res
diff = 
--- tests/const_array.c
+++ /tmp/cocci-output-25045-863a1a-const_array.c
@@ -24,9 +24,9 @@ static const struct foo *r128_family4[]
 };
 
 int main () {
-  ent->driver_data = sizeof(r128_family)/sizeof(char *);
-  ent->driver_data = sizeof(r128_family1)/sizeof(char *);
-  ent->driver_data = sizeof(r128_family2)/sizeof(char *);
-  ent->driver_data = sizeof(r128_family3)/sizeof(struct foo *);
-  ent->driver_data = sizeof(r128_family4)/sizeof(struct foo *);
+  ent->driver_data = ARRAY_SIZE(r128_family);
+  ent->driver_data = ARRAY_SIZE(r128_family1);
+  ent->driver_data = ARRAY_SIZE(r128_family2);
+  ent->driver_data = ARRAY_SIZE(r128_family3);
+  ent->driver_data = ARRAY_SIZE(r128_family4);
 }
const_implicit_iso.res
diff = 
--- tests/const_implicit_iso.c
+++ /tmp/cocci-output-25045-289ebb-const_implicit_iso.c
@@ -1,4 +1,4 @@
 void main(double y) { 
-  const int x;
+  const float x;
 
 }
constraints.res
diff = 
--- tests/constraints.c
+++ /tmp/cocci-output-25045-ccd3aa-constraints.c
@@ -1,23 +1,23 @@
 void
 f()
 {
-    int k;
+    int *k;
     bool b;
-    bool *p;
-    bool **x[];
-    char *y[];
+    bool **p;
+    bool * x[];
+    char y[];
     f(1 == 2);
     f(1 & 3);
     g(1 & 2);
     g(1 != 2);
     g(1 <= 3);
-    h(1 == 2);
+    h(2 == 1);
     h(1 & 2);
     h(1 != 2);
     h(1 <= 2);
 }
 
 void
-g(int a, int b, int c)
+h(int a, int b, int c)
 {
 }
constrem.res
warning: line 9: should f be a metavariable?
diff = 
--- tests/constrem.c
+++ /tmp/cocci-output-25045-cfb2c0-constrem.c
@@ -1,3 +1 @@
-static const int a;
 
-static const int (*f)(const int);
constructor.res
diff = 
--- tests/constructor.c
+++ /tmp/cocci-output-25045-203b12-constructor.c
@@ -1,5 +1,5 @@
 int main () {
-  imx_add_platform_device_dmamask(Ename, Eid, Eres, Enum_res,
-				  Edata, Esize_data, Edma_mask);
+  changed_imx_add_platform_device_dmamask(Ename, Eid, Eres, Enum_res, Edata,
+                                          Esize_data, Edma_mask);
 }
 
constty.res
diff = 
--- tests/constty.c
+++ /tmp/cocci-output-25045-dcebf8-constty.c
@@ -1,7 +1,6 @@
 int main () {
   const int x;
   int y;
-  f(x,int);
   f(y,int);
   f(x,const int);
 }
constx.res
diff = 
--- tests/constx.c
+++ /tmp/cocci-output-25045-3f399d-constx.c
@@ -1,8 +1,8 @@
 int main() {
-  foo(12);
+  foobar(12, 12);
   foo(x);
-  foo(CONSTANT);
-  foo('a');
-  foo("string");
-  foo(1.0001);
+  foobar(CONSTANT, CONSTANT);
+  foobar('a', 'a');
+  foobar("string", "string");
+  foobar(1.0001, 1.0001);
 }
countcalls.res
exn while in timeout_function
countcalls_python.res
cptr.res
diff = 
--- tests/cptr.c
+++ /tmp/cocci-output-25045-47aece-cptr.c
@@ -1 +1 @@
-static const char *str = "...";
+static const char * const str = "...";
cr.res
diff = 
--- tests/cr.c
+++ /tmp/cocci-output-25045-360577-cr.c
@@ -1,7 +1,6 @@
 int main(void)
 {
 #if ! HAVE_XYZ
-  f1();
-  f2();
+  f3();
 #endif
 }
cr1a.res
diff = 
--- tests/cr1a.c
+++ /tmp/cocci-output-25045-c25e2e-cr1a.c
@@ -6,14 +6,17 @@ int __init probe_base_port(int base)
 	if (base)
 		b = e = base;
 	for (base = b; base <= e; base += 0x10) {
-		if (check_region(base, 0x10))
+		if (!request_region(base, 0x10, req_reg_arg3))
 			continue;
 		for (i = 0; i < 3; i++)
 			fool = inw(base + 2);	/* empty possibly uart_receive_buffer */
 		if ((inw(base + 6) & 0xffef) != 0x0001 ||	/* line_status */
-		    (inw(base) & 0xad00) != 0)
+		    (inw(base) & 0xad00) != 0) {
+			release_region(base, 0x10);
 			continue;
+		}
 		return (base);
+		release_region(base, 0x10);
 	}
 	return 0;
 }
cs_check.res
warning: line 5: should handle be a metavariable?
diff = 
--- tests/cs_check.c
+++ /tmp/cocci-output-25045-eec6b9-cs_check.c
@@ -4,7 +4,7 @@ do { last_fn = (fn); if ((last_ret = (re
 static void nsp_cs_config(dev_link_t *link)
 {
 	client_handle_t	  handle = link->handle;
-	CS_CHECK(GetFirstTuple, pcmcia_get_first_tuple(handle, &tuple));
+	CS_CHECK(GetFirstTuple, pcmcia_get_first_tuple(link, &tuple));
 cs_failed:
 	return;
 }
cst.res
diff = 
--- tests/cst.c
+++ /tmp/cocci-output-25045-860a60-cst.c
@@ -1,5 +1,5 @@
 int main(int x) {
-  emu10k1_t *emu = snd_magic_cast(1, 2, return -ENXIO);
+  emu10k1_t *emu = 4;
   int z = 12;
   return y;
 }
cst_null.res
diff = 
--- tests/cst_null.c
+++ /tmp/cocci-output-25045-b15619-cst_null.c
@@ -2,9 +2,8 @@ void* videobuf_alloc(unsigned int size)
 {
         struct videobuf_buffer *vb;
 
-        vb = kmalloc(size,GFP_KERNEL);
+        vb = kzalloc(size, GFP_KERNEL);
         if (vb != NULL) {
-                memset(vb,0,size);
                 videobuf_dma_init(&vb->dma);
                 init_waitqueue_head(&vb->done);
                 vb->magic     = MAGIC_BUFFER;
@@ -17,9 +16,8 @@ void* videobuf_alloc(unsigned int size)
 {
         struct videobuf_buffer *vb;
 
-        vb = kmalloc(size,GFP_KERNEL);
+        vb = kzalloc(size, GFP_KERNEL);
         if (vb) {
-                memset(vb,0,size);
                 videobuf_dma_init(&vb->dma);
                 init_waitqueue_head(&vb->done);
                 vb->magic     = MAGIC_BUFFER;
@@ -32,9 +30,8 @@ void* videobuf_alloc(unsigned int size)
 {
  	struct videobuf_buffer *vb;
 
-	vb = kmalloc(size,GFP_KERNEL);
+	vb = kzalloc(size, GFP_KERNEL);
 	if (NULL != vb) {
-		memset(vb,0,size);
 		videobuf_dma_init(&vb->dma);
 		init_waitqueue_head(&vb->done);
 		vb->magic     = MAGIC_BUFFER;
cstr.res
exn while in timeout_function
cststr.res
warning: line 4: should foo be a metavariable?
diff = 
--- tests/cststr.c
+++ /tmp/cocci-output-25045-59e104-cststr.c
@@ -1,3 +1,3 @@
 int main () {
-  foo((ptr_t)"blah");
+  xxx((ptr_t)"blah");
 }
csw.res
warning: line 4: should x be a metavariable?
diff = 
--- tests/csw.c
+++ /tmp/cocci-output-25045-ab676e-csw.c
@@ -1,14 +1,6 @@
 int main() {
   switch (x) {
-  case XYZ: 
-    link->state &= ~DEV_PRESENT;
-    if (link->state & DEV_CONFIG) {
-      bluecard_close(info);
-      bluecard_release(link);
-    }
-    break;
   case MID: mid(); break;
-  case FOO: bar(); break;
   }
 }
 
dbg.res
diff = 
--- tests/dbg.c
+++ /tmp/cocci-output-25045-5c8d57-dbg.c
@@ -4,5 +4,6 @@ static inline void alloc_resource(struct
 	struct resource *pr, *r = &dev->resource[idx];
 
 	if (pr)
-		DBG("PCI");
+		DBG else
+			pr = NULL;("PCI");
 }
dbg1.res
diff = 
--- tests/dbg1.c
+++ /tmp/cocci-output-25045-e75744-dbg1.c
@@ -1,5 +1,6 @@
 
 static inline void alloc_resource(struct pci_dev *dev, int idx)
 {
-		DBG("PCI");
+		DBG
+		E = NULL;("PCI");
 }
dc_close.res
diff = 
--- tests/dc_close.c
+++ /tmp/cocci-output-25045-e3b8ff-dc_close.c
@@ -5,6 +5,7 @@ initicc(struct IsdnCardState *cs)
 
 	INIT_WORK(&cs->work, icc_bh, cs);
 	cs->setstack_d = setstack_icc;
+	cs->DC_Send_Data = d_fill_fifo;
 	cs->DC_Close = DC_Close_icc;
 	cs->dc.icc.mon_rx = NULL;
 
debug.res
diff = 
--- tests/debug.c
+++ /tmp/cocci-output-25045-169746-debug.c
@@ -1,5 +1,4 @@
 static int __init init_3c574_cs(void)
 {
-    DEBUG(0, "%s\n", version);
     return 0;
 }
dec.res
diff = 
--- tests/dec.c
+++ /tmp/cocci-output-25045-b35dfa-dec.c
@@ -1,4 +1,5 @@
 int f(int x) {
+  int z;
   static int y;
   return x;
 }
decl.res
diff = 
--- tests/decl.c
+++ /tmp/cocci-output-25045-ca90cc-decl.c
@@ -1,5 +1,6 @@
 static int az_ioctl(int cmd, void *arg)
 {
+  foo();
   return 0;
 }
 
decl2.res
warning: line 8: should x be a metavariable?
diff = 
--- tests/decl2.c
+++ /tmp/cocci-output-25045-9ae64d-decl2.c
@@ -1,6 +1,6 @@
 static int az_ioctl(int cmd, void *arg)
 {
-  if (x) {
+  if (y) {
     return 0;
   }
   else {
decl_space.res
diff = 
--- tests/decl_space.c
+++ /tmp/cocci-output-25045-50ee8b-decl_space.c
@@ -1,4 +1,4 @@
 int main () {
-  int *x = y;
-  int x = y;
+  int *x = g;
+  int x = g;
 }
decl_split.res
decl_star.res
diff = 
--- tests/decl_star.c
+++ /tmp/cocci-output-25045-767f95-decl_star.c
@@ -1,5 +1,5 @@
 int main () {
-  int *x;
-  int x;
+  int *y;
+  int y;
   return x;
 }
declmeta.res
diff = 
--- tests/declmeta.c
+++ /tmp/cocci-output-25045-c0cc44-declmeta.c
@@ -1,7 +1,7 @@
-int b,c;
+int c;
 
-int b,c;
+int c;
 int main() {
-  int b,c;
+  int c;
 }
 
defe.res
diff = 
--- tests/defe.c
+++ /tmp/cocci-output-25045-c2a886-defe.c
@@ -1 +1,0 @@
-#define x 3
define_exp.res
diff = 
--- tests/define_exp.c
+++ /tmp/cocci-output-25045-8091f5-define_exp.c
@@ -1,5 +1,5 @@
 #define IRQ_T(info) ((info->flags & ASYNC_SHARE_IRQ) ? \
-  SA_SHIRQ : SA_INTERRUPT)
+  IRQF_SHARED : IRQF_DISABLED)
 
 
 void main(int i)
define_param.res
diff = 
--- tests/define_param.c
+++ /tmp/cocci-output-25045-cba27f-define_param.c
@@ -1,10 +1,10 @@
-#define fieldsize(a)	(sizeof(a)/sizeof(*a))
+
 
 static int
 atari_proc_infos(unsigned char *nvram, char *buffer, int *len,
     off_t *begin, off_t offset, int size)
 {
-	for (i = fieldsize(boot_prefs) - 1; i >= 0; --i) {
+	for (i = ARRAY_SIZE(boot_prefs) - 1; i >= 0; --i) {
 		if (nvram[1] == boot_prefs[i].val) {
 			PRINT_PROC("%s\n", boot_prefs[i].name);
 			break;
defineinit.res
diff = 
--- tests/defineinit.c
+++ /tmp/cocci-output-25045-397950-defineinit.c
@@ -1,3 +1,3 @@
 #define MYMACRO(adsf) { \
-        .foo = (asdf),\
+        .foo = (asdf) * 1000,\
 }
deftodo.res
delete_function.res
diff = 
--- tests/delete_function.c
+++ /tmp/cocci-output-25045-2690c5-delete_function.c
@@ -2,12 +2,6 @@ int first () {
   return 0;
 }
 
-int foo() {
- a();
- a();
- a();
-}
-
 int last () {
   return 0;
 }
delp.res
diff = 
--- tests/delp.c
+++ /tmp/cocci-output-25045-a79110-delp.c
@@ -1,4 +1,4 @@
 int main () {
   return
-    (foo);
+    foo;
 }
deref.res
diff = 
--- tests/deref.c
+++ /tmp/cocci-output-25045-5e4615-deref.c
@@ -1,6 +1,6 @@
 int main () {
   int **q;
-  foo(*q+12);
-  xxx(q[0]+12);
+  foo(12);
+  xxx(12);
   yyy(q+12);
 }
destroy.res
diff = 
--- tests/destroy.c
+++ /tmp/cocci-output-25045-e9636e-destroy.c
@@ -6,7 +6,12 @@ static void wlcore_nvs_cb(const struct f
 	goto out;
 
 out_irq:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,31)
 	free_irq(wl->irq, wl);
+#else
+	compat_free_threaded_irq(&private->irq_compat);
+	compat_destroy_threaded_irq(&wl->irq_compat);
+#endif
 #ifdef foo
 out:
 	release_firmware(fw);
devlink.res
diff = 
--- tests/devlink.c
+++ /tmp/cocci-output-25045-89ad01-devlink.c
@@ -1,12 +1,12 @@
-static void cm4000_release(dev_link_t *link);
+static void cm4000_release(struct pcmcia_device *link);
 
 int main () {
 	memset(&dev->atr_csum,0,			
-		sizeof(dev_link_t) - sizeof(dev_node));
+		sizeof(struct pcmcia_device) - sizeof(dev_node));
 }
 
 int xmain () {
-  dev_link_t x;
+  struct pcmcia_device x;
 	memset(&dev->atr_csum,0,			
-		sizeof(dev_link_t) - sizeof(dev_node));
+		sizeof(struct pcmcia_device) - sizeof(dev_node));
 }
disj.res
warning: line 3: should disj_id1 be a metavariable?
warning: line 3: should disj_id2 be a metavariable?
warning: line 8: should disj_id1 be a metavariable?
warning: line 8: should disj_id2 be a metavariable?
warning: line 18: should disj_type be a metavariable?
diff = 
--- tests/disj.c
+++ /tmp/cocci-output-25045-c62c77-disj.c
@@ -1,31 +1,31 @@
 void f() {
     int disj_id0;
-    int disj_id1;
-    int disj_id2;
+    int disj_id3;
+    int disj_id3;
     int disj_id0 = 0;
-    int disj_id1 = 0;
-    int disj_id2 = 0;
+    int disj_id3 = 0;
+    int disj_id3 = 0;
     disj_expr(0);
-    disj_expr(1);
-    disj_expr(2);
+    disj_expr(3);
+    disj_expr(3);
     float disj_type;
-    int disj_type;
-    char disj_type;
+    bool disj_type;
+    bool disj_type;
     DISJ_DECLARER0(0);
-    DISJ_DECLARER1(0);
-    DISJ_DECLARER2(0);
-    return;
+    DISJ_DECLARER3(0);
+    DISJ_DECLARER3(0);
+    break;
 }
 
 void g() {
-    return;
+    continue;
 }
 
 
 void disj_id0();
-void disj_id1();
-void disj_id2();
+void disj_id3();
+void disj_id3();
 
 void disj_id0() { foo(); }
-void disj_id1() { foo(); }
-void disj_id2() { foo(); }
+void disj_id3() { foo(); }
+void disj_id3() { foo(); }
disjexpr.res
diff = 
--- tests/disjexpr.c
+++ /tmp/cocci-output-25045-902b7e-disjexpr.c
@@ -1,3 +1,3 @@
 int main (int i) {
- f(v.fld, v, v.fld2);
+ f(v->fld, *v, v->fld2);
 }
disjexpr_ver1.res
diff = 
--- tests/disjexpr_ver1.c
+++ /tmp/cocci-output-25045-c97f8e-disjexpr_ver1.c
@@ -1,3 +1,3 @@
 int main (int i) {
- f(v.fld);
+ f(v->fld);
 }
disjexpr_ver2.res
diff = 
--- tests/disjexpr_ver2.c
+++ /tmp/cocci-output-25045-e6ffdd-disjexpr_ver2.c
@@ -1,3 +1,3 @@
 int main (int i) {
- f(v.fld, v.fld2, v);
+ f(v->fld, v->fld2, *v);
 }
disjid.res
diff = 
--- tests/disjid.c
+++ /tmp/cocci-output-25045-5f4a68-disjid.c
@@ -1,5 +1,5 @@
-int foo (int x, int z) { return 0; }
-int foo (int y, int z) { return 0; }
-int bar (int x, int z) { return 0; }
-int bar (int y, int z) { return 0; }
+int foo (int x, int z) { return 1; }
+int foo (int y, int z) { return 1; }
+int bar (int x, int z) { return 1; }
+int bar (int y, int z) { return 1; }
 int xxx (int y, int z) { return 0; }
distribute.res
diff = 
--- tests/distribute.c
+++ /tmp/cocci-output-25045-e04dc2-distribute.c
@@ -1,4 +1,4 @@
 int main(int i) { 
 
-  f(1+1);
+  f(g(1) * 0 * g(2));
 }
double.res
diff = 
--- tests/double.c
+++ /tmp/cocci-output-25045-3a51f1-double.c
@@ -1,5 +1,5 @@
 static void BChannel_proc_xmt(struct BCState *bcs) {
-  if (!test_bit(BC_FLG_BUSY, &bcs->Flag) && (!skb_queue_len(&bcs->squeue))) {
+  if (!test_bit(BC_FLG_BUSY, &bcs->Flag) && skb_queue_empty(&bcs->squeue)) {
     st->l2.l2l1(st, PH_DEACTIVATE | CONFIRM, NULL);
   }
 }
double_assign.res
diff = 
--- tests/double_assign.c
+++ /tmp/cocci-output-25045-036e93-double_assign.c
@@ -4,6 +4,5 @@ int main() {
 }
 
 int badmain() {
-  x = 12;
   x = 1;
 }
double_lines.res
diff = 
--- tests/double_lines.c
+++ /tmp/cocci-output-25045-96244f-double_lines.c
@@ -1,7 +1,4 @@
 int main () {
   test();
-  foo();
-  foo();
-  foo();
   endtest();
 }
double_switch.res
doublepos.res
diff = 
--- tests/doublepos.c
+++ /tmp/cocci-output-25045-617e03-doublepos.c
@@ -1,5 +1,4 @@
 int main() {
-  f(1,2);
   f(1,5);
   f(6,5);
 }
doubleswitch.res
diff = 
--- tests/doubleswitch.c
+++ /tmp/cocci-output-25045-38953b-doubleswitch.c
@@ -3,8 +3,6 @@ void zfLnxRecvEth(zdev_t* dev, zbuf_t* b
 #ifdef ZM_AVOID_UDP_LARGE_PACKET_FAIL
     zbuf_t *new_buf;
 
-    foo();
-
     switch(netif_rx(new_buf))
 #else
 
doundo.res
diff = 
--- tests/doundo.c
+++ /tmp/cocci-output-25045-8e6ce3-doundo.c
@@ -4,5 +4,5 @@ int main()
 {
   const s8 (*queue_priority_mapping)[2];
   s8 *noevent;
-  foo();
+  new_foo();
 }
dowhile.res
diff = 
--- tests/dowhile.c
+++ /tmp/cocci-output-25045-5511b8-dowhile.c
@@ -1,7 +1,5 @@
 int main() {
   do {
-    f();
   }
   while (0);
-  g();
 }
dropbr.res
diff = 
--- tests/dropbr.c
+++ /tmp/cocci-output-25045-c7e4f3-dropbr.c
@@ -1,5 +1,3 @@
 int main () {
-  if (a) {
-    bar();
-  }
+  if (a) foo();
 }
dropcom.res
diff = 
--- tests/dropcom.c
+++ /tmp/cocci-output-25045-405d8e-dropcom.c
@@ -2,10 +2,6 @@
 int one() { return 0; }
 #endif /* XXX */
 
-int main () {
-  return 1;
-}
-
 int xyz () {
   return 1;
 }
dropenderr.res
diff = 
--- tests/dropenderr.c
+++ /tmp/cocci-output-25045-711098-dropenderr.c
@@ -1,8 +1,6 @@
 int main () {
-  if (x) goto end;
-  if (x) goto end2;
+  if (x) {}
+  if (x) {}
   return 0;
-  end:
-  end2:
   return -1;
 }
dropf.res
diff = 
--- tests/dropf.c
+++ /tmp/cocci-output-25045-4545ed-dropf.c
@@ -1,3 +1,3 @@
 int main() {
-  x = f(1) + f(3);
+  x = f(1 + 3) + f(3 + 3);
 }
dropparam.res
diff = 
--- tests/dropparam.c
+++ /tmp/cocci-output-25045-c5a478-dropparam.c
@@ -2,12 +2,12 @@ int f(char *x, int y, char* z) {
   return;
 }
 
-int g(char *x, int y, char* z) {
+int g(char *x, char* z) {
   return;
 }
 
 
 void main(void)
 {
-	g("toto", 3, "tata");
+	g("toto", "tata");
 }
dtest.res
diff = 
--- tests/dtest.c
+++ /tmp/cocci-output-25045-244bc7-dtest.c
@@ -1,5 +1,5 @@
 int main() {
 	struct sk_buff *e;
 	struct other *e1;
-	return e->a + e1->b;
+	return e->a + 12;
 }
eb1.res
diff = 
--- tests/eb1.c
+++ /tmp/cocci-output-25045-72782d-eb1.c
@@ -1,7 +1,13 @@
 int func() {
   int c;
-  Packet p1,p2;
+  Packet * p1 = SCMalloc(SIZE_OF_PACKET),* p2 = SCMalloc(SIZE_OF_PACKET);
   int y;
+  if (p1 == NULL)
+    return 0;
+  if (p2 == NULL)
+    return 0;
   a = 3;
+  SCFree(p1);
+  SCFree(p2);
   return x+y;
 }
edots.res
diff = 
--- tests/edots.c
+++ /tmp/cocci-output-25045-7b2521-edots.c
@@ -1,6 +1,6 @@
 void main(int i) {
-  foo[45];
-  bar[45+v.field];
+  foo;
+  bar;
 
   //  f(foo[45] + bar[45]);
 
edots_ver1.res
diff = 
--- tests/edots_ver1.c
+++ /tmp/cocci-output-25045-6af3aa-edots_ver1.c
@@ -1,7 +1,7 @@
 void main(int i) {
-  foo[45];
-  bar[45+v.field];
+  foo;
+  bar;
 
-  f(foo[45] + bar[45]);
+  f(foo + bar);
 
 }
elsify.res
diff = 
--- tests/elsify.c
+++ /tmp/cocci-output-25045-7bbcf3-elsify.c
@@ -1,7 +1,7 @@
 int main () {
   if (x)
-    GOTO(rc = 1);
+    rc = 1;
   else
-    GOTO(rc = 2);
+    rc = 2;
 }
 
empty.res
diff = 
--- tests/empty.c
+++ /tmp/cocci-output-25045-d0c914-empty.c
@@ -1,6 +1,6 @@
 static int vlsi_hard_start_xmit(struct sk_buff *skb, struct net_device *ndev)
 {
-		pci_restore_state(pdev, idev->cfg_space);
+		pci_restore_state(pdev);
 		if (ring_first(idev->tx_ring) == NULL) {
 		}
 		else
end_commas.res
diff = 
--- tests/end_commas.c
+++ /tmp/cocci-output-25045-30119c-end_commas.c
@@ -1,4 +1,6 @@
 static struct i2c_client client_template = {
-	.name		= "adv7175_client",
-	.driver		= &i2c_driver_adv7175
+	.driver		= &i2c_driver_adv7175,
+	.dev = {
+		.name = "adv7175_client",
+	}
 };
endif.res
warning: line 5: should x be a metavariable?
diff = 
--- tests/endif.c
+++ /tmp/cocci-output-25045-bae638-endif.c
@@ -2,18 +2,23 @@ void f(int i) {
 
   x = 1;
   if(1) x = 3;
+  foo();
   
   x = 1;
   while(1) x = 3;
+  foo();
 
   x = 1;
   do x = 3; while(1);
+  foo();
 
   x = 1;
   for(1;1;1) x = 3;
+  foo();
 
   x = 1;
   for(1;1;1) { x = 3; }
+  foo();
 
   // switch(1) {
   // case 0: x = 3;
endnl.res
diff = 
--- tests/endnl.c
+++ /tmp/cocci-output-25045-1e9155-endnl.c
@@ -1,18 +1,36 @@
 int main () {
+#ifdef FOO
+  call(1);
+#endif
   foo(1);
   bar(2);
+#ifdef BAR
+  call(2);
+#endif
 one:
+#ifdef FOO
+  call(3);
+#endif
   foo(3);
 two:
   bar(4);
+#ifdef BAR
+  call(4);
+#endif
 three:
   xxx(5);
 #ifdef X
 #endif
+#ifdef FOO
+  call(6);
+#endif
   foo(6);
 #ifdef X
 #endif
   bar(7);
+#ifdef BAR
+  call(7);
+#endif
 #ifdef X
 #endif
 }
endpos.res
warning: s: metavariable p not used in the - or context code
exn while in timeout_function
enum.res
diff = 
--- tests/enum.c
+++ /tmp/cocci-output-25045-aee4bb-enum.c
@@ -18,5 +18,5 @@ xxx
 static reg_errcode_t
 regex_compile ()
 {
-  unsigned char *pending_exact = 0;
+  unsigned char *pending_exact = NULL;
 }
exitc.res
exn while in timeout_function
exitp.res
diff = 
--- tests/exitp.c
+++ /tmp/cocci-output-25045-e10186-exitp.c
@@ -1,6 +1,6 @@
 int main () {
-  f(a1);
-  f(a2);
-  f(done);
-  f(a4);
+  g(a1);
+  g(a2);
+  g(done);
+  g(a4);
 }
exp.res
diff = 
--- tests/exp.c
+++ /tmp/cocci-output-25045-28640a-exp.c
@@ -1,14 +1,14 @@
 int main(int i) {
 
-  int k = foo();
+  int k = bar();
 
   if(1) {
-    foo();
+    bar();
   } else { 
-    foo();
+    bar();
   }
 
-  foo();
+  bar();
 
 
 }
expnest.res
diff = 
--- tests/expnest.c
+++ /tmp/cocci-output-25045-2d4e24-expnest.c
@@ -2,5 +2,5 @@ int main() {
   x = 3 + 4;
   x = f() + 15;
   x = 15 + g();
-  x = f() + g();
+  x = f() - g();
 }
expopt.res
diff = 
--- tests/expopt.c
+++ /tmp/cocci-output-25045-a9995a-expopt.c
@@ -1,5 +1,5 @@
 int main() {
   int *x;
   f(x);
-  *x = 7;
+  x = 7;
 }
expopt2.res
diff = 
--- tests/expopt2.c
+++ /tmp/cocci-output-25045-1234f0-expopt2.c
@@ -1,5 +1,5 @@
 void main(int i) {
 
-  f(v, w.aa);
+  f(v, g(w.aa));
 
 }
expopt3.res
diff = 
--- tests/expopt3.c
+++ /tmp/cocci-output-25045-1f33db-expopt3.c
@@ -1,5 +1,5 @@
 static int pcm20_ioctl(struct video_device *dev, unsigned int cmd, void *arg)
 {
-	struct video_tuner v;
-	pcm20_getflags(pcm20, &v.flags, &v.xxx, &v.signal);
+	struct video_tuner *v;
+	pcm20_getflags(pcm20, &v->flags, &v->xxx, &v->signal);
 }
expopt3_ver1.res
diff = 
--- tests/expopt3_ver1.c
+++ /tmp/cocci-output-25045-a367fb-expopt3_ver1.c
@@ -1,6 +1,6 @@
 static int pcm20_ioctl(struct video_device *dev, unsigned int cmd, void *arg)
 {
-	struct video_tuner v;
+	struct video_tuner *v;
         //&v.field;
-	f(&v.field1, &v.field2, &v.field3, &v.field4);
+	f(&v->field1, &v->field2, &v->field3, &v->field4);
 }
expopt3_ver2.res
diff = 
--- tests/expopt3_ver2.c
+++ /tmp/cocci-output-25045-19821b-expopt3_ver2.c
@@ -1,5 +1,5 @@
 static int pcm20_ioctl(struct video_device *dev, unsigned int cmd, void *arg)
 {
-	struct video_tuner v;
-	f(v.field1, v.field2);
+	struct video_tuner *v;
+	f(v->field1, v->field2);
 }
extra.res
exn while in timeout_function
failing_andany.res
diff = 
--- tests/failing_andany.c
+++ /tmp/cocci-output-25045-3c17ae-failing_andany.c
@@ -8,6 +8,4 @@ static int smc_probe1(struct net_device
 static int smc_probe2(struct net_device *dev, void __iomem *ioaddr,
 		      unsigned long irq_flags)
 {
-        request_irq(dev);
-	register_netdev(dev);
 }
fields.res
diff = 
--- tests/fields.c
+++ /tmp/cocci-output-25045-0a29d4-fields.c
@@ -1,4 +1,7 @@
 struct foo x = {
+  .a = 1,
+  .b = 2,
+  .c = 3,
   .xa = 1,
   .xb = 2,
   .xc = 3,
fieldsmin.res
warning: line 4: should x be a metavariable?
diff = 
--- tests/fieldsmin.c
+++ /tmp/cocci-output-25045-25dab8-fieldsmin.c
@@ -1,5 +1,3 @@
 struct foo x = {
-  .a = 1,
-  .b = 2,
   .c = 3,
 };
finalize_only.res
exn while in timeout_function
find_long.res
diff = 
--- tests/find_long.c
+++ /tmp/cocci-output-25045-96f634-find_long.c
@@ -3,8 +3,8 @@ long function()
         long a;
         int b;
 
-        a + b;
-        b + a;
+        (long)(a + b);
+        (long)(b + a);
 
         return a;
 }
fix_flow_need.res
diff = 
--- tests/fix_flow_need.c
+++ /tmp/cocci-output-25045-d554a0-fix_flow_need.c
@@ -5,7 +5,6 @@ void main(int i) {
   if(1) { 
     foo(); 
   }
-  bar();
 
   foobar();
 }
fn_todo.res
diff = 
--- tests/fn_todo.c
+++ /tmp/cocci-output-25045-8fa1eb-fn_todo.c
@@ -5,6 +5,6 @@ static void task_kill_later(struct asd_a
 	struct Scsi_Host *shost = sas_ha->core.shost;
 	struct sas_task *task = ascb->uldd_task;
 
-	INIT_WORK(&task->abort_work, (void (*)(void *))sas_task_abort, task);
+	INIT_WORK(&task->abort_work, sas_task_abort);
 	queue_work(shost->work_q, &task->abort_work);
 }
fnptr.res
diff = 
--- tests/fnptr.c
+++ /tmp/cocci-output-25045-f42ab2-fnptr.c
@@ -8,5 +8,5 @@ static int sci_request_irq(struct sci_po
     sci_er_interrupt, sci_rx_interrupt, sci_tx_interrupt,
     sci_br_interrupt,
   };
-  request_irq(port->irqs[0], sci_mpxed_interrupt, SA_INTERRUPT);
+  request_irq(port->irqs[0], sci_mpxed_interrupt, foo());
 }
fnret.res
warning: line 6: should x be a metavariable?
diff = 
--- tests/fnret.c
+++ /tmp/cocci-output-25045-6b08d5-fnret.c
@@ -1 +1 @@
-static void foo(int x) { return; }
+
fnty.res
diff = 
--- tests/fnty.c
+++ /tmp/cocci-output-25045-6df2c6-fnty.c
@@ -1,4 +1,4 @@
-struct allfns {
+struct newname {
   int (*x) (int);
   int (*y) (int);
 };
fntypedef.res
diff = 
--- tests/fntypedef.c
+++ /tmp/cocci-output-25045-7e43e3-fntypedef.c
@@ -1 +1 @@
-typedef void (*toto_t)(int a, int b);
+typedef void (*toto_t)(int a, int b, int c);
format.res
diff = 
--- tests/format.c
+++ /tmp/cocci-output-25045-011c88-format.c
@@ -1,5 +1,5 @@
 int main () {
-  printf("one %d two\n", 1);
-  printf("one %d two %d three\n", 1, 2);
+  printf("blah", 1);
+  printf("blah", 1, 2);
   printf("one two three\n");
 }
format2.res
exn while in timeout_function
formatlist.res
diff = 
--- tests/formatlist.c
+++ /tmp/cocci-output-25045-b3f104-formatlist.c
@@ -1,10 +1,10 @@
 int main () {
   foo("xyz %d abc");
-  foo("xyz %d %d abc");
+  foo("blah2");
   foo("mno %d %d abc");
   foo("mno %d abc %d %d abc %d");
-  foo("xyz %d abc %d %d abc %d");
-  foo("xyz %d abc %d %d abc %d mno");
+  foo("blah");
+  foo("blah");
   foo("xyz %d abc %d %d abc %d %d abc %d");
   foo("xyz %d abc %d %d abc");
   foo("xyz abc");
fortest.res
diff = 
--- tests/fortest.c
+++ /tmp/cocci-output-25045-ccfe32-fortest.c
@@ -1,18 +1,18 @@
 int main() {
-  for(x=0; x!=10; x++)
-    y = 12;
-  for(x=0; x!=10; )
-    y = 12;
-  for(x=0; ; x++)
-    y = 12;
-  for(x=0; ; )
-    y = 12;
-  for( ; x!=10; x++)
-    y = 12;
-  for( ; x!=10; )
-    y = 12;
-  for( ; ; x++)
-    y = 12;
-  for( ; ; )
-    y = 12;
+  bar();
+  foo();
+  bar();
+  foo();
+  bar();
+  foo();
+  bar();
+  foo();
+  bar();
+  foo();
+  bar();
+  foo();
+  bar();
+  foo();
+  bar();
+  foo();
 }
fortype.res
warning: line 4: should x be a metavariable?
diff = 
--- tests/fortype.c
+++ /tmp/cocci-output-25045-2b23df-fortype.c
@@ -1,4 +1,4 @@
 int main () {
-  for (int x = 0; x!=10; x++)
-     return x;
+  for (char * p = 0; y!=10; y++)
+     return y;
 }
four.res
diff = 
--- tests/four.c
+++ /tmp/cocci-output-25045-28c217-four.c
@@ -1,5 +1,3 @@
 int main () {
   f(1);
-  h(2);
-  i(2);
 }
foura.res
diff = 
--- tests/foura.c
+++ /tmp/cocci-output-25045-446bfd-foura.c
@@ -1,5 +1,4 @@
 int main () {
   f(1);
   h(2);
-  i(2);
 }
fp.res
diff = 
--- tests/fp.c
+++ /tmp/cocci-output-25045-a6db39-fp.c
@@ -1,3 +1,2 @@
 int main(int (*x)(int,int)) {
-  x();
 }
fsh.res
diff = 
--- tests/fsh.c
+++ /tmp/cocci-output-25045-dc4560-fsh.c
@@ -1,4 +1,4 @@
 int main () {
   f(c);
-  g();
+  g(foo-c);
 }
fun.res
warning: line 5: should x be a metavariable?
warning: line 5: should x be a metavariable?
diff = 
--- tests/fun.c
+++ /tmp/cocci-output-25045-0f7643-fun.c
@@ -1 +1,4 @@
+struct a {
+	int a;
+};
 int f(int x) { return x; }
func.res
diff = 
--- tests/func.c
+++ /tmp/cocci-output-25045-a18a87-func.c
@@ -1,6 +1,7 @@
 static int hidg_setup(struct usb_function *f,
 		const struct usb_ctrlrequest *ctrl)
 {
-	VDBG(cdev, "hid_setup crtl_request : bRequestType:0x%x bRequest:0x%x "
-		"Value:0x%x\n", ctrl->bRequestType, ctrl->bRequest, value);
+	VDBG(cdev,
+	     "%s crtl_request : bRequestType:0x%x bRequest:0x%x Value:0x%x\n",
+	     ctrl->bRequestType, ctrl->bRequest, value);
 }
gcc_min_max.res
diff = 
--- tests/gcc_min_max.c
+++ /tmp/cocci-output-25045-b6f013-gcc_min_max.c
@@ -1,8 +1,8 @@
 int main()
 {
   int a, b;
-  a <? b;
-  a <?= b;
-  a >? b;
-  a >?= b;
+  min(a, b);
+  a = min(a, b);
+  max(a, b);
+  a = max(a, b);
 }
getc.res
diff = 
--- tests/getc.c
+++ /tmp/cocci-output-25045-655dd2-getc.c
@@ -1,4 +1,4 @@
 int IFoo_QueryInterface(int *iface, long *riid, void **ppv)
 {
-  return IBar_QueryInterface(iface, riid, *ppv);
+  return 12;
 }
gilles-question.res
diff = 
--- tests/gilles-question.c
+++ /tmp/cocci-output-25045-ba1da9-gilles-question.c
@@ -2,8 +2,6 @@ void main(int i) {
 
   f(0);
   if(1) {
-    g(0);
   }
-  g(0);
 }
       
gotobreak.res
diff = 
--- tests/gotobreak.c
+++ /tmp/cocci-output-25045-cfc449-gotobreak.c
@@ -11,5 +11,5 @@ static void sedlbauer_config(struct pcmc
 	CS_CHECK(GetNextTuple, pcmcia_get_next_tuple(link, &tuple));
     }
 
-    return;
+    return 0;
 }
hd.res
warning: line 4: should x be a metavariable?
warning: line 4: should y be a metavariable?
diff = 
--- tests/hd.c
+++ /tmp/cocci-output-25045-4b4c4f-hd.c
@@ -1,3 +1,3 @@
 #include "hd.h"
 
-int f(int x, int y) { return x; }
+int f(int x) { return x; }
headers.res
diff = 
--- tests/headers.c
+++ /tmp/cocci-output-25045-afa4f5-headers.c
@@ -10,12 +10,12 @@ static int empeg_write (struct usb_seria
 
 } 
 
-static void empeg_write_bulk_callback (struct urb *urb, struct pt_regs *regs)
+static void empeg_write_bulk_callback(struct urb *urb)
 {
 }
 
 
-static void empeg_read_bulk_callback (struct urb *urb, struct pt_regs *regs)
+static void empeg_read_bulk_callback(struct urb *urb)
 {
 	usb_fill_bulk_urb(empeg_read_bulk_callback);
 
hex.res
diff = 
--- tests/hex.c
+++ /tmp/cocci-output-25045-231a63-hex.c
@@ -1,3 +1,2 @@
 int main() {
-  f(0x00);
 }
hil1.res
diff = 
--- tests/hil1.c
+++ /tmp/cocci-output-25045-001d8b-hil1.c
@@ -2,5 +2,5 @@
 { HILSE_FUNC,		{ func: &funct }, funct_arg, zero_rc },
 
 int main () {
-  return 12;
+  return 5;
 }
icomma.res
exn while in timeout_function
idcon_ocaml.res
exn while in timeout_function
idcon_python.res
diff = 
--- tests/idcon_python.c
+++ /tmp/cocci-output-25045-7d8e97-idcon_python.c
@@ -1,5 +1,5 @@
 void f(void) {
-    g(a);
+    g(18);
     g(b);
-    g(c);
+    g(18);
 }
  File "<string>", line 5
    print p
          ^
SyntaxError: Missing parentheses in call to 'print'
idstr.res
diff = 
--- tests/idstr.c
+++ /tmp/cocci-output-25045-fe553c-idstr.c
@@ -1,3 +1,3 @@
 int main () {
-  printf("arena 0x%08x, numfree = %d\n", (unsigned)dt, dt->numfree);
+  printf("y", (unsigned)dt, dt->numfree);
 }
if.res
diff = 
--- tests/if.c
+++ /tmp/cocci-output-25045-54a3d5-if.c
@@ -1,27 +1,37 @@
 int main () {
+  before();
   f(x);
+  after();
+  before();
   g(x);
+  after();
 }
 
 int main1 () {
+  before();
   f(x);
   if (x == NULL) {
+    before();
     g(x);
   }
 }
 
 int main1 () {
+  before();
   f(x);
   while (x == NULL) {
     if (q == 3) {
+      before();
       g(x);
     }
   }
   x = 6;
 }
 int main2 () {
+  before();
   f(x);
   if (x == NULL || y == 2) {
+    before();
     g(x);
   }
 }
ifadd.res
diff = 
--- tests/ifadd.c
+++ /tmp/cocci-output-25045-b1ca79-ifadd.c
@@ -3,6 +3,7 @@ int main() {
     if (x) {
       one();
       two();
+      foo();
     }
   }
 }
ifbr.res
warning: line 13: should ret be a metavariable?
warning: rule starting on line 1: metavariable E not used in the - or context code
ifd.res
diff = 
--- tests/ifd.c
+++ /tmp/cocci-output-25045-6ee09e-ifd.c
@@ -1,9 +1,13 @@
 int main () {
   one();
+#ifdef 0
+#ifdef 10
   foo();
   one();
   one();
   bar();
+#endif
+#endif
   one();
 }
 
ifdef1.res
diff = 
--- tests/ifdef1.c
+++ /tmp/cocci-output-25045-6ae124-ifdef1.c
@@ -1,5 +1,8 @@
 #include <asm/thread_info.h>
 #include <asm/memory.h>
+#ifdef CONFIG_NKERNEL
+#include <asm/nk/f_nk.h>
+#endif
 #include <asm/mach/time.h>
 #include <asm/io.h>
 
ifdef2.res
diff = 
--- tests/ifdef2.c
+++ /tmp/cocci-output-25045-c834b5-ifdef2.c
@@ -1,6 +1,11 @@
 #include <asm/thread_info.h>
 #include <asm/memory.h>
 #include <asm/mach/time.h>
+#ifdef CONFIG_NKERNEL
+#include <nk/nkern.h>
+#include <asm/nkern.h>
+unsigned long maxsize = 0;
+#endif
 #include <asm/io.h>
 
 
ifdef3.res
diff = 
--- tests/ifdef3.c
+++ /tmp/cocci-output-25045-43e7dd-ifdef3.c
@@ -2,6 +2,15 @@
 #include <asm/memory.h>
 #include <asm/mach/time.h>
 #include <asm/io.h>
+#ifdef CONFIG_NKERNEL
+#include <foo.h>
+#define CONFIG_NKERNEL_NO_SHARED_IRQ	// use local (native) mask/unmask
+#undef CONFIG_NKERNEL_DEBUG_IRQ
+#endif
+static inline void nop(void)
+{
+	int i;
+}
 
 
 void init_IRQ(void)
ifdef4.res
warning: line 9: should desc be a metavariable?
warning: line 9: should irq_desc be a metavariable?
diff = 
--- tests/ifdef4.c
+++ /tmp/cocci-output-25045-fae824-ifdef4.c
@@ -7,7 +7,10 @@
 void init_IRQ(void)
 {
 	for (irq = 0; irq < IRQS; irq++) {
-		*desc = irq_desc;
+#ifdef CONFIG_NKERNEL
+		if (irq < IRQ_LIMIT)
+#endif
+*desc = irq_desc;
 		uselessCall();
 	}
 }
ifdef5.res
diff = 
--- tests/ifdef5.c
+++ /tmp/cocci-output-25045-502612-ifdef5.c
@@ -11,3 +11,11 @@ void init_IRQ(void)
 		uselessCall();
 	}
 }
+#ifdef CONFIG_NKERNEL
+#ifndef TIMER_32K_SYNCHRONIZED
+#define TIMER_32K_SYNCHRONIZED 0xffffffff
+#endif
+unsigned long nk_vtick_read_stamp(void)
+{
+	return omap_readl(TIMER_32K_SYNCHRONIZED);
+}
ifdef6.res
diff = 
--- tests/ifdef6.c
+++ /tmp/cocci-output-25045-82a935-ifdef6.c
@@ -1,5 +1,8 @@
 #include <asm/thread_info.h>
 #include <asm/memory.h>
+#ifdef CONFIG_NKERNEL
+#define foo(x) f(x)
+#endif
 #include <asm/mach/time.h>
 #include <asm/io.h>
 
ifdef6a.res
diff = 
--- tests/ifdef6a.c
+++ /tmp/cocci-output-25045-c6cabb-ifdef6a.c
@@ -1,4 +1,7 @@
 #include <asm/thread_info.h>
+#ifdef CONFIG_NKERNEL
+#define foo(x) f(x)
+#endif
 #include <asm/memory.h>
 #include <asm/mach/time.h>
 #include <asm/io.h>
ifdefmeta.res
diff = 
--- tests/ifdefmeta.c
+++ /tmp/cocci-output-25045-dc62fe-ifdefmeta.c
@@ -1,26 +1,30 @@
 int main() {
-    buf = alloca(3
-    #ifdef PLATFORM_A
-// platform a stuff
-                    +5
-                    +50
-    #endif
-    #ifdef PLATFORM_B
-/* platform b stuff */
-                    +2
-    #endif
-            );
-    buf = alloca(3
-    #ifdef PLATFORM_A
-// platform a stuff
-                    +5
-                    +50
-    #endif
-    #ifdef PLATFORM_B
-/* platform b stuff */
-                    +2
-    #endif
-            );
+    buf = malloc(3
+                 
+#ifdef PLATFORM_A
+ + 5 + 50
+                 
+#endif
+
+                 
+#ifdef PLATFORM_B
+ + 2
+                 
+#endif
+);
+    buf = malloc(3
+                 
+#ifdef PLATFORM_A
+ + 5 + 50
+                 
+#endif
+
+                 
+#ifdef PLATFORM_B
+ + 2
+                 
+#endif
+);
 }
 
 int other() {
@@ -41,9 +45,6 @@ int other() {
 }
 
 int third() {
-    buf = alloca(3+5+2);
-    buf = alloca(3
-                    +5
-                    +2
-            );
+    buf = malloc(3 + 5 + 2);
+    buf = malloc(3 + 5 + 2);
 }
ifdefmeta1.res
diff = 
--- tests/ifdefmeta1.c
+++ /tmp/cocci-output-25045-8d04ec-ifdefmeta1.c
@@ -1,17 +1,2 @@
 int main() {
-    buf = alloca(3
-    #ifdef PLATFORM_A
-// platform a stuff
-
-
-                    +5
-
-
-
-    #endif
-    #ifdef PLATFORM_B
-/* platform b stuff */
-                    +2
-    #endif
-            );
 }
ifdefmeta2.res
diff = 
--- tests/ifdefmeta2.c
+++ /tmp/cocci-output-25045-9fdfc2-ifdefmeta2.c
@@ -1,12 +1,2 @@
 int main() {
-    buf = alloca(3
-
-
-                    +5
-
-
-
-
-                    +2
-            );
 }
ifdefmeta3.res
diff = 
--- tests/ifdefmeta3.c
+++ /tmp/cocci-output-25045-28e8bb-ifdefmeta3.c
@@ -1,11 +1,5 @@
 int main () {
   f();
-  if (foo) {
-    one();
-#ifdef ONE
-    two();
-#endif
-    three();
-  }
+  xxx();
   g();
 }
ifend.res
diff = 
--- tests/ifend.c
+++ /tmp/cocci-output-25045-828aad-ifend.c
@@ -3,5 +3,3 @@ static int vortex_debug = VORTEX_DEBUG;
 #else
 static int vortex_debug = 1;
 #endif
-
-#include <linux/config.h>
ifgoto.res
diff = 
--- tests/ifgoto.c
+++ /tmp/cocci-output-25045-687e76-ifgoto.c
@@ -1,5 +1,7 @@
 int main () {
-   if (x)
-     GOTO(l,a = 3);
+   if (x) {
+     a = 3;
+     goto l;
+   }
 l: return;
 }
ifields.res
diff = 
--- tests/ifields.c
+++ /tmp/cocci-output-25045-adde81-ifields.c
@@ -1,14 +1,16 @@
   typedef struct tag_obj {
     int x;
     int y;
-    const IFaceVtbl *lpVtbl;
+    IFace IFace_iface;
     int a;
   } Tobj;
 
 
   static struct IFaceImpl obj = {
     1, 2,
-      &x,
+      {
+        &x, 4,
+      },
       3
   };
 
ifif.res
diff = 
--- tests/ifif.c
+++ /tmp/cocci-output-25045-2c3792-ifif.c
@@ -1,5 +1,13 @@
 int main () {
+#ifdef FOO1
+#ifdef FOO2
   foo();
+#endif /* FOO1 */
+#endif /* FOO2 */
   xxx();
+#ifdef BAR1
+#ifdef BAR2
   bar();
+#endif /* BAR1 */
+#endif /* BAR2 */
 }
ifreturn.res
diff = 
--- tests/ifreturn.c
+++ /tmp/cocci-output-25045-f49ed9-ifreturn.c
@@ -1,31 +1,46 @@
 int main () {
   if (x) {
-    return 1;
+    blah();
+    {
+      return 1;
+    }
   }
   return 12;
 }
 
 int main () {
   if (a) {
-    if (x) {
-      return 1;
+    blah();
+    {
+      if (x) {
+        blah();
+        {
+          return 1;
+        }
+      }
+      b();
     }
-    b();
   }
   return 12;
 }
 
 int main () {
   if (a) {
-    if (b) {
-      if (x) {
-        return 1;
-      }
-      else {
-        return 1;
+    blah();
+    {
+      if (b) {
+        blah();
+        {
+          if (x) {
+            return 1;
+          }
+          else {
+            return 1;
+          }
+        }
       }
+      b();
     }
-    b();
   }
   return 12;
 }
ifreturn3.res
diff = 
--- tests/ifreturn3.c
+++ /tmp/cocci-output-25045-1e0289-ifreturn3.c
@@ -3,7 +3,10 @@ int GetExitCode (int iFlag_Code)
   if(iFlag_Code==OK) {
     return OK;
   } else // blah
+    {
+    mwtrace();
     return WARNING;
+  }
   return 0;
 }
 
@@ -11,7 +14,9 @@ int GetExitCode (int iFlag_Code)
 {
   if(iFlag_Code==OK) {
     return OK;
-  } else
+  } else {
+    mwtrace();
     return WARNING;
+  }
   return 0;
 }
ifreturn4.res
diff = 
--- tests/ifreturn4.c
+++ /tmp/cocci-output-25045-50439a-ifreturn4.c
@@ -2,10 +2,16 @@ int GetExitCode (int iFlag_Code)
 {
   if(iFlag_Code==OK) {
     return OK;
-  } else if(iFlag_Code==WARNING) {
-    return WARNING;
   } else {
-    return_ERREUR;
+    mwtrace();
+    if(iFlag_Code==WARNING) {
+      return WARNING;
+    } else {
+      mwtrace();
+      {
+        return_ERREUR;
+      }
+    }
   }
   return 0;
 }
ifreturn6.res
diff = 
--- tests/ifreturn6.c
+++ /tmp/cocci-output-25045-0037bc-ifreturn6.c
@@ -3,7 +3,8 @@ int main () {
     blah();
     goto end;
   }
-  else goto end2;
+  else blah();
+  later();
 end:
   xxx();
 end2:
ifzer.res
diff = 
--- tests/ifzer.c
+++ /tmp/cocci-output-25045-c51ff8-ifzer.c
@@ -3,6 +3,5 @@ int main() {
           and have lived on another thread's stack; that stack may have become
           unmapped meanwhile (CONFIG_DEBUG_PAGEALLOC). */
 #endif
- foo();
 }
  
ifzz.res
diff = 
--- tests/ifzz.c
+++ /tmp/cocci-output-25045-8ddc49-ifzz.c
@@ -2,9 +2,9 @@ if 0
 char c;
 #endif
 
-int foo(void)
+size_t foo(void)
 {
-  int i = 1;
+  size_t i = 1;
 
 #if 0
   TRACE("\n");
inc.res
diff = 
--- tests/inc.c
+++ /tmp/cocci-output-25045-0a6dfa-inc.c
@@ -1,2 +1 @@
-#define foo 3
-#define xxx 4
+#define foobar 3
incdir.res
incl.res
diff = 
--- tests/incl.c
+++ /tmp/cocci-output-25045-668eee-incl.c
@@ -1,6 +1,8 @@
+#include "before.h"
 #include <linux/foo.h>
 #include <asm/semaphore.h>
 #include <linux/foo2.h>
+#include "after.h"
 #ifdef FOO
 #include <linux/bar.h>
 #endif FOO
incl2.res
diff = 
--- tests/incl2.c
+++ /tmp/cocci-output-25045-e590c8-incl2.c
@@ -1,3 +1,4 @@
+#include "beginning.h"
 #include <linux/foo.h>
 #include <linux/foo.h>
 #include "linux/foo.h"
inclifdef.res
diff = 
--- tests/inclifdef.c
+++ /tmp/cocci-output-25045-9f3a42-inclifdef.c
@@ -1,4 +1,5 @@
 #include <linux/foo.h>
+#include <linux/mutex.h>
 #ifdef CONFIG
 #include <linux/bar.h>
 #endif
include.res
diff = 
--- tests/include.c
+++ /tmp/cocci-output-25045-f5b090-include.c
@@ -1,8 +1,6 @@
 
 #include <stdio.h>
 #include <stdio2.h>
-#include <devfs_kernel.h>
-#include   <devfs_kernel.h>
 
 
 void main(int i) {
incompatible_value.res
incpos.res
diff = 
--- tests/incpos.c
+++ /tmp/cocci-output-25045-e1b230-incpos.c
@@ -1,3 +1,4 @@
+#include <foo.h>
 #include <one>
 #include "two"
 #include <three>
keeping first hdr 1
dropping first hdr
dropping first hdr
dropping second hdr
dropping second hdr
incpos1.res
diff = 
--- tests/incpos1.c
+++ /tmp/cocci-output-25045-1e5abc-incpos1.c
@@ -1,3 +1,4 @@
+#include <foo.h>
 #include "two"
 #include <three>
 #include "four"
keeping first hdr 2
dropping first hdr
keeping second hdr 1 because of 2
dropping second hdr
inherited.res
diff = 
--- tests/inherited.c
+++ /tmp/cocci-output-25045-caf85a-inherited.c
@@ -6,5 +6,5 @@ void main(int i) {
   h(2);
   h2(2);
 
-  foo(1);
+  bar(1);
 }
inherited_ver1.res
diff = 
--- tests/inherited_ver1.c
+++ /tmp/cocci-output-25045-e7f81c-inherited_ver1.c
@@ -3,8 +3,8 @@ void main(int i) {
   //g(1);
   f(2);
 
-  h(2);
-  h2(2);
+  hh(2);
+  hh22(2);
 
-  foo(1);
+  bar(1);
 }
inhmet.res
diff = 
--- tests/inhmet.c
+++ /tmp/cocci-output-25045-2ca683-inhmet.c
@@ -1,3 +1,3 @@
 int main () {
-  x->s = 12;
+  foo();
 }
inhpos.res
diff = 
--- tests/inhpos.c
+++ /tmp/cocci-output-25045-8d3ca6-inhpos.c
@@ -1,3 +1,2 @@
 int main () {
-  g(3);
 }
initializer.res
warning: line 5: should var be a metavariable?
diff = 
--- tests/initializer.c
+++ /tmp/cocci-output-25045-64ffb9-initializer.c
@@ -1,5 +1,6 @@
 struct SHT var = {
   .f1 = toto1,
-  .f2 = toto2,
+  .foo = 12,
+  .foo2 = 12,
   .f3 = toto3,
 };
initializer_many_fields.res
warning: line 4: should x be a metavariable?
inline.res
warning: line 4: should x be a metavariable?
diff = 
--- tests/inline.c
+++ /tmp/cocci-output-25045-b6c4f6-inline.c
@@ -1 +1 @@
-inline void foo(int x) { return; }
+
insdef.res
diff = 
--- tests/insdef.c
+++ /tmp/cocci-output-25045-00a74b-insdef.c
@@ -1 +1,2 @@
 #define TABINFOGEN
+#include <tbl.h>
int2bool-local.res
diff = 
--- tests/int2bool-local.c
+++ /tmp/cocci-output-25045-53cd36-int2bool-local.c
@@ -1,8 +1,9 @@
 int nxnypz1(){
-	int x, y, z;
+	bool z;
+	int x, y;
 	x = 1;
 	y = 0;
-	z = 0;
+	z = false;
 	if (x)
 		return x;
 
@@ -31,8 +32,9 @@ int nxny3() {
 }
 
 int px4() {
-	int x;
-	x = 0;
+	bool x;
+	
+	x = false;
 	return 4;
 }
 
@@ -49,11 +51,13 @@ int nxny5() {
 }
 
 int pxpy6() {
-	int x;
-	int y;
+	bool x;
+	
+	bool y;
+	
 
-	x = 0;
-	y = 1;
+	x = false;
+	y = true;
 
 	x = x && y;
 
introbrace.res
diff = 
--- tests/introbrace.c
+++ /tmp/cocci-output-25045-ad71eb-introbrace.c
@@ -1,8 +1,12 @@
 int main() {
-	if (x)
+	if (x) {
 		rc = request_threaded_irq(a,
 					  b);
-	else
+		rc = compat_request_threaded_irq(12);
+	}
+	else {
 		rc = request_threaded_irq(a,
 					  b);
+		rc = compat_request_threaded_irq(12);
+	}
 }
invert.res
diff = 
--- tests/invert.c
+++ /tmp/cocci-output-25045-fa2415-invert.c
@@ -1,3 +1,3 @@
 int main () {
-  x = y + z;
+  x = z + y;
 }
ip.res
diff = 
--- tests/ip.c
+++ /tmp/cocci-output-25045-829670-ip.c
@@ -2,10 +2,18 @@ void GetInfoDestTV(short sNoFo)
 {
   if(sNoFo == 1)
     printf("one");
-  else if(sNoFo == 2)
-    printf("two");
-  else if(sNoFo == 2)
-    printf("three");
-  else
-    printf("other");
+  else {
+    trace("ifelel");
+    if(sNoFo == 2)
+      printf("two");
+    else {
+      trace("ifelel");
+      if(sNoFo == 2)
+        printf("three");
+      else {
+        trace("ifelel");
+        printf("other");
+      }
+    }
+  }
 }
ip2.res
diff = 
--- tests/ip2.c
+++ /tmp/cocci-output-25045-e55314-ip2.c
@@ -1,11 +1,17 @@
 void GetInfoDestTV(short sNoFo)
 {
-  if(sNoFo == 1)
+  if(sNoFo == 1) {
+    trace("ifelel");
     printf("one");
-  else if(sNoFo == 2)
+  }
+  else if(sNoFo == 2) {
+    trace("ifelel");
     printf("two");
-  else if(sNoFo == 2)
+  }
+  else if(sNoFo == 2) {
+    trace("ifelel");
     printf("three");
+  }
   else
     printf("other");
 }
isococci.res
diff = 
--- tests/isococci.c
+++ /tmp/cocci-output-25045-45225c-isococci.c
@@ -1,6 +1,4 @@
 
 void f(int i) {
 
-  if(x > 0) return x;
-
 }
isoif.res
warning: r: metavariable p1 not used in the - or context code
warning: r: metavariable E not used in the - or context code
diff = 
--- tests/isoif.c
+++ /tmp/cocci-output-25045-00e942-isoif.c
@@ -1,4 +1,2 @@
 int main () {
-  if (x == NULL) one(); else two();
-  if (x != NULL) three(); else four();
 }
isotest.res
diff = 
--- tests/isotest.c
+++ /tmp/cocci-output-25045-777fba-isotest.c
@@ -1,7 +1,6 @@
 void main(int i) {
 
-  char j;
-  int i; // = 1;
+  char j;// = 1;
   
   j++;
   
isotest2.res
diff = 
--- tests/isotest2.c
+++ /tmp/cocci-output-25045-e26db3-isotest2.c
@@ -1,7 +1,6 @@
 void main(int i) {
 
   char j;
-  int i = 1;
   
   j++;
   
iteration.res
exn while in timeout_function
iteration_after_merge.res
exn while in timeout_function
iterator.res
diff = 
--- tests/iterator.c
+++ /tmp/cocci-output-25045-9549c0-iterator.c
@@ -2,9 +2,5 @@ void pcibios_report_status(u_int status_
 {
         struct list_head *l;
 
-        list_for_each(l, &pci_root_buses) {
-                struct pci_bus *bus = pci_bus_b(l);
-
-                pcibios_bus_report_status(bus, status_mask, warn);
-        }
+        foo();
 }
iterprint.res
diff = 
--- tests/iterprint.c
+++ /tmp/cocci-output-25045-84d863-iterprint.c
@@ -1,6 +1,4 @@
 int main () {
- for(bit = 0; bit < size; bit++) {
-   if (test_bit(bit, bitmap))
-     x = 12;
- }
+ for_each_set_bit(bit, bitmap, size)
+   x = 12;
 }
jloop1.res
exn while in timeout_function
julia10.res
diff = 
--- tests/julia10.c
+++ /tmp/cocci-output-25045-804f10-julia10.c
@@ -1,7 +1,5 @@
 int main(int x) {
   f();
-  h();
   g();
-  h();
 }
 
julia7.res
diff = 
--- tests/julia7.c
+++ /tmp/cocci-output-25045-7ff229-julia7.c
@@ -1,7 +1,6 @@
 int main(int x) {
   foo();
-  if (x) {bar(); after(); return 0;}
-  bar();
+  if (x) {after(); return 0;}
   after();
 }
 
justremove.res
diff = 
--- tests/justremove.c
+++ /tmp/cocci-output-25045-de0166-justremove.c
@@ -1,17 +1,6 @@
 int main () {
-  if (x) {
-    a();
-    b();
-    c();
-  }
   foo();
-  while (x) {
-    a();
-    if (b()) continues;
-    c();
-  }
   foo();
-  r();
   foo();
 }
 
keep_comma.res
diff = 
--- tests/keep_comma.c
+++ /tmp/cocci-output-25045-923b6e-keep_comma.c
@@ -1,4 +1,4 @@
 int main () {
-  foo();
+  xxx();
   snd_assert(!atomic_read(&substream->runtime->mmap_count), );
 }
km.res
diff = 
--- tests/km.c
+++ /tmp/cocci-output-25045-bc4e72-km.c
@@ -1,5 +1,4 @@
 int main() {
-  int *data = kmalloc(element->string.length + 1, GFP_KERNEL);
+  int *data = kzalloc(element->string.length + 1, GFP_KERNEL);
   foo();
-  memset(data, 0, element->string.length + 1);
 }
kmalloc.res
diff = 
--- tests/kmalloc.c
+++ /tmp/cocci-output-25045-32553e-kmalloc.c
@@ -1,9 +1,7 @@
 int main() {
   struct bar *y;
-  struct foo *x = kmalloc(sizeof(struct foo),GPF_KERNEL);
+  struct foo *x = kzalloc(sizeof(struct foo), GPF_KERNEL);
   if (!x) return -ENOMEM;
-  y = kmalloc(sizeof(struct bar),GPF_KERNEL);
+  y = kzalloc(sizeof(struct bar), GPF_KERNEL);
   if (!y) return -ENOMEM;
-  memset(x,0,sizeof(struct foo));
-  memset(y,0,sizeof(struct bar));
 }
kmc.res
warning: r: metavariable x1 not used in the - or context code
warning: r: metavariable S not used in the - or context code
diff = 
--- tests/kmc.c
+++ /tmp/cocci-output-25045-8ed759-kmc.c
@@ -10,5 +10,4 @@ dmabounce_register_dev(struct device *de
 
  err_destroy:
 	kfreea(device_info);
-	return 1;
 }
kr.res
diff = 
--- tests/kr.c
+++ /tmp/cocci-output-25045-619787-kr.c
@@ -3,5 +3,4 @@ int a(x)
 {
   y = (j)
     r;
-  foo();
 }
ktype.res
warning: rule starting on line 1: metavariable T2 not used in the - or context code
warning: rule starting on line 1: metavariable T not used in the - or context code
diff = 
--- tests/ktype.c
+++ /tmp/cocci-output-25045-5582de-ktype.c
@@ -3,8 +3,6 @@ typedef struct r1_private_data_s conf_t;
 static int run(mddev_t *mddev)
 {
 	conf_t *conf;
-	conf = kmalloc(sizeof(conf_t), GFP_KERNEL);
+	conf = kzalloc(sizeof(conf_t), GFP_KERNEL);
 	if (!conf) return;
-
-	memset(conf, 0, sizeof(*conf));
 }
ktype2.res
warning: r: metavariable T2 not used in the - or context code
warning: r: metavariable T not used in the - or context code
diff = 
--- tests/ktype2.c
+++ /tmp/cocci-output-25045-d19184-ktype2.c
@@ -3,11 +3,8 @@ typedef struct r1_private_data_s conf_t;
 static int run(mddev_t *mddev)
 {
 	conf_t *conf;
-	conf = kmalloc(sizeof(conf_t), GFP_KERNEL);
+	conf = kzalloc(sizeof(conf_t), GFP_KERNEL);
 	if (!conf) {
-	  memset(conf, 0, sizeof(*conf));
 	  return;
 	}
-
-	memset(conf, 0, sizeof(*conf));
 }
labels_metastatement.res
diff = 
--- tests/labels_metastatement.c
+++ /tmp/cocci-output-25045-75ff30-labels_metastatement.c
@@ -1,9 +1,15 @@
 int foo(int i) {
 
   if(1) {
-    x = 3;
-    z = 4;
-  } // we don't want that it add both foo on the } and on the endif
+    {
+      x = 3;
+      foo();
+      z = 4;
+      foo();
+    }
+    foo();
+  }
+  foo(); // we don't want that it add both foo on the } and on the endif
     // (note: but need correct endif accrochage)
 
 }
labels_metastatement_ver1.res
diff = 
--- tests/labels_metastatement_ver1.c
+++ /tmp/cocci-output-25045-abe60b-labels_metastatement_ver1.c
@@ -1,5 +1,9 @@
 int foo(int i) {
 
-  if(1) x = 3;
+  if(1) {
+    x = 3;
+    foo();
+  }
+  foo();
 
 }
lid.res
diff = 
--- tests/lid.c
+++ /tmp/cocci-output-25045-66b38f-lid.c
@@ -1,6 +1,6 @@
 int main () {
   int a;
   static int b;
-  f(a);
+  f(12);
   f(b);
 }
line_before_last.res
diff = 
--- tests/line_before_last.c
+++ /tmp/cocci-output-25045-d67186-line_before_last.c
@@ -1,17 +1,13 @@
 int main () {
-  foo();
   xxx();
 
 }
 
 int main () {
   xxx();
-  foo();
 
 }
 
 int main () {
   xxx();
-
-  foo();
 }
list_test.res
warning: line 5: should a be a metavariable?
warning: line 12: should a be a metavariable?
warning: line 13: should b be a metavariable?
warning: line 21: should a be a metavariable?
warning: line 23: should b be a metavariable?
warning: line 31: should a be a metavariable?
warning: line 38: should a be a metavariable?
warning: line 39: should b be a metavariable?
warning: line 47: should a be a metavariable?
warning: line 49: should b be a metavariable?
warning: line 56: should f be a metavariable?
warning: line 57: should a be a metavariable?
warning: line 63: should g be a metavariable?
warning: line 64: should a be a metavariable?
warning: line 65: should b be a metavariable?
warning: line 71: should h be a metavariable?
warning: line 73: should a be a metavariable?
warning: line 75: should b be a metavariable?
warning: line 82: should i be a metavariable?
warning: line 84: should a be a metavariable?
warning: line 86: should b be a metavariable?
diff = 
--- tests/list_test.c
+++ /tmp/cocci-output-25045-72d8a3-list_test.c
@@ -1,55 +1,53 @@
 int main () {
-  f(a);
-  g(a,b);
-  h(x,a,y,b,z);
-  h(a,y,b,z);
-  h(x,a,b,z);
-  h(x,a,y,b);
-  h(a,b,z);
-  h(x,a,b);
-  h(a,b);
+  f();
+  g(b);
+  h(x,y,b,z);
+  h(y,b,z);
+  h(x,b,z);
+  h(x,y,b);
+  h(b,z);
+  h(x,b);
+  h(b);
 }
 
-int f(int a) { return; }
+int f() { return; }
 
-int g(int a,int b) { return; }
+int g(int b) { return; }
 
-int h(int x, int a, int y, int b, int z) { return; }
+int h(int x, int y, int b, int z) { return; }
 
-int h(int a, int y, int b, int z) { return; }
+int h(int y, int b, int z) { return; }
 
-int h(int x, int a, int b, int z) { return; }
+int h(int x, int b, int z) { return; }
 
-int h(int x, int a, int y, int b) { return; }
+int h(int x, int y, int b) { return; }
 
-int h(int a, int b, int z) { return; }
+int h(int b, int z) { return; }
 
-int h(int x, int a, int b) { return; }
+int h(int x, int b) { return; }
 
-int h(int a, int b) { return; }
+int h(int b) { return; }
 
 int f[] = {
-  a
  };
 
 int g[] = {
-  a,
   b
  };
 
-int h[] = { x, a, y, b, z };
+int h[] = { x, y, b, z };
 
-int h[] = { a, y, b, z, };
+int h[] = { y, b, z, };
 
-int h[] = { x, a, b, z };
+int h[] = { x, b, z };
 
-int h[] = { x, a, y, b, };
+int h[] = { x, y, b, };
 
-int h[] = { a, b, z };
+int h[] = { b, z };
 
-int h[] = { x, a, b, };
+int h[] = { x, b, };
 
-int h[] = { a, b };
+int h[] = { b };
 
 int i[] = { x, a, y, b, z };
 
@@ -57,33 +55,30 @@ int i[] = { a, y, b, z, };
 
 int i[] = { x, a, b, z };
 
-int i[] = { x, a, y, b, };
+int i[] = { x, a, y, };
 
 int i[] = { a, b, z };
 
-int i[] = { x, a, b, };
+int i[] = { x, a, };
 
-int i[] = { a, b };
+int i[] = { a, };
 
 struct f {
- int a;
+ int b;
 };
 
 struct g {
-  int a;
   int b;
 };
 
 struct h {
   int x;
-  int a;
   int y;
   int b;
   int z;
  };
 
 struct h {
-  int a;
   int y;
   int b;
   int z;
@@ -91,63 +86,46 @@ struct h {
 
 struct h {
   int x;
-  int a;
   int b;
   int z;
  };
 
 struct h {
   int x;
-  int a;
   int y;
   int b;
  };
 
 struct h {
-  int a;
   int b;
   int z;
  };
 
 struct h {
   int x;
-  int a;
   int b;
  };
 
 struct h {
-  int a;
   int b;
  };
 
-enum f { a };
+enum f { b };
 
-enum g { a, b };
+enum g { b };
 
-enum h { x, a, y, b, z, };
-enum h { a, y, b, z };
-enum h { x, a, b, z, };
-enum h { x, a, y, b };
-enum h { a, b, z, };
-enum h { x, a, b };
-enum h { a, b, };
+enum h { x, y, b, z, };
+enum h { y, b, z };
+enum h { x, b, z, };
+enum h { x, y, b };
+enum h { b, z, };
+enum h { x, b };
+enum h { b, };
 
 enum i { x, a, y, b, z, };
 enum i { a, y, b, z };
 enum i { x, a, b, z, };
-enum i { x, a, y, b, };
+enum i { x, a, y, };
 enum i { a, b, z, };
-enum i { x, a, b, };
-enum i { a, b, };
-
-#define f(a) 3
-
-#define g(a,b) 3
-
-#define h(x,a,y,b,z) 3
-#define h(a,y,b,z) 3
-#define h(x,a,b,z) 3
-#define h(x,a,y,b) 3
-#define h(a,b,z) 3
-#define h(x,a,b) 3
-#define h(a,b) 3
+enum i { x, a, };
+enum i { a, };
local.res
diff = 
--- tests/local.c
+++ /tmp/cocci-output-25045-d5a3e5-local.c
@@ -1 +1 @@
-int f(int xx, int yy) { return 0; }
+int f(int a, int b, int yy) { return 0; }
localglobal.res
diff = 
--- tests/localglobal.c
+++ /tmp/cocci-output-25045-980f34-localglobal.c
@@ -3,5 +3,5 @@ int a;
 int main(int b) {
   int c;
   int local;
-  return a + b + c;
+  return global + local + local;
 }
localid.res
diff = 
--- tests/localid.c
+++ /tmp/cocci-output-25045-1095bd-localid.c
@@ -2,8 +2,7 @@ int c;
 
 int main () {
   int a;
-  f(a);
   f(a+1);
-  f(b);
-  f(c);
+  h(b);
+  g(c);
 }
log.res
diff = 
--- tests/log.c
+++ /tmp/cocci-output-25045-fbe696-log.c
@@ -8,5 +8,4 @@ static struct var_t vars[] = {
 
 
 int main () {
-  f("foo");
 }
long.res
diff = 
--- tests/long.c
+++ /tmp/cocci-output-25045-94a768-long.c
@@ -1,4 +1,4 @@
 int main () {
-  hello_world("this is a very long sentence. this is a very long sentence. ",
-              "I don't know how coccinelle will treat this!");
+  hello_you("this is a very long sentence. this is a very long sentence. ",
+            "I don't know how coccinelle will treat this!");
 }
longconst.res
diff = 
--- tests/longconst.c
+++ /tmp/cocci-output-25045-6e7c14-longconst.c
@@ -2,18 +2,18 @@ long function1()
 {
         long a;
         int b;
-        a = 1l << b;
-        a = 1u << b;
-        a = 65536l << b;
-        a = 65536u << b;
-        a = 65536 << b;
-        a = 4294967296 << b;
-        a = 65535 << b;
-        a = 4294967295 << b;
-        a = 0x7fffffff << b;
-        a = 0x1fl << b;
-        a = 0x1fu << b;
-        a = 0x1FL << b;
-        a = 0x1FU << b;
+        a = f(1l, "long");
+        a = f(1u, "unsigned");
+        a = f(65536l, "long");
+        a = f(65536u, "unsigned");
+        a = f(65536, "int");
+        a = f(4294967296, "int");
+        a = f(65535, "int");
+        a = f(4294967295, "int");
+        a = f(0x7fffffff, "int");
+        a = f(0x1fl, "long");
+        a = f(0x1fu, "unsigned");
+        a = f(0x1FL, "long");
+        a = f(0x1FU, "unsigned");
         return a;
 }
longline2.res
warning: line 5: should a be a metavariable?
diff = 
--- tests/longline2.c
+++ /tmp/cocci-output-25045-54cc92-longline2.c
@@ -1,8 +1,16 @@
 int main() {
-  f(sdhfkjdkdsahksadsdhjkdsa,sahdjshdkjsahdkjhsakjdsh,a,shdkjsdsdhkjsa,x,y,z);
-  f(sdhfkjdkdsahksadsdhjkdsa, sahdjshdkjsahdkjhsakjdsh, a, shdkjsdsdhkjsa, x, y, z);
+  f(sdhfkjdkdsahksadsdhjkdsa,sahdjshdkjsahdkjhsakjdsh,a,
+    1111111111111111111111111111111111111, 111111111111111111111111, 111,
+    shdkjsdsdhkjsa,x,y,z);
+  f(sdhfkjdkdsahksadsdhjkdsa, sahdjshdkjsahdkjhsakjdsh, a,
+    1111111111111111111111111111111111111, 111111111111111111111111, 111,
+    shdkjsdsdhkjsa, x, y, z);
   f(sdhfkjdkdsahksadsdhjkdsa,sahdjshdkjsahdkjhsakjdsh,aaaaaaaaaaaaaaaaaaaa,shdkjsdsdhkjsa);
-  f(a,sdhfkjdkdsahksadsdhjkdsa,sahdjshdkjsahdkjhsakjdsh,aaaaaaaaaaaaaaaaaaaa,shdkjsdsdhkjsa);
-  f(a,sdhfkjdkdsahksadsdhjkdsa,sahdjshdkjsahdkjhsakjdsh,aaaaaaaaaaaaaaaaaaaa,shdkjsdsdhkjsa,
+  f(a,1111111111111111111111111111111111111, 111111111111111111111111, 111,
+    sdhfkjdkdsahksadsdhjkdsa,sahdjshdkjsahdkjhsakjdsh,aaaaaaaaaaaaaaaaaaaa,
+    shdkjsdsdhkjsa);
+  f(a,1111111111111111111111111111111111111, 111111111111111111111111, 111,
+    sdhfkjdkdsahksadsdhjkdsa,sahdjshdkjsahdkjhsakjdsh,aaaaaaaaaaaaaaaaaaaa,
+    shdkjsdsdhkjsa,
     sdhfkjdkdsahksadsdhjkdsa,sahdjshdkjsahdkjhsakjdsh,aaaaaaaaaaaaaaaaaaaa,shdkjsdsdhkjsa);
 }
longlong.res
diff = 
--- tests/longlong.c
+++ /tmp/cocci-output-25045-3b37d1-longlong.c
@@ -1,6 +1,6 @@
-long long a;
+int a;
 
 int main () {
-  long long b;
+  int b;
   return 0;
 }
longlongint.res
diff = 
--- tests/longlongint.c
+++ /tmp/cocci-output-25045-7a3acc-longlongint.c
@@ -1,9 +1,3 @@
 int main() {
-  unsigned int x;
-  int y;
-  unsigned long long int a;
-  long long int b;
-  unsigned long long m;
-  long long n;
   return 0;
 }
loop.res
diff = 
--- tests/loop.c
+++ /tmp/cocci-output-25045-eb7978-loop.c
@@ -1,5 +1,3 @@
 int main() {
-  f();
   while (1) { x : 15; }
-  g();
 }
lvalue.res
warning: line 4: should x be a metavariable?
diff = 
--- tests/lvalue.c
+++ /tmp/cocci-output-25045-4c548e-lvalue.c
@@ -1,4 +1,4 @@
 int main() {
-  x = x + 1;
-  *x = 12;
+  f(x) = f(x) + 1;
+  *f(x) = 12;
 }
macro.res
diff = 
--- tests/macro.c
+++ /tmp/cocci-output-25045-274b97-macro.c
@@ -1,5 +1,5 @@
-#define SC_FCMND(fcmnd) ((Scsi_Cmnd *)((long)fcmnd - (long)&(((Scsi_Cmnd *)0)->SCp)))
+#define SC_FCMND(fcmnd) ((struct scsi_cmnd *)((long)fcmnd - (long)&(((struct scsi_cmnd *)0)->SCp)))
 
 int main() {
-  return ((Scsi_Cmnd *)((long)fcmnd - (long)&(((Scsi_Cmnd *)0)->SCp)));
+  return ((struct scsi_cmnd *)((long)fcmnd - (long)&(((struct scsi_cmnd *)0)->SCp)));
 }
macro_int16.res
diff = 
--- tests/macro_int16.c
+++ /tmp/cocci-output-25045-d167b2-macro_int16.c
@@ -4,6 +4,6 @@
 void main(void)
 {
      INT16 a, b, c;
-     c = a + b;
+     c = a - b;
 }
 
match_init.res
diff = 
--- tests/match_init.c
+++ /tmp/cocci-output-25045-7da0de-match_init.c
@@ -1,15 +1,15 @@
 int probably_works () {
-  int x = 3;
+  int a = 12;
   f(x);
 }
 
 int does_it_work () {
-  int y, x = 3;
+  int y, a = 12;
   f(x);
 }
 
 int should_work () {
-  x = 3;
+  a = 12;
   f(x);
 }
 
match_no_meta.res
diff = 
--- tests/match_no_meta.c
+++ /tmp/cocci-output-25045-0ddd00-match_no_meta.c
@@ -2,6 +2,4 @@ void main(int i)
 {
   foo(1);
   bar(2);
-
-  bar(3);
 }
max.res
warning: line 6: should i be a metavariable?
warning: line 14: should i be a metavariable?
diff = 
--- tests/max.c
+++ /tmp/cocci-output-25045-e6cc16-max.c
@@ -1,3 +1,3 @@
 int main () {
-  if (x < 25) return i;
+  if (x < 25) return 3;
 }
md1.res
diff = 
--- tests/md1.c
+++ /tmp/cocci-output-25045-39396c-md1.c
@@ -1,9 +1,11 @@
 struct main {
-	int a;
-	int b;
-	int a,b,c;
+	int y;
+	int y;
+	int y;
+	int y;
+	int y;
 
-	char a;
-	char b;
+	char y;
+	char y;
 	char a,b,c;
 };
md2.res
diff = 
--- tests/md2.c
+++ /tmp/cocci-output-25045-31218a-md2.c
@@ -1,11 +1,13 @@
 int main() {
-	int a;
-	static int b;
-	int a,b,c;
+	int y;
+	static int y;
+	int y;
+	int y;
+	int y;
 	static int a,b,c;
 
-	char a;
-	static char b;
+	char y;
+	static char y;
 	char a,b,c;
 	static char a,b,c;
 }
md3.res
diff = 
--- tests/md3.c
+++ /tmp/cocci-output-25045-13d20b-md3.c
@@ -1,5 +1,5 @@
 struct s_t {
-  double one[3];
+  double3 one;
   int x;
 }*A,*B,*C,a,b,c;
 
mdadd.res
diff = 
--- tests/mdadd.c
+++ /tmp/cocci-output-25045-ff6186-mdadd.c
@@ -1,3 +1,5 @@
 int main () {
-	int a,b,c;
+	char a;
+	char b;
+	char c;
 }
mdec.res
diff = 
--- tests/mdec.c
+++ /tmp/cocci-output-25045-cee302-mdec.c
@@ -1,23 +1,26 @@
 int main () {
-  int a, b, c, d;
-  int a, b, c, *d;
-  int a, b, *c, d;
-  int a, *b, c, d;
-  int *a, b, c, d;
-  int a, b, *c, *d;
-  int a, *b, *c, d;
-  int *a, *b, c, d;
-  int *a, b, c, *d;
-  int a, *b, c, *d;
-  int *a, b, *c, d;
-  int a, *b, c, *d;
-  int *a, b, *c, d;
-  int a, *b, *c, *d;
-  int *a, *b, *c, d;
-  int *a, *b, c, *d;
-  int *a, b, *c, *d;
-  int *a, b, c, *d;
-  int *a, b, *c, *d;
-  int a, *b, *c, *d;
-  int *a, *b, c, *d;
+  char d;
+  char c;
+  char b;
+  char a;
+  int *d;
+  int *c;
+  int *b;
+  int *a;
+  int *c, *d;
+  int *b, *c;
+  int *a, *b;
+  int *a, *d;
+  int *b, *d;
+  int *a, *c;
+  int *b, *d;
+  int *a, *c;
+  int *b, *c, *d;
+  int *a, *b, *c;
+  int *a, *b, *d;
+  int *a, *c, *d;
+  int *a, *d;
+  int *a, *c, *d;
+  int *b, *c, *d;
+  int *a, *b, *d;
 }
mdecl.res
warning: rule starting on line 14: inherited metavariable unbound not used in the -, +, or context code
exn while in timeout_function
mdeclp.res
exn while in timeout_function
mdeclp2.res
exn while in timeout_function
mdeclrep.res
diff = 
--- tests/mdeclrep.c
+++ /tmp/cocci-output-25045-87c24a-mdeclrep.c
@@ -1,19 +1,23 @@
 int main () {
-  int a,x,c;
+  int y;
+  int a,c;
   return 0;
 }
 
 int main () {
-  int x,c;
+  int y;
+  int c;
   return 0;
 }
 
 int main () {
-  int a,x;
+  int y;
+  int a;
   return 0;
 }
 
 int main () {
-  int x;
+  int y;
+  
   return 0;
 }
memory.res
diff = 
--- tests/memory.c
+++ /tmp/cocci-output-25045-774178-memory.c
@@ -2,6 +2,5 @@
 
 int __queue_add(Queue_t *queue, Scsi_Cmnd *SCpnt, int head)
 {
-	if (BAD_MAGIC(1,12))
-		BUG();
+	BUG_ON(BAD_MAGIC(1, 12));
 }
merge_after_iteration.res
exn while in timeout_function
metahex.res
metaline.res
warning: line 42: x, previously declared as a metavariable, is used as an identifier
warning: line 48: should y be a metavariable?
diff = 
--- tests/metaline.c
+++ /tmp/cocci-output-25045-d289a9-metaline.c
@@ -1,9 +1,8 @@
 int main () {
-  static int x;
   static int y;
-  if (12) f(4+3);
-  g(4+3);
-  m(3+3);
-  g(3+3);
+  static int x;
+  while (12) f(4+3);
+  h(4 + 3);
+  q(3 + 3);
   r(3+4);
 }
metaops.res
diff = 
--- tests/metaops.c
+++ /tmp/cocci-output-25045-55b7f4-metaops.c
@@ -2,24 +2,24 @@ int p1() {
 	int x = 0;
 	int y = 1;
 
-	x = x + y;
-	x = x * y;
-	x = x / y;
-	x = x - y;
-	x = x && y;
-	x = x || y;
-	x = x == y;
-	x = x != y;
-	x = x > y;
-	x = x < y;
-	x = x >= y;
-	x = x <= y;
-	x = x % y;
-	x = x | y;
-	x = x & y;
-	x = x ^ y;
-	x = x << y;
-	x = x >> y;
+	x += x - y;
+	x += x + y;
+	x += x + y;
+	x += x + y;
+	x += x + y;
+	x += x + y;
+	x += x + y;
+	x += x + y;
+	x += x + y;
+	x += x + y;
+	x += x + y;
+	x += x + y;
+	x += x + y;
+	x += x + y;
+	x += x + y;
+	x += x + y;
+	x += x + y;
+	x += x + y;
 
 	return 42;
 }
@@ -28,17 +28,17 @@ int p2() {
 	int x = 0;
 	int y = 1;
 
-	x = 1;
-	x += 2;
-	x -= 3;
-	x *= 4;
-	x /= 5;
-	x %= 6;
-	x |= 7;
-	x &= 8;
-	x ^= 9;
-	x <<= 10;
-	x >>= 11;
+	x += 1;
+	x = 2;
+	x = 3;
+	x = 4;
+	x = 5;
+	x = 6;
+	x = 7;
+	x = 8;
+	x = 9;
+	x = 10;
+	x = 11;
 
 	return 42;
 }
metaops0.res
diff = 
--- tests/metaops0.c
+++ /tmp/cocci-output-25045-a6971d-metaops0.c
@@ -1,44 +1,11 @@
 int p1() {
-	int x = 0;
-	int y = 1;
 
-	x = x + y;
-	x = x * y;
-	x = x / y;
-	x = x - y;
-	x = x && y;
-	x = x || y;
-	x = x == y;
-	x = x != y;
-	x = x > y;
-	x = x < y;
-	x = x >= y;
-	x = x <= y;
-	x = x % y;
-	x = x | y;
-	x = x & y;
-	x = x ^ y;
-	x = x << y;
-	x = x >> y;
 
 	return 42;
 }
 
 int p2() {
-	int x = 0;
-	int y = 1;
 
-	x = 1;
-	x += 2;
-	x -= 3;
-	x *= 4;
-	x /= 5;
-	x %= 6;
-	x |= 7;
-	x &= 8;
-	x ^= 9;
-	x <<= 10;
-	x >>= 11;
 
 	return 42;
 }
metaruleelem.res
diff = 
--- tests/metaruleelem.c
+++ /tmp/cocci-output-25045-5eca6c-metaruleelem.c
@@ -1,6 +1,7 @@
 int main(int x) {
   f();
-  if(1) {
+  foo();
+  if (1) {
     replace();
   }
   g();
metastatement2.res
diff = 
--- tests/metastatement2.c
+++ /tmp/cocci-output-25045-6d238c-metastatement2.c
@@ -1,6 +1,5 @@
 void main(int i) {
 
   f();
-  { replace(); replace(); }
   g();
 }
metastatement_for.res
diff = 
--- tests/metastatement_for.c
+++ /tmp/cocci-output-25045-c725b4-metastatement_for.c
@@ -1,9 +1,6 @@
 void main(void)
 {
 	int i;
-	for (i = 0; i < 10; i++) {
-		printf("%d", i);
-	}
 
 	if (i == 0) {
 		printf("%d", i);
metastatement_if.res
diff = 
--- tests/metastatement_if.c
+++ /tmp/cocci-output-25045-77235b-metastatement_if.c
@@ -5,8 +5,4 @@ void main(void)
 		printf("%d", i);
 	}
 
-	if (i == 0) {
-		printf("%d", i);
-	}
-
 }
mincom.res
diff = 
--- tests/mincom.c
+++ /tmp/cocci-output-25045-145f04-mincom.c
@@ -1,5 +1,7 @@
 int main () {
-  if (rc == LS_NONE_FIRST_DE)
+  if (rc == LS_NONE_FIRST_DE) {
      /* It is not "ls -{a}l" operation, no need statahead for it. */
-     GOTO(out, rc = -EAGAIN);
+     a();
+     b();
+  }
 }
minenum.res
diff = 
--- tests/minenum.c
+++ /tmp/cocci-output-25045-928510-minenum.c
@@ -1 +1 @@
-enum h { x, a, z, q, b };
+enum h { x, qq, q, b };
minenum1.res
diff = 
--- tests/minenum1.c
+++ /tmp/cocci-output-25045-1d752a-minenum1.c
@@ -1,2 +1,2 @@
-enum h { x, a, z,
+enum h { x, qq,
 q, b };
minfn.res
diff = 
--- tests/minfn.c
+++ /tmp/cocci-output-25045-fc123d-minfn.c
@@ -1,13 +1,5 @@
 int main () { return first; }
 
-int f () { return second; }
-int f () { return second; }
-
 int main () { return third; }
 
-#define x 3
-#define x 3
-#define x 3
-#define x 3
-
 int main () { return fifth; }
mini_null_ref.res
diff = 
--- tests/mini_null_ref.c
+++ /tmp/cocci-output-25045-4b81b9-mini_null_ref.c
@@ -2,11 +2,12 @@ static int __devinit w90p910_keypad_prob
 {
         const struct w90p910_keypad_platform_data *pdata =
                                                 pdev->dev.platform_data;
-        const struct matrix_keymap_data *keymap_data = pdata->keymap_data;
+        const struct matrix_keymap_data *keymap_data;
         if (!pdata) {
                 dev_err(&pdev->dev, "no platform data defined\n");
                 return -EINVAL;
         }
+        keymap_data = pdata->keymap_data;
 
 	return;
 }
miniswap.res
diff = 
--- tests/miniswap.c
+++ /tmp/cocci-output-25045-a27e79-miniswap.c
@@ -1,5 +1,5 @@
 static void swap_refcount_rec(void *a, void *b, int size)
 {
-  struct ocfs2_refcount_rec *l, tmp;
+  struct ocfs2_refcount_rec *l;
   swap(l,tmp);
 }
minstruct.res
diff = 
--- tests/minstruct.c
+++ /tmp/cocci-output-25045-a197d2-minstruct.c
@@ -1,5 +1,7 @@
 static struct i2c_client client_template = {
-	.name 		= "(unset)",
+	.dev = {
+		.name = "(unset)",
+	},
 	.id 		= -1,
 	.driver 	= &i2c_driver_videotext
 };
minusdots.res
diff = 
--- tests/minusdots.c
+++ /tmp/cocci-output-25045-c9b49f-minusdots.c
@@ -1,9 +1,3 @@
 void main(int i) {
-  
-  if (!hostptr) {
-    if (hostptr) {
-      return -ESRCH;
-    }
-  }
 
 }
minusdots_ver1.res
diff = 
--- tests/minusdots_ver1.c
+++ /tmp/cocci-output-25045-708406-minusdots_ver1.c
@@ -1,6 +1,2 @@
 void main(int i) {
-  
-  if (!hostptr) {
-    i++;
-  }
 }
multi_func1.res
exn while in timeout_function
multi_initialize_finalize.res
exn while in timeout_function
multichars.res
warning: line 4: should ab be a metavariable?
diff = 
--- tests/multichars.c
+++ /tmp/cocci-output-25045-b39e1b-multichars.c
@@ -1,5 +1,5 @@
 int main () {
-  f('XYZ',ab);
-  f('X\nY',ab);
-  f('\n',ab);
+  f('XYZ',12);
+  f('X\nY',12);
+  f('\n',12);
 }
multidec.res
diff = 
--- tests/multidec.c
+++ /tmp/cocci-output-25045-80c14c-multidec.c
@@ -1,11 +1,6 @@
 int main () {
   int x = 3,z;
-  int x = 12;
-  int x = 12,y;
+  int y;
   int
-x
-=
-12
-,
 y;
 }
multidecl3.res
diff = 
--- tests/multidecl3.c
+++ /tmp/cocci-output-25045-c84301-multidecl3.c
@@ -1,17 +1,13 @@
 int main () {
-  int *i, i[12], i, k, r;
+  int k, r;
 }
 
 struct foo {
-  int *i, i[12], i, k, r;
-  int *i, i[12], i;
-  int *i;
+  int k, r;
 };
 
 int main () {
-  int *i, i[12], i;
 }
 
 struct foo {
-  int *i, i[12], i;
 };
multipath.res
diff = 
--- tests/multipath.c
+++ /tmp/cocci-output-25045-748286-multipath.c
@@ -2,8 +2,8 @@ static void multipathd(struct md_thread
 {
 	for (;;) {
 		if ((mp_bh->path = multipath_map (conf))<0) {
-			printk(KERN_ERR "multipath: %s: redirecting sector %llu"
-				" to another IO path\n",
+			printk("KERN_ERR %s: %s: redirecting sector %llu to another IO path\n",
+				__func__,
 				bdevname(bio->bi_bdev,b),
 				(unsigned long long)bio->bi_iter.bi_sector);
 		}
multiplus.res
warning: rule starting on line 3: metavariable T not used in the - or context code
diff = 
--- tests/multiplus.c
+++ /tmp/cocci-output-25045-af0ea0-multiplus.c
@@ -1,4 +1,4 @@
-static void xm_link_timer(void *arg)
+static void xm_link_timer(struct work_struct *work)
 {
 	struct net_device *dev = arg;
 	struct skge_port *skge = netdev_priv(arg);
multiremove.res
diff = 
--- tests/multiremove.c
+++ /tmp/cocci-output-25045-072a9b-multiremove.c
@@ -1,8 +1,5 @@
 int main () {
   if (x) { xyz1(); }
-  if (x) { foo(); abc(); }
   if (x) { xyz2(); }
-  if (x) { bar(); abc(); }
   if (x) { xyz3(); }
-  if (x) { foo(); abc(); bar(); bar(); foo(); }
 }
multistruct.res
diff = 
--- tests/multistruct.c
+++ /tmp/cocci-output-25045-d6abb6-multistruct.c
@@ -1,5 +1,3 @@
-struct one x;
 
-struct two y;
 
 struct three z;
multitype.res
diff = 
--- tests/multitype.c
+++ /tmp/cocci-output-25045-51ca1d-multitype.c
@@ -3,5 +3,5 @@ typedef struct foo { int a; } foo_t;
 int main() {
   foo_t * x;
   f(x->a);
-  g(x);
+  g(x, NULL);
 }
multitypedef.res
warning: non_delayed_fn: metavariable T not used in the - or context code
diff = 
--- tests/multitypedef.c
+++ /tmp/cocci-output-25045-a35b38-multitypedef.c
@@ -5,5 +5,5 @@ typedef struct HYSDN_CARD {
 int
 ergo_inithardware(hysdn_card * card)
 {
-	INIT_WORK(&card->irq_queue, ergo_irq_bh, card);
+	INIT_WORK(&card->irq_queue, ergo_irq_bh);
 }
multivars.res
diff = 
--- tests/multivars.c
+++ /tmp/cocci-output-25045-06af4b-multivars.c
@@ -1,5 +1,5 @@
 void main(int i) {
 
-  f(1+2+v.field1,1+2+v.field1);
+  h(1 + 2 + v.field1);
 
 }
na.res
diff = 
--- tests/na.c
+++ /tmp/cocci-output-25045-682271-na.c
@@ -4,10 +4,10 @@ void foo()
 {
   int i;
 
-  if (!i &  FOO) return;
-  !i & -FOO;
+  if (12) return;
+  12;
   !i & !FOO;
-  !i &  100;
-  !i & -100;
+  12;
+  12;
   !i & !100;
 }
nameless.res
diff = 
--- tests/nameless.c
+++ /tmp/cocci-output-25045-895875-nameless.c
@@ -1,6 +1,6 @@
 typedef union {
 int foo;
 } t_foo;
-typedef struct {
+typedef struct __COCCI__TMP__STRUCTNAME__ {
 int foo;
 } t_foo;
nest.res
warning: line 6: should hostno be a metavariable?
warning: line 18: should xxx be a metavariable?
diff = 
--- tests/nest.c
+++ /tmp/cocci-output-25045-7f2c2a-nest.c
@@ -1,7 +1,7 @@
 void info_func(int i) {
   foo();
   while (x) {
-    1+hostno+xxx;
-    2+hostno+xxx;
+    1+hostptr->host_no+hostptr->host_no;
+    2+hostptr->host_no+hostptr->host_no;
   }
 }
nestone.res
warning: one: metavariable S not used in the - or context code
diff = 
--- tests/nestone.c
+++ /tmp/cocci-output-25045-c7fd1b-nestone.c
@@ -1,4 +1,3 @@
 int foo() {
   if (x) { xxx(); return;}
-  yyy();
 }
nestseq.res
diff = 
--- tests/nestseq.c
+++ /tmp/cocci-output-25045-134663-nestseq.c
@@ -2,4 +2,5 @@ int main () {
   f();
   g(12);
   h();
+  xxx(12);
 }
neststruct.res
diff = 
--- tests/neststruct.c
+++ /tmp/cocci-output-25045-bb7930-neststruct.c
@@ -8,6 +8,6 @@ struct usb_hub {
 
 static int hub_configure(struct usb_hub *hub)
 {
-	hub->status = kmalloc(sizeof(*hub->status), GFP_KERNEL);
+	hub->status = kzalloc(sizeof(*hub->status), GFP_KERNEL);
 
 }
nl.res
warning: line 4: should x be a metavariable?
diff = 
--- tests/nl.c
+++ /tmp/cocci-output-25045-51d717-nl.c
@@ -1,4 +1,4 @@
 int main() {
-  if (x) return;
-  x = x + 1;
+  if (y) return;
+  y = y + 1;
 }
noa.res
diff = 
--- tests/noa.c
+++ /tmp/cocci-output-25045-14d633-noa.c
@@ -2,6 +2,6 @@ int main () {
   if (x) { a(); } else { a(); }
 }
 
-int tochange () {
+int has_no_a () {
   if (x) { a(); } else { x(); }
 }
nocast.res
diff = 
--- tests/nocast.c
+++ /tmp/cocci-output-25045-96a8fd-nocast.c
@@ -1,4 +1,4 @@
-int main (unsigned int __nocast gfp_mask, int x) {
+int main (gfp_t gfp_mask, int x) {
   buf = kmalloc(sizeof *send_buf + buf_size, gfp_mask);
 }
 
noret.res
diff = 
--- tests/noret.c
+++ /tmp/cocci-output-25045-fa962f-noret.c
@@ -1,18 +1,18 @@
-main (int x);
-static xmain (int x);
-inline ymain (int x);
+main (int x, int q);
+static xmain (int x, int q);
+inline ymain (int x, int q);
 
-main (int x) {
-  return x;
+main (int x, int q) {
+  return 12;
 }
 // foo
 
-static xmain (int y) {
-  return y;
+static xmain (int y, int q) {
+  return 12;
 }
 // xxx
 
-inline ymain (int y) {
-  return y;
+inline ymain (int y, int q) {
+  return 12;
 }
 // xxx
not.res
diff = 
--- tests/not.c
+++ /tmp/cocci-output-25045-0eb823-not.c
@@ -1,9 +1,9 @@
 int main() {
   int x;
-  this(12,x);
+  f(20);
   this(foo,x);
   bar(12,x);
   foo(12,x);
-  this(12,x);
-  this(12,x);
+  f(20);
+  f(20);
 }
notest.res
diff = 
--- tests/notest.c
+++ /tmp/cocci-output-25045-1bc075-notest.c
@@ -1,6 +1,6 @@
 int main() {
   struct foo *x;
   x = FN();
-  if (!x) return;
+  if (12) return;
   return;
 }
notnot.res
warning: line 6: should true be a metavariable?
warning: line 6: should false be a metavariable?
diff = 
--- tests/notnot.c
+++ /tmp/cocci-output-25045-0a19ce-notnot.c
@@ -1,4 +1,4 @@
 bool foo(int bar)
 {
-    return bar ? true : false;
+    return !!bar;
 }
noty.res
diff = 
--- tests/noty.c
+++ /tmp/cocci-output-25045-24c987-noty.c
@@ -1,3 +1,4 @@
 int main(int *x) {
   if (NULL == x) { return; }
+  g();
 }
noty2.res
diff = 
--- tests/noty2.c
+++ /tmp/cocci-output-25045-425303-noty2.c
@@ -1,14 +1,11 @@
 main () {
-  foo();
   return;
 }
 
 int main2 () {
-  foo();
   return;
 }
 
 blah_t main3 () {
-  foo();
   return;
 }
null_bool.res
warning: line 4: should x be a metavariable?
diff = 
--- tests/null_bool.c
+++ /tmp/cocci-output-25045-2b621f-null_bool.c
@@ -1,8 +1,8 @@
 int main () {
-  if (x != NULL) return;
-  if (a && x != NULL && b) return;
-  if (x) return;
-  if (a && x && b) return;
+  if (12) return;
+  if (a && 12 && b) return;
+  if (12) return;
+  if (a && 12 && b) return;
   x = x + 20;
 }
 
null_type.res
diff = 
--- tests/null_type.c
+++ /tmp/cocci-output-25045-3adac3-null_type.c
@@ -2,7 +2,7 @@ int main(int i) {
 
   int *x;
 
-  g(x);
-  g(NULL);
+  g(f(x));
+  g(f(NULL));
 
 }
oddifdef.res
warning: line 4: should x be a metavariable?
warning: line 6: should x be a metavariable?
diff = 
--- tests/oddifdef.c
+++ /tmp/cocci-output-25045-a021f2-oddifdef.c
@@ -7,9 +7,7 @@ void one () {
     a = 5;
 
 #ifdef FOO
-  x = 0;
 #else
-  x = 0;
 #endif
 }
 
@@ -22,9 +20,7 @@ void two() {
     a = 3;
 
 #ifdef FOO
-  x = 0;
 #else
-  x = 0;
 #endif
 }
 
@@ -37,8 +33,6 @@ void three() {
 #endif
 
 #ifdef FOO
-  x = 0;
 #else
-  x = 0;
 #endif
 }
of.res
diff = 
--- tests/of.c
+++ /tmp/cocci-output-25045-806231-of.c
@@ -1,16 +1,20 @@
 static struct iommu_table *iommu_table_find(struct iommu_table * tbl)
 {
 	for (node = NULL; (node = of_find_all_nodes(node)); ) {
-		if (x)
+		if (x) {
 			return it;
+			of_node_put(node);
+		}
 	}
 }
 
 static struct iommu_table *iommu_table_find(struct iommu_table * tbl)
 {
 	for (node = NULL; (node = something(node)); ) {
-		if (x)
+		if (x) {
+			of_node_put(node);
 			return it;
+		}
 	}
 }
 
oneline.res
diff = 
--- tests/oneline.c
+++ /tmp/cocci-output-25045-6663b7-oneline.c
@@ -1,4 +1,4 @@
 int main () {
-  f();
-  f();
+  g();
+  g();
 }
op.res
diff = 
--- tests/op.c
+++ /tmp/cocci-output-25045-9b28e1-op.c
@@ -1,5 +1,4 @@
 int main () {
-  return 3;
 }
 
 int main () {
opt.res
diff = 
--- tests/opt.c
+++ /tmp/cocci-output-25045-92018a-opt.c
@@ -1,3 +1,2 @@
 int main () {
-  yyy();
 }
optional_qualifier.res
diff = 
--- tests/optional_qualifier.c
+++ /tmp/cocci-output-25045-18f6ed-optional_qualifier.c
@@ -1,2 +1,2 @@
-int a;
+const int a;
 const int b;
optional_storage.res
diff = 
--- tests/optional_storage.c
+++ /tmp/cocci-output-25045-8de443-optional_storage.c
@@ -1,4 +1,4 @@
-int foo1(void)
+static int foo1(void)
 {
 }
 
orexp.res
diff = 
--- tests/orexp.c
+++ /tmp/cocci-output-25045-e3bd94-orexp.c
@@ -1,3 +1,3 @@
 int main() {
-  bar(12+12);
+  4;
 }
output.res
output_init.res
diff = 
--- tests/output_init.c
+++ /tmp/cocci-output-25045-0e0f38-output_init.c
@@ -1,3 +1,3 @@
 void f(void) {
-    f();
+    g();
 }
Hello world.
overshoot.res
warning: aaa: metavariable f not used in the - or context code
warning: xxx: metavariable f not used in the - or context code
diff = 
--- tests/overshoot.c
+++ /tmp/cocci-output-25045-c22ce7-overshoot.c
@@ -1,9 +1,6 @@
 int main () {
   a();
-  s();
-  d();
-  f();
-  b();
+  g();g();g();
   b();
   q();
 }
p1p2.res
warning: line 9: should errp be a metavariable?
warning: line 20: should errp be a metavariable?
diff = 
--- tests/p1p2.c
+++ /tmp/cocci-output-25045-513f2e-p1p2.c
@@ -1,3 +1,3 @@
-int main(int x, Error **errp);
+int __attribute__((nonnull(1))) main(int x, Error **errp);
 
-int main(int x, int y, Error **errp);
+int __attribute__((nonnull(2))) main(int x, int y, Error **errp);
p9.res
diff = 
--- tests/p9.c
+++ /tmp/cocci-output-25045-15a8a0-p9.c
@@ -1,3 +1,3 @@
-int f(int, int, int x) {
+int f(int v0, int v1, int x) {
   return x;
 }
pa.res
diff = 
--- tests/pa.c
+++ /tmp/cocci-output-25045-abadd4-pa.c
@@ -4,7 +4,8 @@ char *parse_args(const char *doing,
 		 unsigned num,
 		 s16 min_level,
 		 s16 max_level,
-		 int (*unknown)(char *param, char *val, const char *doing))
+		 void *arg,
+		 int (*unknown)(char *param, char *val, const char *doing, void *arg))
 {
   return 0;
 }
param.res
diff = 
--- tests/param.c
+++ /tmp/cocci-output-25045-41550c-param.c
@@ -1 +1 @@
-void foo() { return; }
+
param_end.res
warning: line 6: should x be a metavariable?
warning: line 14: should y be a metavariable?
diff = 
--- tests/param_end.c
+++ /tmp/cocci-output-25045-8baf36-param_end.c
@@ -1,15 +1,15 @@
-int one (int x) { return; }
+int one () { return; }
 
-int two (int a, int x, int b) { return; }
+int two (int a, int b) { return; }
 
-int three (int x, int a) { return; }
+int three (int a) { return; }
 
-int four (int a, int x) { return; }
+int four (int a) { return; }
 
-int yone (int y) { return; }
+int yone () { return; }
 
-int ytwo (int a, int y, int b) { return; }
+int ytwo (int a, int b) { return; }
 
-int ythree (int y, int a) { return; }
+int ythree (int a) { return; }
 
-int yfour (int a, int y) { return; }
+int yfour (int a) { return; }
param_to_exp.res
diff = 
--- tests/param_to_exp.c
+++ /tmp/cocci-output-25045-cbe757-param_to_exp.c
@@ -1,3 +1,4 @@
 int main (int x, int y) {
+  foo(x, y);
   return 0;
 }
param_ver1.res
diff = 
--- tests/param_ver1.c
+++ /tmp/cocci-output-25045-20bb8a-param_ver1.c
@@ -1 +1 @@
-void foo(int x) { return; }
+
parameters_dots.res
diff = 
--- tests/parameters_dots.c
+++ /tmp/cocci-output-25045-c3082d-parameters_dots.c
@@ -1,7 +1,4 @@
 void main(int i) {
 
-  f(1);
   g(3);
-  f(1,2);
-  f();
 }
parenmac.res
diff = 
--- tests/parenmac.c
+++ /tmp/cocci-output-25045-7f3128-parenmac.c
@@ -1 +1 @@
-#define TXSSZ(val)     (val<<4)
+#define TXSSZ(val)     ((val)<<4)
partial.res
warning: rule starting on line 1: metavariable S not used in the - or context code
diff = 
--- tests/partial.c
+++ /tmp/cocci-output-25045-397152-partial.c
@@ -1,3 +1,3 @@
 #define CS_THIS_MODULE THIS_MODULE,
 #define CS_OWNER owner:
-void cs46xx_null(struct pci_dev *pcidev) { return PAGE_SIZE; }
+void cs46xx_null(struct pci_dev *pcidev) { return PAGE_SIZE2; }
partialmd.res
diff = 
--- tests/partialmd.c
+++ /tmp/cocci-output-25045-3ef4ce-partialmd.c
@@ -1,3 +1,3 @@
 int main () {
-	int a,b,c;
+	int b,c;int q;
 }
partialmd2.res
diff = 
--- tests/partialmd2.c
+++ /tmp/cocci-output-25045-86b17d-partialmd2.c
@@ -1,3 +1,3 @@
 int main () {
-	int a,b,c;
+	int a,c;int q;
 }
partialmd3.res
diff = 
--- tests/partialmd3.c
+++ /tmp/cocci-output-25045-f1612a-partialmd3.c
@@ -1,3 +1,3 @@
 int main () {
-	int a,b,c;
+	int a,b;int q;
 }
pb_distribute_type.res
warning: line 6: should x be a metavariable?
diff = 
--- tests/pb_distribute_type.c
+++ /tmp/cocci-output-25045-a1b54a-pb_distribute_type.c
@@ -1,15 +1,15 @@
 int foo() {
-  int x;
+  int *x;
   return 0;
 }
 
 
 int foo() {
-  int *x;
+  int **x;
   return 0;
 }
 
 int foo() {
-  int x[45];
+  int[45] *x;
   return 0;
 }
pb_distribute_type2.res
warning: line 8: should x be a metavariable?
diff = 
--- tests/pb_distribute_type2.c
+++ /tmp/cocci-output-25045-7498b2-pb_distribute_type2.c
@@ -1,15 +1,15 @@
 int foo() {
-  int x;
+  int * x;
   return 0;
 }
 
 
 int foo() {
-  int *x;
+  int **x;
   return 0;
 }
 
 int foo() {
-  int x[45];
+  int x[45]*;
   return 0;
 }
pb_distribute_type3.res
warning: line 9: should x be a metavariable?
exn while in timeout_function
pb_distribute_type4.res
warning: line 8: should x be a metavariable?
diff = 
--- tests/pb_distribute_type4.c
+++ /tmp/cocci-output-25045-d781f5-pb_distribute_type4.c
@@ -1,15 +1,15 @@
 int foo() {
-  int x;
+  float x;
   return 0;
 }
 
 
 int foo() {
-  int *x;
+  float x;
   return 0;
 }
 
 int foo() {
-  int x[45];
+  float x;
   return 0;
 }
pb_params_iso.res
warning: line 23: should i be a metavariable?
diff = 
--- tests/pb_params_iso.c
+++ /tmp/cocci-output-25045-e947a1-pb_params_iso.c
@@ -1,17 +1,17 @@
 
-int f(bool a, int i, bool b) {
+int f(bool a, int i, char j, bool b) {
   i++;
 }
 
-int f(int i, bool b) {
+int f(int i, char j, bool b) {
   i++;
 }
 
-int f(bool a, int i) {
+int f(bool a, int i, char j) {
   i++;
 }
 
-int f(int i) {
+int f(int i, char j) {
   i++;
 }
 
pb_parsing_macro.res
diff = 
--- tests/pb_parsing_macro.c
+++ /tmp/cocci-output-25045-00fe2a-pb_parsing_macro.c
@@ -1,4 +1,4 @@
 #define FOO_METH_TEST(a) prefix_##a
 void FOO_METH_TEST(foo)(int x){
- alloca(x);
+ malloc(x);
 }
pb_tag_symbols.res
diff = 
--- tests/pb_tag_symbols.c
+++ /tmp/cocci-output-25045-85350d-pb_tag_symbols.c
@@ -1,5 +1,3 @@
 static int typhoon_ioctl(struct video_device *dev, unsigned int cmd, void *arg)
 {
-  if (copy_from_user(v,arg) != 0) 
-    return -EFAULT; else {}
 }
pcim.res
diff = 
--- tests/pcim.c
+++ /tmp/cocci-output-25045-d65a55-pcim.c
@@ -1,5 +1,6 @@
 int main () {
-		ctx->sensePA = pci_map_single(adapter->dev, cmd->sense_buffer,
+		ctx->sensePA = dma_map_single(&adapter->dev->dev,
+					      cmd->sense_buffer,
 					      SCSI_SENSE_BUFFERSIZE,
-					      PCI_DMA_FROMDEVICE);
+					      DMA_FROM_DEVICE);
 }
pcomma.res
diff = 
--- tests/pcomma.c
+++ /tmp/cocci-output-25045-e57abc-pcomma.c
@@ -1,14 +1,14 @@
-int main (int x) {}
+int main (char c, int x) {}
 
-int main (int *a, int x) {}
+int main (int *a, char c, int x) {}
 
-int main (int x, int *b) {}
+int main (char c, int x, int *b) {}
 
-int main (int *a, int x, int *b) {}
+int main (int *a, char c, int x, int *b) {}
 
 int f() {
-  f(e);
-  f(e,1);
-  f(0,e);
-  f(0,e,1);
+  f(12, e);
+  f(12, e,1);
+  f(0,12, e);
+  f(0,12, e,1);
 }
plus33.res
diff = 
--- tests/plus33.c
+++ /tmp/cocci-output-25045-c39271-plus33.c
@@ -1 +1,2 @@
+typedef double double3x3[3][3];
 int x;
pmac.res
diff = 
--- tests/pmac.c
+++ /tmp/cocci-output-25045-85b5e1-pmac.c
@@ -4,7 +4,5 @@
 #include <asm/feature.h>
 #endif
 
-#define chip_t pmac_t
-
 static int snd_pmac_register_sleep_notifier(pmac_t *chip);
 static int snd_pmac_unregister_sleep_notifier(pmac_t *chip);
poscon.res
exn while in timeout_function
posiso.res
diff = 
--- tests/posiso.c
+++ /tmp/cocci-output-25045-a0bcc4-posiso.c
@@ -1,9 +1,7 @@
 int main () {
   int *x;
-  if (x == NULL) x = a; else x = b;
   if (!x) x = a; else x = b;
   if (x == a) x = a; else x = b;
-  if (x == NULL) x = a;
   if (!x) x = a;
   if (x == a) x = a;
 }
positionc.res
diff = 
--- tests/positionc.c
+++ /tmp/cocci-output-25045-9f4a25-positionc.c
@@ -2,8 +2,6 @@ int main () {
   if (foo(6,7)) x = ret; else x = ret;
   if (foo(6,7)) x = ret; else x = ret;
   if (foo(7,7)) x = ret; else x = ret;
-  if (bar(6,7)) x = ret; else x = ret;
-  if (bar(6,7)) x = ret; else x = ret;
   if (bar(7,7)) x = ret; else x = ret;
 }
 
post.res
diff = 
--- tests/post.c
+++ /tmp/cocci-output-25045-2028ea-post.c
@@ -1,8 +1,6 @@
 int main() {
-  f(3, foo + bar, 5);
   f(4, 3, 5);
   f(4, 3, 5);
-  h(3, some + thing, 5);
   h(4, 3, 5);
   h(4, 3, 5);
 }
pragmatest1.res
diff = 
--- tests/pragmatest1.c
+++ /tmp/cocci-output-25045-f83d85-pragmatest1.c
@@ -1,3 +1 @@
-#pragma xxx a b c
 
-#pragma xxx (a, b, c)
print_return.res
warning: line 6: should link be a metavariable?
warning: rule starting on line 1: metavariable E not used in the - or context code
diff = 
--- tests/print_return.c
+++ /tmp/cocci-output-25045-f034b7-print_return.c
@@ -1,4 +1,3 @@
 int config(struct pcmcia_device *link) {
-  bar();
-  return 0;
+  return bar();
 }
proto.res
diff = 
--- tests/proto.c
+++ /tmp/cocci-output-25045-8e70e4-proto.c
@@ -1,10 +1,2 @@
 static void bch_l2l1(struct PStack *st, int pr, void *arg);
-static void bch_sched_event(struct BCState *bcs, int event);
 static void bch_empty_fifo(struct BCState *bcs, int count);
-
-static void
-bch_sched_event(struct BCState *bcs, int event)
-{
-	bcs->event |= 1 << event;
-	schedule_work(&bcs->work);
-}
proto2.res
diff = 
--- tests/proto2.c
+++ /tmp/cocci-output-25045-329d4d-proto2.c
@@ -1,10 +1,9 @@
 static void bch_l2l1(struct PStack *st, int pr, void *arg);
-static void bch_sched_event(struct BCState *bcs, int event);
+static void bch_sched_event(int event);
 static void bch_empty_fifo(struct BCState *bcs, int count);
 
 static void
-bch_sched_event(struct BCState *bcs, int event)
-{
+bch_sched_event(int event) {
 	bcs->event |= 1 << event;
 	schedule_work(&bcs->work);
 }
proto_ver1.res
diff = 
--- tests/proto_ver1.c
+++ /tmp/cocci-output-25045-8759c0-proto_ver1.c
@@ -1,10 +1,2 @@
 void bch_l2l1(struct PStack *st, int pr, void *arg);
-void bch_sched_event(struct BCState *bcs, int event);
 void bch_empty_fifo(struct BCState *bcs, int count);
-
-void
-bch_sched_event(struct BCState *bcs, int event)
-{
-	bcs->event |= 1 << event;
-	schedule_work(&bcs->work);
-}
proto_ver2.res
diff = 
--- tests/proto_ver2.c
+++ /tmp/cocci-output-25045-7306c6-proto_ver2.c
@@ -46,7 +46,6 @@ static inline void dch_int(struct IsdnCa
 static void __devinit dch_setstack(struct PStack *st, struct IsdnCardState *cs);
 static void __devinit dch_init(struct IsdnCardState *cs);
 static void bch_l2l1(struct PStack *st, int pr, void *arg);
-static void bch_sched_event(struct BCState *bcs, int event);
 static void bch_empty_fifo(struct BCState *bcs, int count);
 static void bch_fill_fifo(struct BCState *bcs);
 static void bch_int(struct IsdnCardState *cs, u_char hscx);
@@ -584,16 +583,6 @@ bch_l2l1(struct PStack *st, int pr, void
 }
 
 //----------------------------------------------------------
-// proceed with bottom half handler BChannel_bh()
-//----------------------------------------------------------
-static void
-bch_sched_event(struct BCState *bcs, int event)
-{
-	bcs->event |= 1 << event;
-	schedule_work(&bcs->work);
-}
-
-//----------------------------------------------------------
 // Read B channel fifo to receive buffer
 //----------------------------------------------------------
 static void
protoassert.res
diff = 
--- tests/protoassert.c
+++ /tmp/cocci-output-25045-6891aa-protoassert.c
@@ -1,6 +1,8 @@
 static unsigned mii_rd(ioaddr_t ioaddr,	u_char phyaddr, u_char phyreg);
 
+static struct pcmcia_driver ZZZ_driver = {
+  .owner = THIS_MODULE,
+};
 int init(void)
 {
-  foo();
 }
protox.res
warning: line 14: should x be a metavariable?
warning: line 16: should x be a metavariable?
ptrar.res
diff = 
--- tests/ptrar.c
+++ /tmp/cocci-output-25045-dfd7f3-ptrar.c
@@ -1,8 +1,8 @@
 int main () {
   struct foo *x;
   struct foo y[12];
-  *y = 4;
-  *x = 2;
-  a = sizeof x;
-  b = sizeof "foo";
+  *12 = 4;
+  *20 = 2;
+  a = sizeof 20;
+  b = sizeof 12;
 }
python_iteration.res
1 pending new file instances
0 pending original file instances

python_mdecl.res
warning: rule starting on line 14: inherited metavariable unbound not used in the -, +, or context code
     (ONCE) already tagged but only removed, so safe
diff = 
--- tests/python_mdecl.c
+++ /tmp/cocci-output-25045-cc76ab-python_mdecl.c
@@ -1,5 +1,4 @@
-int one () { if (c < 0) return 12; return x < 0; }
+
 int one () { return x < 0; }
 int one () { return rvw; }
 int two () { if (c < 0) return 21; return y; }
-int one () { int c; if (c) return 12; return x < 0; }
python_mdeclp.res
diff = 
--- tests/python_mdeclp.c
+++ /tmp/cocci-output-25045-32ef52-python_mdeclp.c
@@ -1,2 +1,2 @@
-int one() { return 1; }
+
 int two() { return 1; }
python_poscon.res
diff = 
--- tests/python_poscon.c
+++ /tmp/cocci-output-25045-1a64c8-python_poscon.c
@@ -2,8 +2,8 @@ int main () {
   f(0);
   g(0);
   g(0);
-  g(0);
-  g(0);
-  g(0);
-  g(0);
+  g(27);
+  g(27);
+  g(27);
+  g(27);
 }
qualifier.res
diff = 
--- tests/qualifier.c
+++ /tmp/cocci-output-25045-6851ed-qualifier.c
@@ -1,11 +1,11 @@
 int *foo(const int *i)
 {
-    return (int *)i;
+    return (survived_r1) i;
 }
 
 int *foo2(int *i)
 {
-    return (int *)i;
+    return i;
 }
 
 struct bar {
@@ -16,15 +16,15 @@ struct bar {
 int *baz(const struct bar *b)
 {
     if (b->i)
-        return (int *)&b->i;
+        return (survived_r1)&b->i;
     else
-        return (int *)&b->j[0];
+        return (survived_r1)&b->j[0];
 }
 
 int *baz2(struct bar *b)
 {
     if (b->i)
-        return (int *)&b->i;
+        return &b->i;
     else
-        return (int *)&b->j[0];
+    return &b->j[0];
 }
range.res
diff = 
--- tests/range.c
+++ /tmp/cocci-output-25045-be0e62-range.c
@@ -1,17 +1,8 @@
 int main() {
-	f(1);
-	f(1,2);
-	f(1,2,3);
 	f(1,2,3,4);
 	f(1,2,3,4,5);
-	g(1);
-	g(1,2);
-	g(1,2,3);
 	g(1,2,3,4);
 	g(1,2,3,4,5);
-	h(1);
-	h(1,2);
-	h(1,2,3);
 	h(1,2,3,4);
 	h(1,2,3,4,5);
 }
rcu3.res
diff = 
--- tests/rcu3.c
+++ /tmp/cocci-output-25045-69cd93-rcu3.c
@@ -3,6 +3,6 @@ static struct mtd_chip_driver *get_mtd_c
         struct list_head *pos;
         struct mtd_chip_driver *this;
 
-        this = list_entry(pos, typeof(*this), list);
-        this = list_entry(pos, struct foo, list);
+        this = list_entry(_X(pos), typeof(*this), list);
+        this = list_entry(_X(pos), struct foo, list);
 }
regexp.res
diff = 
--- tests/regexp.c
+++ /tmp/cocci-output-25045-fae487-regexp.c
@@ -1,9 +1,23 @@
 int main(void) {
 
 int foo;
+int foo_begins_by_foo;
+int foo_ends_by_foo;
+int foo_contains_foo;
+int foo_is_an_id;
 int bar;
+int bar_doesn_t_contain_foo;
+int bar_is_an_id;
 int foobar;
+int foobar_begins_by_foo;
+int foobar_contains_foo;
+int foobar_is_an_id;
 int barfoobar;
+int barfoobar_contains_foo;
+int barfoobar_is_an_id;
 int barfoo;
+int barfoo_ends_by_foo;
+int barfoo_contains_foo;
+int barfoo_is_an_id;
 
 }
regexp2.res
diff = 
--- tests/regexp2.c
+++ /tmp/cocci-output-25045-46e6ed-regexp2.c
@@ -2,9 +2,23 @@
 int main(void) {
 
 int t0 = FOO;
+int t0_equals_cst_that_begins_by_FOO;
+int t0_equals_cst_that_ends_by_FOO;
+int t0_equals_cst_that_contains_FOO;
+int t0_is_constant;
 int t1 = BAR;
+int t1_equals_cst_that_doesn_t_contain_FOO;
+int t1_is_constant;
 int t2 = FOOBAR;
+int t2_equals_cst_that_begins_by_FOO;
+int t2_equals_cst_that_contains_FOO;
+int t2_is_constant;
 int t3 = BARFOOBAR;
+int t3_equals_cst_that_contains_FOO;
+int t3_is_constant;
 int t4 = BARFOO;
+int t4_equals_cst_that_ends_by_FOO;
+int t4_equals_cst_that_contains_FOO;
+int t4_is_constant;
 
 }
regexp3.res
diff = 
--- tests/regexp3.c
+++ /tmp/cocci-output-25045-be44b6-regexp3.c
@@ -2,10 +2,27 @@
 int main(void) {
 
 char *t0 = "FOO";
+char *t0_equals_cst_that_begins_by_FOO;
+char *t0_equals_cst_that_ends_by_FOO;
+char *t0_equals_cst_that_contains_FOO;
+char *t0_is_constant;
 char *t1 = "BAR";
+char *t1_equals_cst_that_doesn_t_contain_FOO;
+char *t1_is_constant;
 char *t2 = "FOOBAR";
+char *t2_equals_cst_that_begins_by_FOO;
+char *t2_equals_cst_that_contains_FOO;
+char *t2_is_constant;
 char *t3 = "BARFOOBAR";
+char *t3_equals_cst_that_contains_FOO;
+char *t3_is_constant;
 char *t4 = "BARFOO";
+char *t4_equals_cst_that_ends_by_FOO;
+char *t4_equals_cst_that_contains_FOO;
+char *t4_is_constant;
 char *s0 = "%s";
+char *s0_is_a_format_for_at_least_a_string;
+char *s0_equals_cst_that_doesn_t_contain_FOO;
+char *s0_is_constant;
 
 }
rem1.res
diff = 
--- tests/rem1.c
+++ /tmp/cocci-output-25045-45047d-rem1.c
@@ -1,5 +1,4 @@
 int main () {
   xxx();
-  if (x) { foo(); }
   yyy();
 }
rem2.res
diff = 
--- tests/rem2.c
+++ /tmp/cocci-output-25045-15cd45-rem2.c
@@ -1,5 +1,4 @@
 int main () {
   xxx();
-  if (x) foo();
   yyy();
 }
remaft.res
diff = 
--- tests/remaft.c
+++ /tmp/cocci-output-25045-efabb5-remaft.c
@@ -1,8 +1,6 @@
 int main() {
 #ifdef BLAH
-  a();
 #endif
-  b();
   c()
 #ifdef BLAH
   ;
remcom.res
diff = 
--- tests/remcom.c
+++ /tmp/cocci-output-25045-7ec26f-remcom.c
@@ -3,20 +3,12 @@ asyncmeta_retry(
 	Operation		*op )
 {
 	if ( LogTest( LDAP_DEBUG_ANY ) ) {
-		char	buf[ SLAP_TEXT_BUFLEN ];
-
 		/* this lock is required; however,
 		 * it's invoked only when logging is on */
 			ldap_pvt_thread_mutex_lock( &mt->mt_uri_mutex );
-			snprintf( buf, sizeof( buf ),
-				  "retrying URI=\"%s\" DN=\"%s\"",
-				  mt->mt_uri,
-				  BER_BVISNULL( &msc->msc_bound_ndn ) ?
-				  "" : msc->msc_bound_ndn.bv_val );
+			Debug(LDAP_DEBUG_ANY, merged, op->o_log_prefix,
+			      candidate, mt->mt_uri,
+			      BER_BVISNULL(&msc->msc_bound_ndn) ? "" : msc->msc_bound_ndn.bv_val);
 			ldap_pvt_thread_mutex_unlock( &mt->mt_uri_mutex );
-
-			Debug( LDAP_DEBUG_ANY,
-			       "%s asyncmeta_retry[%d]: %s.\n",
-			       op->o_log_prefix, candidate, buf );
 	}
 }
remodif.res
diff = 
--- tests/remodif.c
+++ /tmp/cocci-output-25045-165df0-remodif.c
@@ -5,7 +5,7 @@ static int hexium_attach(struct saa7146_
 
 	DEB_EE("\n");
 
-	hexium = kzalloc(sizeof(struct hexium), GFP_KERNEL);
+	hexium = kzalloc(sizeof(*hexium), GFP_KERNEL);
 	hexium->i2c_adapter = (struct i2c_adapter) {
 		.name = "hexium gemini",
 	};
remove-code-in-branch1.res
diff = 
--- tests/remove-code-in-branch1.c
+++ /tmp/cocci-output-25045-147517-remove-code-in-branch1.c
@@ -1,7 +1,7 @@
 int main(void)
 {
 	if (a > 1)
-		c();
+		{}
 
 	return 0;
 }
remove_call.res
diff = 
--- tests/remove_call.c
+++ /tmp/cocci-output-25045-e2a9cd-remove_call.c
@@ -1,6 +1,2 @@
 int main () {
-  int x = 3 + FN() + FN();
-  x = 3 + FN() + FN();
-  FN();
-  return 3 + FN() + FN();
 }
remparam.res
diff = 
--- tests/remparam.c
+++ /tmp/cocci-output-25045-de6055-remparam.c
@@ -1,14 +1,14 @@
 static irqreturn_t
-snd_ad1889_interrupt(void *dev_id, int x,
-		     struct pt_regs *regs)
+snd_ad1889_interrupt(void *dev_id, int x
+		     )
 {
 
 	return IRQ_HANDLED;
 }
 
 static irqreturn_t
-snd_ad1889_interrupt(void *dev_id,
-		     struct pt_regs *regs)
+snd_ad1889_interrupt(void *dev_id
+		     )
 {
 
 	return IRQ_HANDLED;
rems.res
diff = 
--- tests/rems.c
+++ /tmp/cocci-output-25045-c3a31e-rems.c
@@ -1,5 +1,4 @@
 int main () {
   x();
-  if (x) a();
   y();
 }
rems1.res
diff = 
--- tests/rems1.c
+++ /tmp/cocci-output-25045-4b98d1-rems1.c
@@ -1,5 +1,4 @@
 int main () {
   x();
-  a();
   y();
 }
remstruct.res
warning: line 2: should mpuio_irq_chip be a metavariable?
warning: line 8: should xxx be a metavariable?
diff = 
--- tests/remstruct.c
+++ /tmp/cocci-output-25045-76bab6-remstruct.c
@@ -1,13 +1,4 @@
-static struct irqchip mpuio_irq_chip = {
-      .ack    = mpuio_ack_irq,
-      .mask   = mpuio_mask_irq,
-      .unmask = mpuio_unmask_irq
-};
 
-static struct irqchip xxx = {
-  .a = 12,
-  .b = 15,
-};
 
 int hello ( String input )
 {
replace_typedef.res
diff = 
--- tests/replace_typedef.c
+++ /tmp/cocci-output-25045-9f8dcd-replace_typedef.c
@@ -3,8 +3,8 @@ typedef struct foo { int x; } foo_t;
 typedef int int_t;
 
 int main() {
-  foo_t x;
-  int_t y;
+  struct foo x;
+  int y;
   x.x = 12;
   return x.x + y;
 }
reserved.res
diff = 
--- tests/reserved.c
+++ /tmp/cocci-output-25045-342b1c-reserved.c
@@ -1,7 +1,4 @@
 int main() {
-  f(1,1);
-  f(2,2,2);
-  f(3,3,3,3);
   f(1,2);
   f(2,3,2);
   f(3,4,3,3);
retest.res
diff = 
--- tests/retest.c
+++ /tmp/cocci-output-25045-431e3e-retest.c
@@ -1,6 +1,6 @@
 int main () {
   foo();
-  if (x)
+  if (f(x))
     return 3;
   bar();
 }
retmacro.res
diff = 
--- tests/retmacro.c
+++ /tmp/cocci-output-25045-5eace3-retmacro.c
@@ -1,6 +1,6 @@
 #define REG_PATTERN_TEST(R, M, W)                                        \
 {                                                                        \
-	for (pat = 0; pat < sizeof(test)/sizeof(test[0]); pat++) {        \
+	for (pat = 0; pat < ARRAY_SIZE(test); pat++) {        \
 		if (value != (test[pat] & W & M)) {                       \
 			return 1;                                        \
 		}                                                        \
@@ -10,7 +10,7 @@
 
 #define REG_PATTERN_TEST2(R, M, W)                                        \
 {                                                                        \
-	for (pat = 0; pat < sizeof(test)/sizeof(test[0]); pat++) {        \
+	for (pat = 0; pat < ARRAY_SIZE(test); pat++) {        \
 		if (value != (test[pat] & W & M)) {                       \
 		}                                                        \
 	}                                                                \
rets.res
return.res
warning: rule starting on line 18: metavariable S not used in the - or context code
diff = 
--- tests/return.c
+++ /tmp/cocci-output-25045-6f74f5-return.c
@@ -1,6 +1,9 @@
 void foo(int y) {
   int x;
-  if (x) { aaa(); bbb(); return; }
-  if (x) { aaa(); bbb(); return; }
+  if (x) { aaa(); bbb(); before_return();
+    return; }
+  if (x) { aaa(); bbb(); before_return();
+    return; }
   ccc();
+  before_return();
 }
return_implicit.res
diff = 
--- tests/return_implicit.c
+++ /tmp/cocci-output-25045-5d1c60-return_implicit.c
@@ -1,4 +1,5 @@
 void main(void)
 {
 	foo();
+	return -ENODEV;
 }
retval.res
diff = 
--- tests/retval.c
+++ /tmp/cocci-output-25045-5fd960-retval.c
@@ -1,21 +1,15 @@
 int main () {
   if (retval1) {
-    if (retval2 != -ENODEV) {
-      foo();
-      return 3;
-    }
-    bar();
+    foo();
+    return 3;
   }
   return 6;
 }
 
 int second () {
   if (retval1) {
-    if (retval2 != -ENODEV) {
-      foo();
-      goto out;
-    }
-    bar();
+    foo();
+    goto out;
   }
 out:
   return 6;
retval2.res
diff = 
--- tests/retval2.c
+++ /tmp/cocci-output-25045-61cbf9-retval2.c
@@ -11,7 +11,7 @@ int getlen(int *input, size_t maxlen, in
   return -1;
 }
 
-int getlen(int *input, size_t maxlen, int delim, size_t *result) {
+int newname(int *input, size_t maxlen, int delim, size_t *result) {
   size_t i;
   for (i = 0; i < maxlen; ++i) {
     if (input[i] == delim) {
reusevar.res
warning: rule starting on line 8: metavariable p1 not used in the - or context code
diff = 
--- tests/reusevar.c
+++ /tmp/cocci-output-25045-88290b-reusevar.c
@@ -1,8 +1,5 @@
 int main () {
-  f(x);
-  f(q);
-  f(x);
-  f(q);
-  f(x);
-  f(q);
+  g(x);
+  g(x);
+  g(x);
 }
roa.res
diff = 
--- tests/roa.c
+++ /tmp/cocci-output-25045-08441c-roa.c
@@ -1,10 +1,10 @@
-struct arm_delay_ops arm_delay_ops __ro_after_init = {
+struct found used __ro_after_init = {
   .delay          = __loop_delay,
   .const_udelay   = __loop_const_udelay,
   .udelay         = __loop_udelay,
 };
 
-struct arm_delay_ops2 arm_delay_ops2 = {
+struct arm_delay_ops2 used = {
   .delay          = __loop_delay,
   .const_udelay   = __loop_const_udelay,
   .udelay         = __loop_udelay,
rptr.res
diff = 
--- tests/rptr.c
+++ /tmp/cocci-output-25045-2d1251-rptr.c
@@ -1,6 +1,4 @@
 int foo(struct resource *r)
 {
-  if (r == NULL)
-    return 0;
   return 1;
 }
same_expr.res
diff = 
--- tests/same_expr.c
+++ /tmp/cocci-output-25045-2486f7-same_expr.c
@@ -1,6 +1,5 @@
 void main(int i)
 {
-	f(1,1);
 	f(1,2);
 	
 }
scope_problem.res
diff = 
--- tests/scope_problem.c
+++ /tmp/cocci-output-25045-402c42-scope_problem.c
@@ -1,15 +1,7 @@
 void main(int i) {
-
-  int a;
-  foo(a);
-  a = 1;
-
   if(1) {
     int a;
-    a = 2;
   }
 
-  a = 3;
-
 
 }
sd_2.res
diff = 
--- tests/sd_2.c
+++ /tmp/cocci-output-25045-998a08-sd_2.c
@@ -1 +1 @@
- struct particle_data_extra { MyFloat Mass; };
+ struct particle_data_extra { MyFloat *Mass; };
serio.res
shared_brace.res
warning: rule starting on line 1: metavariable S not used in the - or context code
warning: rule starting on line 1: metavariable x not used in the - or context code
warning: rule starting on line 1: metavariable T not used in the - or context code
diff = 
--- tests/shared_brace.c
+++ /tmp/cocci-output-25045-afc15e-shared_brace.c
@@ -1,9 +1,7 @@
 
 int __init ixj_init(void)
 {
-	if (pci_present()) {
-		if ((probe = ixj_probe_pci(&cnt)) < 0) {
-		  return probe;
-		}
-	}
+	if ((probe = ixj_probe_pci(&cnt)) < 0) {
+		return probe;
+	      }
 }
signed.res
warning: line 4: should x be a metavariable?
warning: line 10: should a be a metavariable?
diff = 
--- tests/signed.c
+++ /tmp/cocci-output-25045-750ad0-signed.c
@@ -1,5 +1,5 @@
 int main() {
-  signed x;
-  unsigned a;
+  signed y;
+  unsigned b;
   return x;
 }
sis.res
diff = 
--- tests/sis.c
+++ /tmp/cocci-output-25045-e3a181-sis.c
@@ -1,4 +1,4 @@
-DECLARE_MUTEX(disconnect_sem);
+DEFINE_MUTEX(disconnect_sem);
 /*int foo() { return; }*/
 // if uncomment, and erase newline, then have Line ID EOF and
 // some patterns in parsing_hacks don't apply anymore :(
sizeof.res
diff = 
--- tests/sizeof.c
+++ /tmp/cocci-output-25045-521ece-sizeof.c
@@ -1,7 +1,7 @@
 int main (int param) {
 
-  int i = sizeof(3);
-  int j = sizeof 3;
+  int i = sizeof(int);
+  int j = sizeof(int);
   int k = sizeof (int *);
 
 }
sizeof_julia.res
diff = 
--- tests/sizeof_julia.c
+++ /tmp/cocci-output-25045-b00944-sizeof_julia.c
@@ -1,5 +1,5 @@
 static int typhoon_ioctl(struct video_device *dev, unsigned int cmd,
 void *arg)
 {
-   copy_from_user(&v, arg, sizeof(v));
+   foo();
 }
sizeptr.res
diff = 
--- tests/sizeptr.c
+++ /tmp/cocci-output-25045-ad64d3-sizeptr.c
@@ -5,7 +5,7 @@ int main () {
   ssize_t b;
   ptrdiff_t c;
 
-  foo(sizeof *x,a);
-  foo(*x,b);
-  foo(x-y,c);
+  foo(ASIZE(sizeof ANINT(*x)),ASIZE(a));
+  foo(ANINT(*x),ASSIZE(b));
+  foo(APTRDIFF(x - y),APTRDIFF(c));
 }
sizestar.res
diff = 
--- tests/sizestar.c
+++ /tmp/cocci-output-25045-f0547a-sizestar.c
@@ -1,7 +1,7 @@
 int main () {
   max = num_var_ranges;
   if (fcount == NULL) {
-    fcount = kzalloc(max * sizeof *fcount, GFP_KERNEL);
+    fcount = kzalloc(max, sizeof *fcount, GFP_KERNEL);
     if (!fcount)
       return -ENOMEM;
     FILE_FCOUNT(file) = fcount;
skip.res
diff = 
--- tests/skip.c
+++ /tmp/cocci-output-25045-9dd763-skip.c
@@ -1,5 +1,3 @@
 int main () {
-  f(1);
-  f(2);
-  g();
+  h();
 }
sl2.res
diff = 
--- tests/sl2.c
+++ /tmp/cocci-output-25045-2f71e6-sl2.c
@@ -1,11 +1,14 @@
 int main () {
+  something();
+  others();
+  more();
+}
+
+int other () {
   one();
   two();
   one();
   two();
-}
-
-int other () {
   one();
   two();
   one();
slen.res
exn while in timeout_function
smallfn.res
diff = 
--- tests/smallfn.c
+++ /tmp/cocci-output-25045-cc2a5f-smallfn.c
@@ -1,30 +1,65 @@
 int main () {
   if (y) {
-    one();
+    {
+      one();
+      foo();
+    }
+    foo();
   }
   else {
-    two();
+    {
+      two();
+      foo();
+    }
+    foo();
   }
+  foo();
   while (y) {
-    one();
+    {
+      one();
+      foo();
+    }
+    foo();
+  }
+  foo();
+  {
+    do {
+      one();
+      foo();
+    }
+    foo(); while(y);
+    foo();
   }
-  do {
-    one();
-  } while(y);
   switch (y) {
-  case 12:one();
-  case 27:two();
+  case 12:
+    foo();one();
+    foo();
+  case 27:
+    foo();two();
+    foo();
   }
+  foo();
   {
     one();
+    foo();
   }
+  foo();
 }
 
 int main () {
   if (y) {
-    one();
+    {
+      one();
+      foo();
+    }
+    foo();
   }
   else {
-    two();
+    {
+      two();
+      foo();
+	      }
+    foo();
       }
+      foo();
 }
sp.res
diff = 
--- tests/sp.c
+++ /tmp/cocci-output-25045-9ed936-sp.c
@@ -1,4 +1,4 @@
-typedef struct {
+struct name {
 	unsigned long gcr;
 	struct pci_dev *pci;
-} snd_card_als4000_t;
+};
spaces.res
spacing.res
diff = 
--- tests/spacing.c
+++ /tmp/cocci-output-25045-6d9fe1-spacing.c
@@ -1,8 +1,21 @@
 typedef int *foo;
 
+void *bar(int *baz)
+{
+	return baz;
+}
+
 int f(int x) {
   one();
   if (x) {
     two();
+    if (y) {
+      test();
+    }
   }
 }
+
+void *bar(int *baz)
+{
+  return baz;
+}
spl.res
diff = 
--- tests/spl.c
+++ /tmp/cocci-output-25045-17957f-spl.c
@@ -2,11 +2,13 @@ int main() {
   spin_lock(&isp116x->lock);
   /* take idle endpoints out of the schedule */
   if (!list_empty(&ep->hep->urb_list)) {
+    spin_unlock(&isp116x->lock);
     return;
   }
 
   /* async deschedule */
   if (!list_empty(&ep->schedule)) {
+    spin_unlock(&isp116x->lock);
     return;
   }
 }
starprint.res
diff = 
--- tests/starprint.c
+++ /tmp/cocci-output-25045-eea6fb-starprint.c
@@ -1,6 +1,6 @@
 typedef int *LPINT;
 
-int foo(LPINT x, LPINT *y)
+int foo(int *x, int **y)
 {
     return *x == **y;
 }
static.res
diff = 
--- tests/static.c
+++ /tmp/cocci-output-25045-a1725d-static.c
@@ -1,4 +1,3 @@
 static inline int i8042_read_data(void)
 {
-	return jazz_kh->data;
 }
stm1.res
stm10.res
diff = 
--- tests/stm10.c
+++ /tmp/cocci-output-25045-f80b15-stm10.c
@@ -1,6 +1,7 @@
 int main(int x) {
   f();
   if (x) replace();
+  h();
   g();
   if (x) replace();
 }
stm10_ver1.res
diff = 
--- tests/stm10_ver1.c
+++ /tmp/cocci-output-25045-579be5-stm10_ver1.c
@@ -1,5 +1,6 @@
 int main(int x) {
   f();
   { replace(); replace();}
+  h();
   g();
 }
stm2.res
diff = 
--- tests/stm2.c
+++ /tmp/cocci-output-25045-b5a8ec-stm2.c
@@ -1,5 +1,4 @@
 int main(int x) {
   f();
-  replace();
   g();
 }
stm3.res
diff = 
--- tests/stm3.c
+++ /tmp/cocci-output-25045-1d66d5-stm3.c
@@ -1,5 +1,5 @@
 int main(int x) {
   f();
-  replace();
+  g();
   g();
 }
stm4.res
diff = 
--- tests/stm4.c
+++ /tmp/cocci-output-25045-236ff5-stm4.c
@@ -2,4 +2,5 @@ int main(int x) {
   f();
   replace();
   g();
+  g();
 }
stm5.res
diff = 
--- tests/stm5.c
+++ /tmp/cocci-output-25045-16bb72-stm5.c
@@ -1,5 +1,7 @@
 int main(int x) {
   f();
+  h();
   replace();
   g();
+  g();
 }
stm6.res
diff = 
--- tests/stm6.c
+++ /tmp/cocci-output-25045-c8fbe8-stm6.c
@@ -1,5 +1,6 @@
 int main(int x) {
   f();
+  h();
   replace();
   g();
 }
stm7.res
stm8.res
diff = 
--- tests/stm8.c
+++ /tmp/cocci-output-25045-27ded8-stm8.c
@@ -1,5 +1,5 @@
 int main(int x) {
   f();
-  replace();
+  g(); replace();
   g();
 }
stmt.res
diff = 
--- tests/stmt.c
+++ /tmp/cocci-output-25045-b08053-stmt.c
@@ -1,4 +1,5 @@
 int f() {
   int x;
+  foo();
   xxx();
 }
str_init.res
warning: line 4: should x be a metavariable?
diff = 
--- tests/str_init.c
+++ /tmp/cocci-output-25045-11cec6-str_init.c
@@ -1,7 +1,3 @@
 struct foo x = {
-  .aaa = 5,
-  .rrr = 1,
   .xxx= 12,
-  .bbb = 2,
-  .ccc = 4,
 };
strangeorder.res
warning: rule starting on line 1: metavariable f not used in the - or context code
diff = 
--- tests/strangeorder.c
+++ /tmp/cocci-output-25045-8b1e9d-strangeorder.c
@@ -4,8 +4,10 @@ i2c_new_device(struct i2c_adapter *adap,
 	struct i2c_client	*client;
 
 	client = kzalloc(sizeof *client, GFP_KERNEL);
-	if (!client)
+	if (!client) {
+		client = NULL;
 		return NULL;
+	}
 
 	client->adapter = adap;
 	if (status < 0) {
strid.res
diff = 
--- tests/strid.c
+++ /tmp/cocci-output-25045-d5fc51-strid.c
@@ -1,4 +1,4 @@
 int main () {
   struct foo *a;
-  print(a);
+  print(f(a, 12));
 }
strid2.res
diff = 
--- tests/strid2.c
+++ /tmp/cocci-output-25045-791791-strid2.c
@@ -3,8 +3,8 @@ int main () {
   enum foo1 *b;
   struct foo a1;
   enum foo1 b1;
-  print(a);
-  print(b);
+  print(f(a, 12));
+  print(f(b, 12));
   print(a1.x);
   print(b1);
 }
string.res
struct.res
diff = 
--- tests/struct.c
+++ /tmp/cocci-output-25045-614f8f-struct.c
@@ -8,7 +8,5 @@ struct foo {
 
 int main() {
   struct foo *a;
-  f(a->first);
-  f(a->second);
 }
 
struct_metavar.res
diff = 
--- tests/struct_metavar.c
+++ /tmp/cocci-output-25045-940d2e-struct_metavar.c
@@ -9,9 +9,6 @@ struct foo {
 int main() {
   struct foo *a;
   struct notfoo *b;
-  f(a->first);
-  f(a->second);
-  f(a->second);
   f(b->first);
   f(b->second);
 }
struct_typedef.res
diff = 
--- tests/struct_typedef.c
+++ /tmp/cocci-output-25045-f5735f-struct_typedef.c
@@ -1,5 +1,5 @@
-typedef struct dvb_frontend {
-	struct dvb_frontend_ops* ops;
+typedef struct dvb2_frontend {
+	struct dvb_frontend_ops ops;
 } xx_t;
 
 typedef struct {
structfoo.res
warning: line 5: should my_foo be a metavariable?
diff = 
--- tests/structfoo.c
+++ /tmp/cocci-output-25045-f00200-structfoo.c
@@ -1,4 +1 @@
-struct foo my_foo[] = {
-.a = 1,
-.u.b = 42,
-};
+FOO(1, 42);
substruct.res
diff = 
--- tests/substruct.c
+++ /tmp/cocci-output-25045-77b1ed-substruct.c
@@ -1,5 +1,5 @@
 struct a { int a; } x[2] =
 {
-  { .a = 7, },
-  { .a = 17, },
+  { DECLARE_A(7), },
+  { DECLARE_A(17), },
 };
sw.res
diff = 
--- tests/sw.c
+++ /tmp/cocci-output-25045-ef9a46-sw.c
@@ -1 +1 @@
-int f() { switch (x) { case FOO: return; } }
+
swap3.res
diff = 
--- tests/swap3.c
+++ /tmp/cocci-output-25045-b594ac-swap3.c
@@ -2,7 +2,7 @@ static void __ar955x_tx_iq_cal_sort(stru
 				    struct coeff *coeff,
 				    int i, int nmeasurement)
 {
-	int im, ix, iy, temp;
+	int im, ix, iy;
 
 	for (iy = ix + 1; iy <= MAXIQCAL - 1; iy++) {
 //	if ( iy <= MAXIQCAL - 1) {
switch.res
diff = 
--- tests/switch.c
+++ /tmp/cocci-output-25045-31b252-switch.c
@@ -3,6 +3,5 @@ int main () {
   default:
     break;
   case X:
-    f();
   }
 }
switchdecl.res
warning: switch_1: metavariable S_1 not used in the - or context code
diff = 
--- tests/switchdecl.c
+++ /tmp/cocci-output-25045-471525-switchdecl.c
@@ -4,7 +4,7 @@ switch (2)
    {
      int x;
      int x;
-   case 2: x=y;
+   case 2:
            break;
 
    case 4: j++;
symbol.res
warning: line 12: should g be a metavariable?
diff = 
--- tests/symbol.c
+++ /tmp/cocci-output-25045-1e203d-symbol.c
@@ -1,7 +1,5 @@
 int main() {
   int f = 0;
 
-  f = 3;
-
   return f;
 }
td.res
diff = 
--- tests/td.c
+++ /tmp/cocci-output-25045-79c59b-td.c
@@ -1,5 +1,5 @@
-struct foo {int a;};
+struct foo {int b;};
 
-typedef struct blah {int a;} name;
+typedef struct blah {int b;} name;
 
-typedef struct {int a;} xxx;
+typedef struct {int b;} xxx;
tdnl.res
diff = 
--- tests/tdnl.c
+++ /tmp/cocci-output-25045-776e9a-tdnl.c
@@ -4,5 +4,4 @@ void main() {
     
 
     td2.attr;
-  foo();
 }
tdplus.res
diff = 
--- tests/tdplus.c
+++ /tmp/cocci-output-25045-343d02-tdplus.c
@@ -1 +1 @@
-typedef int (*filler_t)(int, int);
+typedef int (*filler_t)(int, struct address_space *, int);
tern.res
diff = 
--- tests/tern.c
+++ /tmp/cocci-output-25045-be9345-tern.c
@@ -1,4 +1,4 @@
 int main () {
-	return (wc >= 0 && wc <= 0x7f ? wc : 0x7f);
+	return wc >= 0 && wc <= 0x7f ? wc : 0x7f;
 }
 
test0.res
diff = 
--- tests/test0.c
+++ /tmp/cocci-output-25045-16f879-test0.c
@@ -1,5 +1,3 @@
 int main(int i) { 
-  f(1);
   f(2);
-  f(1);
 }
test1.res
diff = 
--- tests/test1.c
+++ /tmp/cocci-output-25045-45eda0-test1.c
@@ -6,9 +6,9 @@ void main(int foo) {
   x();
   if(1) {
     //    h(3);
-    h(3);
+    h(1, 3, 2);
   } else {
-    h(4);
+    h(1, 4, 2);
   }
 
   
test10.res
test10_ver1.res
diff = 
--- tests/test10_ver1.c
+++ /tmp/cocci-output-25045-41832a-test10_ver1.c
@@ -3,7 +3,7 @@ void main(int i) {
   f(1);
   g(1);
   //g(1);
-  h(1);
+  h(1, 1);
   h(1);
 
 }
test11.res
test11_ver1.res
diff = 
--- tests/test11_ver1.c
+++ /tmp/cocci-output-25045-13877d-test11_ver1.c
@@ -2,6 +2,6 @@ void main(int i) {
   f(1);
   g(1);
   //g(1);
-  h(1);
+  h(1, 1);
 
 }
test12.res
diff = 
--- tests/test12.c
+++ /tmp/cocci-output-25045-8a723e-test12.c
@@ -1,6 +1,6 @@
 void main(int foo) {
   
-  f(1);
+  f(1, 2);
   foo();
   g(2);
 
test2.res
diff = 
--- tests/test2.c
+++ /tmp/cocci-output-25045-70fd7b-test2.c
@@ -2,7 +2,7 @@ void main()
 {
   f(1,2,3);
   if(1) 
-    g(1);
+    h(1);
   else 
-    g(1);
+    h(1);
 }
test3.res
diff = 
--- tests/test3.c
+++ /tmp/cocci-output-25045-9d10e8-test3.c
@@ -4,7 +4,7 @@ void main()
   f(3);
 
   if(1) 
-    g(1);
+    h(3, 1);
   else 
-    g(2);
+    h(3, 2);
 }
test4.res
diff = 
--- tests/test4.c
+++ /tmp/cocci-output-25045-58f9bd-test4.c
@@ -1,7 +1,6 @@
 void main()
 {
   f(1,2,3);
-  h(1);
   if(1) 
     g(1);
   else 
test5.res
diff = 
--- tests/test5.c
+++ /tmp/cocci-output-25045-888c96-test5.c
@@ -12,9 +12,9 @@ void main() {
   f(1);
   
   if(1) {
-    g(1);
+    h(1);
   } else {
-    g(1);
+    h(1);
   }
 
   // g(1);  // if  add this then the CTL even with the direct path will this time
test5_ver1.res
diff = 
--- tests/test5_ver1.c
+++ /tmp/cocci-output-25045-ebac47-test5_ver1.c
@@ -12,9 +12,9 @@ void main() {
   f(1);
   
   if(1) {
-    g(1);
+    h(1);
   } else {
-    g(1);
+    h(1);
   }
 
   g(1);  // if  add this then the CTL even with the direct path will this time
test6.res
diff = 
--- tests/test6.c
+++ /tmp/cocci-output-25045-a27bc3-test6.c
@@ -4,13 +4,13 @@ void main()
 {
   /* a comment */
 
-  f(4) + f(5);
+  f(4, "foo") + f(5, "foo");
 
   //f(f(3)); // if uncomment, should have the warning "already minused token"
-  if(f(1))
-    f(1);
+  if(f(1, "foo"))
+    f(1, "foo");
   else
-    f(2);
+    f(2, "foo");
 
   if(1) 
     g(1);
@@ -20,7 +20,7 @@ void main()
 
 
 void mainbis() {
-  f(10);
+  f(10, "foo");
 }
 
 
test7.res
diff = 
--- tests/test7.c
+++ /tmp/cocci-output-25045-57a85f-test7.c
@@ -2,10 +2,12 @@ void main()
 {
 
   if(1) {
-    f(1);
+    f(1, "foo");
+    f(1, "bar");
   }
 
-  f(3);
+  f(3, "foo");
+  f(3, "bar");
 
   /* nice comment */
 }
test8.res
diff = 
--- tests/test8.c
+++ /tmp/cocci-output-25045-af9e65-test8.c
@@ -1,7 +1,6 @@
-void main(int foo) {
+void main(char i, int foo) {
   
   float k;
-  int i;
   float j;
 
   {
test9.res
diff = 
--- tests/test9.c
+++ /tmp/cocci-output-25045-c84a28-test9.c
@@ -4,9 +4,9 @@ void main(int foo) {
 //  f(1); // if uncomment then problems
   g(2);
   if(1) {
-    h(3);
+    h(1, 3);
   } else {
-    h(4);
+    h(1, 4);
   }
 
 // if uncomment then problems
test_s.res
diff = 
--- tests/test_s.c
+++ /tmp/cocci-output-25045-b4069d-test_s.c
@@ -2,7 +2,7 @@ int main () {
   if (x-one) {
     one();
   }
-  if (x-two) {
+  if (12) {
     one();
     two();
   }
@@ -11,7 +11,7 @@ int main () {
     two();
     three();
   }
-  if (two) {
+  if (12) {
     while (x) {
       one();
     }
test_unsigned_meta.res
warning: line 6: should x be a metavariable?
warning: line 13: should y be a metavariable?
warning: line 19: should q be a metavariable?
warning: line 28: should m be a metavariable?
warning: line 33: should x be a metavariable?
warning: line 39: should y be a metavariable?
diff = 
--- tests/test_unsigned_meta.c
+++ /tmp/cocci-output-25045-2e97c2-test_unsigned_meta.c
@@ -1,8 +1,12 @@
 int main () {
-  unsigned int x;
-  signed int y;
+  signed int x;
+  char new_x;
+  unsigned int y;
+  char new_y;
   unsigned char q;
-  char m;
+  char r;
+  unsigned char s1;
+  signed char s2;
   return 0;
 }
 
testand.res
diff = 
--- tests/testand.c
+++ /tmp/cocci-output-25045-b9682d-testand.c
@@ -1,5 +1,5 @@
 int main () {
   f(1,2,3,4);
-  f(3,4,8,9);
-  f(8,9,3,4);
+  f(4,4,15,9);
+  f(15,9,4,4);
 }
testand2.res
diff = 
--- tests/testand2.c
+++ /tmp/cocci-output-25045-ec4f4e-testand2.c
@@ -1,6 +1,6 @@
 int main () {
   f(1,2,3,4);
-  f(3,4,8,9);
+  m(3,4,80,9);
   g(8,9,3,4);
 }
 
three_types.res
diff = 
--- tests/three_types.c
+++ /tmp/cocci-output-25045-f7da97-three_types.c
@@ -7,5 +7,5 @@ via_init_dmablit(drm_device_t *dev)
 {
 	drm_via_blitq_t *blitq;
 
-	INIT_WORK(&blitq->wq, via_dmablit_workqueue,blitq);
+	INIT_WORK(&blitq->wq, via_dmablit_workqueue);
 }
threea.res
diff = 
--- tests/threea.c
+++ /tmp/cocci-output-25045-46caff-threea.c
@@ -1,4 +1,3 @@
 int main() {
   f(12);
-  q(12);
 }
top.res
diff = 
--- tests/top.c
+++ /tmp/cocci-output-25045-0ddd39-top.c
@@ -1 +1 @@
-MODULE_PARM(suppress_pollack, "i");
+module_param(I, int, 0);
topdec.res
diff = 
--- tests/topdec.c
+++ /tmp/cocci-output-25045-dda9f9-topdec.c
@@ -5,4 +5,5 @@ static int debug;
 /* Network device part of the driver */
 
 static LIST_HEAD(tun_dev_list);
-static struct ethtool_ops tun_ethtool_ops;
+static const struct ethtool_ops tun_ethtool_ops;
+
topdec_ver1.res
diff = 
--- tests/topdec_ver1.c
+++ /tmp/cocci-output-25045-91a4db-topdec_ver1.c
@@ -2,6 +2,5 @@
 static int debug;
 #endif
 
-/* Network device part of the driver */
+static const struct ethtool_ops tun_ethtool_ops;
 
-static struct ethtool_ops tun_ethtool_ops;
topdec_ver2.res
diff = 
--- tests/topdec_ver2.c
+++ /tmp/cocci-output-25045-3abd6b-topdec_ver2.c
@@ -5,4 +5,5 @@ static int debug;
 /* Network device part of the driver */
 
 int x;
-static struct ethtool_ops tun_ethtool_ops;
+static const struct ethtool_ops tun_ethtool_ops;
+
toplevel_macrostmt.res
diff = 
--- tests/toplevel_macrostmt.c
+++ /tmp/cocci-output-25045-5bc829-toplevel_macrostmt.c
@@ -2,7 +2,7 @@ void main(int i)
 {
 }
 
-MODULE_PARM(x,y);
+module_param(x, int, y);
 MODULE_AUTHOR("me");
 
 
toplevel_struct.res
warning: line 5: should usb_stor_host_template be a metavariable?
diff = 
--- tests/toplevel_struct.c
+++ /tmp/cocci-output-25045-2d58ba-toplevel_struct.c
@@ -3,6 +3,7 @@ struct SHT usb_stor_host_template = {
 	.name =				"usb-storage",
 	.proc_name =			"usb-storage",
 	.proc_info2 =			usb_storage_proc_info2,
+	.foo = 12,
 	.proc_info =			usb_storage_proc_info,
 	.proc_dir =			NULL,
 	.info =				usb_storage_info,
@@ -72,11 +73,11 @@ unsigned char usb_stor_sense_notready[18
 
 
 void usb_storage_proc_info(int i) {
-  f(1);
+  g(1);
 }
 
 void usb_storage_proc_info2(int i) {
-  f(27);
+  g(27);
 }
 
 
triplet.res
diff = 
--- tests/triplet.c
+++ /tmp/cocci-output-25045-f60dbc-triplet.c
@@ -1,5 +1,6 @@
 typedef double dtriplet_t[3] ; // FIXME: such code would not be parsed on cocci side
 
+typedef int itriplet_t[3];
 int main()
 {
 	return 0;
tup.res
warning: rule starting on line 10: metavariable C not used in the - or context code
warning: rule starting on line 10: metavariable B not used in the - or context code
diff = 
--- tests/tup.c
+++ /tmp/cocci-output-25045-7937d1-tup.c
@@ -1,7 +1,7 @@
 static int cm206_block_ioctl(struct inode *inode, struct file *file,
 				unsigned cmd, unsigned long arg)
 {
-	return cdrom_ioctl(&cm206_info, inode, cmd, arg);
+	return xxx();
 }
 
 static struct block_device_operations cm206_bdops =
twomatch.res
diff = 
--- tests/twomatch.c
+++ /tmp/cocci-output-25045-ac80c9-twomatch.c
@@ -1,5 +1,5 @@
 int main() {
   bar(12,1);
-  xxx(12,1);
+  yyy();
 }
 
twoproto.res
diff = 
--- tests/twoproto.c
+++ /tmp/cocci-output-25045-cba8b0-twoproto.c
@@ -1,11 +1,9 @@
 static void tc574_config(dev_link_t *link);
 
-static int tc574_attach(struct pcmcia_device *p_dev)
+static int tc574_attach(struct pcmcia_device *link)
 {
-	dev_link_t *link = dev_to_instance(p_dev);
 }
 
-static void tc574_detach(struct pcmcia_device *p_dev)
+static void tc574_detach(struct pcmcia_device *link)
 {
-	dev_link_t *link = dev_to_instance(p_dev);
 }
ty.res
diff = 
--- tests/ty.c
+++ /tmp/cocci-output-25045-1261dc-ty.c
@@ -1,4 +1,4 @@
 int main () {
-  struct foo x;
+  const struct foo x;
   return 12;
 }
ty1.res
warning: line 7: should x be a metavariable?
diff = 
--- tests/ty1.c
+++ /tmp/cocci-output-25045-74dbda-ty1.c
@@ -1,4 +1,3 @@
 int fn(int y) {
   char x;
-  foo(int,char);
 }
ty_tyexp.res
diff = 
--- tests/ty_tyexp.c
+++ /tmp/cocci-output-25045-004f37-ty_tyexp.c
@@ -1,11 +1,11 @@
 void main(double z) {
 
-  int x;
-  int y;
+  float x;
+  float y;
 }
 
-int main(int z) {
+float main(float z) {
 }
 
-int main2(int z);
+float main2(float z);
 
tydisj.res
warning: line 20: should a be a metavariable?
warning: func: metavariable T not used in the - or context code
diff = 
--- tests/tydisj.c
+++ /tmp/cocci-output-25045-04a794-tydisj.c
@@ -1,2 +1,3 @@
-int64_t foo() { int64_t a; int i; return i << 20; }
+int64_t foo() { int64_t a; int i; xxx();
+	return i << 20; }
 
tyex.res
diff = 
--- tests/tyex.c
+++ /tmp/cocci-output-25045-100704-tyex.c
@@ -1,12 +1,15 @@
  typedef struct {
   double x;
   double y;
+} Point;
+typedef struct {
   char *name;
+  Point p;
 } Location;
 
 int main () {
   Location a;
   Location *b;
-  foo (a.x,a.y,a.name);
-  foo (b->x,b->y,b->name);
+  foo (a.p.x,a.p.y,a.name);
+  foo (b->p.x,b->p.y,b->name);
 }
type.res
warning: line 7: should x be a metavariable?
diff = 
--- tests/type.c
+++ /tmp/cocci-output-25045-f1127b-type.c
@@ -1,5 +1,5 @@
 int foo() {
-  int x;
+  int *x;
   return 0;
 }
 
type1.res
diff = 
--- tests/type1.c
+++ /tmp/cocci-output-25045-5cb417-type1.c
@@ -1,5 +1,5 @@
 int foo() {
-  int x;
+  int * x;
   return 0;
 }
 
type_annotated.res
diff = 
--- tests/type_annotated.c
+++ /tmp/cocci-output-25045-81ef69-type_annotated.c
@@ -4,7 +4,7 @@ void f1(int z) {
   struct foo2 j;
   int k;
 
-  j+i.foo+j.foo;
+  j+i.newfoo+j.foo;
 
 }
 
@@ -15,6 +15,6 @@ void f2(struct foo i) {
   struct foo2 j;
   int k;
 
-  j+i.foo+j.foo;
+  j+i.newfoo+j.foo;
 
 }
type_constraints.res
warning: line 32: should foo be a metavariable?
warning: line 33: should xyz be a metavariable?
diff = 
--- tests/type_constraints.c
+++ /tmp/cocci-output-25045-24a57e-type_constraints.c
@@ -1,9 +1,9 @@
 void f(void) {
     int i;
     char c;
-    float f;
-    int *foo = xyz;
-    char *foo = xyz;
+    float *f;
+    int *foo = abc;
+    char *foo = abc;
     float *foo = xyz;
 }
 
type_ver1.res
diff = 
--- tests/type_ver1.c
+++ /tmp/cocci-output-25045-32a00e-type_ver1.c
@@ -1,5 +1,5 @@
 int foo() {
-  struct foo x;
+  struct foo *x;
   return 0;
 }
 
type_ver2.res
diff = 
--- tests/type_ver2.c
+++ /tmp/cocci-output-25045-98d00d-type_ver2.c
@@ -1,5 +1,5 @@
 int foo() {
-  int x[10];
+  int[10] *x;
   return 0;
 }
 
typedef.res
diff = 
--- tests/typedef.c
+++ /tmp/cocci-output-25045-d95fd2-typedef.c
@@ -1,15 +1,15 @@
 typedef struct bluecard_info_t {
-	dev_link_t link;
+	struct pcmcia_device *p_dev;
 } foo;
 
 static void should_work(u_long arg)
 {
 	foo *info = (struct bluecard_info_t *)arg;
-	unsigned int iobase = info->link.io.BasePort1;
+	unsigned int iobase = info->p_dev->io.BasePort1;
 }
 
 static void does_work(u_long arg)
 {
 	struct bluecard_info_t *info = (struct bluecard_info_t *)arg;
-	unsigned int iobase = info->link.io.BasePort1;
+	unsigned int iobase = info->p_dev->io.BasePort1;
 }
typedef3.res
diff = 
--- tests/typedef3.c
+++ /tmp/cocci-output-25045-772e05-typedef3.c
@@ -1,5 +1,5 @@
 typedef struct bluecard_info_t {
-	dev_link_t link;
+	struct pcmcia_device *p_dev;
 } foo;
 
 static void should_work(foo *info)
@@ -9,5 +9,5 @@ static void should_work(foo *info)
 
 static void does_work(struct bluecard_info_t *info)
 {
-	unsigned int iobase = info->link.io.BasePort1;
+	unsigned int iobase = info->p_dev->io.BasePort1;
 }
typedef_double.res
typeof.res
diff = 
--- tests/typeof.c
+++ /tmp/cocci-output-25045-46a1b0-typeof.c
@@ -1,6 +1,4 @@
 int main() {
   int x;
-  f(x);
   f(sizeof(struct foo));
-  f(sizeof(int));
 }
typin.res
diff = 
--- tests/typin.c
+++ /tmp/cocci-output-25045-ee1085-typin.c
@@ -2,7 +2,7 @@ int x;
 char y;
 
 int main() {
-  m(f(x), 5);
+  m(f(20), 20);
   r(gg(y), '5');
-  s(h(x,y), "5");
+  s(h(20,y), "5");
 }
unbrace.res
warning: line 13: should list be a metavariable?
diff = 
--- tests/unbrace.c
+++ /tmp/cocci-output-25045-b5c2ab-unbrace.c
@@ -5,8 +5,6 @@ static int mlxsw_sp_flower_parse_actions
 					 struct netlink_ext_ack *extack)
 {
 	const struct tc_action *a;
-	LIST_HEAD(actions);
-	int err;
 
 	if (!tcf_exts_has_actions(exts))
 		return 0;
@@ -16,12 +14,9 @@ static int mlxsw_sp_flower_parse_actions
 	if (err)
 		return err;
 
-	tcf_exts_to_list(exts, &actions);
-	list_for_each_entry(a, &actions, list) {
-		one();
-		if (two())
-			return 1;
-	}
+	one();
+	if (two())
+		return 1;
 	return 0;
 }
 
@@ -33,8 +28,6 @@ static int mlxsw_sp_flower_parse_actions
 					 struct netlink_ext_ack *extack)
 {
 	const struct tc_action *a;
-	LIST_HEAD(actions);
-	int err;
 
 	if (!tcf_exts_has_actions(exts))
 		return 0;
@@ -44,82 +37,79 @@ static int mlxsw_sp_flower_parse_actions
 	if (err)
 		return err;
 
-	tcf_exts_to_list(exts, &actions);
-	list_for_each_entry(a, &actions, list) {
-		if (is_tcf_gact_ok(a)) {
-			err = mlxsw_sp_acl_rulei_act_terminate(rulei);
-			if (err) {
-				NL_SET_ERR_MSG_MOD(extack, "Cannot append terminate action");
-				return err;
-			}
-		} else if (is_tcf_gact_shot(a)) {
-			err = mlxsw_sp_acl_rulei_act_drop(rulei);
-			if (err) {
-				NL_SET_ERR_MSG_MOD(extack, "Cannot append drop action");
-				return err;
-			}
-		} else if (is_tcf_gact_trap(a)) {
-			err = mlxsw_sp_acl_rulei_act_trap(rulei);
-			if (err) {
-				NL_SET_ERR_MSG_MOD(extack, "Cannot append trap action");
-				return err;
-			}
-		} else if (is_tcf_gact_goto_chain(a)) {
-			u32 chain_index = tcf_gact_goto_chain_index(a);
-			struct mlxsw_sp_acl_ruleset *ruleset;
-			u16 group_id;
-
-			ruleset = mlxsw_sp_acl_ruleset_lookup(mlxsw_sp, block,
-							      chain_index,
-							      MLXSW_SP_ACL_PROFILE_FLOWER);
-			if (IS_ERR(ruleset))
-				return PTR_ERR(ruleset);
-
-			group_id = mlxsw_sp_acl_ruleset_group_id(ruleset);
-			err = mlxsw_sp_acl_rulei_act_jump(rulei, group_id);
-			if (err) {
-				NL_SET_ERR_MSG_MOD(extack, "Cannot append jump action");
-				return err;
-			}
-		} else if (is_tcf_mirred_egress_redirect(a)) {
-			struct net_device *out_dev;
-			struct mlxsw_sp_fid *fid;
-			u16 fid_index;
-
-			fid = mlxsw_sp_acl_dummy_fid(mlxsw_sp);
-			fid_index = mlxsw_sp_fid_index(fid);
-			err = mlxsw_sp_acl_rulei_act_fid_set(mlxsw_sp, rulei,
-							     fid_index, extack);
-			if (err)
-				return err;
-
-			out_dev = tcf_mirred_dev(a);
-			err = mlxsw_sp_acl_rulei_act_fwd(mlxsw_sp, rulei,
-							 out_dev, extack);
-			if (err)
-				return err;
-		} else if (is_tcf_mirred_egress_mirror(a)) {
-			struct net_device *out_dev = tcf_mirred_dev(a);
-
-			err = mlxsw_sp_acl_rulei_act_mirror(mlxsw_sp, rulei,
-							    block, out_dev,
-							    extack);
-			if (err)
-				return err;
-		} else if (is_tcf_vlan(a)) {
-			u16 proto = be16_to_cpu(tcf_vlan_push_proto(a));
-			u32 action = tcf_vlan_action(a);
-			u8 prio = tcf_vlan_push_prio(a);
-			u16 vid = tcf_vlan_push_vid(a);
-
-			return mlxsw_sp_acl_rulei_act_vlan(mlxsw_sp, rulei,
-							   action, vid,
-							   proto, prio, extack);
-		} else {
-			NL_SET_ERR_MSG_MOD(extack, "Unsupported action");
-			dev_err(mlxsw_sp->bus_info->dev, "Unsupported action\n");
-			return -EOPNOTSUPP;
+	if (is_tcf_gact_ok(a)) {
+		err = mlxsw_sp_acl_rulei_act_terminate(rulei);
+		if (err) {
+			NL_SET_ERR_MSG_MOD(extack, "Cannot append terminate action");
+			return err;
+		}
+	} else if (is_tcf_gact_shot(a)) {
+		err = mlxsw_sp_acl_rulei_act_drop(rulei);
+		if (err) {
+			NL_SET_ERR_MSG_MOD(extack, "Cannot append drop action");
+			return err;
+		}
+	} else if (is_tcf_gact_trap(a)) {
+		err = mlxsw_sp_acl_rulei_act_trap(rulei);
+		if (err) {
+			NL_SET_ERR_MSG_MOD(extack, "Cannot append trap action");
+			return err;
+		}
+	} else if (is_tcf_gact_goto_chain(a)) {
+		u32 chain_index = tcf_gact_goto_chain_index(a);
+		struct mlxsw_sp_acl_ruleset *ruleset;
+		u16 group_id;
+
+		ruleset = mlxsw_sp_acl_ruleset_lookup(mlxsw_sp, block,
+						      chain_index,
+						      MLXSW_SP_ACL_PROFILE_FLOWER);
+		if (IS_ERR(ruleset))
+			return PTR_ERR(ruleset);
+
+		group_id = mlxsw_sp_acl_ruleset_group_id(ruleset);
+		err = mlxsw_sp_acl_rulei_act_jump(rulei, group_id);
+		if (err) {
+			NL_SET_ERR_MSG_MOD(extack, "Cannot append jump action");
+			return err;
 		}
+	} else if (is_tcf_mirred_egress_redirect(a)) {
+		struct net_device *out_dev;
+		struct mlxsw_sp_fid *fid;
+		u16 fid_index;
+
+		fid = mlxsw_sp_acl_dummy_fid(mlxsw_sp);
+		fid_index = mlxsw_sp_fid_index(fid);
+		err = mlxsw_sp_acl_rulei_act_fid_set(mlxsw_sp, rulei,
+						     fid_index, extack);
+		if (err)
+			return err;
+
+		out_dev = tcf_mirred_dev(a);
+		err = mlxsw_sp_acl_rulei_act_fwd(mlxsw_sp, rulei,
+						 out_dev, extack);
+		if (err)
+			return err;
+} else if (is_tcf_mirred_egress_mirror(a)) {
+		struct net_device *out_dev = tcf_mirred_dev(a);
+
+		err = mlxsw_sp_acl_rulei_act_mirror(mlxsw_sp, rulei,
+						    block, out_dev,
+						    extack);
+		if (err)
+			return err;
+} else if (is_tcf_vlan(a)) {
+		u16 proto = be16_to_cpu(tcf_vlan_push_proto(a));
+		u32 action = tcf_vlan_action(a);
+		u8 prio = tcf_vlan_push_prio(a);
+		u16 vid = tcf_vlan_push_vid(a);
+
+		return mlxsw_sp_acl_rulei_act_vlan(mlxsw_sp, rulei,
+						   action, vid,
+						   proto, prio, extack);
+	} else {
+		NL_SET_ERR_MSG_MOD(extack, "Unsupported action");
+		dev_err(mlxsw_sp->bus_info->dev, "Unsupported action\n");
+		return -EOPNOTSUPP;
 	}
 	return 0;
 }
undref.res
diff = 
--- tests/undref.c
+++ /tmp/cocci-output-25045-8c8ba4-undref.c
@@ -1,3 +1,3 @@
 int main () {
-	bar();
+	42;
 }
undref2.res
exn while in timeout_function
undref3.res
exn while in timeout_function
unelse.res
diff = 
--- tests/unelse.c
+++ /tmp/cocci-output-25045-e36424-unelse.c
@@ -2,8 +2,6 @@ static short find_control(u16 control_in
 {
 	if (!*pI)
 		return 0;
-	else {
-		HPI_DEBUG_LOG(three,
-			      one);
-	}
+	HPI_DEBUG_LOG(three,
+		      one);
 }
unfree.res
diff = 
--- tests/unfree.c
+++ /tmp/cocci-output-25045-5f71df-unfree.c
@@ -2,8 +2,7 @@ static void mppe_free(void *arg)
 {
 	struct ppp_mppe_state *state = (struct ppp_mppe_state *) arg;
 	if (state) {
-	    if (state->sha1_digest)
-		kfree(state->sha1_digest);
+	    kfree(state->sha1_digest);
 	    kfree(state);
 	}
 }
unl.res
diff = 
--- tests/unl.c
+++ /tmp/cocci-output-25045-1b9998-unl.c
@@ -1,10 +1,10 @@
 int main () {
-  if (new_pe == NULL) {
+  if (unlikely(new_pe == NULL)) {
     return NULL;
   }
 }
 
 int main () {
-  if (new_pe == NULL)
+  if (unlikely(new_pe == NULL))
     return NULL;
 }
unstruct.res
diff = 
--- tests/unstruct.c
+++ /tmp/cocci-output-25045-3c3dad-unstruct.c
@@ -1,4 +1,2 @@
-struct foo x __read_mostly = { .a = 12, };
 
-foo_t bar_t x(int y) { return 0; }
 
updassign.res
diff = 
--- tests/updassign.c
+++ /tmp/cocci-output-25045-702471-updassign.c
@@ -1,3 +1,3 @@
 int main () {
-  int r = 1 + 2;
+  int r = 12;
 }
useless_cast.res
diff = 
--- tests/useless_cast.c
+++ /tmp/cocci-output-25045-0c6fce-useless_cast.c
@@ -8,7 +8,7 @@ struct device {
 
 struct device *dev;
 
-struct netdev_private *np = (struct netdev_private *) 
+struct netdev_private *np =
    dev->priv;
 
 
varargs.res
diff = 
--- tests/varargs.c
+++ /tmp/cocci-output-25045-47ba16-varargs.c
@@ -1,4 +1,5 @@
 
 static void
-fas216_log_command(FAS216_Info *info, int level, Scsi_Cmnd *SCpnt, char *fmt, ...)
+fas216_log_command(FAS216_Info *info, int level, struct scsi_cmnd *SCpnt,
+		   char *fmt, ...)
 {}
varargs2.res
diff = 
--- tests/varargs2.c
+++ /tmp/cocci-output-25045-7dd472-varargs2.c
@@ -1,3 +1,4 @@
 static void f(char *fmt, ...)
 {
+	return NULL;
 }
varargs3.res
diff = 
--- tests/varargs3.c
+++ /tmp/cocci-output-25045-4cb38b-varargs3.c
@@ -1,4 +1,3 @@
-static int foo(char *fmt, ...)
 {
   return 0;
 }
@@ -8,7 +7,6 @@ static int bar(int x, y)
   return x+y;
 }
 
-static int baz(FILE *stream, ...)
 {
   return 1;
 }
video1bis.res
diff = 
--- tests/video1bis.c
+++ /tmp/cocci-output-25045-b26014-video1bis.c
@@ -3,7 +3,5 @@ void *arg)
 {
    if (cmd == VIDIOCGTUNER) {
      struct video_tuner v;
-     if (copy_from_user(v, arg, sizeof(v)) != 0)
-       ret(-EFAULT); else {}
    }
 }
void.res
diff = 
--- tests/void.c
+++ /tmp/cocci-output-25045-98a652-void.c
@@ -1,5 +1,15 @@
 int xbar(void) { return; }
 
+int foo(void)
+{
+	return;
+}
+
 // this is some info about bar
 
 int bar(void) { return; }
+
+int foo(void)
+{
+	return;
+}
vpos.res
diff = 
--- tests/vpos.c
+++ /tmp/cocci-output-25045-50a9bf-vpos.c
@@ -1,9 +1,7 @@
 int main() {
   f(2);
   if (x) {
-    g(1,1);
   }
   else {
-    g(1,2);
   }
 }
whitespace.res
diff = 
--- tests/whitespace.c
+++ /tmp/cocci-output-25045-1276bf-whitespace.c
@@ -1,3 +1,3 @@
 int main () {
-  foo(sizeof (struct xxx));
+  foo(sizeof(struct xxx), 12);
 }
wierd_argument.res
diff = 
--- tests/wierd_argument.c
+++ /tmp/cocci-output-25045-920888-wierd_argument.c
@@ -1,7 +1,7 @@
 static void ewx_i2c_setlines(snd_i2c_bus_t *bus, int clk, int data)
 {
-	ice1712_t *ice = snd_magic_cast(ice1712_t, bus->private_data, return);
-	ice1712_t *ice = snd_magic_cast(ice1712_t, bus->private_data, );
+	ice1712_t *ice = bus->private_data;
+	ice1712_t *ice = bus->private_data;
 	unsigned char tmp = 0;
         tmp++;
 }
wierdinit.res
wrongcheck.res
diff = 
--- tests/wrongcheck.c
+++ /tmp/cocci-output-25045-beea3b-wrongcheck.c
@@ -1,5 +1,3 @@
 int main () {
-  err = si476x_core_i2c_xfer(core, SI476X_I2C_RECV,
-			     buffer, sizeof(buffer));
   if (err == sizeof(buffer)) return;
 }
ws2.res
warning: rule starting on line 1: metavariable A not used in the + code
diff = 
--- tests/ws2.c
+++ /tmp/cocci-output-25045-84174a-ws2.c
@@ -1,6 +1,5 @@
 int main() {
-  if (foo())
-    goto err;
+  goto err;
   err: return;
 }
 
xfield.res
diff = 
--- tests/xfield.c
+++ /tmp/cocci-output-25045-505a1e-xfield.c
@@ -1,4 +1,4 @@
-FOO(a2,b2,c2);
+int x;
 
 /*
 int y;
y2.res
diff = 
--- tests/y2.c
+++ /tmp/cocci-output-25045-c74053-y2.c
@@ -1,10 +1,6 @@
 static void
 asuscom_interrupt_ipac(int intno, void *dev_id, struct pt_regs *regs)
 {
-	if (!cs) {
-		printk(KERN_WARNING "ISDNLink: Spurious interrupt!\n");
-		return;
-	}
 Start_IPAC:
 	debugl1(cs, "IPAC ISTA %02X", ista);
 	if ((ista & 0x3f) && icnt) {
zero.res
diff = 
--- tests/zero.c
+++ /tmp/cocci-output-25045-476058-zero.c
@@ -1,6 +1,2 @@
 int main () {
-  memset(command, 0, sizeof(struct sbp2_command_info));
-  memset(command, 0x00, sizeof(struct sbp2_command_info));
-  memset(command, 0x0, sizeof(struct sbp2_command_info));
-  memset(command, '\0', sizeof(struct sbp2_command_info));
 }
--------------------------------
statistics
--------------------------------
62.res                        : CORRECT
a.res                         : CORRECT
a3d.res                       : CORRECT
a_and_e.res                   : CORRECT
a_and_e_ver1.res              : CORRECT
ab.res                        : CORRECT
add1.res                      : CORRECT
addaft.res                    : CORRECT
addbefore.res                 : CORRECT
addbeforeafter.res            : CORRECT
addelse.res                   : CORRECT
addes.res                     : CORRECT
addfield.res                  : CORRECT
addfield2.res                 : CORRECT
addif.res                     : CORRECT
addif1.res                    : CORRECT
addif2.res                    : CORRECT
addifdef.res                  : CORRECT
addifelse.res                 : CORRECT
addifelse2.res                : CORRECT
addinc.res                    : CORRECT
addtoo.res                    : CORRECT
addtrace.res                  : CORRECT
after_if.res                  : CORRECT
allex.res                     : CORRECT
allex2.res                    : CORRECT
allex3.res                    : CORRECT
andid.res                     : CORRECT
anon.res                      : CORRECT
anonfield.res                 : CORRECT
ar.res                        : CORRECT
arg.res                       : CORRECT
argument.res                  : CORRECT
arparam.res                   : CORRECT
array_init.res                : CORRECT
array_size.res                : CORRECT
arraysz.res                   : CORRECT
as_stm.res                    : CORRECT
attradd.res                   : CORRECT
attrs2groups.res              : CORRECT
b1.res                        : CORRECT
b2.res                        : CORRECT
bad_iso_example.res           : INCORRECT:diff token: ( VS x
File "tests/bad_iso_example.c", line 2, column 6, charpos = 19
  around = '(',
  whole content =   if ((x = 3)) return;
File "tests/bad_iso_example.res", line 2, column 6, charpos = 19
  around = 'x',
  whole content =   if (x) return;

    diff (result(<) vs expected_result(>)) = 
    @@ -1,4 +1,4 @@
     int main() {
    -  if ((x = 3)) return;
    +  if (x) return;
     }
     
bad_kfree.res                 : CORRECT
bad_ptr_print.res             : CORRECT
bad_typedef.res               : CORRECT
badexp.res                    : CORRECT
badpos.res                    : PROBLEM
   exn = Failure("rule starting on line 1: already tagged token:\nC code context\nFile \"tests/badpos.c\", line 5, column 30, charpos = 139\n  around = 'reg_ptr',\n  whole content = \t (int) -(((struct pt_regs *) reg_ptr)->orig_eax + 2));")
badtypedef.res                : CORRECT
badwhen.res                   : CORRECT
badzero.res                   : CORRECT
bc_1.res                      : CORRECT
befS.res                      : CORRECT
before.res                    : CORRECT
ben.res                       : CORRECT
bigin.res                     : CORRECT
bigrepl.res                   : CORRECT
binop.res                     : CORRECT
bitfield.res                  : CORRECT
bitfield_matching.res         : CORRECT
boolr.res                     : CORRECT
braces.res                    : CORRECT
branchparen.res               : CORRECT
break.res                     : CORRECT
bug1.res                      : CORRECT
bugloop.res                   : CORRECT
bugon.res                     : CORRECT
bus.res                       : CORRECT
cards.res                     : CORRECT
caseprint.res                 : CORRECT
cast.res                      : CORRECT
cast_iso.res                  : CORRECT
castdecl.res                  : CORRECT
cex_wishlist_complex1.res     : CORRECT
cex_wishlist_complex2.res     : CORRECT
cex_wishlist_complex3.res     : CORRECT
change.res                    : CORRECT
change_type.res               : CORRECT
changei.res                   : INCORRECT:diff token: i VS xxx
File <COCCIOUTPUTFILE>, line 1, column 15, charpos = 15
  around = 'i',
  whole content = typedef struct i xxx;
File "tests/changei.res", line 1, column 15, charpos = 15
  around = 'xxx',
  whole content = typedef struct xxx istruct;

    diff (result(<) vs expected_result(>)) = 
    @@ -1,4 +1,4 @@
    -typedef struct i xxx;
    +typedef struct xxx istruct;
     
     int xxx (int xxx) {
       char xxx;
com.res                       : CORRECT
comadd.res                    : CORRECT
comj.res                      : CORRECT
comment_brace.res             : CORRECT
comment_brace2.res            : CORRECT
comments.res                  : CORRECT
compare.res                   : CORRECT
compare_const2.res            : CORRECT
condexp.res                   : CORRECT
const.res                     : CORRECT
const1bis.res                 : CORRECT
const_adding.res              : CORRECT
const_array.res               : CORRECT
const_implicit_iso.res        : CORRECT
constraints.res               : CORRECT
constrem.res                  : CORRECT
constructor.res               : CORRECT
constty.res                   : CORRECT
constx.res                    : CORRECT
countcalls.res                : PROBLEM
   exn = Failure("OCaml scripting is unsupported.")
countcalls_python.res         : CORRECT
countcalls_python.stdout      : CORRECT
cptr.res                      : CORRECT
cr.res                        : CORRECT
cr1a.res                      : CORRECT
cs_check.res                  : CORRECT
cst.res                       : CORRECT
cst_null.res                  : CORRECT
cstr.res                      : PROBLEM
   exn = Failure("OCaml scripting is unsupported.")
cststr.res                    : CORRECT
csw.res                       : CORRECT
dbg.res                       : INCORRECT:PB parsing only in generated-file
    diff (result(<) vs expected_result(>)) = 
    @@ -4,6 +4,6 @@
     	struct resource *pr, *r = &dev->resource[idx];
     
     	if (pr)
    -		DBG else
    -			pr = NULL;("PCI");
    +		DBG("PCI");
    +	else pr = NULL;
     }
dbg1.res                      : INCORRECT:diff token: E VS (
File <COCCIOUTPUTFILE>, line 5, column 2, charpos = 75
  around = 'E',
  whole content = 		E = NULL;("PCI");
File "tests/dbg1.res", line 4, column 5, charpos = 72
  around = '(',
  whole content = 		DBG("PCI");

    diff (result(<) vs expected_result(>)) = 
    @@ -1,6 +1,6 @@
     
     static inline void alloc_resource(struct pci_dev *dev, int idx)
     {
    -		DBG
    -		E = NULL;("PCI");
    +		DBG("PCI");
    +		E = NULL;
     }
dc_close.res                  : CORRECT
debug.res                     : CORRECT
dec.res                       : CORRECT
decl.res                      : CORRECT
decl2.res                     : CORRECT
decl_space.res                : CORRECT
decl_split.res                : INCORRECT:diff token: int VS }
File "tests/decl_split.c", line 2, column 8, charpos = 27
  around = 'int',
  whole content =         int x, y;
File "tests/decl_split.res", line 2, column 0, charpos = 19
  around = '}',
  whole content = }

    diff (result(<) vs expected_result(>)) = 
    @@ -1,3 +1,2 @@
     int func(int i) { 
    -        int x, y;
     }
decl_star.res                 : CORRECT
declmeta.res                  : CORRECT
defe.res                      : CORRECT
define_exp.res                : CORRECT
define_param.res              : CORRECT
defineinit.res                : CORRECT
deftodo.res                   : CORRECT
delete_function.res           : CORRECT
delp.res                      : CORRECT
deref.res                     : CORRECT
destroy.res                   : CORRECT
devlink.res                   : CORRECT
disj.res                      : CORRECT
disjexpr.res                  : CORRECT
disjexpr_ver1.res             : CORRECT
disjexpr_ver2.res             : CORRECT
disjid.res                    : CORRECT
distribute.res                : CORRECT
double.res                    : CORRECT
double_assign.res             : CORRECT
double_lines.res              : CORRECT
double_switch.res             : CORRECT
doublepos.res                 : CORRECT
doubleswitch.res              : CORRECT
doundo.res                    : CORRECT
dowhile.res                   : CORRECT
dropbr.res                    : CORRECT
dropcom.res                   : CORRECT
dropenderr.res                : CORRECT
dropf.res                     : CORRECT
dropparam.res                 : CORRECT
dtest.res                     : CORRECT
eb1.res                       : CORRECT
edots.res                     : CORRECT
edots_ver1.res                : CORRECT
elsify.res                    : CORRECT
empty.res                     : CORRECT
end_commas.res                : CORRECT
endif.res                     : CORRECT
endnl.res                     : CORRECT
endpos.res                    : PROBLEM
   exn = Failure("OCaml scripting is unsupported.")
enum.res                      : CORRECT
exitc.res                     : PROBLEM
   exn = Failure("OCaml scripting is unsupported.")
exitp.res                     : CORRECT
exp.res                       : CORRECT
expnest.res                   : CORRECT
expopt.res                    : CORRECT
expopt2.res                   : CORRECT
expopt3.res                   : CORRECT
expopt3_ver1.res              : CORRECT
expopt3_ver2.res              : CORRECT
extra.res                     : PROBLEM
   exn = Failure("OCaml scripting is unsupported.")
failing_andany.res            : INCORRECT:diff token: request_irq VS }
File <COCCIOUTPUTFILE>, line 4, column 8, charpos = 111
  around = 'request_irq',
  whole content =         request_irq(irq_flags);
File "tests/failing_andany.res", line 4, column 0, charpos = 103
  around = '}',
  whole content = }

    diff (result(<) vs expected_result(>)) = 
    @@ -1,8 +1,6 @@
     static int smc_probe1(struct net_device *dev, void __iomem *ioaddr,
     		      unsigned long irq_flags)
     {
    -        request_irq(irq_flags);
    -	register_netdev(dev);
     }
     
     static int smc_probe2(struct net_device *dev, void __iomem *ioaddr,
fields.res                    : CORRECT
fieldsmin.res                 : CORRECT
finalize_only.res             : PROBLEM
   exn = Failure("OCaml scripting is unsupported.")
find_long.res                 : CORRECT
fix_flow_need.res             : CORRECT
fn_todo.res                   : CORRECT
fnptr.res                     : CORRECT
fnret.res                     : CORRECT
fnty.res                      : CORRECT
fntypedef.res                 : CORRECT
format.res                    : CORRECT
format2.res                   : PROBLEM
   exn = Failure("OCaml scripting is unsupported.")
formatlist.res                : CORRECT
fortest.res                   : CORRECT
fortype.res                   : CORRECT
four.res                      : CORRECT
foura.res                     : CORRECT
fp.res                        : CORRECT
fsh.res                       : CORRECT
fun.res                       : CORRECT
func.res                      : CORRECT
gcc_min_max.res               : CORRECT
getc.res                      : CORRECT
gilles-question.res           : CORRECT
gotobreak.res                 : CORRECT
hd.res                        : CORRECT
headers.res                   : CORRECT
hex.res                       : CORRECT
hil1.res                      : CORRECT
icomma.res                    : PROBLEM
   exn = Failure("Error in Python script, line 10, file \"tests/icomma.cocci\": Python failure")
idcon_ocaml.res               : PROBLEM
   exn = Failure("OCaml scripting is unsupported.")
idcon_python.res              : CORRECT
idstr.res                     : CORRECT
if.res                        : CORRECT
ifadd.res                     : CORRECT
ifbr.res                      : CORRECT
ifd.res                       : CORRECT
ifdef1.res                    : CORRECT
ifdef2.res                    : CORRECT
ifdef3.res                    : CORRECT
ifdef4.res                    : CORRECT
ifdef5.res                    : CORRECT
ifdef6.res                    : CORRECT
ifdef6a.res                   : CORRECT
ifdefmeta.res                 : CORRECT
ifdefmeta1.res                : CORRECT
ifdefmeta2.res                : CORRECT
ifdefmeta3.res                : CORRECT
ifend.res                     : CORRECT
ifgoto.res                    : CORRECT
ifields.res                   : CORRECT
ifif.res                      : CORRECT
ifreturn.res                  : CORRECT
ifreturn3.res                 : CORRECT
ifreturn4.res                 : CORRECT
ifreturn6.res                 : CORRECT
ifzer.res                     : CORRECT
ifzz.res                      : CORRECT
inc.res                       : CORRECT
incdir.res                    : INCORRECT:diff token: x VS 12
File "tests/incdir.c", line 4, column 6, charpos = 46
  around = 'x',
  whole content =   foo(x);
File "tests/incdir.res", line 4, column 6, charpos = 46
  around = '12',
  whole content =   foo(12);

    diff (result(<) vs expected_result(>)) = 
    @@ -1,5 +1,5 @@
     #include "sub/incdir2.c"
     
     int main () {
    -  foo(x);
    +  foo(12);
     }
incl.res                      : CORRECT
incl2.res                     : CORRECT
inclifdef.res                 : CORRECT
include.res                   : CORRECT
incompatible_value.res        : CORRECT
incpos.res                    : CORRECT
incpos1.res                   : CORRECT
inherited.res                 : CORRECT
inherited_ver1.res            : CORRECT
inhmet.res                    : CORRECT
inhpos.res                    : CORRECT
initializer.res               : CORRECT
initializer_many_fields.res   : CORRECT
inline.res                    : CORRECT
insdef.res                    : CORRECT
int2bool-local.res            : CORRECT
introbrace.res                : CORRECT
invert.res                    : CORRECT
ip.res                        : CORRECT
ip2.res                       : CORRECT
isococci.res                  : CORRECT
isoif.res                     : CORRECT
isotest.res                   : CORRECT
isotest2.res                  : CORRECT
iteration.res                 : PROBLEM
   exn = Failure("OCaml scripting is unsupported.")
iteration_after_merge.res     : PROBLEM
   exn = Failure("OCaml scripting is unsupported.")
iterator.res                  : CORRECT
iterprint.res                 : CORRECT
jloop1.res                    : PROBLEM
   exn = Coccinelle_modules.Parse_cocci.SMPLParseError("minus: parse error: \n  File \"tests/jloop1.cocci\", line 10, column 3, charpos = 129\n  around = '...>',\n  whole content =    ...>\n")
julia10.res                   : CORRECT
julia7.res                    : CORRECT
justremove.res                : CORRECT
keep_comma.res                : CORRECT
km.res                        : CORRECT
kmalloc.res                   : CORRECT
kmc.res                       : CORRECT
kr.res                        : CORRECT
ktype.res                     : CORRECT
ktype2.res                    : CORRECT
labels_metastatement.res      : CORRECT
labels_metastatement_ver1.res : CORRECT
lid.res                       : CORRECT
line_before_last.res          : CORRECT
list_test.res                 : CORRECT
local.res                     : CORRECT
localglobal.res               : CORRECT
localid.res                   : CORRECT
log.res                       : CORRECT
long.res                      : CORRECT
longconst.res                 : CORRECT
longline2.res                 : CORRECT
longlong.res                  : CORRECT
longlongint.res               : CORRECT
loop.res                      : CORRECT
lvalue.res                    : CORRECT
macro.res                     : CORRECT
macro_int16.res               : CORRECT
match_init.res                : CORRECT
match_no_meta.res             : CORRECT
max.res                       : CORRECT
md1.res                       : CORRECT
md2.res                       : CORRECT
md3.res                       : CORRECT
mdadd.res                     : CORRECT
mdec.res                      : CORRECT
mdecl.res                     : PROBLEM
   exn = Failure("OCaml scripting is unsupported.")
mdeclp.res                    : PROBLEM
   exn = Failure("OCaml scripting is unsupported.")
mdeclp2.res                   : PROBLEM
   exn = Failure("OCaml scripting is unsupported.")
mdeclrep.res                  : CORRECT
memory.res                    : CORRECT
merge_after_iteration.res     : PROBLEM
   exn = Failure("OCaml scripting is unsupported.")
metahex.res                   : INCORRECT:diff token: f VS }
File "tests/metahex.c", line 2, column 2, charpos = 15
  around = 'f',
  whole content =   f(3);
File "tests/metahex.res", line 2, column 0, charpos = 13
  around = '}',
  whole content = }

    diff (result(<) vs expected_result(>)) = 
    @@ -1,4 +1,2 @@
     int main() {
    -  f(3);
    -  g(0x03);
     }
metaline.res                  : CORRECT
metaops.res                   : CORRECT
metaops0.res                  : CORRECT
metaruleelem.res              : CORRECT
metastatement2.res            : CORRECT
metastatement_for.res         : CORRECT
metastatement_if.res          : CORRECT
mincom.res                    : CORRECT
minenum.res                   : CORRECT
minenum1.res                  : CORRECT
minfn.res                     : CORRECT
mini_null_ref.res             : CORRECT
miniswap.res                  : CORRECT
minstruct.res                 : CORRECT
minusdots.res                 : CORRECT
minusdots_ver1.res            : CORRECT
multi_func1.res               : PROBLEM
   exn = Coccinelle_modules.Parse_cocci.SMPLParseError("minus: parse error: \n  File \"tests/multi_func1.cocci\", line 12, column 2, charpos = 102\n  around = 'fn2',\n  whole content =   fn2(...) {\n")
multi_initialize_finalize.res : PROBLEM
   exn = Failure("OCaml scripting is unsupported.")
multichars.res                : CORRECT
multidec.res                  : CORRECT
multidecl3.res                : CORRECT
multipath.res                 : CORRECT
multiplus.res                 : CORRECT
multiremove.res               : CORRECT
multistruct.res               : CORRECT
multitype.res                 : CORRECT
multitypedef.res              : CORRECT
multivars.res                 : CORRECT
na.res                        : CORRECT
nameless.res                  : CORRECT
nest.res                      : CORRECT
nestone.res                   : CORRECT
nestseq.res                   : CORRECT
neststruct.res                : CORRECT
nl.res                        : CORRECT
noa.res                       : CORRECT
nocast.res                    : CORRECT
noret.res                     : CORRECT
not.res                       : CORRECT
notest.res                    : CORRECT
notnot.res                    : CORRECT
noty.res                      : CORRECT
noty2.res                     : CORRECT
null_bool.res                 : INCORRECT:diff token: ) VS !=
File <COCCIOUTPUTFILE>, line 2, column 8, charpos = 22
  around = ')',
  whole content =   if (12) return;
File "tests/null_bool.res", line 2, column 9, charpos = 23
  around = '!=',
  whole content =   if (12 != NULL) return;

    diff (result(<) vs expected_result(>)) = 
    @@ -1,6 +1,6 @@
     int main () {
    -  if (12) return;
    -  if (a && 12 && b) return;
    +  if (12 != NULL) return;
    +  if (a && 12 != NULL && b) return;
       if (12) return;
       if (a && 12 && b) return;
       x = x + 20;
null_type.res                 : CORRECT
oddifdef.res                  : INCORRECT:diff token: #else VS x
File <COCCIOUTPUTFILE>, line 10, column 0, charpos = 114
  around = '#else',
  whole content = #else
File "tests/oddifdef.res", line 10, column 2, charpos = 116
  around = 'x',
  whole content =   x = 0;

    diff (result(<) vs expected_result(>)) = 
    @@ -7,7 +7,9 @@
         a = 5;
     
     #ifdef FOO
    +  x = 0;
     #else
    +  x = 0;
     #endif
     }
     
    @@ -20,7 +22,9 @@
         a = 3;
     
     #ifdef FOO
    +  x = 0;
     #else
    +  x = 0;
     #endif
     }
     
    @@ -33,6 +37,8 @@
     #endif
     
     #ifdef FOO
    +  x = 0;
     #else
    +  x = 0;
     #endif
     }
of.res                        : CORRECT
oneline.res                   : CORRECT
op.res                        : CORRECT
opt.res                       : CORRECT
optional_qualifier.res        : CORRECT
optional_storage.res          : CORRECT
orexp.res                     : CORRECT
output.res                    : CORRECT
output.stdout                 : CORRECT
output_init.res               : CORRECT
overshoot.res                 : CORRECT
p1p2.res                      : CORRECT
p9.res                        : CORRECT
pa.res                        : CORRECT
param.res                     : CORRECT
param_end.res                 : CORRECT
param_to_exp.res              : CORRECT
param_ver1.res                : CORRECT
parameters_dots.res           : CORRECT
parenmac.res                  : CORRECT
partial.res                   : CORRECT
partialmd.res                 : CORRECT
partialmd2.res                : CORRECT
partialmd3.res                : CORRECT
pb_distribute_type.res        : INCORRECT:PB parsing only in generated-file
    diff (result(<) vs expected_result(>)) = 
    @@ -10,6 +10,6 @@
     }
     
     int foo() {
    -  int[45] *x;
    +  int (*x)[45];
       return 0;
     }
pb_distribute_type2.res       : INCORRECT:PB parsing only in generated-file
    diff (result(<) vs expected_result(>)) = 
    @@ -1,5 +1,5 @@
     int foo() {
    -  int * x;
    +  int *x;
       return 0;
     }
     
    @@ -10,6 +10,6 @@
     }
     
     int foo() {
    -  int x[45]*;
    +  int (*x)[45];
       return 0;
     }
pb_distribute_type3.res       : PROBLEM
   exn = Failure("line 7: index 53 53 already used\n")
pb_distribute_type4.res       : CORRECT
pb_params_iso.res             : CORRECT
pb_parsing_macro.res          : CORRECT
pb_tag_symbols.res            : CORRECT
pcim.res                      : CORRECT
pcomma.res                    : CORRECT
plus33.res                    : INCORRECT:diff token: double3x3 VS xdouble3x3
File <COCCIOUTPUTFILE>, line 1, column 15, charpos = 15
  around = 'double3x3',
  whole content = typedef double double3x3[3][3];
File "tests/plus33.res", line 1, column 15, charpos = 15
  around = 'xdouble3x3',
  whole content = typedef double xdouble3x3[3][3];

    diff (result(<) vs expected_result(>)) = 
    @@ -1,2 +1,2 @@
    -typedef double double3x3[3][3];
    +typedef double xdouble3x3[3][3];
     int x;
pmac.res                      : CORRECT
poscon.res                    : PROBLEM
   exn = Failure("OCaml scripting is unsupported.")
posiso.res                    : CORRECT
positionc.res                 : CORRECT
post.res                      : CORRECT
pragmatest1.res               : CORRECT
print_return.res              : CORRECT
proto.res                     : CORRECT
proto2.res                    : CORRECT
proto_ver1.res                : CORRECT
proto_ver2.res                : CORRECT
protoassert.res               : CORRECT
protox.res                    : CORRECT
ptrar.res                     : CORRECT
python_iteration.res          : CORRECT
python_iteration.stdout       : CORRECT
python_mdecl.res              : CORRECT
python_mdeclp.res             : CORRECT
python_poscon.res             : CORRECT
qualifier.res                 : CORRECT
range.res                     : CORRECT
rcu3.res                      : CORRECT
regexp.res                    : CORRECT
regexp2.res                   : CORRECT
regexp3.res                   : CORRECT
rem1.res                      : CORRECT
rem2.res                      : CORRECT
remaft.res                    : CORRECT
remcom.res                    : CORRECT
remodif.res                   : CORRECT
remove-code-in-branch1.res    : CORRECT
remove_call.res               : CORRECT
remparam.res                  : CORRECT
rems.res                      : CORRECT
rems1.res                     : CORRECT
remstruct.res                 : CORRECT
replace_typedef.res           : CORRECT
reserved.res                  : CORRECT
retest.res                    : CORRECT
retmacro.res                  : CORRECT
rets.res                      : CORRECT
return.res                    : CORRECT
return_implicit.res           : CORRECT
retval.res                    : CORRECT
retval2.res                   : CORRECT
reusevar.res                  : CORRECT
roa.res                       : CORRECT
rptr.res                      : CORRECT
same_expr.res                 : CORRECT
scope_problem.res             : INCORRECT:diff token: } VS a
File <COCCIOUTPUTFILE>, line 4, column 2, charpos = 42
  around = '}',
  whole content =   }
File "tests/scope_problem.res", line 4, column 4, charpos = 44
  around = 'a',
  whole content =     a = 2;

    diff (result(<) vs expected_result(>)) = 
    @@ -1,7 +1,6 @@
     void main(int i) {
       if(1) {
         int a;
    +    a = 2;
       }
    -
    -
     }
sd_2.res                      : CORRECT
serio.res                     : INCORRECT:diff token: init_MUTEX VS mutex_init
File "tests/serio.c", line 7, column 1, charpos = 130
  around = 'init_MUTEX',
  whole content = 	init_MUTEX(&serio->drv_sem);
File "tests/serio.res", line 7, column 1, charpos = 130
  around = 'mutex_init',
  whole content = 	mutex_init(&serio->new_lock);

    diff (result(<) vs expected_result(>)) = 
    @@ -4,5 +4,5 @@
     
     static void serio_init_port(struct serio *serio)
     {
    -	init_MUTEX(&serio->drv_sem);
    +	mutex_init(&serio->new_lock);
     }
shared_brace.res              : CORRECT
signed.res                    : CORRECT
sis.res                       : CORRECT
sizeof.res                    : CORRECT
sizeof_julia.res              : CORRECT
sizeptr.res                   : CORRECT
sizestar.res                  : CORRECT
skip.res                      : CORRECT
sl2.res                       : CORRECT
slen.res                      : PROBLEM
   exn = Failure("OCaml scripting is unsupported.")
smallfn.res                   : CORRECT
sp.res                        : CORRECT
spaces.res                    : CORRECT
spacing.res                   : CORRECT
spl.res                       : CORRECT
starprint.res                 : CORRECT
static.res                    : CORRECT
stm1.res                      : CORRECT
stm10.res                     : CORRECT
stm10_ver1.res                : CORRECT
stm2.res                      : CORRECT
stm3.res                      : CORRECT
stm4.res                      : CORRECT
stm5.res                      : CORRECT
stm6.res                      : CORRECT
stm7.res                      : CORRECT
stm8.res                      : CORRECT
stmt.res                      : CORRECT
str_init.res                  : CORRECT
strangeorder.res              : CORRECT
strid.res                     : CORRECT
strid2.res                    : CORRECT
string.res                    : CORRECT
struct.res                    : CORRECT
struct_metavar.res            : CORRECT
struct_typedef.res            : CORRECT
structfoo.res                 : CORRECT
substruct.res                 : CORRECT
sw.res                        : CORRECT
swap3.res                     : CORRECT
switch.res                    : CORRECT
switchdecl.res                : CORRECT
symbol.res                    : CORRECT
td.res                        : CORRECT
tdnl.res                      : CORRECT
tdplus.res                    : CORRECT
tern.res                      : CORRECT
test0.res                     : CORRECT
test1.res                     : CORRECT
test10.res                    : CORRECT
test10_ver1.res               : CORRECT
test11.res                    : CORRECT
test11_ver1.res               : CORRECT
test12.res                    : CORRECT
test2.res                     : CORRECT
test3.res                     : CORRECT
test4.res                     : CORRECT
test5.res                     : CORRECT
test5_ver1.res                : CORRECT
test6.res                     : CORRECT
test7.res                     : CORRECT
test8.res                     : CORRECT
test9.res                     : CORRECT
test_s.res                    : CORRECT
test_unsigned_meta.res        : CORRECT
testand.res                   : CORRECT
testand2.res                  : CORRECT
three_types.res               : CORRECT
threea.res                    : CORRECT
top.res                       : CORRECT
topdec.res                    : CORRECT
topdec_ver1.res               : CORRECT
topdec_ver2.res               : CORRECT
toplevel_macrostmt.res        : CORRECT
toplevel_struct.res           : CORRECT
triplet.res                   : CORRECT
tup.res                       : CORRECT
twomatch.res                  : CORRECT
twoproto.res                  : CORRECT
ty.res                        : CORRECT
ty1.res                       : CORRECT
ty_tyexp.res                  : CORRECT
tydisj.res                    : CORRECT
tyex.res                      : CORRECT
type.res                      : CORRECT
type1.res                     : CORRECT
type_annotated.res            : CORRECT
type_constraints.res          : CORRECT
type_ver1.res                 : CORRECT
type_ver2.res                 : INCORRECT:PB parsing only in generated-file
    diff (result(<) vs expected_result(>)) = 
    @@ -1,5 +1,5 @@
     int foo() {
    -  int[10] *x;
    +  int *x[10];
       return 0;
     }
     
typedef.res                   : CORRECT
typedef3.res                  : INCORRECT:diff token: link VS p_dev
File <COCCIOUTPUTFILE>, line 7, column 29, charpos = 137
  around = 'link',
  whole content = 	unsigned int iobase = info->link.io.BasePort1;
File "tests/typedef3.res", line 7, column 29, charpos = 137
  around = 'p_dev',
  whole content = 	unsigned int iobase = info->p_dev->io.BasePort1;

    diff (result(<) vs expected_result(>)) = 
    @@ -4,7 +4,7 @@
     
     static void should_work(foo *info)
     {
    -	unsigned int iobase = info->link.io.BasePort1;
    +	unsigned int iobase = info->p_dev->io.BasePort1;
     }
     
     static void does_work(struct bluecard_info_t *info)
typedef_double.res            : CORRECT
typeof.res                    : CORRECT
typin.res                     : CORRECT
unbrace.res                   : CORRECT
undref.res                    : CORRECT
undref2.res                   : PROBLEM
   exn = Failure("OCaml scripting is unsupported.")
undref3.res                   : PROBLEM
   exn = Failure("OCaml scripting is unsupported.")
unelse.res                    : CORRECT
unfree.res                    : CORRECT
unl.res                       : CORRECT
unstruct.res                  : CORRECT
updassign.res                 : CORRECT
useless_cast.res              : CORRECT
varargs.res                   : CORRECT
varargs2.res                  : CORRECT
varargs3.res                  : CORRECT
video1bis.res                 : CORRECT
void.res                      : CORRECT
vpos.res                      : CORRECT
whitespace.res                : CORRECT
wierd_argument.res            : CORRECT
wierdinit.res                 : seems incorrect, but only because of code that was not parsablediff token: dev_link_t VS struct
File "tests/wierdinit.c", line 4, column 1, charpos = 27
  around = 'dev_link_t',
  whole content = 	dev_link_t *link;
File "tests/wierdinit.res", line 4, column 1, charpos = 27
  around = 'struct',
  whole content = 	struct pcmcia_device *link;
wrongcheck.res                : CORRECT
ws2.res                       : CORRECT
xfield.res                    : CORRECT
y2.res                        : CORRECT
zero.res                      : CORRECT
--------------------------------
regression testing  information
--------------------------------
regression file: tests/SCORE_expected.sexp
new test file appeared: 62.res
new test file appeared: a.res
new test file appeared: a3d.res
new test file appeared: a_and_e.res
new test file appeared: a_and_e_ver1.res
new test file appeared: ab.res
new test file appeared: add1.res
new test file appeared: addaft.res
new test file appeared: addbefore.res
new test file appeared: addbeforeafter.res
new test file appeared: addelse.res
new test file appeared: addes.res
new test file appeared: addfield.res
new test file appeared: addfield2.res
new test file appeared: addif.res
new test file appeared: addif1.res
new test file appeared: addif2.res
new test file appeared: addifdef.res
new test file appeared: addifelse.res
new test file appeared: addifelse2.res
new test file appeared: addinc.res
new test file appeared: addtoo.res
new test file appeared: addtrace.res
new test file appeared: after_if.res
new test file appeared: allex.res
new test file appeared: allex2.res
new test file appeared: allex3.res
new test file appeared: andid.res
new test file appeared: anon.res
new test file appeared: anonfield.res
new test file appeared: ar.res
new test file appeared: arg.res
new test file appeared: argument.res
new test file appeared: arparam.res
new test file appeared: array_init.res
new test file appeared: array_size.res
new test file appeared: arraysz.res
new test file appeared: as_stm.res
new test file appeared: attradd.res
new test file appeared: attrs2groups.res
new test file appeared: b1.res
new test file appeared: b2.res
new test file appeared: bad_iso_example.res
new test file appeared: bad_kfree.res
new test file appeared: bad_ptr_print.res
new test file appeared: bad_typedef.res
new test file appeared: badexp.res
new test file appeared: badpos.res
new test file appeared: badtypedef.res
new test file appeared: badwhen.res
new test file appeared: badzero.res
new test file appeared: bc_1.res
new test file appeared: befS.res
new test file appeared: before.res
new test file appeared: ben.res
new test file appeared: bigin.res
new test file appeared: bigrepl.res
new test file appeared: binop.res
new test file appeared: bitfield.res
new test file appeared: bitfield_matching.res
new test file appeared: boolr.res
new test file appeared: braces.res
new test file appeared: branchparen.res
new test file appeared: break.res
new test file appeared: bug1.res
new test file appeared: bugloop.res
new test file appeared: bugon.res
new test file appeared: bus.res
new test file appeared: cards.res
new test file appeared: caseprint.res
new test file appeared: cast.res
new test file appeared: cast_iso.res
new test file appeared: castdecl.res
new test file appeared: cex_wishlist_complex1.res
new test file appeared: cex_wishlist_complex2.res
new test file appeared: cex_wishlist_complex3.res
new test file appeared: change.res
new test file appeared: change_type.res
new test file appeared: changei.res
new test file appeared: com.res
new test file appeared: comadd.res
new test file appeared: comj.res
new test file appeared: comment_brace.res
new test file appeared: comment_brace2.res
new test file appeared: comments.res
new test file appeared: compare.res
new test file appeared: compare_const2.res
new test file appeared: condexp.res
new test file appeared: const.res
new test file appeared: const1bis.res
new test file appeared: const_adding.res
new test file appeared: const_array.res
new test file appeared: const_implicit_iso.res
new test file appeared: constraints.res
new test file appeared: constrem.res
new test file appeared: constructor.res
new test file appeared: constty.res
new test file appeared: constx.res
new test file appeared: countcalls.res
new test file appeared: countcalls_python.res
new test file appeared: countcalls_python.stdout
new test file appeared: cptr.res
new test file appeared: cr.res
new test file appeared: cr1a.res
new test file appeared: cs_check.res
new test file appeared: cst.res
new test file appeared: cst_null.res
new test file appeared: cstr.res
new test file appeared: cststr.res
new test file appeared: csw.res
new test file appeared: dbg.res
new test file appeared: dbg1.res
new test file appeared: dc_close.res
new test file appeared: debug.res
new test file appeared: dec.res
new test file appeared: decl.res
new test file appeared: decl2.res
new test file appeared: decl_space.res
new test file appeared: decl_split.res
new test file appeared: decl_star.res
new test file appeared: declmeta.res
new test file appeared: defe.res
new test file appeared: define_exp.res
new test file appeared: define_param.res
new test file appeared: defineinit.res
new test file appeared: deftodo.res
new test file appeared: delete_function.res
new test file appeared: delp.res
new test file appeared: deref.res
new test file appeared: destroy.res
new test file appeared: devlink.res
new test file appeared: disj.res
new test file appeared: disjexpr.res
new test file appeared: disjexpr_ver1.res
new test file appeared: disjexpr_ver2.res
new test file appeared: disjid.res
new test file appeared: distribute.res
new test file appeared: double.res
new test file appeared: double_assign.res
new test file appeared: double_lines.res
new test file appeared: double_switch.res
new test file appeared: doublepos.res
new test file appeared: doubleswitch.res
new test file appeared: doundo.res
new test file appeared: dowhile.res
new test file appeared: dropbr.res
new test file appeared: dropcom.res
new test file appeared: dropenderr.res
new test file appeared: dropf.res
new test file appeared: dropparam.res
new test file appeared: dtest.res
new test file appeared: eb1.res
new test file appeared: edots.res
new test file appeared: edots_ver1.res
new test file appeared: elsify.res
new test file appeared: empty.res
new test file appeared: end_commas.res
new test file appeared: endif.res
new test file appeared: endnl.res
new test file appeared: endpos.res
new test file appeared: enum.res
new test file appeared: exitc.res
new test file appeared: exitp.res
new test file appeared: exp.res
new test file appeared: expnest.res
new test file appeared: expopt.res
new test file appeared: expopt2.res
new test file appeared: expopt3.res
new test file appeared: expopt3_ver1.res
new test file appeared: expopt3_ver2.res
new test file appeared: extra.res
new test file appeared: failing_andany.res
new test file appeared: fields.res
new test file appeared: fieldsmin.res
new test file appeared: finalize_only.res
new test file appeared: find_long.res
new test file appeared: fix_flow_need.res
new test file appeared: fn_todo.res
new test file appeared: fnptr.res
new test file appeared: fnret.res
new test file appeared: fnty.res
new test file appeared: fntypedef.res
new test file appeared: format.res
new test file appeared: format2.res
new test file appeared: formatlist.res
new test file appeared: fortest.res
new test file appeared: fortype.res
new test file appeared: four.res
new test file appeared: foura.res
new test file appeared: fp.res
new test file appeared: fsh.res
new test file appeared: fun.res
new test file appeared: func.res
new test file appeared: gcc_min_max.res
new test file appeared: getc.res
new test file appeared: gilles-question.res
new test file appeared: gotobreak.res
new test file appeared: hd.res
new test file appeared: headers.res
new test file appeared: hex.res
new test file appeared: hil1.res
new test file appeared: icomma.res
new test file appeared: idcon_ocaml.res
new test file appeared: idcon_python.res
new test file appeared: idstr.res
new test file appeared: if.res
new test file appeared: ifadd.res
new test file appeared: ifbr.res
new test file appeared: ifd.res
new test file appeared: ifdef1.res
new test file appeared: ifdef2.res
new test file appeared: ifdef3.res
new test file appeared: ifdef4.res
new test file appeared: ifdef5.res
new test file appeared: ifdef6.res
new test file appeared: ifdef6a.res
new test file appeared: ifdefmeta.res
new test file appeared: ifdefmeta1.res
new test file appeared: ifdefmeta2.res
new test file appeared: ifdefmeta3.res
new test file appeared: ifend.res
new test file appeared: ifgoto.res
new test file appeared: ifields.res
new test file appeared: ifif.res
new test file appeared: ifreturn.res
new test file appeared: ifreturn3.res
new test file appeared: ifreturn4.res
new test file appeared: ifreturn6.res
new test file appeared: ifzer.res
new test file appeared: ifzz.res
new test file appeared: inc.res
new test file appeared: incdir.res
new test file appeared: incl.res
new test file appeared: incl2.res
new test file appeared: inclifdef.res
new test file appeared: include.res
new test file appeared: incompatible_value.res
new test file appeared: incpos.res
new test file appeared: incpos1.res
new test file appeared: inherited.res
new test file appeared: inherited_ver1.res
new test file appeared: inhmet.res
new test file appeared: inhpos.res
new test file appeared: initializer.res
new test file appeared: initializer_many_fields.res
new test file appeared: inline.res
new test file appeared: insdef.res
new test file appeared: int2bool-local.res
new test file appeared: introbrace.res
new test file appeared: invert.res
new test file appeared: ip.res
new test file appeared: ip2.res
new test file appeared: isococci.res
new test file appeared: isoif.res
new test file appeared: isotest.res
new test file appeared: isotest2.res
new test file appeared: iteration.res
new test file appeared: iteration_after_merge.res
new test file appeared: iterator.res
new test file appeared: iterprint.res
new test file appeared: jloop1.res
new test file appeared: julia10.res
new test file appeared: julia7.res
new test file appeared: justremove.res
new test file appeared: keep_comma.res
new test file appeared: km.res
new test file appeared: kmalloc.res
new test file appeared: kmc.res
new test file appeared: kr.res
new test file appeared: ktype.res
new test file appeared: ktype2.res
new test file appeared: labels_metastatement.res
new test file appeared: labels_metastatement_ver1.res
new test file appeared: lid.res
new test file appeared: line_before_last.res
new test file appeared: list_test.res
new test file appeared: local.res
new test file appeared: localglobal.res
new test file appeared: localid.res
new test file appeared: log.res
new test file appeared: long.res
new test file appeared: longconst.res
new test file appeared: longline2.res
new test file appeared: longlong.res
new test file appeared: longlongint.res
new test file appeared: loop.res
new test file appeared: lvalue.res
new test file appeared: macro.res
new test file appeared: macro_int16.res
new test file appeared: match_init.res
new test file appeared: match_no_meta.res
new test file appeared: max.res
new test file appeared: md1.res
new test file appeared: md2.res
new test file appeared: md3.res
new test file appeared: mdadd.res
new test file appeared: mdec.res
new test file appeared: mdecl.res
new test file appeared: mdeclp.res
new test file appeared: mdeclp2.res
new test file appeared: mdeclrep.res
new test file appeared: memory.res
new test file appeared: merge_after_iteration.res
new test file appeared: metahex.res
new test file appeared: metaline.res
new test file appeared: metaops.res
new test file appeared: metaops0.res
new test file appeared: metaruleelem.res
new test file appeared: metastatement2.res
new test file appeared: metastatement_for.res
new test file appeared: metastatement_if.res
new test file appeared: mincom.res
new test file appeared: minenum.res
new test file appeared: minenum1.res
new test file appeared: minfn.res
new test file appeared: mini_null_ref.res
new test file appeared: miniswap.res
new test file appeared: minstruct.res
new test file appeared: minusdots.res
new test file appeared: minusdots_ver1.res
new test file appeared: multi_func1.res
new test file appeared: multi_initialize_finalize.res
new test file appeared: multichars.res
new test file appeared: multidec.res
new test file appeared: multidecl3.res
new test file appeared: multipath.res
new test file appeared: multiplus.res
new test file appeared: multiremove.res
new test file appeared: multistruct.res
new test file appeared: multitype.res
new test file appeared: multitypedef.res
new test file appeared: multivars.res
new test file appeared: na.res
new test file appeared: nameless.res
new test file appeared: nest.res
new test file appeared: nestone.res
new test file appeared: nestseq.res
new test file appeared: neststruct.res
new test file appeared: nl.res
new test file appeared: noa.res
new test file appeared: nocast.res
new test file appeared: noret.res
new test file appeared: not.res
new test file appeared: notest.res
new test file appeared: notnot.res
new test file appeared: noty.res
new test file appeared: noty2.res
new test file appeared: null_bool.res
new test file appeared: null_type.res
new test file appeared: oddifdef.res
new test file appeared: of.res
new test file appeared: oneline.res
new test file appeared: op.res
new test file appeared: opt.res
new test file appeared: optional_qualifier.res
new test file appeared: optional_storage.res
new test file appeared: orexp.res
new test file appeared: output.res
new test file appeared: output.stdout
new test file appeared: output_init.res
new test file appeared: overshoot.res
new test file appeared: p1p2.res
new test file appeared: p9.res
new test file appeared: pa.res
new test file appeared: param.res
new test file appeared: param_end.res
new test file appeared: param_to_exp.res
new test file appeared: param_ver1.res
new test file appeared: parameters_dots.res
new test file appeared: parenmac.res
new test file appeared: partial.res
new test file appeared: partialmd.res
new test file appeared: partialmd2.res
new test file appeared: partialmd3.res
new test file appeared: pb_distribute_type.res
new test file appeared: pb_distribute_type2.res
new test file appeared: pb_distribute_type3.res
new test file appeared: pb_distribute_type4.res
new test file appeared: pb_params_iso.res
new test file appeared: pb_parsing_macro.res
new test file appeared: pb_tag_symbols.res
new test file appeared: pcim.res
new test file appeared: pcomma.res
new test file appeared: plus33.res
new test file appeared: pmac.res
new test file appeared: poscon.res
new test file appeared: posiso.res
new test file appeared: positionc.res
new test file appeared: post.res
new test file appeared: pragmatest1.res
new test file appeared: print_return.res
new test file appeared: proto.res
new test file appeared: proto2.res
new test file appeared: proto_ver1.res
new test file appeared: proto_ver2.res
new test file appeared: protoassert.res
new test file appeared: protox.res
new test file appeared: ptrar.res
new test file appeared: python_iteration.res
new test file appeared: python_iteration.stdout
new test file appeared: python_mdecl.res
new test file appeared: python_mdeclp.res
new test file appeared: python_poscon.res
new test file appeared: qualifier.res
new test file appeared: range.res
new test file appeared: rcu3.res
new test file appeared: regexp.res
new test file appeared: regexp2.res
new test file appeared: regexp3.res
new test file appeared: rem1.res
new test file appeared: rem2.res
new test file appeared: remaft.res
new test file appeared: remcom.res
new test file appeared: remodif.res
new test file appeared: remove-code-in-branch1.res
new test file appeared: remove_call.res
new test file appeared: remparam.res
new test file appeared: rems.res
new test file appeared: rems1.res
new test file appeared: remstruct.res
new test file appeared: replace_typedef.res
new test file appeared: reserved.res
new test file appeared: retest.res
new test file appeared: retmacro.res
new test file appeared: rets.res
new test file appeared: return.res
new test file appeared: return_implicit.res
new test file appeared: retval.res
new test file appeared: retval2.res
new test file appeared: reusevar.res
new test file appeared: roa.res
new test file appeared: rptr.res
new test file appeared: same_expr.res
new test file appeared: scope_problem.res
new test file appeared: sd_2.res
new test file appeared: serio.res
new test file appeared: shared_brace.res
new test file appeared: signed.res
new test file appeared: sis.res
new test file appeared: sizeof.res
new test file appeared: sizeof_julia.res
new test file appeared: sizeptr.res
new test file appeared: sizestar.res
new test file appeared: skip.res
new test file appeared: sl2.res
new test file appeared: slen.res
new test file appeared: smallfn.res
new test file appeared: sp.res
new test file appeared: spaces.res
new test file appeared: spacing.res
new test file appeared: spl.res
new test file appeared: starprint.res
new test file appeared: static.res
new test file appeared: stm1.res
new test file appeared: stm10.res
new test file appeared: stm10_ver1.res
new test file appeared: stm2.res
new test file appeared: stm3.res
new test file appeared: stm4.res
new test file appeared: stm5.res
new test file appeared: stm6.res
new test file appeared: stm7.res
new test file appeared: stm8.res
new test file appeared: stmt.res
new test file appeared: str_init.res
new test file appeared: strangeorder.res
new test file appeared: strid.res
new test file appeared: strid2.res
new test file appeared: string.res
new test file appeared: struct.res
new test file appeared: struct_metavar.res
new test file appeared: struct_typedef.res
new test file appeared: structfoo.res
new test file appeared: substruct.res
new test file appeared: sw.res
new test file appeared: swap3.res
new test file appeared: switch.res
new test file appeared: switchdecl.res
new test file appeared: symbol.res
new test file appeared: td.res
new test file appeared: tdnl.res
new test file appeared: tdplus.res
new test file appeared: tern.res
new test file appeared: test0.res
new test file appeared: test1.res
new test file appeared: test10.res
new test file appeared: test10_ver1.res
new test file appeared: test11.res
new test file appeared: test11_ver1.res
new test file appeared: test12.res
new test file appeared: test2.res
new test file appeared: test3.res
new test file appeared: test4.res
new test file appeared: test5.res
new test file appeared: test5_ver1.res
new test file appeared: test6.res
new test file appeared: test7.res
new test file appeared: test8.res
new test file appeared: test9.res
new test file appeared: test_s.res
new test file appeared: test_unsigned_meta.res
new test file appeared: testand.res
new test file appeared: testand2.res
new test file appeared: three_types.res
new test file appeared: threea.res
new test file appeared: top.res
new test file appeared: topdec.res
new test file appeared: topdec_ver1.res
new test file appeared: topdec_ver2.res
new test file appeared: toplevel_macrostmt.res
new test file appeared: toplevel_struct.res
new test file appeared: triplet.res
new test file appeared: tup.res
new test file appeared: twomatch.res
new test file appeared: twoproto.res
new test file appeared: ty.res
new test file appeared: ty1.res
new test file appeared: ty_tyexp.res
new test file appeared: tydisj.res
new test file appeared: tyex.res
new test file appeared: type.res
new test file appeared: type1.res
new test file appeared: type_annotated.res
new test file appeared: type_constraints.res
new test file appeared: type_ver1.res
new test file appeared: type_ver2.res
new test file appeared: typedef.res
new test file appeared: typedef3.res
new test file appeared: typedef_double.res
new test file appeared: typeof.res
new test file appeared: typin.res
new test file appeared: unbrace.res
new test file appeared: undref.res
new test file appeared: undref2.res
new test file appeared: undref3.res
new test file appeared: unelse.res
new test file appeared: unfree.res
new test file appeared: unl.res
new test file appeared: unstruct.res
new test file appeared: updassign.res
new test file appeared: useless_cast.res
new test file appeared: varargs.res
new test file appeared: varargs2.res
new test file appeared: varargs3.res
new test file appeared: video1bis.res
new test file appeared: void.res
new test file appeared: vpos.res
new test file appeared: whitespace.res
new test file appeared: wierd_argument.res
new test file appeared: wierdinit.res
new test file appeared: wrongcheck.res
new test file appeared: ws2.res
new test file appeared: xfield.res
new test file appeared: y2.res
new test file appeared: zero.res
--------------------------------
total score
--------------------------------
good = 513/555
Current score is greater than expected :)
(was expecting 0 but got 513)
Generating new expected score file and saving old one
mv tests/SCORE_expected.sexp tests/SCORE_expected.sexp.save [y/n] ?
answer by yes or no
make[1]: *** [Makefile:267: check] Error 255
make[1]: Leaving directory '$(@D)'
