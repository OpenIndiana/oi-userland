UNSUPPORTED: gdb.ada/O2_float_param.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/access_to_packed_array.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/addr_arith.exp: compilation foo_na07_019.adb
UNSUPPORTED: gdb.ada/aliased_array.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/arr_arr.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/array_bounds.exp: compilation bar.adb
UNSUPPORTED: gdb.ada/array_char_idx.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/array_of_variable_length.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/array_ptr_renaming.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/array_return.exp: compilation p.adb
UNSUPPORTED: gdb.ada/array_subscript_addr.exp: compilation p.adb
UNSUPPORTED: gdb.ada/arraydim.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/arrayidx.exp: compilation p.adb
UNSUPPORTED: gdb.ada/arrayparam.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/arrayptr.exp: compilation foo.adb
PASS: gdb.ada/assign_1.exp: changing the language to ada
PASS: gdb.ada/assign_1.exp: set convenience variable $xxx to 1
UNSUPPORTED: gdb.ada/atomic_enum.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/attr_ref_and_charlit.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/bad-task-bp-keyword.exp: compilation foo.adb
PASS: gdb.ada/boolean_expr.exp: changing the language to ada
PASS: gdb.ada/boolean_expr.exp: print 1 = 2
PASS: gdb.ada/boolean_expr.exp: print 3 = 3
UNSUPPORTED: gdb.ada/bp_enum_homonym.exp: compilation p.adb
UNSUPPORTED: gdb.ada/bp_on_var.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/bp_range_type.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/bp_reset.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/byte_packed_arr.exp: compilation reprod_main.adb
UNSUPPORTED: gdb.ada/call_pn.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/catch_ex.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/char_enum.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/char_param.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/complete.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/cond_lang.exp: compilation a.adb
UNSUPPORTED: gdb.ada/disc_arr_bound.exp: compilation foo_n612_026.adb
UNSUPPORTED: gdb.ada/dot_all.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/dyn_arrayidx.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/dyn_loc.exp: compilation p.adb
UNSUPPORTED: gdb.ada/enum_idx_packed.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/exec_changed.exp: compilation first.adb
UNSUPPORTED: gdb.ada/expr_delims.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/exprs.exp: compilation p.adb
UNSUPPORTED: gdb.ada/fin_fun_out.exp: compilation foo_o525_013.adb
UNSUPPORTED: gdb.ada/fixed_cmp.exp: compilation fixed.adb
UNSUPPORTED: gdb.ada/fixed_points.exp: compilation fixed_points.adb
UNSUPPORTED: gdb.ada/float_param.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/formatted_ref.exp: compilation formatted_ref.adb
UNTESTED: gdb.ada/formatted_ref.exp: formatted-ref.exp
UNSUPPORTED: gdb.ada/frame_args.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/fullname_bp.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/fun_addr.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/fun_in_declare.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/fun_overload_menu.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/fun_renaming.exp: compilation fun_renaming.adb
UNSUPPORTED: gdb.ada/funcall_char.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/funcall_param.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/funcall_ref.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/homonym.exp: compilation homonym_main.adb
UNSUPPORTED: gdb.ada/info_exc.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/info_locals_renaming.exp: compilation foo.adb
PASS: gdb.ada/info_types.exp: set lang ada
PASS: gdb.ada/info_types.exp: info types new_integer_type
UNSUPPORTED: gdb.ada/int_deref.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/interface.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/iwide.exp: compilation p.adb
UNSUPPORTED: gdb.ada/lang_switch.exp: compilation lang_switch.adb
UNSUPPORTED: gdb.ada/mi_catch_ex.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/mi_dyn_arr.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/mi_ex_cond.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/mi_exc_info.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/mi_interface.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/mi_task_arg.exp: compilation task_switch.adb
UNSUPPORTED: gdb.ada/mi_task_info.exp: compilation task_switch.adb
UNSUPPORTED: gdb.ada/mi_var_array.exp: compilation bar.adb
UNSUPPORTED: gdb.ada/mod_from_name.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/n_arr_bound.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/nested.exp: compilation hello.adb
UNSUPPORTED: gdb.ada/null_array.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/null_record.exp: compilation null_record.adb
UNSUPPORTED: gdb.ada/operator_bp.exp: compilation ops_test.adb
UNSUPPORTED: gdb.ada/optim_drec.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/out_of_line_in_inlined.exp: compilation foo_o224_021.adb
UNSUPPORTED: gdb.ada/packed_array.exp: compilation pa.adb
UNSUPPORTED: gdb.ada/packed_tagged.exp: compilation comp_bug.adb
UNSUPPORTED: gdb.ada/pckd_arr_ren.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/pckd_neg.exp: compilation foo_o508_021.adb
UNSUPPORTED: gdb.ada/pkd_arr_elem.exp: compilation failure.adb
UNSUPPORTED: gdb.ada/pp-rec-component.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/print_chars.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/print_pc.exp: compilation dummy.adb
UNSUPPORTED: gdb.ada/ptr_typedef.exp: compilation foo.adb
PASS: gdb.ada/ptype_arith_binop.exp: set lang ada
PASS: gdb.ada/ptype_arith_binop.exp: ptype 3 * 2.0
PASS: gdb.ada/ptype_arith_binop.exp: ptype 3 / 2.0
UNSUPPORTED: gdb.ada/ptype_field.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/ptype_tagged_param.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/py_range.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/rdv_wait.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/rec_comp.exp: compilation bar_o203_012.adb
UNSUPPORTED: gdb.ada/rec_return.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/ref_param.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/ref_tick_size.exp: compilation p.adb
UNSUPPORTED: gdb.ada/same_enum.exp: compilation a.adb
UNSUPPORTED: gdb.ada/set_pckd_arr_elt.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/set_wstr.exp: compilation a.adb
UNSUPPORTED: gdb.ada/small_reg_param.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/start.exp: compilation dummy.adb
UNSUPPORTED: gdb.ada/str_ref_cmp.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/str_uninit.exp: compilation parse.adb
UNSUPPORTED: gdb.ada/sym_print_name.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/taft_type.exp: compilation p.adb
UNSUPPORTED: gdb.ada/tagged.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/tagged_access.exp: compilation p.adb
UNSUPPORTED: gdb.ada/tagged_not_init.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/task_bp.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/tasks.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/tick_last_segv.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/tick_length_array_enum_idx.exp: compilation foo_n207_004.adb
UNSUPPORTED: gdb.ada/type_coercion.exp: compilation assign.adb
UNSUPPORTED: gdb.ada/unc_arr_ptr_in_var_rec.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/uninitialized_vars.exp: compilation parse.adb
UNSUPPORTED: gdb.ada/var_arr_attrs.exp: compilation foo_o115_002.adb
UNSUPPORTED: gdb.ada/var_arr_typedef.exp: compilation var_arr_typedef.adb
UNSUPPORTED: gdb.ada/var_rec_arr.exp: compilation foo_na09_042.adb
UNSUPPORTED: gdb.ada/variant_record_packed_array.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/watch_arg.exp: compilation watch.adb
UNSUPPORTED: gdb.ada/whatis_array_val.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/widewide.exp: compilation foo.adb
UNSUPPORTED: gdb.ada/win_fu_syms.exp: compilation foo.adb
UNSUPPORTED: gdb.arch/disp-step-insn-reloc.exp: displaced stepping
FAIL: gdb.arch/ftrace-insn-reloc.exp: can't run to main to check for trace support
FAIL: gdb.arch/i386-avx.exp: check whether processor supports AVX
PASS: gdb.arch/i386-avx.exp: set first breakpoint in main
FAIL: gdb.arch/i386-avx.exp: continue to breakpoint: continue to first breakpoint in main
FAIL: gdb.arch/i386-avx.exp: check float contents of %ymm0
FAIL: gdb.arch/i386-avx.exp: check int8 contents of %ymm0
FAIL: gdb.arch/i386-avx.exp: check float contents of %ymm1
FAIL: gdb.arch/i386-avx.exp: check int8 contents of %ymm1
FAIL: gdb.arch/i386-avx.exp: check float contents of %ymm2
FAIL: gdb.arch/i386-avx.exp: check int8 contents of %ymm2
FAIL: gdb.arch/i386-avx.exp: check float contents of %ymm3
FAIL: gdb.arch/i386-avx.exp: check int8 contents of %ymm3
FAIL: gdb.arch/i386-avx.exp: check float contents of %ymm4
FAIL: gdb.arch/i386-avx.exp: check int8 contents of %ymm4
FAIL: gdb.arch/i386-avx.exp: check float contents of %ymm5
FAIL: gdb.arch/i386-avx.exp: check int8 contents of %ymm5
FAIL: gdb.arch/i386-avx.exp: check float contents of %ymm6
FAIL: gdb.arch/i386-avx.exp: check int8 contents of %ymm6
FAIL: gdb.arch/i386-avx.exp: check float contents of %ymm7
FAIL: gdb.arch/i386-avx.exp: check int8 contents of %ymm7
PASS: gdb.arch/i386-avx.exp: set %ymm0
PASS: gdb.arch/i386-avx.exp: set %ymm1
PASS: gdb.arch/i386-avx.exp: set %ymm2
PASS: gdb.arch/i386-avx.exp: set %ymm3
PASS: gdb.arch/i386-avx.exp: set %ymm4
PASS: gdb.arch/i386-avx.exp: set %ymm5
PASS: gdb.arch/i386-avx.exp: set %ymm6
PASS: gdb.arch/i386-avx.exp: set %ymm7
PASS: gdb.arch/i386-avx.exp: set second breakpoint in main
FAIL: gdb.arch/i386-avx.exp: continue to breakpoint: continue to second breakpoint in main
FAIL: gdb.arch/i386-avx.exp: check contents of data[0]
FAIL: gdb.arch/i386-avx.exp: check contents of data[1]
FAIL: gdb.arch/i386-avx.exp: check contents of data[2]
FAIL: gdb.arch/i386-avx.exp: check contents of data[3]
FAIL: gdb.arch/i386-avx.exp: check contents of data[4]
FAIL: gdb.arch/i386-avx.exp: check contents of data[5]
FAIL: gdb.arch/i386-avx.exp: check contents of data[6]
FAIL: gdb.arch/i386-avx.exp: check contents of data[7]
UNTESTED: gdb.arch/i386-avx512.exp: could not run to main
PASS: gdb.arch/i386-biarch-core.exp: complete set gnutarget
PASS: gdb.arch/i386-biarch-core.exp: load core file
PASS: gdb.arch/i386-biarch-core.exp: .text is readable
PASS: gdb.arch/i386-byte.exp: set first breakpoint in main
FAIL: gdb.arch/i386-byte.exp: continue to breakpoint: continue to first breakpoint in main
FAIL: gdb.arch/i386-byte.exp: check contents of %al
FAIL: gdb.arch/i386-byte.exp: check contents of %ah
FAIL: gdb.arch/i386-byte.exp: check contents of %bl
FAIL: gdb.arch/i386-byte.exp: check contents of %bh
FAIL: gdb.arch/i386-byte.exp: check contents of %cl
FAIL: gdb.arch/i386-byte.exp: check contents of %ch
FAIL: gdb.arch/i386-byte.exp: check contents of %dl
FAIL: gdb.arch/i386-byte.exp: check contents of %dh
PASS: gdb.arch/i386-byte.exp: set %al
PASS: gdb.arch/i386-byte.exp: set %ah
PASS: gdb.arch/i386-byte.exp: set %bl
PASS: gdb.arch/i386-byte.exp: set %bh
PASS: gdb.arch/i386-byte.exp: set %cl
PASS: gdb.arch/i386-byte.exp: set %ch
PASS: gdb.arch/i386-byte.exp: set %dl
PASS: gdb.arch/i386-byte.exp: set %dh
PASS: gdb.arch/i386-byte.exp: set second breakpoint in main
FAIL: gdb.arch/i386-byte.exp: continue to breakpoint: continue to second breakpoint in main
PASS: gdb.arch/i386-byte.exp: check contents of %al
PASS: gdb.arch/i386-byte.exp: check contents of %ah
PASS: gdb.arch/i386-byte.exp: check contents of %bl
PASS: gdb.arch/i386-byte.exp: check contents of %bh
PASS: gdb.arch/i386-byte.exp: check contents of %cl
PASS: gdb.arch/i386-byte.exp: check contents of %ch
PASS: gdb.arch/i386-byte.exp: check contents of %dl
PASS: gdb.arch/i386-byte.exp: check contents of %dh
PASS: gdb.arch/i386-disp-step.exp: set displaced-stepping on
PASS: gdb.arch/i386-disp-step.exp: show displaced-stepping
FAIL: gdb.arch/i386-disp-step.exp: can't run to main
UNTESTED: gdb.arch/i386-dr3-watch.exp: could not run to main
FAIL: gdb.arch/i386-float.exp: can't run to main
UNTESTED: gdb.arch/i386-gnu-cfi.exp: failed to compile
UNTESTED: gdb.arch/i386-mpx-call.exp: failed to prepare
UNTESTED: gdb.arch/i386-mpx-map.exp: failed to prepare
UNTESTED: gdb.arch/i386-mpx-sigsegv.exp: failed to prepare
UNTESTED: gdb.arch/i386-mpx-simple_segv.exp: could not run to main
UNTESTED: gdb.arch/i386-mpx.exp: could not run to main
PASS: gdb.arch/i386-permbkpt.exp: first permanent break
PASS: gdb.arch/i386-permbkpt.exp: second permanent break
UNTESTED: gdb.arch/i386-pkru.exp: could not run to main
FAIL: gdb.arch/i386-prologue.exp: continue to standard
PASS: gdb.arch/i386-prologue.exp: skip breakpoint in standard
FAIL: gdb.arch/i386-prologue.exp: backtrace in standard
FAIL: gdb.arch/i386-prologue.exp: saved registers in standard
PASS: gdb.arch/i386-prologue.exp: break *(stack_align_ecx + 7)
FAIL: gdb.arch/i386-prologue.exp: continue to stack_align_ecx + 7
FAIL: gdb.arch/i386-prologue.exp: first backtrace in stack_align_ecx
FAIL: gdb.arch/i386-prologue.exp: continue in stack_align_ecx
PASS: gdb.arch/i386-prologue.exp: skip breakpoint in stack_align_ecx
FAIL: gdb.arch/i386-prologue.exp: second backtrace in stack_align_ecx
FAIL: gdb.arch/i386-prologue.exp: saved registers in stack_align_ecx
PASS: gdb.arch/i386-prologue.exp: break *(stack_align_edx + 7)
FAIL: gdb.arch/i386-prologue.exp: continue to stack_align_edx + 7
FAIL: gdb.arch/i386-prologue.exp: first backtrace in stack_align_edx
FAIL: gdb.arch/i386-prologue.exp: continue in stack_align_edx
PASS: gdb.arch/i386-prologue.exp: skip breakpoint in stack_align_edx
FAIL: gdb.arch/i386-prologue.exp: second backtrace in stack_align_edx
FAIL: gdb.arch/i386-prologue.exp: saved registers in stack_align_edx
PASS: gdb.arch/i386-prologue.exp: break *(stack_align_eax + 7)
FAIL: gdb.arch/i386-prologue.exp: continue to stack_align_eax + 7
FAIL: gdb.arch/i386-prologue.exp: first backtrace in stack_align_eax
FAIL: gdb.arch/i386-prologue.exp: continue in stack_align_eax
PASS: gdb.arch/i386-prologue.exp: skip breakpoint in stack_align_eax
FAIL: gdb.arch/i386-prologue.exp: second backtrace in stack_align_eax
FAIL: gdb.arch/i386-prologue.exp: saved registers in stack_align_eax
FAIL: gdb.arch/i386-prologue.exp: continue to gdb1253
PASS: gdb.arch/i386-prologue.exp: skip breakpoint in gdb1253
FAIL: gdb.arch/i386-prologue.exp: backtrace in gdb1253
FAIL: gdb.arch/i386-prologue.exp: saved registers in gdb1253
FAIL: gdb.arch/i386-prologue.exp: continue to gdb1718
PASS: gdb.arch/i386-prologue.exp: skip breakpoint in gdb1718
FAIL: gdb.arch/i386-prologue.exp: backtrace in gdb1718
KFAIL: gdb.arch/i386-prologue.exp: saved registers in gdb1718 (PRMS: gdb/1718)
FAIL: gdb.arch/i386-prologue.exp: continue to gdb1338
PASS: gdb.arch/i386-prologue.exp: skip breakpoint in gdb1338
FAIL: gdb.arch/i386-prologue.exp: backtrace in gdb1338
FAIL: gdb.arch/i386-prologue.exp: saved registers in gdb1338
FAIL: gdb.arch/i386-prologue.exp: check jump_at_beginning prologue end
FAIL: gdb.arch/i386-signal.exp: backtrace 10
FAIL: gdb.arch/i386-signal.exp: finish
FAIL: gdb.arch/i386-size-overlap.exp: run past main (GDB internal error)
FAIL: gdb.arch/i386-size-overlap.exp: backtrace shows the outer function
FAIL: gdb.arch/i386-size.exp: run past main (GDB internal error)
FAIL: gdb.arch/i386-size.exp: backtrace shows no function
FAIL: gdb.arch/i386-size.exp: disassemble stops at end of main
FAIL: gdb.arch/i386-sse.exp: check whether processor supports SSE
PASS: gdb.arch/i386-sse.exp: set first breakpoint in main
FAIL: gdb.arch/i386-sse.exp: continue to breakpoint: continue to first breakpoint in main
FAIL: gdb.arch/i386-sse.exp: check float contents of %xmm0
FAIL: gdb.arch/i386-sse.exp: check int8 contents of %xmm0
FAIL: gdb.arch/i386-sse.exp: check float contents of %xmm1
FAIL: gdb.arch/i386-sse.exp: check int8 contents of %xmm1
FAIL: gdb.arch/i386-sse.exp: check float contents of %xmm2
FAIL: gdb.arch/i386-sse.exp: check int8 contents of %xmm2
FAIL: gdb.arch/i386-sse.exp: check float contents of %xmm3
FAIL: gdb.arch/i386-sse.exp: check int8 contents of %xmm3
FAIL: gdb.arch/i386-sse.exp: check float contents of %xmm4
FAIL: gdb.arch/i386-sse.exp: check int8 contents of %xmm4
FAIL: gdb.arch/i386-sse.exp: check float contents of %xmm5
FAIL: gdb.arch/i386-sse.exp: check int8 contents of %xmm5
FAIL: gdb.arch/i386-sse.exp: check float contents of %xmm6
FAIL: gdb.arch/i386-sse.exp: check int8 contents of %xmm6
FAIL: gdb.arch/i386-sse.exp: check float contents of %xmm7
FAIL: gdb.arch/i386-sse.exp: check int8 contents of %xmm7
PASS: gdb.arch/i386-sse.exp: set %xmm0
PASS: gdb.arch/i386-sse.exp: set %xmm1
PASS: gdb.arch/i386-sse.exp: set %xmm2
PASS: gdb.arch/i386-sse.exp: set %xmm3
PASS: gdb.arch/i386-sse.exp: set %xmm4
PASS: gdb.arch/i386-sse.exp: set %xmm5
PASS: gdb.arch/i386-sse.exp: set %xmm6
PASS: gdb.arch/i386-sse.exp: set %xmm7
PASS: gdb.arch/i386-sse.exp: set second breakpoint in main
FAIL: gdb.arch/i386-sse.exp: continue to breakpoint: continue to second breakpoint in main
FAIL: gdb.arch/i386-sse.exp: check contents of data[0]
FAIL: gdb.arch/i386-sse.exp: check contents of data[1]
FAIL: gdb.arch/i386-sse.exp: check contents of data[2]
FAIL: gdb.arch/i386-sse.exp: check contents of data[3]
FAIL: gdb.arch/i386-sse.exp: check contents of data[4]
FAIL: gdb.arch/i386-sse.exp: check contents of data[5]
FAIL: gdb.arch/i386-sse.exp: check contents of data[6]
FAIL: gdb.arch/i386-sse.exp: check contents of data[7]
PASS: gdb.arch/i386-stap-eval-lang-ada.exp: set language ada
FAIL: gdb.arch/i386-unwind.exp: run past gdb1435 (GDB internal error)
FAIL: gdb.arch/i386-unwind.exp: backtrace past gdb1435
PASS: gdb.arch/i386-word.exp: set first breakpoint in main
FAIL: gdb.arch/i386-word.exp: continue to breakpoint: continue to first breakpoint in main
FAIL: gdb.arch/i386-word.exp: check contents of %ax
FAIL: gdb.arch/i386-word.exp: check contents of %bx
FAIL: gdb.arch/i386-word.exp: check contents of %cx
FAIL: gdb.arch/i386-word.exp: check contents of %dx
PASS: gdb.arch/i386-word.exp: set %ax
PASS: gdb.arch/i386-word.exp: set %bx
PASS: gdb.arch/i386-word.exp: set %cx
PASS: gdb.arch/i386-word.exp: set %dx
PASS: gdb.arch/i386-word.exp: set second breakpoint in main
FAIL: gdb.arch/i386-word.exp: continue to breakpoint: continue to second breakpoint in main
PASS: gdb.arch/i386-word.exp: check contents of %ax
PASS: gdb.arch/i386-word.exp: check contents of %bx
PASS: gdb.arch/i386-word.exp: check contents of %cx
PASS: gdb.arch/i386-word.exp: check contents of %dx
UNTESTED: gdb.arch/ppc64-isa207-atomic-inst.exp: skipping powerpc isa 207 atomic sequences test
FAIL: gdb.asm/asm-source.exp: f at main
FAIL: gdb.asm/asm-source.exp: n at main
FAIL: gdb.asm/asm-source.exp: next over macro
FAIL: gdb.asm/asm-source.exp: step into foo2
PASS: gdb.asm/asm-source.exp: info target
PASS: gdb.asm/asm-source.exp: info symbol
PASS: gdb.asm/asm-source.exp: list
PASS: gdb.asm/asm-source.exp: search
FAIL: gdb.asm/asm-source.exp: f in foo2
FAIL: gdb.asm/asm-source.exp: n in foo2
FAIL: gdb.asm/asm-source.exp: bt ALL in foo2
FAIL: gdb.asm/asm-source.exp: bt 2 in foo2
PASS: gdb.asm/asm-source.exp: s 2
PASS: gdb.asm/asm-source.exp: n 2
FAIL: gdb.asm/asm-source.exp: bt 3 in foo3
PASS: gdb.asm/asm-source.exp: info source asmsrc1.s
FAIL: gdb.asm/asm-source.exp: finish from foo3
FAIL: gdb.asm/asm-source.exp: info source asmsrc2.s
PASS: gdb.asm/asm-source.exp: info sources
FAIL: gdb.asm/asm-source.exp: info line
FAIL: gdb.asm/asm-source.exp: next over foo3
FAIL: gdb.asm/asm-source.exp: return from foo2
FAIL: gdb.asm/asm-source.exp: look at global variable
FAIL: gdb.asm/asm-source.exp: x/i &globalvar (memory read error)
FAIL: gdb.asm/asm-source.exp: disassem &globalvar, &globalvar+1
FAIL: gdb.asm/asm-source.exp: look at static variable
FAIL: gdb.asm/asm-source.exp: x/i &staticvar (memory read error)
FAIL: gdb.asm/asm-source.exp: disassem &staticvar, &staticvar+1
FAIL: gdb.asm/asm-source.exp: look at static function
FAIL: gdb.base/a2-run.exp: run "a2-run" with no args (GDB internal error)
FAIL: gdb.base/a2-run.exp: run "a2-run" with arg (GDB internal error)
FAIL: gdb.base/a2-run.exp: run "a2-run" again with same args (GDB internal error)
PASS: gdb.base/a2-run.exp: set args
FAIL: gdb.base/a2-run.exp: run after setting args to nil (GDB internal error)
PASS: gdb.base/a2-run.exp: set args 6
FAIL: gdb.base/a2-run.exp: run "a2-run" again after setting args (GDB internal error)
FAIL: gdb.base/a2-run.exp: run "a2-run" with shell (got interactive prompt)
FAIL: gdb.base/advance.exp: can't run to main
PASS: gdb.base/alias.exp: alias -a set2=set
PASS: gdb.base/alias.exp: set2 print elements 42
PASS: gdb.base/alias.exp: verify set2
PASS: gdb.base/alias.exp: abbrev set2 not present in help command list
PASS: gdb.base/alias.exp: alias -a set3= set
PASS: gdb.base/alias.exp: set3 print elements 43
PASS: gdb.base/alias.exp: verify set3
PASS: gdb.base/alias.exp: abbrev set3 not present in help command list
PASS: gdb.base/alias.exp: alias -a set4 =set
PASS: gdb.base/alias.exp: set4 print elements 44
PASS: gdb.base/alias.exp: verify set4
PASS: gdb.base/alias.exp: abbrev set4 not present in help command list
PASS: gdb.base/alias.exp: alias -a set5 = set
PASS: gdb.base/alias.exp: set5 print elements 45
PASS: gdb.base/alias.exp: verify set5
PASS: gdb.base/alias.exp: abbrev set5 not present in help command list
PASS: gdb.base/alias.exp: alias -a -- set6 = set
PASS: gdb.base/alias.exp: set6 print elements 46
PASS: gdb.base/alias.exp: verify set6
PASS: gdb.base/alias.exp: abbrev set6 not present in help command list
PASS: gdb.base/alias.exp: alias -a -- -a = set
PASS: gdb.base/alias.exp: -a print elements 47
PASS: gdb.base/alias.exp: verify -a
PASS: gdb.base/alias.exp: abbrev -a not present in help command list
PASS: gdb.base/alias.exp: alias set2=set
PASS: gdb.base/alias.exp: alias foo=bar
PASS: gdb.base/alias.exp: alias spe = set p elem
PASS: gdb.base/alias.exp: spe 50
PASS: gdb.base/alias.exp: verify spe
PASS: gdb.base/alias.exp: alias set pr elms = set p elem
PASS: gdb.base/alias.exp: set pr elms 51
PASS: gdb.base/alias.exp: verify set pr elms
PASS: gdb.base/alias.exp: help set print
PASS: gdb.base/all-architectures-0.exp: at least one architecture
PASS: gdb.base/all-architectures-0.exp: at least one osabi
PASS: gdb.base/all-architectures-0.exp: all passed
PASS: gdb.base/all-architectures-1.exp: at least one architecture
PASS: gdb.base/all-architectures-1.exp: at least one osabi
PASS: gdb.base/all-architectures-1.exp: all passed
PASS: gdb.base/all-architectures-2.exp: at least one architecture
PASS: gdb.base/all-architectures-2.exp: at least one osabi
PASS: gdb.base/all-architectures-2.exp: all passed
PASS: gdb.base/all-architectures-3.exp: at least one architecture
PASS: gdb.base/all-architectures-3.exp: at least one osabi
PASS: gdb.base/all-architectures-3.exp: all passed
PASS: gdb.base/all-architectures-4.exp: at least one architecture
PASS: gdb.base/all-architectures-4.exp: at least one osabi
PASS: gdb.base/all-architectures-4.exp: all passed
PASS: gdb.base/all-architectures-5.exp: at least one architecture
PASS: gdb.base/all-architectures-5.exp: at least one osabi
PASS: gdb.base/all-architectures-5.exp: all passed
PASS: gdb.base/all-architectures-6.exp: at least one architecture
PASS: gdb.base/all-architectures-6.exp: at least one osabi
PASS: gdb.base/all-architectures-6.exp: all passed
PASS: gdb.base/all-architectures-7.exp: at least one architecture
PASS: gdb.base/all-architectures-7.exp: at least one osabi
PASS: gdb.base/all-architectures-7.exp: all passed
UNRESOLVED: gdb.base/annota-input-while-running.exp: can't run to main
PASS: gdb.base/annota1.exp: set height 0
PASS: gdb.base/annota1.exp: breakpoint main
PASS: gdb.base/annota1.exp: annotation set at level 2
PASS: gdb.base/annota1.exp: breakpoint info
FAIL: gdb.base/annota1.exp: run until main breakpoint (GDB internal error)
UNRESOLVED: gdb.base/annota1.exp: go after array init line (got interactive prompt)
FAIL: gdb.base/annota1.exp: print array (GDB internal error)
UNRESOLVED: gdb.base/annota1.exp: print non_existent_value (got interactive prompt)
PASS: gdb.base/annota1.exp: break handle_USR1
PASS: gdb.base/annota1.exp: break printf
FAIL: gdb.base/annota1.exp: continue to printf
FAIL: gdb.base/annota1.exp: backtrace from shlibrary (timeout)
FAIL: gdb.base/annota1.exp: send SIGUSR1 (timeout)
FAIL: gdb.base/annota1.exp: backtrace @ signal handler (timeout)
PASS: gdb.base/annota1.exp: delete bp 1
PASS: gdb.base/annota1.exp: delete bp 2
PASS: gdb.base/annota1.exp: delete bp 3
PASS: gdb.base/annota1.exp: break in main
FAIL: gdb.base/annota1.exp: set up display (timeout)
FAIL: gdb.base/annota1.exp: re-run
FAIL: gdb.base/annota1.exp: break at value++ (got interactive prompt)
FAIL: gdb.base/annota1.exp: ignore 5 4 (got interactive prompt)
FAIL: gdb.base/annota1.exp: annotate ignore count change (timeout)
FAIL: gdb.base/annota1.exp: next to exit loop (timeout)
FAIL: gdb.base/annota1.exp: breakpoint ignore count (timeout)
PASS: gdb.base/annota1.exp: get inferior pid
FAIL: gdb.base/annota1.exp: signal sent (timeout)
PASS: gdb.base/annota1.exp: cleanup core file (not dumped)
PASS: gdb.base/annota1.exp: successfully compiled posix threads test case
FAIL: gdb.base/annota1.exp: run to main
FAIL: gdb.base/annota1.exp: thread switch
FAIL: gdb.base/anon.exp: run to main
FAIL: gdb.base/args.exp: continue to breakpoint: breakpoint for basic
FAIL: gdb.base/args.exp: argc for basic
FAIL: gdb.base/args.exp: argv[1] for basic
FAIL: gdb.base/args.exp: argv[2] for basic
FAIL: gdb.base/args.exp: continue to breakpoint: breakpoint for one empty
FAIL: gdb.base/args.exp: argc for one empty
FAIL: gdb.base/args.exp: argv[1] for one empty
FAIL: gdb.base/args.exp: argv[2] for one empty
FAIL: gdb.base/args.exp: argv[3] for one empty
FAIL: gdb.base/args.exp: continue to breakpoint: breakpoint for two empty
FAIL: gdb.base/args.exp: argc for two empty
FAIL: gdb.base/args.exp: argv[1] for two empty
FAIL: gdb.base/args.exp: argv[2] for two empty
FAIL: gdb.base/args.exp: argv[3] for two empty
FAIL: gdb.base/args.exp: argv[4] for two empty
FAIL: gdb.base/args.exp: continue to breakpoint: breakpoint for one empty (with single quotes)
FAIL: gdb.base/args.exp: argc for one empty (with single quotes)
FAIL: gdb.base/args.exp: argv[1] for one empty (with single quotes)
FAIL: gdb.base/args.exp: argv[2] for one empty (with single quotes)
FAIL: gdb.base/args.exp: argv[3] for one empty (with single quotes)
FAIL: gdb.base/args.exp: continue to breakpoint: breakpoint for two empty (with single quotes)
FAIL: gdb.base/args.exp: argc for two empty (with single quotes)
FAIL: gdb.base/args.exp: argv[1] for two empty (with single quotes)
FAIL: gdb.base/args.exp: argv[2] for two empty (with single quotes)
FAIL: gdb.base/args.exp: argv[3] for two empty (with single quotes)
FAIL: gdb.base/args.exp: argv[4] for two empty (with single quotes)
FAIL: gdb.base/args.exp: continue to breakpoint: breakpoint for one newline
FAIL: gdb.base/args.exp: argc for one newline
FAIL: gdb.base/args.exp: argv[1] for one newline
FAIL: gdb.base/args.exp: argv[2] for one newline
FAIL: gdb.base/args.exp: argv[3] for one newline
FAIL: gdb.base/args.exp: continue to breakpoint: breakpoint for two newlines
FAIL: gdb.base/args.exp: argc for two newlines
FAIL: gdb.base/args.exp: argv[1] for two newlines
FAIL: gdb.base/args.exp: argv[2] for two newlines
FAIL: gdb.base/args.exp: argv[3] for two newlines
FAIL: gdb.base/args.exp: argv[4] for two newlines
FAIL: gdb.base/argv0-symlink.exp: run to main (GDB internal error)
FAIL: gdb.base/argv0-symlink.exp: argv[0] should be available on this target
UNTESTED: gdb.base/argv0-symlink.exp: could not run to main
UNRESOLVED: gdb.base/asmlabel.exp: can't run to main
UNRESOLVED: gdb.base/async-shell.exp: displaced stepping
UNRESOLVED: gdb.base/attach-pie-noexec.exp: failed to prepare
UNTESTED: gdb.base/attach-twice.exp: failed to prepare
FAIL: gdb.base/attach-wait-input.exp: editing on: can't run to setup_done
PASS: gdb.base/attach-wait-input.exp: editing on: set editing on
FAIL: gdb.base/attach-wait-input.exp: editing on: attach and print (timeout)
FAIL: gdb.base/attach-wait-input.exp: editing on: after attach, exit (got interactive prompt)
FAIL: gdb.base/attach-wait-input.exp: editing off: can't run to setup_done
PASS: gdb.base/attach-wait-input.exp: editing off: set editing off
FAIL: gdb.base/attach-wait-input.exp: editing off: attach and print (timeout)
FAIL: gdb.base/attach-wait-input.exp: editing off: after attach, exit (got interactive prompt)
PASS: gdb.base/attach.exp: attach to nonsense is prohibited
PASS: gdb.base/attach.exp: attach to digits-starting nonsense is prohibited
PASS: gdb.base/attach.exp: attach to nonexistent process is prohibited
PASS: gdb.base/attach.exp: set file, before attach1 (re-read)
PASS: gdb.base/attach.exp: attach1, after setting file
PASS: gdb.base/attach.exp: after attach1, print should_exit
PASS: gdb.base/attach.exp: attach1 detach
PASS: gdb.base/attach.exp: attach1, purging symbols after detach
FAIL: gdb.base/attach.exp: attach2, with no file
PASS: gdb.base/attach.exp: load file manually, after attach2 (re-read)
PASS: gdb.base/attach.exp: after attach2, set should_exit
PASS: gdb.base/attach.exp: continue to breakpoint: postloop
PASS: gdb.base/attach.exp: continue until exit at after attach2, exit
PASS: gdb.base/attach.exp: set source path
PASS: gdb.base/attach.exp: cd away from process working directory
PASS: gdb.base/attach.exp: before attach3, flush symbols
PASS: gdb.base/attach.exp: before attach3, flush exec
FAIL: gdb.base/attach.exp: attach when process' a.out not in cwd
PASS: gdb.base/attach.exp: after attach3, exit
PASS: gdb.base/attach.exp: force switch to gdb64, if necessary
PASS: gdb.base/attach.exp: attach call
PASS: gdb.base/attach.exp: info other register
PASS: gdb.base/attach.exp: p should_exit = 1
PASS: gdb.base/attach.exp: continue until exit
FAIL: gdb.base/attach.exp: starting with --pid
FAIL: gdb.base/attach.exp: cmdline attach run: run to prompt
UNRESOLVED: gdb.base/attach.exp: cmdline attach run: run to main
PASS: gdb.base/auto-connect-native-target.exp: check whether a target is already connected
FAIL: gdb.base/auto-connect-native-target.exp: can't run to main
PASS: gdb.base/auto-load.exp: set auto-load scripts-directory
PASS: gdb.base/auto-load.exp: set auto-load safe-path
PASS: gdb.base/auto-load.exp: print $script_loaded
PASS: gdb.base/auxv.exp: set print sevenbit-strings
PASS: gdb.base/auxv.exp: set width 0
PASS: gdb.base/auxv.exp: cd to temporary directory for core dumps
PASS: gdb.base/auxv.exp: tbreak 78
FAIL: gdb.base/auxv.exp: continue
UNRESOLVED: gdb.base/auxv.exp: info auxv on live process
PASS: gdb.base/auxv.exp: gcore
FAIL: gdb.base/auxv.exp: continue
FAIL: gdb.base/auxv.exp: continue
UNSUPPORTED: gdb.base/auxv.exp: generate native core dump
UNSUPPORTED: gdb.base/auxv.exp: info auxv on native core dump
UNSUPPORTED: gdb.base/auxv.exp: matching auxv data from live and core
PASS: gdb.base/auxv.exp: load core file for info auxv on gcore-created dump
UNRESOLVED: gdb.base/auxv.exp: info auxv on gcore-created dump
PASS: gdb.base/auxv.exp: matching auxv data from live and gcore
PASS: gdb.base/bad-file.exp: non-existent file
PASS: gdb.base/bad-file.exp: directory
PASS: gdb.base/bad-file.exp: neither file nor directory
FAIL: gdb.base/bang.exp: continue until exit
PASS: gdb.base/batch-preserve-term-settings.exp: batch run: spawn shell
PASS: gdb.base/batch-preserve-term-settings.exp: batch run: stty before
PASS: gdb.base/batch-preserve-term-settings.exp: batch run: gdb -batch -ex run
FAIL: gdb.base/batch-preserve-term-settings.exp: batch run: echo test_echo (timeout)
PASS: gdb.base/batch-preserve-term-settings.exp: batch run: stty after
FAIL: gdb.base/batch-preserve-term-settings.exp: batch run: terminal settings preserved
PASS: gdb.base/batch-preserve-term-settings.exp: batch run: exit shell
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit: spawn shell
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit: stty before
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit: start gdb
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit: quit gdb
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit: stty after
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit: terminal settings preserved
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit: exit shell
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after start cmd: spawn shell
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after start cmd: stty before
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after start cmd: start gdb
FAIL: gdb.base/batch-preserve-term-settings.exp: cli exit after start cmd: run command start (timeout)
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after start cmd: quit gdb
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after start cmd: stty after
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after start cmd: terminal settings preserved
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after start cmd: exit shell
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after run cmd: spawn shell
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after run cmd: stty before
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after run cmd: start gdb
FAIL: gdb.base/batch-preserve-term-settings.exp: cli exit after run cmd: run command run (timeout)
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after run cmd: quit gdb
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after run cmd: stty after
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after run cmd: terminal settings preserved
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after run cmd: exit shell
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after SIGTERM: spawn shell
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after SIGTERM: stty before
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after SIGTERM: start gdb
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after SIGTERM: run shell echo $PPID
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after SIGTERM: kill gdb with SIGTERM
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after SIGTERM: stty after
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after SIGTERM: terminal settings preserved
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after SIGTERM: exit shell
UNRESOLVED: gdb.base/bigcore.exp: kernel lacks sparse corefile support (PR gdb/1551)
PASS: gdb.base/bitfields.exp: set print sevenbit-strings
FAIL: gdb.base/bitfields.exp: print flags
FAIL: gdb.base/bitfields.exp: continuing to break1 #1
FAIL: gdb.base/bitfields.exp: bitfield uniqueness (s1)
FAIL: gdb.base/bitfields.exp: continuing to break1 #2
FAIL: gdb.base/bitfields.exp: bitfield uniqueness (u1)
FAIL: gdb.base/bitfields.exp: continuing to break1 #3
FAIL: gdb.base/bitfields.exp: bitfield uniqueness (s2)
FAIL: gdb.base/bitfields.exp: continuing to break1 #4
FAIL: gdb.base/bitfields.exp: bitfield uniqueness (u2)
FAIL: gdb.base/bitfields.exp: continuing to break1 #5
FAIL: gdb.base/bitfields.exp: bitfield uniqueness (s3)
FAIL: gdb.base/bitfields.exp: continuing to break1 #6
FAIL: gdb.base/bitfields.exp: bitfield uniqueness (u3)
FAIL: gdb.base/bitfields.exp: continuing to break1 #7
FAIL: gdb.base/bitfields.exp: bitfield uniqueness (s9)
FAIL: gdb.base/bitfields.exp: continuing to break1 #8
FAIL: gdb.base/bitfields.exp: bitfield uniqueness (u9)
FAIL: gdb.base/bitfields.exp: continuing to break1 #9
FAIL: gdb.base/bitfields.exp: bitfield uniqueness (sc)
FAIL: gdb.base/bitfields.exp: bitfield containment #1
FAIL: gdb.base/bitfields.exp: continuing to break2
FAIL: gdb.base/bitfields.exp: bitfield containment #2
FAIL: gdb.base/bitfields.exp: unsigned bitfield ranges
FAIL: gdb.base/bitfields.exp: signed bitfields, max positive values
FAIL: gdb.base/bitfields.exp: continuing to break4 #1
FAIL: gdb.base/bitfields.exp: determining signed-ness of bitfields
FAIL: gdb.base/bitfields.exp: signed bitfields, max negative values
FAIL: gdb.base/bitfields.exp: continuing to break4 #2
FAIL: gdb.base/bitfields.exp: signed bitfields with -1
FAIL: gdb.base/bitfields.exp: continuing to break5
PASS: gdb.base/bitfields.exp: set internal var
PASS: gdb.base/bitfields.exp: set $myvar.a = 0
PASS: gdb.base/bitfields.exp: set $myvar.inner.b = 1
PASS: gdb.base/bitfields.exp: set $myvar.inner.deep.c = 0
PASS: gdb.base/bitfields.exp: set $myvar.inner.deep.d = -1
PASS: gdb.base/bitfields.exp: set $myvar.inner.e = 1
PASS: gdb.base/bitfields.exp: set $myvar.f = 1
PASS: gdb.base/bitfields.exp: print $myvar.a
PASS: gdb.base/bitfields.exp: print $myvar.inner.b
PASS: gdb.base/bitfields.exp: print $myvar.inner.deep.c
PASS: gdb.base/bitfields.exp: print $myvar.inner.deep.d
PASS: gdb.base/bitfields.exp: print $myvar.inner.e
PASS: gdb.base/bitfields.exp: print $myvar.f
PASS: gdb.base/bitfields2.exp: set print sevenbit-strings
PASS: gdb.base/bitfields2.exp: break tester prior to break1
FAIL: gdb.base/bitfields2.exp: continuing to tester prior to break1
FAIL: gdb.base/bitfields2.exp: continuing to break1 #0
FAIL: gdb.base/bitfields2.exp: bitfield uniqueness; flags.s1 = 1
FAIL: gdb.base/bitfields2.exp: continuing to break1 #1
FAIL: gdb.base/bitfields2.exp: bitfield uniqueness; flags.u1 = 1
FAIL: gdb.base/bitfields2.exp: continuing to break1 #2
FAIL: gdb.base/bitfields2.exp: bitfield uniqueness; flags.s2 = 1
FAIL: gdb.base/bitfields2.exp: continuing to break1 #3
FAIL: gdb.base/bitfields2.exp: bitfield uniqueness; flags.u2 = 1
FAIL: gdb.base/bitfields2.exp: continuing to break1 #4
FAIL: gdb.base/bitfields2.exp: bitfield uniqueness; flags.s3 = 1
FAIL: gdb.base/bitfields2.exp: continuing to break1 #5
FAIL: gdb.base/bitfields2.exp: bitfield uniqueness; flags.u3 = 1
PASS: gdb.base/bitfields2.exp: break tester prior to break2
FAIL: gdb.base/bitfields2.exp: continuing to tester prior to break2
FAIL: gdb.base/bitfields2.exp: continuing to break2 #0
FAIL: gdb.base/bitfields2.exp: bitfield containment; flags.u1, flags.u3, and flags.s3 to all 1s
FAIL: gdb.base/bitfields2.exp: continuing to break2 #1
FAIL: gdb.base/bitfields2.exp: bitfield containment; flags.u2, flags.s1, flags.s2 to all 1s
PASS: gdb.base/bitfields2.exp: break tester prior to break3
FAIL: gdb.base/bitfields2.exp: continuing to tester prior to break3
FAIL: gdb.base/bitfields2.exp: continuing to break3 #0
FAIL: gdb.base/bitfields2.exp: maximum unsigned bitfield values
PASS: gdb.base/bitfields2.exp: break tester prior to break4
FAIL: gdb.base/bitfields2.exp: continuing to tester prior to break4
FAIL: gdb.base/bitfields2.exp: continuing to break4 #0
FAIL: gdb.base/bitfields2.exp: maximum signed bitfield values
FAIL: gdb.base/bitfields2.exp: continuing to break4 #1
FAIL: gdb.base/bitfields2.exp: determining signed-ness of bitfields
UNSUPPORTED: gdb.base/bitfields2.exp: most negative signed bitfield values
FAIL: gdb.base/bitfields2.exp: continuing to break4 #2
UNSUPPORTED: gdb.base/bitfields2.exp: signed bitfields containing -1
PASS: gdb.base/bitfields2.exp: break tester prior to break5
FAIL: gdb.base/bitfields2.exp: continuing to tester prior to break5
FAIL: gdb.base/bitfields2.exp: continuing to break5 #0
FAIL: gdb.base/bitfields2.exp: set long long unsigned bitfield
FAIL: gdb.base/bitfields2.exp: set long long signed bitfield positive
FAIL: gdb.base/bitfields2.exp: long long bitfield values after set
UNSUPPORTED: gdb.base/bitfields2.exp: set long long signed bitfield negative
UNSUPPORTED: gdb.base/bitfields2.exp: long long bitfield values after set negative
PASS: gdb.base/bitops.exp: print value of !1
PASS: gdb.base/bitops.exp: print value of !0
PASS: gdb.base/bitops.exp: print value of !100
PASS: gdb.base/bitops.exp: print value of !1000
PASS: gdb.base/bitops.exp: print value of !10
PASS: gdb.base/bitops.exp: print value of !2
PASS: gdb.base/bitops.exp: print value of 10 | 5
PASS: gdb.base/bitops.exp: print value of 10 & 5
PASS: gdb.base/bitops.exp: print value of 10 ^ 5
PASS: gdb.base/bitops.exp: print value of -!0
PASS: gdb.base/bitops.exp: print value of ~-!0
PASS: gdb.base/bitops.exp: print value of 3 * 2 / 4.0 * 2.0
PASS: gdb.base/bitops.exp: print value of 8 << 2 >> 4
PASS: gdb.base/bitops.exp: print value of -1 < 0 > 1
PASS: gdb.base/bitops.exp: print value of 15 ^ 10 ^ 5 ^ 7
PASS: gdb.base/bitops.exp: print value of 3.5 < 4.0
PASS: gdb.base/bitops.exp: print value of 3.5 < -4.0
PASS: gdb.base/bitops.exp: print value of 2 > -3
PASS: gdb.base/bitops.exp: print value of -3>4
PASS: gdb.base/bitops.exp: print value of (-3 > 4)
PASS: gdb.base/bitops.exp: print value of 3>=2.5
PASS: gdb.base/bitops.exp: print value of 3>=4.5
PASS: gdb.base/bitops.exp: print value of 3==3.0
PASS: gdb.base/bitops.exp: print value of 3==4.0
PASS: gdb.base/bitops.exp: print value of 3!=3.0
PASS: gdb.base/bitops.exp: print value of 3!=5.0
PASS: gdb.base/bitops.exp: print value of 0 || 1 && 0 | 0 ^ 0 == 8 > 128 >>1 +2 *2
PASS: gdb.base/bitops.exp: print value of 1.0 || 0
PASS: gdb.base/bitops.exp: print value of 0.0 || 1.0
PASS: gdb.base/bitops.exp: print value of 0.0 || 0
PASS: gdb.base/bitops.exp: print value of 0 || 1 && 0 | 0 ^ 0 == 8
PASS: gdb.base/bitops.exp: print value of 0 == 8 > 128 >> 1 + 2 * 2
FAIL: gdb.base/bp-cmds-execution-x-script.exp: run to end (GDB internal error)
UNRESOLVED: gdb.base/break-always.exp: set breakpoint always-inserted on
PASS: gdb.base/break-always.exp: confirm breakpoint always-inserted
PASS: gdb.base/break-always.exp: set breakpoint on bar
PASS: gdb.base/break-always.exp: set 2nd breakpoint on bar
PASS: gdb.base/break-always.exp: set 3rd breakpoint on bar
PASS: gdb.base/break-always.exp: set 4th breakpoint on bar
PASS: gdb.base/break-always.exp: initial check breakpoint state
PASS: gdb.base/break-always.exp: initial disable all breakpoints
FAIL: gdb.base/break-always.exp: initial enable all breakpoints
PASS: gdb.base/break-always.exp: re-disable all breakpoints
FAIL: gdb.base/break-always.exp: enable 3.A
PASS: gdb.base/break-always.exp: disable 3.B
FAIL: gdb.base/break-always.exp: enable 3.C
FAIL: gdb.base/break-always.exp: enable 2.D
PASS: gdb.base/break-always.exp: disable 2.E
PASS: gdb.base/break-always.exp: disable 3.F
FAIL: gdb.base/break-always.exp: enable 3.G
FAIL: gdb.base/break-always.exp: enable 2.H
PASS: gdb.base/break-always.exp: disable 2.I
PASS: gdb.base/break-always.exp: before re-enable check breakpoint state
FAIL: gdb.base/break-always.exp: re-enable all breakpoints
PASS: gdb.base/break-always.exp: set breakpoint on bar 2
FAIL: gdb.base/break-always.exp: save shadow
UNSUPPORTED: gdb.base/break-always.exp: cannot write to address 0x8050f11
UNTESTED: gdb.base/break-entry.exp: failed to prepare
PASS: gdb.base/break-fun-addr.exp: break-fun-addr1: break *main
FAIL: gdb.base/break-fun-addr.exp: break-fun-addr1: run to breakpoint at *main (GDB internal error)
FAIL: gdb.base/break-fun-addr.exp: break-fun-addr1: p $pc == main
FAIL: gdb.base/break-fun-addr.exp: break-fun-addr2: run to breakpoint at *main (GDB internal error)
FAIL: gdb.base/break-fun-addr.exp: break-fun-addr2: p $pc == main
FAIL: gdb.base/break-idempotent.exp: can't run to main
FAIL: gdb.base/break-inline.exp: (GDB internal error)
FAIL: gdb.base/break-inline.exp: break
FAIL: gdb.base/break-main-file-remove-fail.exp: cmdline: can't run to start
FAIL: gdb.base/break-main-file-remove-fail.exp: file: can't run to start
UNTESTED: gdb.base/break-on-linker-gcd-function.exp: break-on-linker-gcd-function.exp
UNTESTED: gdb.base/break-on-linker-gcd-function.exp: failed to compile
PASS: gdb.base/break-probes.exp: set stop-on-solib-events 1
FAIL: gdb.base/break-probes.exp: (GDB internal error)
FAIL: gdb.base/break-probes.exp: ensure using probes
FAIL: gdb.base/break-unload-file.exp: cmdline: always-inserted off: break: can't run to main
FAIL: gdb.base/break-unload-file.exp: cmdline: always-inserted off: hbreak: can't run to main
FAIL: gdb.base/break-unload-file.exp: cmdline: always-inserted on: break: can't run to main
FAIL: gdb.base/break-unload-file.exp: cmdline: always-inserted on: hbreak: can't run to main
FAIL: gdb.base/break-unload-file.exp: file: always-inserted off: break: can't run to main
FAIL: gdb.base/break-unload-file.exp: file: always-inserted off: hbreak: can't run to main
FAIL: gdb.base/break-unload-file.exp: file: always-inserted on: break: can't run to main
FAIL: gdb.base/break-unload-file.exp: file: always-inserted on: hbreak: can't run to main
PASS: gdb.base/break.exp: delete all breakpoints when none
PASS: gdb.base/break.exp: breakpoint function
PASS: gdb.base/break.exp: breakpoint quoted function
PASS: gdb.base/break.exp: breakpoint function in file
PASS: gdb.base/break.exp: use `list' to establish default source file
PASS: gdb.base/break.exp: breakpoint line number
PASS: gdb.base/break.exp: breakpoint duplicate
PASS: gdb.base/break.exp: breakpoint line number in file
PASS: gdb.base/break.exp: breakpoint at start of multi line if conditional
PASS: gdb.base/break.exp: breakpoint at start of multi line while conditional
PASS: gdb.base/break.exp: breakpoint info
PASS: gdb.base/break.exp: info break 2 4 6
PASS: gdb.base/break.exp: info break 3-5
PASS: gdb.base/break.exp: disable using history values
PASS: gdb.base/break.exp: check disable with history values
PASS: gdb.base/break.exp: disable with convenience values
PASS: gdb.base/break.exp: check disable with convenience values
PASS: gdb.base/break.exp: disable non-existent breakpoint 10
PASS: gdb.base/break.exp: set $baz = 1.234
PASS: gdb.base/break.exp: disable with non-integer convenience var
PASS: gdb.base/break.exp: disable with non-existent convenience var
PASS: gdb.base/break.exp: disable with non-existent history value
PASS: gdb.base/break.exp: disable with badly formed history value
FAIL: gdb.base/break.exp: run until function breakpoint (GDB internal error)
PASS: gdb.base/break.exp: list marker1
PASS: gdb.base/break.exp: break lineno
PASS: gdb.base/break.exp: delete $bpnum
FAIL: gdb.base/break.exp: run until breakpoint set at a line number
FAIL: gdb.base/break.exp: run until file:function(6) breakpoint
FAIL: gdb.base/break.exp: run until file:function(5) breakpoint
FAIL: gdb.base/break.exp: run until file:function(4) breakpoint
FAIL: gdb.base/break.exp: run until file:function(3) breakpoint
FAIL: gdb.base/break.exp: run until file:function(2) breakpoint
FAIL: gdb.base/break.exp: run until file:function(1) breakpoint
FAIL: gdb.base/break.exp: run until quoted breakpoint
FAIL: gdb.base/break.exp: run until file:linenum breakpoint
FAIL: gdb.base/break.exp: breakpoint offset +1 (got interactive prompt)
FAIL: gdb.base/break.exp: step onto breakpoint
FAIL: gdb.base/break.exp: setting breakpoint at }
FAIL: gdb.base/break.exp: continue to breakpoint at }
PASS: gdb.base/break.exp: temporary breakpoint function
PASS: gdb.base/break.exp: Temporary breakpoint function in file
FAIL: gdb.base/break.exp: temporary breakpoint line number #1
FAIL: gdb.base/break.exp: temporary breakpoint line number #2
PASS: gdb.base/break.exp: temporary breakpoint line number in file #1
PASS: gdb.base/break.exp: Temporary breakpoint line number in file #2
FAIL: gdb.base/break.exp: Temporary breakpoint info
FAIL: gdb.base/break.exp: break tests suppressed
PASS: gdb.base/break.exp: catch requires an event name
PASS: gdb.base/break.exp: set catch fork, never expected to trigger
PASS: gdb.base/break.exp: set catch vfork, never expected to trigger
PASS: gdb.base/break.exp: set catch exec, never expected to trigger
PASS: gdb.base/break.exp: set breakpoint pending off
PASS: gdb.base/break.exp: break on non-existent source line
FAIL: gdb.base/break.exp: until bp_location1
FAIL: gdb.base/break.exp: break on default location, 1st time
FAIL: gdb.base/break.exp: break on default location, 2nd time
FAIL: gdb.base/break.exp: break on default location, 3rd time
FAIL: gdb.base/break.exp: break on default location, 4th time
FAIL: gdb.base/break.exp: break tests suppressed
PASS: gdb.base/break.exp: set to-be-silent break bp_location1
PASS: gdb.base/break.exp: set silent break bp_location1
PASS: gdb.base/break.exp: info silent break bp_location1
FAIL: gdb.base/break.exp: hit silent break bp_location1
FAIL: gdb.base/break.exp: stopped for silent break bp_location1
PASS: gdb.base/break.exp: thread-specific breakpoint on non-existent thread disallowed
PASS: gdb.base/break.exp: thread-specific breakpoint on bogus thread ID disallowed
PASS: gdb.base/break.exp: breakpoint with trailing garbage disallowed
FAIL: gdb.base/break.exp: step over breakpoint
PASS: gdb.base/break.exp: clear line has no breakpoint disallowed
FAIL: gdb.base/break.exp: clear current line has no breakpoint disallowed
PASS: gdb.base/break.exp: break marker3 #1
PASS: gdb.base/break.exp: break marker3 #2
PASS: gdb.base/break.exp: clear marker3
PASS: gdb.base/break.exp: set convenience variable $foo to bp_location11
PASS: gdb.base/break.exp: set breakpoint via convenience variable
PASS: gdb.base/break.exp: set convenience variable $foo to 81.5
PASS: gdb.base/break.exp: set breakpoint via non-integer convenience variable disallowed
PASS: gdb.base/break.exp: set breakpoint on to-be-called function
FAIL: gdb.base/break.exp: hit breakpoint on called function
FAIL: gdb.base/break.exp: backtrace while in called function
FAIL: gdb.base/break.exp: finish from called function
FAIL: gdb.base/break.exp: break tests suppressed
PASS: gdb.base/break.exp: finish with arguments disallowed
PASS: gdb.base/break.exp: finish from outermost frame disallowed
PASS: gdb.base/break.exp: kill program
PASS: gdb.base/break.exp: break at factorial
FAIL: gdb.base/break.exp: run to factorial(6) (GDB internal error)
FAIL: gdb.base/break.exp: continue to factorial(5)
FAIL: gdb.base/break.exp: backtrace from factorial(5)
FAIL: gdb.base/break.exp: next to recursive call
FAIL: gdb.base/break.exp: next over recursive call
FAIL: gdb.base/break.exp: backtrace from factorial(5.1)
FAIL: gdb.base/break.exp: continue until exit at recursive next test
PASS: gdb.base/break.exp: breakpoint function, optimized file
PASS: gdb.base/break.exp: breakpoint small function, optimized file
FAIL: gdb.base/break.exp: run until function breakpoint, optimized file (GDB internal error)
FAIL: gdb.base/break.exp: run until breakpoint set at small function, optimized file
PASS: gdb.base/break.exp: rbreak junk pending setup
PASS: gdb.base/break.exp: rbreak junk set breakpoint
FAIL: gdb.base/break.exp: rbreak junk (GDB internal error)
PASS: gdb.base/break.exp: set $l = 47
PASS: gdb.base/break.exp: set convenience variable $foo to 81.5
PASS: gdb.base/break.exp: set breakpoint via non-integer convenience variable disallowed
UNTESTED: gdb.base/breakpoint-shadow.exp: start
PASS: gdb.base/call-ar-st.exp: set print sevenbit-strings
PASS: gdb.base/call-ar-st.exp: set print address off
PASS: gdb.base/call-ar-st.exp: set width 0
UNRESOLVED: gdb.base/call-rt-st.exp: set print sevenbit-strings
PASS: gdb.base/call-rt-st.exp: set print address off
PASS: gdb.base/call-rt-st.exp: set width 0
UNRESOLVED: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
UNRESOLVED: gdb.base/call-sc.exp: ptype; call-sc-tc (char)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-tc char
FAIL: gdb.base/call-sc.exp: p/c fun(); call call-sc-tc
FAIL: gdb.base/call-sc.exp: call Fun(foo); call call-sc-tc
FAIL: gdb.base/call-sc.exp: p/c L; call call-sc-tc
FAIL: gdb.base/call-sc.exp: advance to fun for return; return call-sc-tc
FAIL: gdb.base/call-sc.exp: zed L for return; return call-sc-tc
FAIL: gdb.base/call-sc.exp: return foo; return call-sc-tc
FAIL: gdb.base/call-sc.exp: return foo; synchronize pc to main()
FAIL: gdb.base/call-sc.exp: return foo; synchronize pc to main()
FAIL: gdb.base/call-sc.exp: value foo returned; return call-sc-tc
FAIL: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-tc
FAIL: gdb.base/call-sc.exp: zed L for finish; return call-sc-tc
FAIL: gdb.base/call-sc.exp: finish foo; return call-sc-tc
FAIL: gdb.base/call-sc.exp: value foo finished; return call-sc-tc
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-tc
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
UNRESOLVED: gdb.base/call-sc.exp: ptype; call-sc-ts (short int)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-ts short int
FAIL: gdb.base/call-sc.exp: p/c fun(); call call-sc-ts
FAIL: gdb.base/call-sc.exp: call Fun(foo); call call-sc-ts
FAIL: gdb.base/call-sc.exp: p/c L; call call-sc-ts
FAIL: gdb.base/call-sc.exp: advance to fun for return; return call-sc-ts
FAIL: gdb.base/call-sc.exp: zed L for return; return call-sc-ts
FAIL: gdb.base/call-sc.exp: return foo; return call-sc-ts
FAIL: gdb.base/call-sc.exp: return foo; synchronize pc to main()
FAIL: gdb.base/call-sc.exp: return foo; synchronize pc to main()
FAIL: gdb.base/call-sc.exp: value foo returned; return call-sc-ts
FAIL: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-ts
FAIL: gdb.base/call-sc.exp: zed L for finish; return call-sc-ts
FAIL: gdb.base/call-sc.exp: finish foo; return call-sc-ts
FAIL: gdb.base/call-sc.exp: value foo finished; return call-sc-ts
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-ts
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
UNRESOLVED: gdb.base/call-sc.exp: ptype; call-sc-ti (int)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-ti int
FAIL: gdb.base/call-sc.exp: p/c fun(); call call-sc-ti
FAIL: gdb.base/call-sc.exp: call Fun(foo); call call-sc-ti
FAIL: gdb.base/call-sc.exp: p/c L; call call-sc-ti
FAIL: gdb.base/call-sc.exp: advance to fun for return; return call-sc-ti
FAIL: gdb.base/call-sc.exp: zed L for return; return call-sc-ti
FAIL: gdb.base/call-sc.exp: return foo; return call-sc-ti
FAIL: gdb.base/call-sc.exp: return foo; synchronize pc to main()
FAIL: gdb.base/call-sc.exp: return foo; synchronize pc to main()
FAIL: gdb.base/call-sc.exp: value foo returned; return call-sc-ti
FAIL: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-ti
FAIL: gdb.base/call-sc.exp: zed L for finish; return call-sc-ti
FAIL: gdb.base/call-sc.exp: finish foo; return call-sc-ti
FAIL: gdb.base/call-sc.exp: value foo finished; return call-sc-ti
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-ti
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
UNRESOLVED: gdb.base/call-sc.exp: ptype; call-sc-tl (long int)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-tl long int
FAIL: gdb.base/call-sc.exp: p/c fun(); call call-sc-tl
FAIL: gdb.base/call-sc.exp: call Fun(foo); call call-sc-tl
FAIL: gdb.base/call-sc.exp: p/c L; call call-sc-tl
FAIL: gdb.base/call-sc.exp: advance to fun for return; return call-sc-tl
FAIL: gdb.base/call-sc.exp: zed L for return; return call-sc-tl
FAIL: gdb.base/call-sc.exp: return foo; return call-sc-tl
FAIL: gdb.base/call-sc.exp: return foo; synchronize pc to main()
FAIL: gdb.base/call-sc.exp: return foo; synchronize pc to main()
FAIL: gdb.base/call-sc.exp: value foo returned; return call-sc-tl
FAIL: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-tl
FAIL: gdb.base/call-sc.exp: zed L for finish; return call-sc-tl
FAIL: gdb.base/call-sc.exp: finish foo; return call-sc-tl
FAIL: gdb.base/call-sc.exp: value foo finished; return call-sc-tl
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-tl
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
UNRESOLVED: gdb.base/call-sc.exp: ptype; call-sc-tll (long long int)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-tll long long int
FAIL: gdb.base/call-sc.exp: p/c fun(); call call-sc-tll
FAIL: gdb.base/call-sc.exp: call Fun(foo); call call-sc-tll
FAIL: gdb.base/call-sc.exp: p/c L; call call-sc-tll
FAIL: gdb.base/call-sc.exp: advance to fun for return; return call-sc-tll
FAIL: gdb.base/call-sc.exp: zed L for return; return call-sc-tll
FAIL: gdb.base/call-sc.exp: return foo; return call-sc-tll
FAIL: gdb.base/call-sc.exp: return foo; synchronize pc to main()
FAIL: gdb.base/call-sc.exp: return foo; synchronize pc to main()
FAIL: gdb.base/call-sc.exp: value foo returned; return call-sc-tll
FAIL: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-tll
FAIL: gdb.base/call-sc.exp: zed L for finish; return call-sc-tll
FAIL: gdb.base/call-sc.exp: finish foo; return call-sc-tll
FAIL: gdb.base/call-sc.exp: value foo finished; return call-sc-tll
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-tll
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
UNRESOLVED: gdb.base/call-sc.exp: ptype; call-sc-tf (float)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-tf float
FAIL: gdb.base/call-sc.exp: p/c fun(); call call-sc-tf
FAIL: gdb.base/call-sc.exp: call Fun(foo); call call-sc-tf
FAIL: gdb.base/call-sc.exp: p/c L; call call-sc-tf
FAIL: gdb.base/call-sc.exp: advance to fun for return; return call-sc-tf
FAIL: gdb.base/call-sc.exp: zed L for return; return call-sc-tf
FAIL: gdb.base/call-sc.exp: return foo; return call-sc-tf
FAIL: gdb.base/call-sc.exp: return foo; synchronize pc to main()
FAIL: gdb.base/call-sc.exp: return foo; synchronize pc to main()
FAIL: gdb.base/call-sc.exp: value foo returned; return call-sc-tf
FAIL: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-tf
FAIL: gdb.base/call-sc.exp: zed L for finish; return call-sc-tf
FAIL: gdb.base/call-sc.exp: finish foo; return call-sc-tf
FAIL: gdb.base/call-sc.exp: value foo finished; return call-sc-tf
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-tf
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
UNRESOLVED: gdb.base/call-sc.exp: ptype; call-sc-td (double)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-td double
FAIL: gdb.base/call-sc.exp: p/c fun(); call call-sc-td
FAIL: gdb.base/call-sc.exp: call Fun(foo); call call-sc-td
FAIL: gdb.base/call-sc.exp: p/c L; call call-sc-td
FAIL: gdb.base/call-sc.exp: advance to fun for return; return call-sc-td
FAIL: gdb.base/call-sc.exp: zed L for return; return call-sc-td
FAIL: gdb.base/call-sc.exp: return foo; return call-sc-td
FAIL: gdb.base/call-sc.exp: return foo; synchronize pc to main()
FAIL: gdb.base/call-sc.exp: return foo; synchronize pc to main()
FAIL: gdb.base/call-sc.exp: value foo returned; return call-sc-td
FAIL: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-td
FAIL: gdb.base/call-sc.exp: zed L for finish; return call-sc-td
FAIL: gdb.base/call-sc.exp: finish foo; return call-sc-td
FAIL: gdb.base/call-sc.exp: value foo finished; return call-sc-td
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-td
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
UNRESOLVED: gdb.base/call-sc.exp: ptype; call-sc-tld (long double)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-tld long double
FAIL: gdb.base/call-sc.exp: p/c fun(); call call-sc-tld
FAIL: gdb.base/call-sc.exp: call Fun(foo); call call-sc-tld
FAIL: gdb.base/call-sc.exp: p/c L; call call-sc-tld
FAIL: gdb.base/call-sc.exp: advance to fun for return; return call-sc-tld
FAIL: gdb.base/call-sc.exp: zed L for return; return call-sc-tld
FAIL: gdb.base/call-sc.exp: return foo; return call-sc-tld
FAIL: gdb.base/call-sc.exp: return foo; synchronize pc to main()
FAIL: gdb.base/call-sc.exp: return foo; synchronize pc to main()
FAIL: gdb.base/call-sc.exp: value foo returned; return call-sc-tld
FAIL: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-tld
FAIL: gdb.base/call-sc.exp: zed L for finish; return call-sc-tld
FAIL: gdb.base/call-sc.exp: finish foo; return call-sc-tld
FAIL: gdb.base/call-sc.exp: value foo finished; return call-sc-tld
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-tld
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
UNRESOLVED: gdb.base/call-sc.exp: ptype; call-sc-te (enum {e = 49})
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-te enum {e = 49}
FAIL: gdb.base/call-sc.exp: p/c fun(); call call-sc-te
FAIL: gdb.base/call-sc.exp: call Fun(foo); call call-sc-te
FAIL: gdb.base/call-sc.exp: p/c L; call call-sc-te
FAIL: gdb.base/call-sc.exp: advance to fun for return; return call-sc-te
FAIL: gdb.base/call-sc.exp: zed L for return; return call-sc-te
FAIL: gdb.base/call-sc.exp: return foo; return call-sc-te
FAIL: gdb.base/call-sc.exp: return foo; synchronize pc to main()
FAIL: gdb.base/call-sc.exp: return foo; synchronize pc to main()
FAIL: gdb.base/call-sc.exp: value foo returned; return call-sc-te
FAIL: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-te
FAIL: gdb.base/call-sc.exp: zed L for finish; return call-sc-te
FAIL: gdb.base/call-sc.exp: finish foo; return call-sc-te
FAIL: gdb.base/call-sc.exp: value foo finished; return call-sc-te
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-te
FAIL: gdb.base/call-signal-resume.exp: can't run to main
PASS: gdb.base/call-strs.exp: set print sevenbit-strings
PASS: gdb.base/call-strs.exp: set print address off
PASS: gdb.base/call-strs.exp: set print symbol off
PASS: gdb.base/call-strs.exp: set width 0
UNRESOLVED: gdb.base/callexit.exp: can't run to main
PASS: gdb.base/callfuncs.exp: set print sevenbit-strings
PASS: gdb.base/callfuncs.exp: set print address off
PASS: gdb.base/callfuncs.exp: set width 0
PASS: gdb.base/callfuncs.exp: set language c
UNRESOLVED: gdb.base/callfuncs.exp: next to t_double_values
FAIL: gdb.base/callfuncs.exp: next to t_structs_c
PASS: gdb.base/callfuncs.exp: retrieve original register contents
PASS: gdb.base/callfuncs.exp: set unwindonsignal on
FAIL: gdb.base/callfuncs.exp: p t_char_values(0,0)
FAIL: gdb.base/callfuncs.exp: p t_char_values('a','b')
FAIL: gdb.base/callfuncs.exp: p t_char_values(char_val1,char_val2)
FAIL: gdb.base/callfuncs.exp: p t_char_values('a',char_val2)
FAIL: gdb.base/callfuncs.exp: p t_char_values(char_val1,'b')
FAIL: gdb.base/callfuncs.exp: p t_short_values(0,0)
FAIL: gdb.base/callfuncs.exp: p t_short_values(10,-23)
FAIL: gdb.base/callfuncs.exp: p t_short_values(short_val1,short_val2)
FAIL: gdb.base/callfuncs.exp: p t_short_values(10,short_val2)
FAIL: gdb.base/callfuncs.exp: p t_short_values(short_val1,-23)
FAIL: gdb.base/callfuncs.exp: p t_int_values(0,0)
FAIL: gdb.base/callfuncs.exp: p t_int_values(87,-26)
FAIL: gdb.base/callfuncs.exp: p t_int_values(int_val1,int_val2)
FAIL: gdb.base/callfuncs.exp: p t_int_values(87,int_val2)
FAIL: gdb.base/callfuncs.exp: p t_int_values(int_val1,-26)
FAIL: gdb.base/callfuncs.exp: p t_long_values(0,0)
FAIL: gdb.base/callfuncs.exp: p t_long_values(789,-321)
FAIL: gdb.base/callfuncs.exp: p t_long_values(long_val1,long_val2)
FAIL: gdb.base/callfuncs.exp: p t_long_values(789,long_val2)
FAIL: gdb.base/callfuncs.exp: p t_long_values(long_val1,-321)
FAIL: gdb.base/callfuncs.exp: p t_float_values(0.0,0.0)
FAIL: gdb.base/callfuncs.exp: p t_float_values(3.14159,-2.3765)
FAIL: gdb.base/callfuncs.exp: p t_float_values(float_val1,float_val2)
FAIL: gdb.base/callfuncs.exp: p t_float_values(3.14159,float_val2)
FAIL: gdb.base/callfuncs.exp: p t_float_values(float_val1,-2.3765)
FAIL: gdb.base/callfuncs.exp: p t_float_values2(0.0,0.0)
FAIL: gdb.base/callfuncs.exp: p t_float_values2(3.14159,float_val2)
FAIL: gdb.base/callfuncs.exp: call function with many float arguments.
FAIL: gdb.base/callfuncs.exp: p t_small_values(1,2,3,4,5,6,7,8,9,10)
FAIL: gdb.base/callfuncs.exp: p t_double_values(0.0,0.0)
FAIL: gdb.base/callfuncs.exp: p t_double_values(45.654,-67.66)
FAIL: gdb.base/callfuncs.exp: p t_double_values(double_val1,double_val2)
FAIL: gdb.base/callfuncs.exp: p t_double_values(45.654,double_val2)
FAIL: gdb.base/callfuncs.exp: p t_double_values(double_val1,-67.66)
FAIL: gdb.base/callfuncs.exp: call function with many double arguments.
FAIL: gdb.base/callfuncs.exp: p t_double_int(99.0, 1)
FAIL: gdb.base/callfuncs.exp: p t_double_int(99.0, 99)
FAIL: gdb.base/callfuncs.exp: p t_int_double(99, 1.0)
FAIL: gdb.base/callfuncs.exp: p t_int_double(99, 99.0)
FAIL: gdb.base/callfuncs.exp: p t_float_complex_values(fc1, fc2)
FAIL: gdb.base/callfuncs.exp: p t_float_complex_values(fc3, fc4)
FAIL: gdb.base/callfuncs.exp: p t_float_complex_many_args(fc1, fc2, fc3, fc4, fc1, fc2, fc3, fc4, fc1, fc2, fc3, fc4, fc1, fc2, fc3, fc4)
FAIL: gdb.base/callfuncs.exp: p t_float_complex_many_args(fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1)
FAIL: gdb.base/callfuncs.exp: p t_double_complex_values(dc1, dc2)
FAIL: gdb.base/callfuncs.exp: p t_double_complex_values(dc3, dc4)
FAIL: gdb.base/callfuncs.exp: p t_double_complex_many_args(dc1, dc2, dc3, dc4, dc1, dc2, dc3, dc4, dc1, dc2, dc3, dc4, dc1, dc2, dc3, dc4)
FAIL: gdb.base/callfuncs.exp: p t_double_complex_many_args(dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1)
FAIL: gdb.base/callfuncs.exp: p t_long_double_complex_values(ldc1, ldc2)
FAIL: gdb.base/callfuncs.exp: p t_long_double_complex_values(ldc3, ldc4)
FAIL: gdb.base/callfuncs.exp: p t_long_double_complex_many_args(ldc1, ldc2, ldc3, ldc4, ldc1, ldc2, ldc3, ldc4, ldc1, ldc2, ldc3, ldc4, ldc1, ldc2, ldc3, ldc4)
FAIL: gdb.base/callfuncs.exp: p t_long_double_complex_many_args(ldc1, ldc1, ldc1, ldc1, ldc1, ldc1, ldc1,ldc1, ldc1, ldc1, ldc1, ldc1, ldc1, ldc1, ldc1, ldc1)
FAIL: gdb.base/callfuncs.exp: p t_string_values(string_val2,string_val1)
FAIL: gdb.base/callfuncs.exp: p t_string_values(string_val1,string_val2)
FAIL: gdb.base/callfuncs.exp: p t_string_values("string 1","string 2")
FAIL: gdb.base/callfuncs.exp: p t_string_values("string 1",string_val2)
FAIL: gdb.base/callfuncs.exp: p t_string_values(string_val1,"string 2")
FAIL: gdb.base/callfuncs.exp: p t_char_array_values(char_array_val2,char_array_val1)
FAIL: gdb.base/callfuncs.exp: p t_char_array_values(char_array_val1,char_array_val2)
FAIL: gdb.base/callfuncs.exp: p t_char_array_values("carray 1","carray 2")
FAIL: gdb.base/callfuncs.exp: p t_char_array_values("carray 1",char_array_val2)
FAIL: gdb.base/callfuncs.exp: p t_char_array_values(char_array_val1,"carray 2")
FAIL: gdb.base/callfuncs.exp: p doubleit(4)
FAIL: gdb.base/callfuncs.exp: p add(4,5)
FAIL: gdb.base/callfuncs.exp: p t_func_values(func_val2,func_val1)
FAIL: gdb.base/callfuncs.exp: p t_func_values(func_val1,func_val2)
FAIL: gdb.base/callfuncs.exp: p function_struct.func(5)
FAIL: gdb.base/callfuncs.exp: p function_struct_ptr->func(10)
FAIL: gdb.base/callfuncs.exp: p t_func_values(add,func_val2)
FAIL: gdb.base/callfuncs.exp: p t_func_values(func_val1,doubleit)
FAIL: gdb.base/callfuncs.exp: p t_call_add(add,3,4)
FAIL: gdb.base/callfuncs.exp: p t_call_add(func_val1,3,4)
FAIL: gdb.base/callfuncs.exp: p t_enum_value1(enumval1)
FAIL: gdb.base/callfuncs.exp: p t_enum_value1(enum_val1)
FAIL: gdb.base/callfuncs.exp: p t_enum_value1(enum_val2)
FAIL: gdb.base/callfuncs.exp: p t_enum_value2(enumval2)
FAIL: gdb.base/callfuncs.exp: p t_enum_value2(enum_val2)
FAIL: gdb.base/callfuncs.exp: p t_enum_value2(enum_val1)
FAIL: gdb.base/callfuncs.exp: p sum_args(1,{2})
FAIL: gdb.base/callfuncs.exp: p sum_args(2,{2,3})
FAIL: gdb.base/callfuncs.exp: p sum_args(3,{2,3,4})
FAIL: gdb.base/callfuncs.exp: p sum_args(4,{2,3,4,5})
FAIL: gdb.base/callfuncs.exp: p sum10 (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
FAIL: gdb.base/callfuncs.exp: p cmp10 (0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
FAIL: gdb.base/callfuncs.exp: call inferior func with struct - returns char
FAIL: gdb.base/callfuncs.exp: call inferior func with struct - returns short
FAIL: gdb.base/callfuncs.exp: call inferior func with struct - returns int
FAIL: gdb.base/callfuncs.exp: call inferior func with struct - returns long
FAIL: gdb.base/callfuncs.exp: call inferior func with struct - returns float
FAIL: gdb.base/callfuncs.exp: call inferior func with struct - returns double
FAIL: gdb.base/callfuncs.exp: call inferior func with struct - returns float _Complex
FAIL: gdb.base/callfuncs.exp: call inferior func with struct - returns double _Complex
FAIL: gdb.base/callfuncs.exp: call inferior func with struct - returns long double _Complex
FAIL: gdb.base/callfuncs.exp: call inferior func with struct - returns char *
PASS: gdb.base/callfuncs.exp: set unwindonsignal off
PASS: gdb.base/callfuncs.exp: register contents after gdb function calls
PASS: gdb.base/callfuncs.exp: gdb function calls preserve register contents
PASS: gdb.base/callfuncs.exp: set language c
UNRESOLVED: gdb.base/callfuncs.exp: next to t_double_values
FAIL: gdb.base/callfuncs.exp: next to t_structs_c
PASS: gdb.base/callfuncs.exp: retrieve original register contents
FAIL: gdb.base/callfuncs.exp: stop at breakpoint in call dummy function
PASS: gdb.base/callfuncs.exp: continue from call dummy breakpoint
FAIL: gdb.base/callfuncs.exp: bt after continuing from call dummy breakpoint
PASS: gdb.base/callfuncs.exp: set language c
UNRESOLVED: gdb.base/callfuncs.exp: next to t_double_values
FAIL: gdb.base/callfuncs.exp: next to t_structs_c
PASS: gdb.base/callfuncs.exp: retrieve original register contents
FAIL: gdb.base/callfuncs.exp: call function causing a breakpoint then do a finish
FAIL: gdb.base/callfuncs.exp: finish from call dummy breakpoint returns correct value
FAIL: gdb.base/callfuncs.exp: bt after finishing from call dummy breakpoint
PASS: gdb.base/callfuncs.exp: set language c
UNRESOLVED: gdb.base/callfuncs.exp: next to t_double_values
FAIL: gdb.base/callfuncs.exp: next to t_structs_c
PASS: gdb.base/callfuncs.exp: retrieve original register contents
FAIL: gdb.base/callfuncs.exp: call function causing a breakpoint and then do a return
FAIL: gdb.base/callfuncs.exp: back at main after return from call dummy breakpoint
PASS: gdb.base/callfuncs.exp: set language c
UNRESOLVED: gdb.base/callfuncs.exp: next to t_double_values
FAIL: gdb.base/callfuncs.exp: next to t_structs_c
PASS: gdb.base/callfuncs.exp: retrieve original register contents
FAIL: gdb.base/callfuncs.exp: stop at nested call level 1
FAIL: gdb.base/callfuncs.exp: backtrace at nested call level 1
FAIL: gdb.base/callfuncs.exp: stop at nested call level 2
FAIL: gdb.base/callfuncs.exp: backtrace at nested call level 2
FAIL: gdb.base/callfuncs.exp: stop at nested call level 3
FAIL: gdb.base/callfuncs.exp: backtrace at nested call level 3
FAIL: gdb.base/callfuncs.exp: stop at nested call level 4
FAIL: gdb.base/callfuncs.exp: backtrace at nested call level 4
FAIL: gdb.base/callfuncs.exp: Finish from nested call level 4
FAIL: gdb.base/callfuncs.exp: backtrace after finish from nested call level 4
FAIL: gdb.base/callfuncs.exp: Finish from nested call level 3
FAIL: gdb.base/callfuncs.exp: backtrace after finish from nested call level 3
FAIL: gdb.base/callfuncs.exp: Finish from nested call level 2
FAIL: gdb.base/callfuncs.exp: backtrace after finish from nested call level 2
FAIL: gdb.base/callfuncs.exp: Finish from nested call level 1
FAIL: gdb.base/callfuncs.exp: backtrace after finish from nested call level 1
PASS: gdb.base/callfuncs.exp: register contents after nested call dummies
PASS: gdb.base/callfuncs.exp: nested call dummies preserve register contents
PASS: gdb.base/callfuncs.exp: set $old_sp = $sp
PASS: gdb.base/callfuncs.exp: set $sp = 0
PASS: gdb.base/callfuncs.exp: sp == 0: call doubleit (1)
PASS: gdb.base/callfuncs.exp: set $sp = -1
PASS: gdb.base/callfuncs.exp: sp == -1: call doubleit (1)
PASS: gdb.base/callfuncs.exp: set $sp = $old_sp
FAIL: gdb.base/callfuncs.exp: print callfunc (Lcallfunc, 5)
FAIL: gdb.base/callfuncs.exp: print *((int *(*) (void)) voidfunc)()
PASS: gdb.base/callfuncs.exp: noproto: set print sevenbit-strings
PASS: gdb.base/callfuncs.exp: noproto: set print address off
PASS: gdb.base/callfuncs.exp: noproto: set width 0
PASS: gdb.base/callfuncs.exp: noproto: set language c
UNRESOLVED: gdb.base/callfuncs.exp: noproto: next to t_double_values
FAIL: gdb.base/callfuncs.exp: noproto: next to t_structs_c
PASS: gdb.base/callfuncs.exp: noproto: retrieve original register contents
PASS: gdb.base/callfuncs.exp: noproto: set unwindonsignal on
FAIL: gdb.base/callfuncs.exp: noproto: p t_char_values(0,0)
FAIL: gdb.base/callfuncs.exp: noproto: p t_char_values('a','b')
FAIL: gdb.base/callfuncs.exp: noproto: p t_char_values(char_val1,char_val2)
FAIL: gdb.base/callfuncs.exp: noproto: p t_char_values('a',char_val2)
FAIL: gdb.base/callfuncs.exp: noproto: p t_char_values(char_val1,'b')
FAIL: gdb.base/callfuncs.exp: noproto: p t_short_values(0,0)
FAIL: gdb.base/callfuncs.exp: noproto: p t_short_values(10,-23)
FAIL: gdb.base/callfuncs.exp: noproto: p t_short_values(short_val1,short_val2)
FAIL: gdb.base/callfuncs.exp: noproto: p t_short_values(10,short_val2)
FAIL: gdb.base/callfuncs.exp: noproto: p t_short_values(short_val1,-23)
FAIL: gdb.base/callfuncs.exp: noproto: p t_int_values(0,0)
FAIL: gdb.base/callfuncs.exp: noproto: p t_int_values(87,-26)
FAIL: gdb.base/callfuncs.exp: noproto: p t_int_values(int_val1,int_val2)
FAIL: gdb.base/callfuncs.exp: noproto: p t_int_values(87,int_val2)
FAIL: gdb.base/callfuncs.exp: noproto: p t_int_values(int_val1,-26)
FAIL: gdb.base/callfuncs.exp: noproto: p t_long_values(0,0)
FAIL: gdb.base/callfuncs.exp: noproto: p t_long_values(789,-321)
FAIL: gdb.base/callfuncs.exp: noproto: p t_long_values(long_val1,long_val2)
FAIL: gdb.base/callfuncs.exp: noproto: p t_long_values(789,long_val2)
FAIL: gdb.base/callfuncs.exp: noproto: p t_long_values(long_val1,-321)
FAIL: gdb.base/callfuncs.exp: noproto: p t_float_values(0.0,0.0)
FAIL: gdb.base/callfuncs.exp: noproto: p t_float_values(3.14159,-2.3765)
FAIL: gdb.base/callfuncs.exp: noproto: p t_float_values(float_val1,float_val2)
FAIL: gdb.base/callfuncs.exp: noproto: p t_float_values(3.14159,float_val2)
FAIL: gdb.base/callfuncs.exp: noproto: p t_float_values(float_val1,-2.3765)
FAIL: gdb.base/callfuncs.exp: noproto: p t_float_values2(0.0,0.0)
FAIL: gdb.base/callfuncs.exp: noproto: p t_float_values2(3.14159,float_val2)
FAIL: gdb.base/callfuncs.exp: noproto: call function with many float arguments.
FAIL: gdb.base/callfuncs.exp: noproto: p t_small_values(1,2,3,4,5,6,7,8,9,10)
FAIL: gdb.base/callfuncs.exp: noproto: p t_double_values(0.0,0.0)
FAIL: gdb.base/callfuncs.exp: noproto: p t_double_values(45.654,-67.66)
FAIL: gdb.base/callfuncs.exp: noproto: p t_double_values(double_val1,double_val2)
FAIL: gdb.base/callfuncs.exp: noproto: p t_double_values(45.654,double_val2)
FAIL: gdb.base/callfuncs.exp: noproto: p t_double_values(double_val1,-67.66)
FAIL: gdb.base/callfuncs.exp: noproto: call function with many double arguments.
FAIL: gdb.base/callfuncs.exp: noproto: p t_double_int(99.0, 1)
FAIL: gdb.base/callfuncs.exp: noproto: p t_double_int(99.0, 99)
FAIL: gdb.base/callfuncs.exp: noproto: p t_int_double(99, 1.0)
FAIL: gdb.base/callfuncs.exp: noproto: p t_int_double(99, 99.0)
FAIL: gdb.base/callfuncs.exp: noproto: p t_float_complex_values(fc1, fc2)
FAIL: gdb.base/callfuncs.exp: noproto: p t_float_complex_values(fc3, fc4)
FAIL: gdb.base/callfuncs.exp: noproto: p t_float_complex_many_args(fc1, fc2, fc3, fc4, fc1, fc2, fc3, fc4, fc1, fc2, fc3, fc4, fc1, fc2, fc3, fc4)
FAIL: gdb.base/callfuncs.exp: noproto: p t_float_complex_many_args(fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1)
FAIL: gdb.base/callfuncs.exp: noproto: p t_double_complex_values(dc1, dc2)
FAIL: gdb.base/callfuncs.exp: noproto: p t_double_complex_values(dc3, dc4)
FAIL: gdb.base/callfuncs.exp: noproto: p t_double_complex_many_args(dc1, dc2, dc3, dc4, dc1, dc2, dc3, dc4, dc1, dc2, dc3, dc4, dc1, dc2, dc3, dc4)
FAIL: gdb.base/callfuncs.exp: noproto: p t_double_complex_many_args(dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1)
FAIL: gdb.base/callfuncs.exp: noproto: p t_long_double_complex_values(ldc1, ldc2)
FAIL: gdb.base/callfuncs.exp: noproto: p t_long_double_complex_values(ldc3, ldc4)
FAIL: gdb.base/callfuncs.exp: noproto: p t_long_double_complex_many_args(ldc1, ldc2, ldc3, ldc4, ldc1, ldc2, ldc3, ldc4, ldc1, ldc2, ldc3, ldc4, ldc1, ldc2, ldc3, ldc4)
FAIL: gdb.base/callfuncs.exp: noproto: p t_long_double_complex_many_args(ldc1, ldc1, ldc1, ldc1, ldc1, ldc1, ldc1,ldc1, ldc1, ldc1, ldc1, ldc1, ldc1, ldc1, ldc1, ldc1)
FAIL: gdb.base/callfuncs.exp: noproto: p t_string_values(string_val2,string_val1)
FAIL: gdb.base/callfuncs.exp: noproto: p t_string_values(string_val1,string_val2)
FAIL: gdb.base/callfuncs.exp: noproto: p t_string_values("string 1","string 2")
FAIL: gdb.base/callfuncs.exp: noproto: p t_string_values("string 1",string_val2)
FAIL: gdb.base/callfuncs.exp: noproto: p t_string_values(string_val1,"string 2")
FAIL: gdb.base/callfuncs.exp: noproto: p t_char_array_values(char_array_val2,char_array_val1)
FAIL: gdb.base/callfuncs.exp: noproto: p t_char_array_values(char_array_val1,char_array_val2)
FAIL: gdb.base/callfuncs.exp: noproto: p t_char_array_values("carray 1","carray 2")
FAIL: gdb.base/callfuncs.exp: noproto: p t_char_array_values("carray 1",char_array_val2)
FAIL: gdb.base/callfuncs.exp: noproto: p t_char_array_values(char_array_val1,"carray 2")
FAIL: gdb.base/callfuncs.exp: noproto: p doubleit(4)
FAIL: gdb.base/callfuncs.exp: noproto: p add(4,5)
FAIL: gdb.base/callfuncs.exp: noproto: p t_func_values(func_val2,func_val1)
FAIL: gdb.base/callfuncs.exp: noproto: p t_func_values(func_val1,func_val2)
FAIL: gdb.base/callfuncs.exp: noproto: p function_struct.func(5)
FAIL: gdb.base/callfuncs.exp: noproto: p function_struct_ptr->func(10)
FAIL: gdb.base/callfuncs.exp: noproto: p t_func_values(add,func_val2)
FAIL: gdb.base/callfuncs.exp: noproto: p t_func_values(func_val1,doubleit)
FAIL: gdb.base/callfuncs.exp: noproto: p t_call_add(add,3,4)
FAIL: gdb.base/callfuncs.exp: noproto: p t_call_add(func_val1,3,4)
FAIL: gdb.base/callfuncs.exp: noproto: p t_enum_value1(enumval1)
FAIL: gdb.base/callfuncs.exp: noproto: p t_enum_value1(enum_val1)
FAIL: gdb.base/callfuncs.exp: noproto: p t_enum_value1(enum_val2)
FAIL: gdb.base/callfuncs.exp: noproto: p t_enum_value2(enumval2)
FAIL: gdb.base/callfuncs.exp: noproto: p t_enum_value2(enum_val2)
FAIL: gdb.base/callfuncs.exp: noproto: p t_enum_value2(enum_val1)
FAIL: gdb.base/callfuncs.exp: noproto: p sum_args(1,{2})
FAIL: gdb.base/callfuncs.exp: noproto: p sum_args(2,{2,3})
FAIL: gdb.base/callfuncs.exp: noproto: p sum_args(3,{2,3,4})
FAIL: gdb.base/callfuncs.exp: noproto: p sum_args(4,{2,3,4,5})
FAIL: gdb.base/callfuncs.exp: noproto: p sum10 (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
FAIL: gdb.base/callfuncs.exp: noproto: p cmp10 (0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
FAIL: gdb.base/callfuncs.exp: noproto: call inferior func with struct - returns char
FAIL: gdb.base/callfuncs.exp: noproto: call inferior func with struct - returns short
FAIL: gdb.base/callfuncs.exp: noproto: call inferior func with struct - returns int
FAIL: gdb.base/callfuncs.exp: noproto: call inferior func with struct - returns long
FAIL: gdb.base/callfuncs.exp: noproto: call inferior func with struct - returns float
FAIL: gdb.base/callfuncs.exp: noproto: call inferior func with struct - returns double
FAIL: gdb.base/callfuncs.exp: noproto: call inferior func with struct - returns float _Complex
FAIL: gdb.base/callfuncs.exp: noproto: call inferior func with struct - returns double _Complex
FAIL: gdb.base/callfuncs.exp: noproto: call inferior func with struct - returns long double _Complex
FAIL: gdb.base/callfuncs.exp: noproto: call inferior func with struct - returns char *
PASS: gdb.base/callfuncs.exp: noproto: set unwindonsignal off
PASS: gdb.base/callfuncs.exp: noproto: register contents after gdb function calls
PASS: gdb.base/callfuncs.exp: noproto: gdb function calls preserve register contents
PASS: gdb.base/callfuncs.exp: noproto: set language c
UNRESOLVED: gdb.base/callfuncs.exp: noproto: next to t_double_values
FAIL: gdb.base/callfuncs.exp: noproto: next to t_structs_c
PASS: gdb.base/callfuncs.exp: noproto: retrieve original register contents
FAIL: gdb.base/callfuncs.exp: noproto: stop at breakpoint in call dummy function
PASS: gdb.base/callfuncs.exp: noproto: continue from call dummy breakpoint
FAIL: gdb.base/callfuncs.exp: noproto: bt after continuing from call dummy breakpoint
PASS: gdb.base/callfuncs.exp: noproto: set language c
UNRESOLVED: gdb.base/callfuncs.exp: noproto: next to t_double_values
FAIL: gdb.base/callfuncs.exp: noproto: next to t_structs_c
PASS: gdb.base/callfuncs.exp: noproto: retrieve original register contents
FAIL: gdb.base/callfuncs.exp: noproto: call function causing a breakpoint then do a finish
FAIL: gdb.base/callfuncs.exp: noproto: finish from call dummy breakpoint returns correct value
FAIL: gdb.base/callfuncs.exp: noproto: bt after finishing from call dummy breakpoint
PASS: gdb.base/callfuncs.exp: noproto: set language c
UNRESOLVED: gdb.base/callfuncs.exp: noproto: next to t_double_values
FAIL: gdb.base/callfuncs.exp: noproto: next to t_structs_c
PASS: gdb.base/callfuncs.exp: noproto: retrieve original register contents
FAIL: gdb.base/callfuncs.exp: noproto: call function causing a breakpoint and then do a return
FAIL: gdb.base/callfuncs.exp: noproto: back at main after return from call dummy breakpoint
PASS: gdb.base/callfuncs.exp: noproto: set language c
UNRESOLVED: gdb.base/callfuncs.exp: noproto: next to t_double_values
FAIL: gdb.base/callfuncs.exp: noproto: next to t_structs_c
PASS: gdb.base/callfuncs.exp: noproto: retrieve original register contents
FAIL: gdb.base/callfuncs.exp: noproto: stop at nested call level 1
FAIL: gdb.base/callfuncs.exp: noproto: backtrace at nested call level 1
FAIL: gdb.base/callfuncs.exp: noproto: stop at nested call level 2
FAIL: gdb.base/callfuncs.exp: noproto: backtrace at nested call level 2
FAIL: gdb.base/callfuncs.exp: noproto: stop at nested call level 3
FAIL: gdb.base/callfuncs.exp: noproto: backtrace at nested call level 3
FAIL: gdb.base/callfuncs.exp: noproto: stop at nested call level 4
FAIL: gdb.base/callfuncs.exp: noproto: backtrace at nested call level 4
FAIL: gdb.base/callfuncs.exp: noproto: Finish from nested call level 4
FAIL: gdb.base/callfuncs.exp: noproto: backtrace after finish from nested call level 4
FAIL: gdb.base/callfuncs.exp: noproto: Finish from nested call level 3
FAIL: gdb.base/callfuncs.exp: noproto: backtrace after finish from nested call level 3
FAIL: gdb.base/callfuncs.exp: noproto: Finish from nested call level 2
FAIL: gdb.base/callfuncs.exp: noproto: backtrace after finish from nested call level 2
FAIL: gdb.base/callfuncs.exp: noproto: Finish from nested call level 1
FAIL: gdb.base/callfuncs.exp: noproto: backtrace after finish from nested call level 1
PASS: gdb.base/callfuncs.exp: noproto: register contents after nested call dummies
PASS: gdb.base/callfuncs.exp: noproto: nested call dummies preserve register contents
PASS: gdb.base/callfuncs.exp: noproto: set $old_sp = $sp
PASS: gdb.base/callfuncs.exp: noproto: set $sp = 0
PASS: gdb.base/callfuncs.exp: noproto: sp == 0: call doubleit (1)
PASS: gdb.base/callfuncs.exp: noproto: set $sp = -1
PASS: gdb.base/callfuncs.exp: noproto: sp == -1: call doubleit (1)
PASS: gdb.base/callfuncs.exp: noproto: set $sp = $old_sp
FAIL: gdb.base/callfuncs.exp: noproto: print callfunc (Lcallfunc, 5)
FAIL: gdb.base/callfuncs.exp: noproto: print *((int *(*) (void)) voidfunc)()
UNTESTED: gdb.base/catch-fork-kill.exp: fork-kind=fork: exit-kind=exit: fork: could not run to main
UNTESTED: gdb.base/catch-fork-kill.exp: fork-kind=fork: exit-kind=kill: fork: could not run to main
UNTESTED: gdb.base/catch-fork-kill.exp: fork-kind=vfork: exit-kind=exit: vfork: could not run to main
UNTESTED: gdb.base/catch-fork-kill.exp: fork-kind=vfork: exit-kind=kill: vfork: could not run to main
FAIL: gdb.base/catch-gdb-caused-signals.exp: can't run to main to make the tests
FAIL: gdb.base/catch-load.exp: plain load: can't run to main
FAIL: gdb.base/catch-load.exp: plain load with stop-on-solib-events: can't run to main
FAIL: gdb.base/catch-load.exp: rx load: can't run to main
FAIL: gdb.base/catch-load.exp: rx load with stop-on-solib-events: can't run to main
FAIL: gdb.base/catch-load.exp: non-matching load: can't run to main
FAIL: gdb.base/catch-load.exp: non-matching load with stop-on-solib-events: can't run to main
FAIL: gdb.base/catch-load.exp: plain unload: can't run to main
FAIL: gdb.base/catch-load.exp: plain unload with stop-on-solib-events: can't run to main
FAIL: gdb.base/catch-load.exp: rx unload: can't run to main
FAIL: gdb.base/catch-load.exp: rx unload with stop-on-solib-events: can't run to main
FAIL: gdb.base/catch-load.exp: non-matching unload: can't run to main
FAIL: gdb.base/catch-load.exp: non-matching unload with stop-on-solib-events: can't run to main
PASS: gdb.base/catch-signal.exp: catch signal SIGZARDOZ
PASS: gdb.base/catch-signal.exp: catch signal all
PASS: gdb.base/catch-signal.exp: catch signal all SIGHUP
PASS: gdb.base/catch-signal.exp: catch signal SIGHUP all
PASS: gdb.base/catch-signal.exp: set catchpoint '' for printing
PASS: gdb.base/catch-signal.exp: info break for ''
PASS: gdb.base/catch-signal.exp: save breakpoints for ''
PASS: gdb.base/catch-signal.exp: Number of lines of save breakpoints for ''
PASS: gdb.base/catch-signal.exp: 1st line of save breakpoints for ''
PASS: gdb.base/catch-signal.exp: 2nd line of save breakpoints for ''
PASS: gdb.base/catch-signal.exp: Trailing newline of save breakpoints for ''
PASS: gdb.base/catch-signal.exp: set catchpoint 'SIGHUP' for printing
PASS: gdb.base/catch-signal.exp: info break for 'SIGHUP'
PASS: gdb.base/catch-signal.exp: save breakpoints for 'SIGHUP'
PASS: gdb.base/catch-signal.exp: Number of lines of save breakpoints for 'SIGHUP'
PASS: gdb.base/catch-signal.exp: 1st line of save breakpoints for 'SIGHUP'
PASS: gdb.base/catch-signal.exp: 2nd line of save breakpoints for 'SIGHUP'
PASS: gdb.base/catch-signal.exp: Trailing newline of save breakpoints for 'SIGHUP'
PASS: gdb.base/catch-signal.exp: set catchpoint 'SIGHUP SIGUSR2' for printing
PASS: gdb.base/catch-signal.exp: info break for 'SIGHUP SIGUSR2'
PASS: gdb.base/catch-signal.exp: save breakpoints for 'SIGHUP SIGUSR2'
PASS: gdb.base/catch-signal.exp: Number of lines of save breakpoints for 'SIGHUP SIGUSR2'
PASS: gdb.base/catch-signal.exp: 1st line of save breakpoints for 'SIGHUP SIGUSR2'
PASS: gdb.base/catch-signal.exp: 2nd line of save breakpoints for 'SIGHUP SIGUSR2'
PASS: gdb.base/catch-signal.exp: Trailing newline of save breakpoints for 'SIGHUP SIGUSR2'
PASS: gdb.base/catch-signal.exp: set catchpoint 'all' for printing
PASS: gdb.base/catch-signal.exp: info break for 'all'
PASS: gdb.base/catch-signal.exp: save breakpoints for 'all'
PASS: gdb.base/catch-signal.exp: Number of lines of save breakpoints for 'all'
PASS: gdb.base/catch-signal.exp: 1st line of save breakpoints for 'all'
PASS: gdb.base/catch-signal.exp: 2nd line of save breakpoints for 'all'
PASS: gdb.base/catch-signal.exp: Trailing newline of save breakpoints for 'all'
UNTESTED: gdb.base/catch-syscall.exp: failed to prepare
PASS: gdb.base/charset.exp: show charset
PASS: gdb.base/charset.exp: show target-charset
PASS: gdb.base/charset.exp: check `show target-charset' against `show charset'
PASS: gdb.base/charset.exp: show host-charset
PASS: gdb.base/charset.exp: check `show host-charset' against `show charset'
PASS: gdb.base/charset.exp: try malformed `set charset'
PASS: gdb.base/charset.exp: try `set host-charset' with invalid charset
PASS: gdb.base/charset.exp: try `set target-charset' with invalid charset
PASS: gdb.base/charset.exp: capture valid host charsets
UNTESTED: gdb.base/charset.exp: fewer than 3 charsets
PASS: gdb.base/chng-syms.exp: setting conditional breakpoint on function
FAIL: gdb.base/chng-syms.exp: running to stop_here first time (GDB internal error)
FAIL: gdb.base/chng-syms.exp: continue until exit at breakpoint first time through
FAIL: gdb.base/chng-syms.exp: running with invalidated bpt condition after executable changes (GDB internal error)
PASS: gdb.base/code-expr.exp: set print sevenbit-strings
PASS: gdb.base/code-expr.exp: set print address off
PASS: gdb.base/code-expr.exp: set width 0
PASS: gdb.base/code-expr.exp: (@code char)
PASS: gdb.base/code-expr.exp: (@code signed char)
PASS: gdb.base/code-expr.exp: (@code unsigned char)
PASS: gdb.base/code-expr.exp: (@code short)
PASS: gdb.base/code-expr.exp: (@code signed short)
PASS: gdb.base/code-expr.exp: (@code unsigned short)
PASS: gdb.base/code-expr.exp: (@code int)
PASS: gdb.base/code-expr.exp: (@code signed int)
PASS: gdb.base/code-expr.exp: (@code unsigned int)
PASS: gdb.base/code-expr.exp: (@code long)
PASS: gdb.base/code-expr.exp: (@code signed long)
PASS: gdb.base/code-expr.exp: (@code unsigned long)
PASS: gdb.base/code-expr.exp: (@code long long)
PASS: gdb.base/code-expr.exp: (@code signed long long)
PASS: gdb.base/code-expr.exp: (@code unsigned long long)
PASS: gdb.base/code-expr.exp: (@code float)
PASS: gdb.base/code-expr.exp: (@code double)
PASS: gdb.base/code-expr.exp: (@data char)
PASS: gdb.base/code-expr.exp: (@data signed char)
PASS: gdb.base/code-expr.exp: (@data unsigned char)
PASS: gdb.base/code-expr.exp: (@data short)
PASS: gdb.base/code-expr.exp: (@data signed short)
PASS: gdb.base/code-expr.exp: (@data unsigned short)
PASS: gdb.base/code-expr.exp: (@data int)
PASS: gdb.base/code-expr.exp: (@data signed int)
PASS: gdb.base/code-expr.exp: (@data unsigned int)
PASS: gdb.base/code-expr.exp: (@data long)
PASS: gdb.base/code-expr.exp: (@data signed long)
PASS: gdb.base/code-expr.exp: (@data unsigned long)
PASS: gdb.base/code-expr.exp: (@data long long)
PASS: gdb.base/code-expr.exp: (@data signed long long)
PASS: gdb.base/code-expr.exp: (@data unsigned long long)
PASS: gdb.base/code-expr.exp: (@data float)
PASS: gdb.base/code-expr.exp: (@data double)
PASS: gdb.base/code-expr.exp: (char @code)
PASS: gdb.base/code-expr.exp: (signed char @code)
PASS: gdb.base/code-expr.exp: (unsigned char @code)
PASS: gdb.base/code-expr.exp: (short @code)
PASS: gdb.base/code-expr.exp: (signed short @code)
PASS: gdb.base/code-expr.exp: (unsigned short @code)
PASS: gdb.base/code-expr.exp: (int @code)
PASS: gdb.base/code-expr.exp: (signed int @code)
PASS: gdb.base/code-expr.exp: (unsigned int @code)
PASS: gdb.base/code-expr.exp: (long @code)
PASS: gdb.base/code-expr.exp: (signed long @code)
PASS: gdb.base/code-expr.exp: (unsigned long @code)
PASS: gdb.base/code-expr.exp: (long long @code)
PASS: gdb.base/code-expr.exp: (signed long long @code)
PASS: gdb.base/code-expr.exp: (unsigned long long @code)
PASS: gdb.base/code-expr.exp: (float @code)
PASS: gdb.base/code-expr.exp: (double @code)
PASS: gdb.base/code-expr.exp: (char @data)
PASS: gdb.base/code-expr.exp: (signed char @data)
PASS: gdb.base/code-expr.exp: (unsigned char @data)
PASS: gdb.base/code-expr.exp: (short @data)
PASS: gdb.base/code-expr.exp: (signed short @data)
PASS: gdb.base/code-expr.exp: (unsigned short @data)
PASS: gdb.base/code-expr.exp: (int @data)
PASS: gdb.base/code-expr.exp: (signed int @data)
PASS: gdb.base/code-expr.exp: (unsigned int @data)
PASS: gdb.base/code-expr.exp: (long @data)
PASS: gdb.base/code-expr.exp: (signed long @data)
PASS: gdb.base/code-expr.exp: (unsigned long @data)
PASS: gdb.base/code-expr.exp: (long long @data)
PASS: gdb.base/code-expr.exp: (signed long long @data)
PASS: gdb.base/code-expr.exp: (unsigned long long @data)
PASS: gdb.base/code-expr.exp: (float @data)
PASS: gdb.base/code-expr.exp: (double @data)
PASS: gdb.base/code-expr.exp: (@code enum misordered)
PASS: gdb.base/code-expr.exp: (enum misordered @code)
PASS: gdb.base/code-expr.exp: (@data enum misordered)
PASS: gdb.base/code-expr.exp: (enum misordered @data)
PASS: gdb.base/code-expr.exp: (@code int *)
PASS: gdb.base/code-expr.exp: (int @code *)
PASS: gdb.base/code-expr.exp: (int * @code)
PASS: gdb.base/code-expr.exp: (@code int * @code)
PASS: gdb.base/code-expr.exp: (int @code * @code)
PASS: gdb.base/code-expr.exp: (@code int **)
PASS: gdb.base/code-expr.exp: (int @code **)
PASS: gdb.base/code-expr.exp: (int ** @code)
PASS: gdb.base/code-expr.exp: (@code int * @code *)
PASS: gdb.base/code-expr.exp: (int @code * @code *)
PASS: gdb.base/code-expr.exp: (@code int * @code * @code)
PASS: gdb.base/code-expr.exp: (int @code * @code * @code)
PASS: gdb.base/code-expr.exp: (@code struct t_struct)
PASS: gdb.base/code-expr.exp: (@code union t_union)
PASS: gdb.base/code-expr.exp: (struct t_struct @code)
PASS: gdb.base/code-expr.exp: (union t_union @code)
PASS: gdb.base/code-expr.exp: (@code struct t_struct *)
PASS: gdb.base/code-expr.exp: (@code union t_union *)
PASS: gdb.base/code-expr.exp: (struct t_struct @code *)
PASS: gdb.base/code-expr.exp: (union t_union @code *)
PASS: gdb.base/code-expr.exp: (struct t_struct * @code)
PASS: gdb.base/code-expr.exp: (union t_union * @code)
PASS: gdb.base/code-expr.exp: (@code struct t_struct * @code)
PASS: gdb.base/code-expr.exp: (@code union t_union * @code)
PASS: gdb.base/code-expr.exp: (struct t_struct @code * @code)
PASS: gdb.base/code-expr.exp: (union t_union @code * @code)
UNTESTED: gdb.base/code_elim.exp: failed to compile
PASS: gdb.base/command-line-input.exp: print 1\\n + 2
PASS: gdb.base/command-line-input.exp: print 1\\n2
PASS: gdb.base/commands.exp: gdbvar_simple_if_test: set foo
PASS: gdb.base/commands.exp: gdbvar_simple_if_test: #1
PASS: gdb.base/commands.exp: gdbvar_simple_if_test: #2
PASS: gdb.base/commands.exp: gdbvar_simple_while_test: set foo
PASS: gdb.base/commands.exp: gdbvar_simple_while_test: #1
PASS: gdb.base/commands.exp: gdbvar_complex_if_while_test: set foo
PASS: gdb.base/commands.exp: gdbvar_complex_if_while_test: #1
FAIL: gdb.base/commands.exp: progvar_simple_if_test: cannot run to factorial
FAIL: gdb.base/commands.exp: progvar_simple_while_test: cannot run to factorial
FAIL: gdb.base/commands.exp: progvar_complex_if_while_test: cannot run to factorial
FAIL: gdb.base/commands.exp: if_while_breakpoint_command_test: cannot run to factorial
FAIL: gdb.base/commands.exp: infrun_breakpoint_command_test: cannot run to factorial
FAIL: gdb.base/commands.exp: breakpoint_command_test: cannot run to factorial
PASS: gdb.base/commands.exp: user_defined_command_test: set foo
PASS: gdb.base/commands.exp: user_defined_command_test: define mycommand
PASS: gdb.base/commands.exp: user_defined_command_test: enter commands
PASS: gdb.base/commands.exp: user_defined_command_test: execute user-defined command
PASS: gdb.base/commands.exp: user_defined_command_test: display user command
PASS: gdb.base/commands.exp: user_defined_command_test: define myemptycommand
PASS: gdb.base/commands.exp: user_defined_command_test: end definition of user-defined command with empty body
PASS: gdb.base/commands.exp: user_defined_command_test: execute user-defined empty command
PASS: gdb.base/commands.exp: user_defined_command_test: display empty command in command list
PASS: gdb.base/commands.exp: user_defined_command_test: display user-defined empty command
PASS: gdb.base/commands.exp: user_defined_command_args_eval: define
PASS: gdb.base/commands.exp: user_defined_command_args_eval: enter commands
PASS: gdb.base/commands.exp: user_defined_command_args_eval: execute command
PASS: gdb.base/commands.exp: user_defined_command_args_stack_test: define
PASS: gdb.base/commands.exp: user_defined_command_args_stack_test: enter commands
PASS: gdb.base/commands.exp: user_defined_command_args_stack_test: execute command
PASS: gdb.base/commands.exp: user_defined_command_manyargs_test: define command
PASS: gdb.base/commands.exp: user_defined_command_manyargs_test: enter commands
PASS: gdb.base/commands.exp: user_defined_command_manyargs_test: execute command
FAIL: gdb.base/commands.exp: watchpoint_command_test: cannot run to factorial
FAIL: gdb.base/commands.exp: test_command_prompt_position: cannot run to factorial
PASS: gdb.base/commands.exp: deprecated_command_test: tried to deprecate non-existing command
PASS: gdb.base/commands.exp: deprecated_command_test: maintenance deprecate p "new_p" /1/
PASS: gdb.base/commands.exp: deprecated_command_test: p deprecated warning, with replacement
PASS: gdb.base/commands.exp: deprecated_command_test: deprecated warning goes away /1/
PASS: gdb.base/commands.exp: deprecated_command_test: maintenance deprecate p "new_p" /2/
PASS: gdb.base/commands.exp: deprecated_command_test: maintenance deprecate print "new_print"
PASS: gdb.base/commands.exp: deprecated_command_test: both alias and command are deprecated
PASS: gdb.base/commands.exp: deprecated_command_test: deprecated warning goes away /2/
PASS: gdb.base/commands.exp: deprecated_command_test: deprecate long command /1/
PASS: gdb.base/commands.exp: deprecated_command_test: long command deprecated /1/
PASS: gdb.base/commands.exp: deprecated_command_test: deprecate long command /2/
PASS: gdb.base/commands.exp: deprecated_command_test: long command deprecated with no alternative /2/
PASS: gdb.base/commands.exp: deprecated_command_test: deprecate with no arguments
PASS: gdb.base/commands.exp: bp_deleted_in_command_test: break factorial
PASS: gdb.base/commands.exp: bp_deleted_in_command_test: begin commands
PASS: gdb.base/commands.exp: bp_deleted_in_command_test: add silent command
PASS: gdb.base/commands.exp: bp_deleted_in_command_test: add clear command
PASS: gdb.base/commands.exp: bp_deleted_in_command_test: add printf command
PASS: gdb.base/commands.exp: bp_deleted_in_command_test: add cont command
PASS: gdb.base/commands.exp: bp_deleted_in_command_test: end commands
FAIL: gdb.base/commands.exp: bp_deleted_in_command_test: run factorial until breakpoint (GDB internal error)
PASS: gdb.base/commands.exp: temporary_breakpoint_commands: breakpoint
PASS: gdb.base/commands.exp: temporary_breakpoint_commands: begin commands
PASS: gdb.base/commands.exp: temporary_breakpoint_commands: add silent tbreak command
PASS: gdb.base/commands.exp: temporary_breakpoint_commands: add printf tbreak command
PASS: gdb.base/commands.exp: temporary_breakpoint_commands: add cont tbreak command
PASS: gdb.base/commands.exp: temporary_breakpoint_commands: end tbreak commands
FAIL: gdb.base/commands.exp: temporary_breakpoint_commands: run factorial until temporary breakpoint (GDB internal error)
PASS: gdb.base/commands.exp: stray_arg0_test: #1
PASS: gdb.base/commands.exp: stray_arg0_test: #2
PASS: gdb.base/commands.exp: stray_arg0_test: #3
PASS: gdb.base/commands.exp: stray_arg0_test: #4
PASS: gdb.base/commands.exp: source_file_with_indented_comment: source file
PASS: gdb.base/commands.exp: recursive_source_test: source file
PASS: gdb.base/commands.exp: if_commands_test: set $tem
PASS: gdb.base/commands.exp: if_commands_test: if $tem == 2 - if_commands_test 1
PASS: gdb.base/commands.exp: if_commands_test: break main - if_commands_test 1
PASS: gdb.base/commands.exp: if_commands_test: else - if_commands_test 1
PASS: gdb.base/commands.exp: if_commands_test: break factorial - if_commands_test 1
PASS: gdb.base/commands.exp: if_commands_test: commands - if_commands_test 1
PASS: gdb.base/commands.exp: if_commands_test: silent - if_commands_test 1
PASS: gdb.base/commands.exp: if_commands_test: set $tem = 3 - if_commands_test 1
PASS: gdb.base/commands.exp: if_commands_test: continue - if_commands_test 1
PASS: gdb.base/commands.exp: if_commands_test: first end - if_commands_test 1
PASS: gdb.base/commands.exp: if_commands_test: second end - if_commands_test 1
PASS: gdb.base/commands.exp: if_commands_test: if $tem == 1 - if_commands_test 2
PASS: gdb.base/commands.exp: if_commands_test: break main - if_commands_test 2
PASS: gdb.base/commands.exp: if_commands_test: else - if_commands_test 2
PASS: gdb.base/commands.exp: if_commands_test: break factorial - if_commands_test 2
PASS: gdb.base/commands.exp: if_commands_test: commands - if_commands_test 2
PASS: gdb.base/commands.exp: if_commands_test: silent - if_commands_test 2
PASS: gdb.base/commands.exp: if_commands_test: set $tem = 3 - if_commands_test 2
PASS: gdb.base/commands.exp: if_commands_test: continue - if_commands_test 2
PASS: gdb.base/commands.exp: if_commands_test: first end - if_commands_test 2
PASS: gdb.base/commands.exp: if_commands_test: second end - if_commands_test 2
PASS: gdb.base/commands.exp: error_clears_commands_left: hook-stop 1
PASS: gdb.base/commands.exp: error_clears_commands_left: hook-stop 1a
PASS: gdb.base/commands.exp: error_clears_commands_left: hook-stop 1b
PASS: gdb.base/commands.exp: error_clears_commands_left: main commands 1
PASS: gdb.base/commands.exp: error_clears_commands_left: main commands 1a
PASS: gdb.base/commands.exp: error_clears_commands_left: main commands 1b
PASS: gdb.base/commands.exp: error_clears_commands_left: main commands 1c
PASS: gdb.base/commands.exp: error_clears_commands_left: main commands 2
PASS: gdb.base/commands.exp: error_clears_commands_left: main commands 2a
PASS: gdb.base/commands.exp: error_clears_commands_left: main commands 2b
PASS: gdb.base/commands.exp: error_clears_commands_left: main commands 2c
FAIL: gdb.base/commands.exp: error_clears_commands_left: cmd1 error (GDB internal error)
PASS: gdb.base/commands.exp: error_clears_commands_left: no cmd2
PASS: gdb.base/commands.exp: redefine_hook_test: define one
PASS: gdb.base/commands.exp: redefine_hook_test: define hook-one
PASS: gdb.base/commands.exp: redefine_hook_test: redefine one
PASS: gdb.base/commands.exp: redefine_hook_test: enter commands for one redefinition
PASS: gdb.base/commands.exp: redefine_hook_test: execute one command
PASS: gdb.base/commands.exp: backslash_in_multi_line_command_test: commands
PASS: gdb.base/commands.exp: backslash_in_multi_line_command_test: input line split with backslash
PASS: gdb.base/commands.exp: backslash_in_multi_line_command_test: end
PASS: gdb.base/commands.exp: backslash_in_multi_line_command_test: run command
PASS: gdb.base/commands.exp: redefine_backtrace_test: define backtrace
PASS: gdb.base/commands.exp: redefine_backtrace_test: expect response to define backtrace
PASS: gdb.base/commands.exp: redefine_backtrace_test: enter commands
PASS: gdb.base/commands.exp: redefine_backtrace_test: execute backtrace command
PASS: gdb.base/commands.exp: redefine_backtrace_test: execute bt command
PASS: gdb.base/compare-sections.exp: after file: compare-sections
PASS: gdb.base/compare-sections.exp: after file: compare-sections -r
PASS: gdb.base/compare-sections.exp: after reload: compare-sections
PASS: gdb.base/compare-sections.exp: after reload: compare-sections -r
PASS: gdb.base/compare-sections.exp: compare-sections .text
FAIL: gdb.base/compare-sections.exp: can't run to main
UNRESOLVED: gdb.base/completion.exp: set max-completions unlimited
PASS: gdb.base/completion.exp: field completion with invalid field
PASS: gdb.base/completion.exp: test non-deprecated completion
PASS: gdb.base/completion.exp: test deprecated completion
PASS: gdb.base/completion.exp: complete ptype struct some_
PASS: gdb.base/completion.exp: complete ptype enum some_
PASS: gdb.base/completion.exp: complete ptype union some_
PASS: gdb.base/completion.exp: complete set gnutarget aut
PASS: gdb.base/completion.exp: complete set cp-abi aut
PASS: gdb.base/completion.exp: complete target core
PASS: gdb.base/completion.exp: complete target tfile
PASS: gdb.base/completion.exp: complete target exec
PASS: gdb.base/completion.exp: complete target ctf
PASS: gdb.base/completion.exp: complete set height
PASS: gdb.base/completion.exp: complete set height u
PASS: gdb.base/completion.exp: complete set listsize
PASS: gdb.base/completion.exp: complete set listsize unl
PASS: gdb.base/completion.exp: complete set trace-buffer-size
PASS: gdb.base/completion.exp: complete set trace-buffer-size unl
PASS: gdb.base/completion.exp: complete 'info registers '
PASS: gdb.base/completion.exp: complete 'hfgfh'
PASS: gdb.base/completion.exp: complete 'show output'
PASS: gdb.base/completion.exp: complete 'show output-'
PASS: gdb.base/completion.exp: complete 'p'
PASS: gdb.base/completion.exp: complete 'p '
PASS: gdb.base/completion.exp: complete 'info t foo'
PASS: gdb.base/completion.exp: complete 'info t'
PASS: gdb.base/completion.exp: complete 'info t '
PASS: gdb.base/completion.exp: complete 'info asdfgh'
PASS: gdb.base/completion.exp: complete 'info asdfgh '
PASS: gdb.base/completion.exp: complete 'info'
PASS: gdb.base/completion.exp: complete 'info '
PASS: gdb.base/completion.exp: complete (2) 'info '
PASS: gdb.base/completion.exp: complete 'help info wat'
PASS: gdb.base/completion.exp: complete 'p "break1'
XFAIL: gdb.base/completion.exp: complete 'p "break1.'
PASS: gdb.base/completion.exp: complete 'p 'arg'
FAIL: gdb.base/completion.exp: complete (2) 'p 'arg' (timeout)
FAIL: gdb.base/completion.exp: complete 'handle signal' (timeout)
FAIL: gdb.base/completion.exp: complete 'handle keyword' (timeout)
FAIL: gdb.base/completion.exp: complete help aliases (timeout)
FAIL: gdb.base/completion.exp: complete 'p no_var_named_this-arg' (timeout)
FAIL: gdb.base/completion.exp: complete (2) 'p no_var_named_this-arg' (timeout)
FAIL: gdb.base/completion.exp: complete (2) 'p no_var_named_this-' (timeout)
FAIL: gdb.base/completion.exp: complete 'p values[0].a' (timeout)
FAIL: gdb.base/completion.exp: complete 'p values[0] . a' (timeout)
FAIL: gdb.base/completion.exp: complete 'p &values[0] -> a' (timeout)
FAIL: gdb.base/completion.exp: completion of field in anonymous union
PASS: gdb.base/completion.exp: ptype completion of field in anonymous union
PASS: gdb.base/completion.exp: whatis completion of field in anonymous union
PASS: gdb.base/completion.exp: cd to ${srcdir}
PASS: gdb.base/completion.exp: directory completion
PASS: gdb.base/completion.exp: directory completion 2
PASS: gdb.base/completion.exp: glob remaining of directory test
PASS: gdb.base/completion.exp: complete-command 'file ./gdb.base/compl'
PASS: gdb.base/completion.exp: complete 'file ./gdb.base/complet'
PASS: gdb.base/completion.exp: complete 'info func marke'
PASS: gdb.base/completion.exp: complete 'set follow-fork-mode'
PASS: gdb.base/completion.exp: set breakpoint pending off
PASS: gdb.base/completion.exp: tab complete break break
PASS: gdb.base/completion.exp: complete break break
PASS: gdb.base/completion.exp: tab complete break need
PASS: gdb.base/completion.exp: delete breakpoint for tab complete break need
PASS: gdb.base/completion.exp: complete break need
PASS: gdb.base/completion.exp: set max-completions 10
PASS: gdb.base/completion.exp: tab complete break break.c:ma
PASS: gdb.base/completion.exp: delete breakpoint for tab complete break break.c:ma
PASS: gdb.base/completion.exp: complete break break.c:ma
PASS: gdb.base/completion.exp: set max-completions 5
PASS: gdb.base/completion.exp: command-name completion limiting using tab character
PASS: gdb.base/completion.exp: command-name completion limiting using complete command
PASS: gdb.base/completion.exp: set max-completions 3
PASS: gdb.base/completion.exp: symbol-name completion limiting using tab character
PASS: gdb.base/completion.exp: symbol-name completion limiting using complete command
UNRESOLVED: gdb.base/comprdebug.exp: file comprdebug0.o
FAIL: gdb.base/cond-eval-mode.exp: can't run to main
UNRESOLVED: gdb.base/condbreak-call-false.exp: can't run to main
PASS: gdb.base/condbreak.exp: breakpoint function
PASS: gdb.base/condbreak.exp: break marker1 if 1==1
PASS: gdb.base/condbreak.exp: delete 2
PASS: gdb.base/condbreak.exp: break break.c:47 if 1==1
PASS: gdb.base/condbreak.exp: delete 3
PASS: gdb.base/condbreak.exp: break marker1 if (1==1)
PASS: gdb.base/condbreak.exp: break break.c:47 if (1==1)
PASS: gdb.base/condbreak.exp: break marker2 if (a==43)
PASS: gdb.base/condbreak.exp: break marker3 if (multi_line_if_conditional(1,1,1)==0)
PASS: gdb.base/condbreak.exp: break marker4
PASS: gdb.base/condbreak.exp: breakpoint info
FAIL: gdb.base/condbreak.exp: (timeout) rerun to main
FAIL: gdb.base/condbreak.exp: run until breakpoint set at a line number (GDB internal error)
FAIL: gdb.base/condbreak.exp: run until breakpoint at marker1
FAIL: gdb.base/condbreak.exp: run until breakpoint at marker2
PASS: gdb.base/condbreak.exp: break main if (1==1) thread 999
PASS: gdb.base/condbreak.exp: break main thread 999 if (1==1)
PASS: gdb.base/condbreak.exp: break *main if (1==1) thread 999
PASS: gdb.base/condbreak.exp: break *main thread 999 if (1==1)
PASS: gdb.base/condbreak.exp: break *main if (1==1) task 999
PASS: gdb.base/condbreak.exp: break *main task 999 if (1==1)
PASS: gdb.base/condbreak.exp: break *main if (1==1) t 999
PASS: gdb.base/condbreak.exp: break *main if (1==1) th 999
PASS: gdb.base/condbreak.exp: break *main if (1==1) ta 999
FAIL: gdb.base/condbreak.exp: run until breakpoint at marker3
FAIL: gdb.base/condbreak.exp: run until breakpoint at marker4
PASS: gdb.base/condbreak.exp: complete cond 1
PASS: gdb.base/condbreak.exp: set variable $var = 1
PASS: gdb.base/condbreak.exp: complete cond $v
PASS: gdb.base/condbreak.exp: complete cond 1 values[0].a
FAIL: gdb.base/consecutive-step-over.exp: can't run to main
UNRESOLVED: gdb.base/continue-all-already-running.exp: set non-stop on
UNTESTED: gdb.base/coredump-filter.exp: coredump-filter.exp
PASS: gdb.base/corefile.exp: args: -core=corefile.core (with bad program name)
PASS: gdb.base/corefile.exp: args: execfile -core=corefile.core (with bad program name)
PASS: gdb.base/corefile.exp: core-file command (with bad program name)
PASS: gdb.base/corefile.exp: print coremaker_data
PASS: gdb.base/corefile.exp: print coremaker_bss
PASS: gdb.base/corefile.exp: print coremaker_ro
PASS: gdb.base/corefile.exp: print func2::coremaker_local
PASS: gdb.base/corefile.exp: $_exitsignal prints SIGABRT (6)
PASS: gdb.base/corefile.exp: $_exitcode is void
PASS: gdb.base/corefile.exp: backtrace in corefile.exp
PASS: gdb.base/corefile.exp: up in corefile.exp
PASS: gdb.base/corefile.exp: accessing original mmap data in core file
PASS: gdb.base/corefile.exp: accessing mmapped data in core file
PASS: gdb.base/corefile.exp: up in corefile.exp (reinit)
PASS: gdb.base/corefile.exp: core
PASS: gdb.base/corefile.exp: run: load core again
PASS: gdb.base/corefile.exp: run: sanity check we see the core file
FAIL: gdb.base/corefile.exp: run: with core
UNRESOLVED: gdb.base/corefile.exp: run: core file is cleared
UNRESOLVED: gdb.base/corefile.exp: quit with a process
PASS: gdb.base/corefile.exp: no question: load core
PASS: gdb.base/corefile.exp: quit with a core file
PASS: gdb.base/corefile.exp: attach: load core again
PASS: gdb.base/corefile.exp: attach: sanity check we see the core file
FAIL: gdb.base/corefile.exp: attach: with core
PASS: gdb.base/corefile.exp: attach: core file is cleared
PASS: gdb.base/corefile.exp: core-file warning-free
PASS: gdb.base/cursal.exp: set listsize 1
PASS: gdb.base/cursal.exp: list before run
PASS: gdb.base/cvexpr.exp: set print sevenbit-strings
PASS: gdb.base/cvexpr.exp: set print address off
PASS: gdb.base/cvexpr.exp: set width 0
PASS: gdb.base/cvexpr.exp: (const char)
PASS: gdb.base/cvexpr.exp: (const signed char)
PASS: gdb.base/cvexpr.exp: (const unsigned char)
PASS: gdb.base/cvexpr.exp: (const short)
PASS: gdb.base/cvexpr.exp: (const signed short)
PASS: gdb.base/cvexpr.exp: (const unsigned short)
PASS: gdb.base/cvexpr.exp: (const int)
PASS: gdb.base/cvexpr.exp: (const signed int)
PASS: gdb.base/cvexpr.exp: (const unsigned int)
PASS: gdb.base/cvexpr.exp: (const long)
PASS: gdb.base/cvexpr.exp: (const signed long)
PASS: gdb.base/cvexpr.exp: (const unsigned long)
PASS: gdb.base/cvexpr.exp: (const long long)
PASS: gdb.base/cvexpr.exp: (const signed long long)
PASS: gdb.base/cvexpr.exp: (const unsigned long long)
PASS: gdb.base/cvexpr.exp: (const float)
PASS: gdb.base/cvexpr.exp: (const double)
PASS: gdb.base/cvexpr.exp: (volatile char)
PASS: gdb.base/cvexpr.exp: (volatile signed char)
PASS: gdb.base/cvexpr.exp: (volatile unsigned char)
PASS: gdb.base/cvexpr.exp: (volatile short)
PASS: gdb.base/cvexpr.exp: (volatile signed short)
PASS: gdb.base/cvexpr.exp: (volatile unsigned short)
PASS: gdb.base/cvexpr.exp: (volatile int)
PASS: gdb.base/cvexpr.exp: (volatile signed int)
PASS: gdb.base/cvexpr.exp: (volatile unsigned int)
PASS: gdb.base/cvexpr.exp: (volatile long)
PASS: gdb.base/cvexpr.exp: (volatile signed long)
PASS: gdb.base/cvexpr.exp: (volatile unsigned long)
PASS: gdb.base/cvexpr.exp: (volatile long long)
PASS: gdb.base/cvexpr.exp: (volatile signed long long)
PASS: gdb.base/cvexpr.exp: (volatile unsigned long long)
PASS: gdb.base/cvexpr.exp: (volatile float)
PASS: gdb.base/cvexpr.exp: (volatile double)
PASS: gdb.base/cvexpr.exp: (const volatile int)
PASS: gdb.base/cvexpr.exp: (volatile const int)
PASS: gdb.base/cvexpr.exp: (const int volatile)
PASS: gdb.base/cvexpr.exp: (volatile int const)
PASS: gdb.base/cvexpr.exp: (int const volatile)
PASS: gdb.base/cvexpr.exp: (int volatile const)
PASS: gdb.base/cvexpr.exp: (const volatile int *)
PASS: gdb.base/cvexpr.exp: (volatile const int *)
PASS: gdb.base/cvexpr.exp: (const int volatile)
PASS: gdb.base/cvexpr.exp: (volatile int const *)
PASS: gdb.base/cvexpr.exp: (int const volatile *)
PASS: gdb.base/cvexpr.exp: (int volatile const *)
PASS: gdb.base/cvexpr.exp: (int * const volatile)
PASS: gdb.base/cvexpr.exp: (int * volatile const)
PASS: gdb.base/cvexpr.exp: (char const)
PASS: gdb.base/cvexpr.exp: (signed char const)
PASS: gdb.base/cvexpr.exp: (unsigned char const)
PASS: gdb.base/cvexpr.exp: (short const)
PASS: gdb.base/cvexpr.exp: (signed short const)
PASS: gdb.base/cvexpr.exp: (unsigned short const)
PASS: gdb.base/cvexpr.exp: (int const)
PASS: gdb.base/cvexpr.exp: (signed int const)
PASS: gdb.base/cvexpr.exp: (unsigned int const)
PASS: gdb.base/cvexpr.exp: (long const)
PASS: gdb.base/cvexpr.exp: (signed long const)
PASS: gdb.base/cvexpr.exp: (unsigned long const)
PASS: gdb.base/cvexpr.exp: (long long const)
PASS: gdb.base/cvexpr.exp: (signed long long const)
PASS: gdb.base/cvexpr.exp: (unsigned long long const)
PASS: gdb.base/cvexpr.exp: (float const)
PASS: gdb.base/cvexpr.exp: (double const)
PASS: gdb.base/cvexpr.exp: (char volatile)
PASS: gdb.base/cvexpr.exp: (signed char volatile)
PASS: gdb.base/cvexpr.exp: (unsigned char volatile)
PASS: gdb.base/cvexpr.exp: (short volatile)
PASS: gdb.base/cvexpr.exp: (signed short volatile)
PASS: gdb.base/cvexpr.exp: (unsigned short volatile)
PASS: gdb.base/cvexpr.exp: (int volatile)
PASS: gdb.base/cvexpr.exp: (signed int volatile)
PASS: gdb.base/cvexpr.exp: (unsigned int volatile)
PASS: gdb.base/cvexpr.exp: (long volatile)
PASS: gdb.base/cvexpr.exp: (signed long volatile)
PASS: gdb.base/cvexpr.exp: (unsigned long volatile)
PASS: gdb.base/cvexpr.exp: (long long volatile)
PASS: gdb.base/cvexpr.exp: (signed long long volatile)
PASS: gdb.base/cvexpr.exp: (unsigned long long volatile)
PASS: gdb.base/cvexpr.exp: (float volatile)
PASS: gdb.base/cvexpr.exp: (double volatile)
PASS: gdb.base/cvexpr.exp: (const enum misordered)
PASS: gdb.base/cvexpr.exp: (enum misordered const)
PASS: gdb.base/cvexpr.exp: (volatile enum misordered)
PASS: gdb.base/cvexpr.exp: (enum misordered volatile)
PASS: gdb.base/cvexpr.exp: (const int *)
PASS: gdb.base/cvexpr.exp: (int const *)
PASS: gdb.base/cvexpr.exp: (int * const)
PASS: gdb.base/cvexpr.exp: (const int * const)
PASS: gdb.base/cvexpr.exp: (int const * const)
PASS: gdb.base/cvexpr.exp: (const int **)
PASS: gdb.base/cvexpr.exp: (int const **)
PASS: gdb.base/cvexpr.exp: (int ** const)
PASS: gdb.base/cvexpr.exp: (const int * const *)
PASS: gdb.base/cvexpr.exp: (int const * const *)
PASS: gdb.base/cvexpr.exp: (const int * const * const)
PASS: gdb.base/cvexpr.exp: (int const * const * const)
PASS: gdb.base/cvexpr.exp: (const struct t_struct)
PASS: gdb.base/cvexpr.exp: (const union t_union)
PASS: gdb.base/cvexpr.exp: (struct t_struct const)
PASS: gdb.base/cvexpr.exp: (union t_union const)
PASS: gdb.base/cvexpr.exp: (const struct t_struct *)
PASS: gdb.base/cvexpr.exp: (const union t_union *)
PASS: gdb.base/cvexpr.exp: (struct t_struct const *)
PASS: gdb.base/cvexpr.exp: (union t_union const *)
PASS: gdb.base/cvexpr.exp: (struct t_struct * const)
PASS: gdb.base/cvexpr.exp: (union t_union * const)
PASS: gdb.base/cvexpr.exp: (const struct t_struct * const)
PASS: gdb.base/cvexpr.exp: (const union t_union * const)
PASS: gdb.base/cvexpr.exp: (struct t_struct const * const)
PASS: gdb.base/cvexpr.exp: (union t_union const * const)
PASS: gdb.base/dbx.exp: stop in main
PASS: gdb.base/dbx.exp: status
PASS: gdb.base/dbx.exp: stop at average.c:30
PASS: gdb.base/dbx.exp: stop in average.c:30
PASS: gdb.base/dbx.exp: stop at main
FAIL: gdb.base/dbx.exp: running to main (GDB internal error)
FAIL: gdb.base/dbx.exp: assign first
FAIL: gdb.base/dbx.exp: print first
PASS: gdb.base/dbx.exp: whereis my_list
PASS: gdb.base/dbx.exp: file average.c:1
PASS: gdb.base/dbx.exp: cont 1
PASS: gdb.base/dbx.exp: step
PASS: gdb.base/dbx.exp: func sum
FAIL: gdb.base/dbx.exp: stop in sum
PASS: gdb.base/dbx.exp: cont 2
FAIL: gdb.base/dbx.exp: func print_average
FAIL: gdb.base/debug-expr.exp: run to main
PASS: gdb.base/default.exp: add-symbol-file
PASS: gdb.base/default.exp: append
PASS: gdb.base/default.exp: append binary
PASS: gdb.base/default.exp: append memory
PASS: gdb.base/default.exp: append value
PASS: gdb.base/default.exp: append binary memory
PASS: gdb.base/default.exp: append binary value
PASS: gdb.base/default.exp: attach
PASS: gdb.base/default.exp: break
PASS: gdb.base/default.exp: break "b" abbreviation
PASS: gdb.base/default.exp: break "br" abbreviation
PASS: gdb.base/default.exp: break "bre" abbreviation
PASS: gdb.base/default.exp: break "brea" abbreviation
PASS: gdb.base/default.exp: backtrace
PASS: gdb.base/default.exp: backtrace "bt" abbreviation
PASS: gdb.base/default.exp: backtrace "ba" abbreviation
PASS: gdb.base/default.exp: backtrace "bac" abbreviation
PASS: gdb.base/default.exp: continue
PASS: gdb.base/default.exp: continue "c" abbreviation
PASS: gdb.base/default.exp: call
PASS: gdb.base/default.exp: catch
PASS: gdb.base/default.exp: cd
PASS: gdb.base/default.exp: clear
PASS: gdb.base/default.exp: commands
PASS: gdb.base/default.exp: condition
PASS: gdb.base/default.exp: core-file
PASS: gdb.base/default.exp: delete "d" abbreviation
PASS: gdb.base/default.exp: delete
PASS: gdb.base/default.exp: define
PASS: gdb.base/default.exp: delete breakpoints
PASS: gdb.base/default.exp: delete display prompt
PASS: gdb.base/default.exp: detach
PASS: gdb.base/default.exp: directory prompt
PASS: gdb.base/default.exp: disable "dis" abbreviation
PASS: gdb.base/default.exp: disable "disa" abbreviation
PASS: gdb.base/default.exp: disable
PASS: gdb.base/default.exp: disable breakpoints
PASS: gdb.base/default.exp: disable display
PASS: gdb.base/default.exp: disassemble
PASS: gdb.base/default.exp: display
PASS: gdb.base/default.exp: do
PASS: gdb.base/default.exp: document
PASS: gdb.base/default.exp: down
PASS: gdb.base/default.exp: down-silently
PASS: gdb.base/default.exp: dump
PASS: gdb.base/default.exp: dump binary
PASS: gdb.base/default.exp: dump ihex
PASS: gdb.base/default.exp: dump memory
PASS: gdb.base/default.exp: dump srec
PASS: gdb.base/default.exp: dump tekhex
PASS: gdb.base/default.exp: dump value
PASS: gdb.base/default.exp: dump binary memory
PASS: gdb.base/default.exp: dump binary value
PASS: gdb.base/default.exp: dump ihex memory
PASS: gdb.base/default.exp: dump ihex value
PASS: gdb.base/default.exp: dump srec memory
PASS: gdb.base/default.exp: dump srec value
PASS: gdb.base/default.exp: dump tekhex memory
PASS: gdb.base/default.exp: dump tekhex value
PASS: gdb.base/default.exp: echo
PASS: gdb.base/default.exp: enable breakpoints delete
PASS: gdb.base/default.exp: enable breakpoints once
PASS: gdb.base/default.exp: enable breakpoints
PASS: gdb.base/default.exp: enable delete
PASS: gdb.base/default.exp: enable display
PASS: gdb.base/default.exp: enable once
PASS: gdb.base/default.exp: enable
PASS: gdb.base/default.exp: exec-file
PASS: gdb.base/default.exp: frame "f" abbreviation
PASS: gdb.base/default.exp: frame
PASS: gdb.base/default.exp: fg
PASS: gdb.base/default.exp: file
PASS: gdb.base/default.exp: finish
PASS: gdb.base/default.exp: forward-search
PASS: gdb.base/default.exp: gcore
PASS: gdb.base/default.exp: generate-core-file
PASS: gdb.base/default.exp: help "h" abbreviation
PASS: gdb.base/default.exp: help
PASS: gdb.base/default.exp: handle
PASS: gdb.base/default.exp: info "i" abbreviation
PASS: gdb.base/default.exp: info
PASS: gdb.base/default.exp: ignore
PASS: gdb.base/default.exp: info address
PASS: gdb.base/default.exp: info all-registers
PASS: gdb.base/default.exp: info args
PASS: gdb.base/default.exp: info bogus-gdb-command
PASS: gdb.base/default.exp: info breakpoints
PASS: gdb.base/default.exp: info copying
PASS: gdb.base/default.exp: info display
PASS: gdb.base/default.exp: info frame "f" abbreviation
PASS: gdb.base/default.exp: info frame
PASS: gdb.base/default.exp: info files
PASS: gdb.base/default.exp: info float
PASS: gdb.base/default.exp: info functions
PASS: gdb.base/default.exp: info locals
PASS: gdb.base/default.exp: info program
PASS: gdb.base/default.exp: info registers
PASS: gdb.base/default.exp: info stack "s" abbreviation
PASS: gdb.base/default.exp: info stack
PASS: gdb.base/default.exp: info set
PASS: gdb.base/default.exp: info symbol
PASS: gdb.base/default.exp: info source
PASS: gdb.base/default.exp: info sources
PASS: gdb.base/default.exp: info target
PASS: gdb.base/default.exp: info terminal
PASS: gdb.base/default.exp: info threads
PASS: gdb.base/default.exp: info types
PASS: gdb.base/default.exp: info variables
PASS: gdb.base/default.exp: info vector
PASS: gdb.base/default.exp: info warranty
PASS: gdb.base/default.exp: info watchpoints
PASS: gdb.base/default.exp: inspect
PASS: gdb.base/default.exp: jump
PASS: gdb.base/default.exp: kill
PASS: gdb.base/default.exp: list "l" abbreviation
PASS: gdb.base/default.exp: list
PASS: gdb.base/default.exp: load
PASS: gdb.base/default.exp: next "n" abbreviation
PASS: gdb.base/default.exp: next
PASS: gdb.base/default.exp: nexti "ni" abbreviation
PASS: gdb.base/default.exp: nexti
PASS: gdb.base/default.exp: output
PASS: gdb.base/default.exp: overlay
PASS: gdb.base/default.exp: overlay on
PASS: gdb.base/default.exp: overlay manual #1
PASS: gdb.base/default.exp: overlay auto
PASS: gdb.base/default.exp: overlay off
PASS: gdb.base/default.exp: overlay list
PASS: gdb.base/default.exp: overlay map #1
PASS: gdb.base/default.exp: overlay unmap #1
PASS: gdb.base/default.exp: overlay manual #2
PASS: gdb.base/default.exp: overlay map #2
PASS: gdb.base/default.exp: overlay unmap #2
PASS: gdb.base/default.exp: print "p" abbreviation
PASS: gdb.base/default.exp: print
PASS: gdb.base/default.exp: printf
PASS: gdb.base/default.exp: ptype
PASS: gdb.base/default.exp: pwd
PASS: gdb.base/default.exp: run "r" abbreviation
PASS: gdb.base/default.exp: run
PASS: gdb.base/default.exp: rbreak
PASS: gdb.base/default.exp: restore
PASS: gdb.base/default.exp: return
PASS: gdb.base/default.exp: reverse-search
PASS: gdb.base/default.exp: step "s" abbreviation #1
PASS: gdb.base/default.exp: step #1
PASS: gdb.base/default.exp: search
PASS: gdb.base/default.exp: section
PASS: gdb.base/default.exp: set annotate
PASS: gdb.base/default.exp: set args
PASS: gdb.base/default.exp: set check "c" abbreviation
PASS: gdb.base/default.exp: set check "ch" abbreviation
PASS: gdb.base/default.exp: set check "check" abbreviation
PASS: gdb.base/default.exp: set check range
PASS: gdb.base/default.exp: set check type
PASS: gdb.base/default.exp: set complaints
PASS: gdb.base/default.exp: set confirm
PASS: gdb.base/default.exp: set environment
PASS: gdb.base/default.exp: set height
PASS: gdb.base/default.exp: set history expansion
PASS: gdb.base/default.exp: set history filename
PASS: gdb.base/default.exp: set the history filename
PASS: gdb.base/default.exp: set history save
PASS: gdb.base/default.exp: set history size
PASS: gdb.base/default.exp: set history
PASS: gdb.base/default.exp: set language
PASS: gdb.base/default.exp: set listsize
PASS: gdb.base/default.exp: set print "p" abbreviation
PASS: gdb.base/default.exp: set print "pr" abbreviation
PASS: gdb.base/default.exp: set print
PASS: gdb.base/default.exp: set print address
PASS: gdb.base/default.exp: set print array
PASS: gdb.base/default.exp: set print asm-demangle
PASS: gdb.base/default.exp: set print demangle
PASS: gdb.base/default.exp: set print elements
PASS: gdb.base/default.exp: set print object
PASS: gdb.base/default.exp: set print pretty
PASS: gdb.base/default.exp: set print sevenbit-strings
PASS: gdb.base/default.exp: set print union
PASS: gdb.base/default.exp: set print vtbl
PASS: gdb.base/default.exp: set radix
PASS: gdb.base/default.exp: set variable
PASS: gdb.base/default.exp: set verbose
PASS: gdb.base/default.exp: set width
PASS: gdb.base/default.exp: set write
PASS: gdb.base/default.exp: set
PASS: gdb.base/default.exp: shell echo Hi dad!
PASS: gdb.base/default.exp: show annotate
PASS: gdb.base/default.exp: show args
PASS: gdb.base/default.exp: show check "c" abbreviation
PASS: gdb.base/default.exp: show check "ch" abbreviation
PASS: gdb.base/default.exp: show check "check" abbreviation
PASS: gdb.base/default.exp: show check range
PASS: gdb.base/default.exp: show check type
PASS: gdb.base/default.exp: show commands
PASS: gdb.base/default.exp: show complaints
PASS: gdb.base/default.exp: show confirm
PASS: gdb.base/default.exp: show convenience
PASS: gdb.base/default.exp: show directories
PASS: gdb.base/default.exp: show editing
PASS: gdb.base/default.exp: show height
PASS: gdb.base/default.exp: show history expansion
PASS: gdb.base/default.exp: show history filename
PASS: gdb.base/default.exp: show history save
PASS: gdb.base/default.exp: show history size
PASS: gdb.base/default.exp: show history
PASS: gdb.base/default.exp: show language
PASS: gdb.base/default.exp: show listsize
PASS: gdb.base/default.exp: show p
PASS: gdb.base/default.exp: show pr
PASS: gdb.base/default.exp: show print
PASS: gdb.base/default.exp: show paths
PASS: gdb.base/default.exp: show print address
PASS: gdb.base/default.exp: show print array
PASS: gdb.base/default.exp: show print asm-demangle
PASS: gdb.base/default.exp: show print demangle
PASS: gdb.base/default.exp: show print elements
PASS: gdb.base/default.exp: show print object
PASS: gdb.base/default.exp: show print pretty
PASS: gdb.base/default.exp: show print sevenbit-strings
PASS: gdb.base/default.exp: show print union
PASS: gdb.base/default.exp: show print vtbl
PASS: gdb.base/default.exp: show prompt
PASS: gdb.base/default.exp: show radix
PASS: gdb.base/default.exp: show user
PASS: gdb.base/default.exp: show values
PASS: gdb.base/default.exp: show verbose
PASS: gdb.base/default.exp: show version
PASS: gdb.base/default.exp: show width
PASS: gdb.base/default.exp: show write
PASS: gdb.base/default.exp: show
PASS: gdb.base/default.exp: set history save off
PASS: gdb.base/default.exp: stepi "si" abbreviation
PASS: gdb.base/default.exp: stepi
PASS: gdb.base/default.exp: signal
PASS: gdb.base/default.exp: source
PASS: gdb.base/default.exp: step "s" abbreviation #2
PASS: gdb.base/default.exp: step #2
PASS: gdb.base/default.exp: symbol-file
PASS: gdb.base/default.exp: target native
PASS: gdb.base/default.exp: target core
PASS: gdb.base/default.exp: target exec
PASS: gdb.base/default.exp: target remote
PASS: gdb.base/default.exp: target
PASS: gdb.base/default.exp: tbreak
PASS: gdb.base/default.exp: thread
PASS: gdb.base/default.exp: thread apply
PASS: gdb.base/default.exp: thread find
PASS: gdb.base/default.exp: thread name
PASS: gdb.base/default.exp: until "u" abbreviation
PASS: gdb.base/default.exp: until
PASS: gdb.base/default.exp: undisplay prompt
PASS: gdb.base/default.exp: unset environment prompt
PASS: gdb.base/default.exp: unset
PASS: gdb.base/default.exp: up-silently
PASS: gdb.base/default.exp: watch
PASS: gdb.base/default.exp: whatis
PASS: gdb.base/default.exp: where
PASS: gdb.base/default.exp: x
FAIL: gdb.base/define.exp: define tests suppressed
PASS: gdb.base/define.exp: define user command: nextwhere
FAIL: gdb.base/define.exp: use user command: nextwhere
PASS: gdb.base/define.exp: define user command: nextwh
PASS: gdb.base/define.exp: redefine user command aborted: nextwhere
PASS: gdb.base/define.exp: redefine user command: nextwhere
PASS: gdb.base/define.exp: redocumenting builtin command disallowed
PASS: gdb.base/define.exp: document user command: nextwhere
PASS: gdb.base/define.exp: re-document user command: nextwhere
PASS: gdb.base/define.exp: help user command: nextwhere
PASS: gdb.base/define.exp: set up whitespace in help string
PASS: gdb.base/define.exp: preserve whitespace in help string
PASS: gdb.base/define.exp: define user command: ifnospace
PASS: gdb.base/define.exp: test ifnospace is parsed correctly
PASS: gdb.base/define.exp: command abbreviations in define: define user command: breakmain
PASS: gdb.base/define.exp: command abbreviations in define: send body of breakmain
PASS: gdb.base/define.exp: command abbreviations in define: run user command
PASS: gdb.base/define.exp: command abbreviations in define: additional end command
PASS: gdb.base/define.exp: command abbreviations in define: info break shows echo command
PASS: gdb.base/define.exp: define user command: whilenospace
PASS: gdb.base/define.exp: test whilenospace is parsed correctly
PASS: gdb.base/define.exp: define user command: user-bt
PASS: gdb.base/define.exp: define hook-stop command
FAIL: gdb.base/define.exp: use hook-stop command
PASS: gdb.base/define.exp: define hook undefined command aborted: bar
PASS: gdb.base/define.exp: define hook undefined command: bar
PASS: gdb.base/define.exp: define target testsuite
PASS: gdb.base/define.exp: document target testsuite
PASS: gdb.base/define.exp: help target
PASS: gdb.base/define.exp: target testsuite
PASS: gdb.base/define.exp: show user target testsuite
PASS: gdb.base/define.exp: define target hook-testsuite
PASS: gdb.base/define.exp: define target hookpost-testsuite
PASS: gdb.base/define.exp: target testsuite with hooks
PASS: gdb.base/define.exp: set gdb_prompt
PASS: gdb.base/define.exp: reset gdb_prompt
PASS: gdb.base/del.exp: remove all breakpoints (del)
PASS: gdb.base/del.exp: info break after removing break on main
PASS: gdb.base/del.exp: breakpoint insertion (del)
PASS: gdb.base/del.exp: Remove last breakpoint (del)
PASS: gdb.base/del.exp: info break after removing break on main (del)
PASS: gdb.base/del.exp: remove all breakpoints (d)
PASS: gdb.base/del.exp: info break after removing break on main
PASS: gdb.base/del.exp: breakpoint insertion (d)
PASS: gdb.base/del.exp: Remove last breakpoint (d)
PASS: gdb.base/del.exp: info break after removing break on main (d)
PASS: gdb.base/dfp-exprs.exp: p 1.2df
PASS: gdb.base/dfp-exprs.exp: p -1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.234567df
PASS: gdb.base/dfp-exprs.exp: p -1.234567df
PASS: gdb.base/dfp-exprs.exp: p 1234567.df
PASS: gdb.base/dfp-exprs.exp: p -1234567.df
PASS: gdb.base/dfp-exprs.exp: p 1.2E1df
PASS: gdb.base/dfp-exprs.exp: p 1.2E10df
PASS: gdb.base/dfp-exprs.exp: p 1.2E-10df
PASS: gdb.base/dfp-exprs.exp: p 1.2E96df
PASS: gdb.base/dfp-exprs.exp: p 1.2dd
PASS: gdb.base/dfp-exprs.exp: p -1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.234567890123456dd
PASS: gdb.base/dfp-exprs.exp: p -1.234567890123456dd
PASS: gdb.base/dfp-exprs.exp: p 1234567890123456.dd
PASS: gdb.base/dfp-exprs.exp: p -1234567890123456.dd
PASS: gdb.base/dfp-exprs.exp: p 1.2E1dd
PASS: gdb.base/dfp-exprs.exp: p 1.2E10dd
PASS: gdb.base/dfp-exprs.exp: p 1.2E-10dd
PASS: gdb.base/dfp-exprs.exp: p 1.2E384dd
PASS: gdb.base/dfp-exprs.exp: p 1.2dl
PASS: gdb.base/dfp-exprs.exp: p -1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.234567890123456789012345678901234dl
PASS: gdb.base/dfp-exprs.exp: p -1.234567890123456789012345678901234dl
PASS: gdb.base/dfp-exprs.exp: p 1234567890123456789012345678901234.dl
PASS: gdb.base/dfp-exprs.exp: p -1234567890123456789012345678901234.dl
PASS: gdb.base/dfp-exprs.exp: p 1.2E1dl
PASS: gdb.base/dfp-exprs.exp: p 1.2E10dl
PASS: gdb.base/dfp-exprs.exp: p 1.2E-10dl
PASS: gdb.base/dfp-exprs.exp: p 1.2E6144dl
PASS: gdb.base/dfp-exprs.exp: p 1.4df + 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.4df - 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.4df * 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.4df / 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.4dd + 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.4dd - 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.4dd * 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.4dd / 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.4dl + 1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.4dl - 1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.4dl * 1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.4dl / 1.2dl
PASS: gdb.base/dfp-exprs.exp: ptype 2.df + 2.df
PASS: gdb.base/dfp-exprs.exp: ptype 2.dd + 2.dd
PASS: gdb.base/dfp-exprs.exp: ptype 2.dl + 2.dl
PASS: gdb.base/dfp-exprs.exp: p 2.1df + 2.7dd
PASS: gdb.base/dfp-exprs.exp: p 2.1dd + 2.7df
PASS: gdb.base/dfp-exprs.exp: p 2.6df + 2.7dl
PASS: gdb.base/dfp-exprs.exp: p 2.6dl + 2.7df
PASS: gdb.base/dfp-exprs.exp: p 2.3dd + 2.2dl
PASS: gdb.base/dfp-exprs.exp: p 2.3dl + 2.2dd
PASS: gdb.base/dfp-exprs.exp: ptype 2.df + 2.dd
PASS: gdb.base/dfp-exprs.exp: ptype 2.df + 2.dl
PASS: gdb.base/dfp-exprs.exp: ptype 2.dd + 2.dl
PASS: gdb.base/dfp-exprs.exp: p 1.2df + 1
PASS: gdb.base/dfp-exprs.exp: p 2 + 1.7dd
PASS: gdb.base/dfp-exprs.exp: p 3 + 2.1dl
PASS: gdb.base/dfp-exprs.exp: ptype 1.2df + 1
PASS: gdb.base/dfp-exprs.exp: ptype 2 + 1.7dd
PASS: gdb.base/dfp-exprs.exp: ptype 3 + 2.1dl
PASS: gdb.base/dfp-exprs.exp: p 1.2df + 2ll
PASS: gdb.base/dfp-exprs.exp: p 1.2df + 1.2f
PASS: gdb.base/dfp-exprs.exp: p !0.df
PASS: gdb.base/dfp-exprs.exp: p !0.dd
PASS: gdb.base/dfp-exprs.exp: p !0.dl
PASS: gdb.base/dfp-exprs.exp: p !0.5df
PASS: gdb.base/dfp-exprs.exp: p !0.5dd
PASS: gdb.base/dfp-exprs.exp: p !0.5dl
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dd == 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.2dd == 1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dl == 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.2dl == 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.3dd
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.3dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dd == 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2dd == 1.3dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dl == 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2dl == 1.3dd
PASS: gdb.base/dfp-exprs.exp: p +1.2df
PASS: gdb.base/dfp-exprs.exp: p +1.2dd
PASS: gdb.base/dfp-exprs.exp: p +1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.2df < 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2df < 1.3dd
PASS: gdb.base/dfp-exprs.exp: p 1.2dl < 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2dd < 1.3dd
PASS: gdb.base/dfp-exprs.exp: p 1.2dd < 1.3dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dl < 1.3dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dl < 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2df > 1
PASS: gdb.base/dfp-exprs.exp: p 1.2dl > 2
PASS: gdb.base/dfp-exprs.exp: p 2 > 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 2 > 3.1dl
PASS: gdb.base/dfp-exprs.exp: p (float) -0.1df
PASS: gdb.base/dfp-exprs.exp: p (int) 8.3dd
PASS: gdb.base/dfp-exprs.exp: p (_Decimal64) 3.1
PASS: gdb.base/dfp-exprs.exp: p (_Decimal128) 3.7df
PASS: gdb.base/dfp-exprs.exp: p (_Decimal32) 4
FAIL: gdb.base/disabled-location.exp: can't run to main
PASS: gdb.base/display.exp: kill
PASS: gdb.base/display.exp: detach
FAIL: gdb.base/display.exp: run (GDB internal error)
PASS: gdb.base/display.exp: kill again
PASS: gdb.base/display.exp: detach again
FAIL: gdb.base/display.exp: could not run to main - other tests will fail.
PASS: gdb.base/dmsym.exp: set lang ada
PASS: gdb.base/dmsym.exp: break pck__foo__bar__minsym
PASS: gdb.base/dmsym.exp: info line pck__foo__bar__minsym
PASS: gdb.base/dmsym.exp: set lang auto
FAIL: gdb.base/dmsym.exp: run until breakpoint at BREAK (GDB internal error)
FAIL: gdb.base/dmsym.exp: continue
FAIL: gdb.base/dmsym.exp: print val
FAIL: gdb.base/double-prompt-target-event-error.exp: ctrlc target event: continue: can't run to main
FAIL: gdb.base/double-prompt-target-event-error.exp: ctrlc target event: wrapcont: can't run to main
FAIL: gdb.base/dprintf-bp-same-addr.exp: gdb: can't run to main
FAIL: gdb.base/dprintf-bp-same-addr.exp: agent: can't run to main
PASS: gdb.base/dprintf-detach.exp: bai=on ds=gdb dd=on: set breakpoint always-inserted on
PASS: gdb.base/dprintf-detach.exp: bai=on ds=gdb dd=on: set dprintf-style gdb
PASS: gdb.base/dprintf-detach.exp: bai=on ds=gdb dd=on: set disconnected-dprintf on
FAIL: gdb.base/dprintf-detach.exp: bai=on ds=gdb dd=on: can't run to main
PASS: gdb.base/dprintf-detach.exp: bai=on ds=gdb dd=off: set breakpoint always-inserted on
PASS: gdb.base/dprintf-detach.exp: bai=on ds=gdb dd=off: set dprintf-style gdb
PASS: gdb.base/dprintf-detach.exp: bai=on ds=gdb dd=off: set disconnected-dprintf off
FAIL: gdb.base/dprintf-detach.exp: bai=on ds=gdb dd=off: can't run to main
PASS: gdb.base/dprintf-detach.exp: bai=on ds=call dd=on: set breakpoint always-inserted on
PASS: gdb.base/dprintf-detach.exp: bai=on ds=call dd=on: set dprintf-style call
PASS: gdb.base/dprintf-detach.exp: bai=on ds=call dd=on: set disconnected-dprintf on
FAIL: gdb.base/dprintf-detach.exp: bai=on ds=call dd=on: can't run to main
PASS: gdb.base/dprintf-detach.exp: bai=on ds=call dd=off: set breakpoint always-inserted on
PASS: gdb.base/dprintf-detach.exp: bai=on ds=call dd=off: set dprintf-style call
PASS: gdb.base/dprintf-detach.exp: bai=on ds=call dd=off: set disconnected-dprintf off
FAIL: gdb.base/dprintf-detach.exp: bai=on ds=call dd=off: can't run to main
PASS: gdb.base/dprintf-detach.exp: bai=on ds=agent dd=on: set breakpoint always-inserted on
PASS: gdb.base/dprintf-detach.exp: bai=on ds=agent dd=on: set dprintf-style agent
PASS: gdb.base/dprintf-detach.exp: bai=on ds=agent dd=on: set disconnected-dprintf on
FAIL: gdb.base/dprintf-detach.exp: bai=on ds=agent dd=on: can't run to main
PASS: gdb.base/dprintf-detach.exp: bai=on ds=agent dd=off: set breakpoint always-inserted on
PASS: gdb.base/dprintf-detach.exp: bai=on ds=agent dd=off: set dprintf-style agent
PASS: gdb.base/dprintf-detach.exp: bai=on ds=agent dd=off: set disconnected-dprintf off
FAIL: gdb.base/dprintf-detach.exp: bai=on ds=agent dd=off: can't run to main
PASS: gdb.base/dprintf-detach.exp: bai=off ds=gdb dd=on: set breakpoint always-inserted off
PASS: gdb.base/dprintf-detach.exp: bai=off ds=gdb dd=on: set dprintf-style gdb
PASS: gdb.base/dprintf-detach.exp: bai=off ds=gdb dd=on: set disconnected-dprintf on
FAIL: gdb.base/dprintf-detach.exp: bai=off ds=gdb dd=on: can't run to main
PASS: gdb.base/dprintf-detach.exp: bai=off ds=gdb dd=off: set breakpoint always-inserted off
PASS: gdb.base/dprintf-detach.exp: bai=off ds=gdb dd=off: set dprintf-style gdb
PASS: gdb.base/dprintf-detach.exp: bai=off ds=gdb dd=off: set disconnected-dprintf off
FAIL: gdb.base/dprintf-detach.exp: bai=off ds=gdb dd=off: can't run to main
PASS: gdb.base/dprintf-detach.exp: bai=off ds=call dd=on: set breakpoint always-inserted off
PASS: gdb.base/dprintf-detach.exp: bai=off ds=call dd=on: set dprintf-style call
PASS: gdb.base/dprintf-detach.exp: bai=off ds=call dd=on: set disconnected-dprintf on
FAIL: gdb.base/dprintf-detach.exp: bai=off ds=call dd=on: can't run to main
PASS: gdb.base/dprintf-detach.exp: bai=off ds=call dd=off: set breakpoint always-inserted off
PASS: gdb.base/dprintf-detach.exp: bai=off ds=call dd=off: set dprintf-style call
PASS: gdb.base/dprintf-detach.exp: bai=off ds=call dd=off: set disconnected-dprintf off
FAIL: gdb.base/dprintf-detach.exp: bai=off ds=call dd=off: can't run to main
PASS: gdb.base/dprintf-detach.exp: bai=off ds=agent dd=on: set breakpoint always-inserted off
PASS: gdb.base/dprintf-detach.exp: bai=off ds=agent dd=on: set dprintf-style agent
PASS: gdb.base/dprintf-detach.exp: bai=off ds=agent dd=on: set disconnected-dprintf on
FAIL: gdb.base/dprintf-detach.exp: bai=off ds=agent dd=on: can't run to main
PASS: gdb.base/dprintf-detach.exp: bai=off ds=agent dd=off: set breakpoint always-inserted off
PASS: gdb.base/dprintf-detach.exp: bai=off ds=agent dd=off: set dprintf-style agent
PASS: gdb.base/dprintf-detach.exp: bai=off ds=agent dd=off: set disconnected-dprintf off
FAIL: gdb.base/dprintf-detach.exp: bai=off ds=agent dd=off: can't run to main
FAIL: gdb.base/dprintf-next.exp: can't run to main
FAIL: gdb.base/dprintf-non-stop.exp: can't run to main
UNTESTED: gdb.base/dprintf-pending.exp: failed to compile shared library
UNTESTED: gdb.base/dtrace-probe.exp: failed to compile
PASS: gdb.base/dump.exp: inaccessible memory is reported
PASS: gdb.base/dump.exp: get hexadecimal valueof "&intarray"
UNTESTED: gdb.base/dump.exp: couldn't run to checkpoint
FAIL: gdb.base/duplicate-bp.exp: del_1_stop_2: can't run to main
FAIL: gdb.base/duplicate-bp.exp: del_1_stop_2: delete $bp_num_1
FAIL: gdb.base/duplicate-bp.exp: del_1_stop_2: delete #1, stop at #2
FAIL: gdb.base/duplicate-bp.exp: del_2_stop_1: can't run to main
FAIL: gdb.base/duplicate-bp.exp: del_2_stop_1: delete $bp_num_2
FAIL: gdb.base/duplicate-bp.exp: del_2_stop_1: delete #2, stop at #1
FAIL: gdb.base/duplicate-bp.exp: dis_1_del_2_stop_3: can't run to main
FAIL: gdb.base/duplicate-bp.exp: dis_1_del_2_stop_3: disable $bp_num_1
PASS: gdb.base/duplicate-bp.exp: dis_1_del_2_stop_3: step
FAIL: gdb.base/duplicate-bp.exp: dis_1_del_2_stop_3: delete $bp_num_2
FAIL: gdb.base/duplicate-bp.exp: dis_1_del_2_stop_3: disable #1, delete #2, stop at #3
FAIL: gdb.base/duplicate-bp.exp: dis_2_del_1_stop_3: can't run to main
FAIL: gdb.base/duplicate-bp.exp: dis_2_del_1_stop_3: disable $bp_num_2
PASS: gdb.base/duplicate-bp.exp: dis_2_del_1_stop_3: step
FAIL: gdb.base/duplicate-bp.exp: dis_2_del_1_stop_3: delete $bp_num_1
FAIL: gdb.base/duplicate-bp.exp: dis_2_del_1_stop_3: disable #2, delete #1, stop at #3
FAIL: gdb.base/duplicate-bp.exp: dis_1_del_3_stop_1: can't run to main
FAIL: gdb.base/duplicate-bp.exp: dis_1_del_3_stop_1: disable $bp_num_1
PASS: gdb.base/duplicate-bp.exp: dis_1_del_3_stop_1: step
FAIL: gdb.base/duplicate-bp.exp: dis_1_del_3_stop_1: delete $bp_num_3
FAIL: gdb.base/duplicate-bp.exp: dis_1_del_3_stop_1: disable #1, delete #3, stop at #2
FAIL: gdb.base/duplicate-bp.exp: dis_3_del_1_stop_2: can't run to main
FAIL: gdb.base/duplicate-bp.exp: dis_3_del_1_stop_2: disable $bp_num_3
PASS: gdb.base/duplicate-bp.exp: dis_3_del_1_stop_2: step
FAIL: gdb.base/duplicate-bp.exp: dis_3_del_1_stop_2: delete $bp_num_1
FAIL: gdb.base/duplicate-bp.exp: dis_3_del_1_stop_2: disable #3, delete #1, stop at #2
FAIL: gdb.base/duplicate-bp.exp: dis_2_del_3_stop_1: can't run to main
FAIL: gdb.base/duplicate-bp.exp: dis_2_del_3_stop_1: disable $bp_num_2
PASS: gdb.base/duplicate-bp.exp: dis_2_del_3_stop_1: step
FAIL: gdb.base/duplicate-bp.exp: dis_2_del_3_stop_1: delete $bp_num_3
FAIL: gdb.base/duplicate-bp.exp: dis_2_del_3_stop_1: disable #2, delete #3, stop at #1
FAIL: gdb.base/duplicate-bp.exp: dis_3_del_2_stop_1: can't run to main
FAIL: gdb.base/duplicate-bp.exp: dis_3_del_2_stop_1: disable $bp_num_3
PASS: gdb.base/duplicate-bp.exp: dis_3_del_2_stop_1: step
FAIL: gdb.base/duplicate-bp.exp: dis_3_del_2_stop_1: delete $bp_num_2
FAIL: gdb.base/duplicate-bp.exp: dis_3_del_2_stop_1: disable #3, delete #2, stop at #1
PASS: gdb.base/echo.exp: echo test
PASS: gdb.base/empty_exe.exp: file ''
PASS: gdb.base/empty_exe.exp: print 1
FAIL: gdb.base/ena-dis-br.exp: enable/disable break tests suppressed
PASS: gdb.base/ena-dis-br.exp: break marker1
PASS: gdb.base/ena-dis-br.exp: enable break marker1
PASS: gdb.base/ena-dis-br.exp: info break marker1
FAIL: gdb.base/ena-dis-br.exp: continue to break marker1
PASS: gdb.base/ena-dis-br.exp: delete break marker1
PASS: gdb.base/ena-dis-br.exp: break marker2
PASS: gdb.base/ena-dis-br.exp: enable once break marker2
PASS: gdb.base/ena-dis-br.exp: info auto-disabled break marker2
FAIL: gdb.base/ena-dis-br.exp: continue to auto-disabled break marker2
FAIL: gdb.base/ena-dis-br.exp: info auto-disabled break marker2
FAIL: gdb.base/ena-dis-br.exp: continue until exit at no stop
FAIL: gdb.base/ena-dis-br.exp: (timeout) rerun to main
FAIL: gdb.base/ena-dis-br.exp: continue until exit at no stop at auto-disabled break marker2 (GDB internal error)
FAIL: gdb.base/ena-dis-br.exp: enable/disable break tests suppressed
PASS: gdb.base/ena-dis-br.exp: break marker3
PASS: gdb.base/ena-dis-br.exp: enable del break marker3
PASS: gdb.base/ena-dis-br.exp: info auto-deleted break marker2
FAIL: gdb.base/ena-dis-br.exp: continue to auto-deleted break marker3
FAIL: gdb.base/ena-dis-br.exp: info auto-deleted break marker3
PASS: gdb.base/ena-dis-br.exp: break marker4
PASS: gdb.base/ena-dis-br.exp: disable break marker4
PASS: gdb.base/ena-dis-br.exp: info break marker4
FAIL: gdb.base/ena-dis-br.exp: enable/disable break tests suppressed
PASS: gdb.base/ena-dis-br.exp: break 63
PASS: gdb.base/ena-dis-br.exp: break marker1
PASS: gdb.base/ena-dis-br.exp: enable count missing arguments
PASS: gdb.base/ena-dis-br.exp: enable count missing breakpoint number
PASS: gdb.base/ena-dis-br.exp: disable break with count
FAIL: gdb.base/ena-dis-br.exp: continue from enable count, first time
FAIL: gdb.base/ena-dis-br.exp: continue from enable count, second time
FAIL: gdb.base/ena-dis-br.exp: continue through enable count, now disabled
FAIL: gdb.base/ena-dis-br.exp: enable/disable break tests suppressed
PASS: gdb.base/ena-dis-br.exp: break marker1
PASS: gdb.base/ena-dis-br.exp: ignore non-existent break
PASS: gdb.base/ena-dis-br.exp: ignore break with missing ignore count
PASS: gdb.base/ena-dis-br.exp: ignore break marker1 -1
PASS: gdb.base/ena-dis-br.exp: ignore break marker1 0
PASS: gdb.base/ena-dis-br.exp: ignore break marker1
PASS: gdb.base/ena-dis-br.exp: info ignored break marker1
FAIL: gdb.base/ena-dis-br.exp: continue until exit at no stop at ignored break marker1
FAIL: gdb.base/ena-dis-br.exp: (timeout) rerun to main
FAIL: gdb.base/ena-dis-br.exp: continue to break marker1, 2nd time (GDB internal error)
FAIL: gdb.base/ena-dis-br.exp: enable/disable break tests suppressed
PASS: gdb.base/ena-dis-br.exp: break marker1
PASS: gdb.base/ena-dis-br.exp: ignore break marker1
PASS: gdb.base/ena-dis-br.exp: enable del break marker1
PASS: gdb.base/ena-dis-br.exp: info break marker1
FAIL: gdb.base/ena-dis-br.exp: continue until exit at no stop at ignored & auto-deleted break marker1
FAIL: gdb.base/ena-dis-br.exp: (timeout) rerun to main
FAIL: gdb.base/ena-dis-br.exp: continue to ignored & auto-deleted break marker1 (GDB internal error)
FAIL: gdb.base/ena-dis-br.exp: enable/disable break tests suppressed
PASS: gdb.base/ena-dis-br.exp: break marker1
PASS: gdb.base/ena-dis-br.exp: ignore break marker1
PASS: gdb.base/ena-dis-br.exp: disable break marker1
FAIL: gdb.base/ena-dis-br.exp: continue until exit at no stop at ignored & disabled break marker1
FAIL: gdb.base/ena-dis-br.exp: (timeout) rerun to main
FAIL: gdb.base/ena-dis-br.exp: info ignored & disabled break marker1 (GDB internal error)
FAIL: gdb.base/ena-dis-br.exp: enable/disable break tests suppressed
PASS: gdb.base/ena-dis-br.exp: prepare to continue with ignore count
FAIL: gdb.base/ena-dis-br.exp: continue with ignore count
FAIL: gdb.base/ena-dis-br.exp: step after continue with ignore count
PASS: gdb.base/ena-dis-br.exp: continue with ignore count, not stopped at bpt
FAIL: gdb.base/ena-dis-br.exp: enable/disable break tests suppressed
PASS: gdb.base/ena-dis-br.exp: break main
PASS: gdb.base/ena-dis-br.exp: break main
PASS: gdb.base/ena-dis-br.exp: break main
PASS: gdb.base/ena-dis-br.exp: break main
PASS: gdb.base/ena-dis-br.exp: disable $b1.1 $b2.1
PASS: gdb.base/ena-dis-br.exp: disabled $b1.1 and $b2.1
PASS: gdb.base/ena-dis-br.exp: disable $b1 fooo.1
PASS: gdb.base/ena-dis-br.exp: disabled $b1
PASS: gdb.base/ena-dis-br.exp: enable $b3
PASS: gdb.base/ena-dis-br.exp: disable $b4 $b3.1
PASS: gdb.base/ena-dis-br.exp: disabled $b4 and $b3.1,remain enabled $b3
PASS: gdb.base/ena-dis-br.exp: disable $b4.1 fooobar
PASS: gdb.base/ena-dis-br.exp: disabled $b4.1
PASS: gdb.base/ena-dis-br.exp: enable $b1.1 $b2.1
PASS: gdb.base/ena-dis-br.exp: enabled $b1.1 and $b2.1
PASS: gdb.base/ena-dis-br.exp: enable $b1 fooo.1
PASS: gdb.base/ena-dis-br.exp: enabled $b1
PASS: gdb.base/ena-dis-br.exp: disable $b3
PASS: gdb.base/ena-dis-br.exp: enable $b4 $b3.1
PASS: gdb.base/ena-dis-br.exp: enabled $b4 and $b3.1,remain disabled $b3
PASS: gdb.base/ena-dis-br.exp: enable $b4.1 fooobar
PASS: gdb.base/ena-dis-br.exp: enabled $b4.1
PASS: gdb.base/ending-run.exp: bpt at line before routine
PASS: gdb.base/ending-run.exp: b ending-run.c:11, one
PASS: gdb.base/ending-run.exp: b ending-run.c:30
FAIL: gdb.base/ending-run.exp: run (GDB internal error)
FAIL: gdb.base/ending-run.exp: clear worked
FAIL: gdb.base/ending-run.exp: cleared bp at line before routine
PASS: gdb.base/ending-run.exp: b ending-run.c:1
PASS: gdb.base/ending-run.exp: b ending-run.c:11, two
FAIL: gdb.base/ending-run.exp: Cleared 2 by line
PASS: gdb.base/ending-run.exp: b ending-run.c:11
PASS: gdb.base/ending-run.exp: breakpoint 7 at *ending-run.c:11
FAIL: gdb.base/ending-run.exp: clear 2 by default
FAIL: gdb.base/ending-run.exp: all set to continue (didn't clear bps)
FAIL: gdb.base/ending-run.exp: cont
FAIL: gdb.base/ending-run.exp: Step to return
FAIL: gdb.base/ending-run.exp: step out of main
FAIL: gdb.base/ending-run.exp: step to end of run
UNSUPPORTED: gdb.base/ending-run.exp: continue after exit
UNSUPPORTED: gdb.base/ending-run.exp: don't step after run
PASS: gdb.base/ending-run.exp: ls: core (No core dumped on quit)
UNRESOLVED: gdb.base/enumval.exp: print e
PASS: gdb.base/enumval.exp: print f
PASS: gdb.base/enumval.exp: print J
PASS: gdb.base/enumval.exp: print K
PASS: gdb.base/enumval.exp: p ZERO
UNTESTED: gdb.base/eu-strip-infcall.exp: failed to compile
UNRESOLVED: gdb.base/eval.exp: initialize $a.
PASS: gdb.base/eval.exp: first eval.
PASS: gdb.base/eval.exp: second eval.
UNTESTED: gdb.base/examine-backward.exp: could not run to main
UNRESOLVED: gdb.base/exec-invalid-sysroot.exp: set sysroot /a/path/that/does/not/exist
FAIL: gdb.base/exec-invalid-sysroot.exp: couldn't run exec-invalid-sysroot
UNTESTED: gdb.base/execl-update-breakpoints.exp: link failed
FAIL: gdb.base/execution-termios.exp: next: can't run to main
FAIL: gdb.base/execution-termios.exp: infcall: can't run to main
FAIL: gdb.base/execution-termios.exp: continue: can't run to main
FAIL: gdb.base/execution-termios.exp: finish: can't run to main
PASS: gdb.base/expand-psymtabs.exp: expand psymtabs
UNRESOLVED: gdb.base/fileio.exp: failed to compile
PASS: gdb.base/filesym.exp: complete on "filesy"
PASS: gdb.base/filesym.exp: completion list for "filesym"
PASS: gdb.base/filesym.exp: set breakpoint at filesym
PASS: gdb.base/find.exp: breakpoint function in file
FAIL: gdb.base/find.exp: run until function breakpoint (GDB internal error)
FAIL: gdb.base/find.exp: set *(int32_t*) &int8_search_buf[10] = 0x61616161
FAIL: gdb.base/find.exp: find string pattern
PASS: gdb.base/find.exp: pattern not found at end of range
FAIL: gdb.base/find.exp: pattern found at end of range
FAIL: gdb.base/find.exp: max-count
FAIL: gdb.base/find.exp: $_
FAIL: gdb.base/find.exp: $numfound
FAIL: gdb.base/find.exp: size,max-count, /1b
FAIL: gdb.base/find.exp: size,max-count, /b1
FAIL: gdb.base/find.exp: size,max-count, /b/1
FAIL: gdb.base/find.exp: size,max-count, /1/b
FAIL: gdb.base/find.exp: find byte pattern with end address
FAIL: gdb.base/find.exp: set int16_search_buf[10] = 0x1234
FAIL: gdb.base/find.exp: find 16-bit pattern
FAIL: gdb.base/find.exp: find 16-bit pattern
FAIL: gdb.base/find.exp: set int32_search_buf[10] = 0x12345678
FAIL: gdb.base/find.exp: find 32-bit pattern
FAIL: gdb.base/find.exp: find 32-bit pattern
FAIL: gdb.base/find.exp: set int64_search_buf[10] = 0xfedcba9876543210LL
FAIL: gdb.base/find.exp: find 64-bit pattern
FAIL: gdb.base/find.exp: find 64-bit pattern
FAIL: gdb.base/find.exp: set *(int8_t*) &search_buf[10] = 0x62
FAIL: gdb.base/find.exp: set *(int16_t*) &search_buf[11] = 0x6363
FAIL: gdb.base/find.exp: set *(int32_t*) &search_buf[13] = 0x64646464
FAIL: gdb.base/find.exp: find mixed-sized pattern
FAIL: gdb.base/find.exp: set *(int32_t*) &search_buf[0*16000+100] = 0x12345678
FAIL: gdb.base/find.exp: set *(int32_t*) &search_buf[1*16000+100] = 0x12345678
FAIL: gdb.base/find.exp: search spanning large range
FAIL: gdb.base/find.exp: set *(int32_t*) &search_buf[16000-1] = 0xfdb97531
FAIL: gdb.base/find.exp: find pattern straddling chunk boundary
FAIL: gdb.base/find.exp: find int64_search_buf, +64/8*100, int64_search_buf
UNTESTED: gdb.base/finish.exp: couldn't run to main
UNTESTED: gdb.base/fixsection.exp: failed to compile
UNRESOLVED: gdb.base/fork-running-state.exp: detach-on-fork=off: follow-fork=parent: non-stop: failed to prepare
UNTESTED: gdb.base/fork-running-state.exp: detach-on-fork=off: follow-fork=parent: all-stop: schedule-multiple=on: failed to prepare
UNTESTED: gdb.base/fork-running-state.exp: detach-on-fork=off: follow-fork=parent: all-stop: schedule-multiple=off: failed to prepare
UNTESTED: gdb.base/fork-running-state.exp: detach-on-fork=off: follow-fork=child: non-stop: failed to prepare
UNTESTED: gdb.base/fork-running-state.exp: detach-on-fork=off: follow-fork=child: all-stop: schedule-multiple=on: failed to prepare
UNTESTED: gdb.base/fork-running-state.exp: detach-on-fork=off: follow-fork=child: all-stop: schedule-multiple=off: failed to prepare
UNTESTED: gdb.base/fork-running-state.exp: detach-on-fork=on: follow-fork=parent: non-stop: failed to prepare
UNTESTED: gdb.base/fork-running-state.exp: detach-on-fork=on: follow-fork=parent: all-stop: schedule-multiple=on: failed to prepare
UNTESTED: gdb.base/fork-running-state.exp: detach-on-fork=on: follow-fork=parent: all-stop: schedule-multiple=off: failed to prepare
UNTESTED: gdb.base/fork-running-state.exp: detach-on-fork=on: follow-fork=child: non-stop: failed to prepare
UNTESTED: gdb.base/fork-running-state.exp: detach-on-fork=on: follow-fork=child: all-stop: schedule-multiple=on: failed to prepare
UNTESTED: gdb.base/fork-running-state.exp: detach-on-fork=on: follow-fork=child: all-stop: schedule-multiple=off: failed to prepare
UNRESOLVED: gdb.base/freebpcmd.exp: set breakpoint
PASS: gdb.base/freebpcmd.exp: send breakpoint commands
FAIL: gdb.base/freebpcmd.exp: run program with breakpoint commands (GDB internal error)
PASS: gdb.base/fullname.exp: set breakpoint by full path before loading symbols - built absolute
PASS: gdb.base/fullname.exp: set breakpoint at main - built absolute
PASS: gdb.base/fullname.exp: set breakpoint by full path after loading symbols - built absolute
PASS: gdb.base/fullname.exp: set breakpoint by full path before loading symbols - built relative
PASS: gdb.base/fullname.exp: set breakpoint at main - built relative
PASS: gdb.base/fullname.exp: set breakpoint by full path after loading symbols - built relative
PASS: gdb.base/fullname.exp: set breakpoint by full path before loading symbols - built other
PASS: gdb.base/fullname.exp: set breakpoint at main - built other
PASS: gdb.base/fullname.exp: set breakpoint by full path after loading symbols - built other
PASS: gdb.base/fullpath-expand.exp: rbreak XXX/fullpath-expand-func.c:func
PASS: gdb.base/fullpath-expand.exp: list func
PASS: gdb.base/fullpath-expand.exp: info source
FAIL: gdb.base/func-ptr.exp: can't run to main
UNTESTED: gdb.base/func-ptrs.exp: could not run to main
PASS: gdb.base/funcargs.exp: set print frame-arguments all
FAIL: gdb.base/funcargs.exp: run to call0a (GDB internal error)
FAIL: gdb.base/funcargs.exp: print c after run to call0a
FAIL: gdb.base/funcargs.exp: print s after run to call0a
FAIL: gdb.base/funcargs.exp: print i after run to call0a
FAIL: gdb.base/funcargs.exp: print l after run to call0a
FAIL: gdb.base/funcargs.exp: continue to call0b
FAIL: gdb.base/funcargs.exp: continue to call0c
FAIL: gdb.base/funcargs.exp: continue to call0d
FAIL: gdb.base/funcargs.exp: continue to call0e
FAIL: gdb.base/funcargs.exp: run to call1a (GDB internal error)
FAIL: gdb.base/funcargs.exp: print uc
FAIL: gdb.base/funcargs.exp: print us
FAIL: gdb.base/funcargs.exp: print ui
FAIL: gdb.base/funcargs.exp: print ul
FAIL: gdb.base/funcargs.exp: continue to call1b
FAIL: gdb.base/funcargs.exp: continue to call1c
FAIL: gdb.base/funcargs.exp: continue to call1d
FAIL: gdb.base/funcargs.exp: continue to call1e
FAIL: gdb.base/funcargs.exp: run to call2a (GDB internal error)
FAIL: gdb.base/funcargs.exp: print c after run to call2a
FAIL: gdb.base/funcargs.exp: print f1 after run to call2a
FAIL: gdb.base/funcargs.exp: print s after run to call2a
FAIL: gdb.base/funcargs.exp: print d1 after run to call2a
FAIL: gdb.base/funcargs.exp: print i after run to call2a
FAIL: gdb.base/funcargs.exp: print f2 after run to call2a
FAIL: gdb.base/funcargs.exp: print l after run to call2a
FAIL: gdb.base/funcargs.exp: print d2 after run to call2a
FAIL: gdb.base/funcargs.exp: continue to call2b
FAIL: gdb.base/funcargs.exp: continue to call2c
FAIL: gdb.base/funcargs.exp: continue to call2d
FAIL: gdb.base/funcargs.exp: continue to call2e
FAIL: gdb.base/funcargs.exp: continue to call2f
FAIL: gdb.base/funcargs.exp: continue to call2g
FAIL: gdb.base/funcargs.exp: continue to call2h
FAIL: gdb.base/funcargs.exp: continue to call2i
FAIL: gdb.base/funcargs.exp: run to call2a (GDB internal error)
FAIL: gdb.base/funcargs.exp: continue to callcb
FAIL: gdb.base/funcargs.exp: continue to callcc
FAIL: gdb.base/funcargs.exp: continue to callcd
FAIL: gdb.base/funcargs.exp: continue to callce
FAIL: gdb.base/funcargs.exp: continue to callcf
FAIL: gdb.base/funcargs.exp: run to callc1a (GDB internal error)
FAIL: gdb.base/funcargs.exp: continue to callc1b
FAIL: gdb.base/funcargs.exp: run to callc2a (GDB internal error)
FAIL: gdb.base/funcargs.exp: continue to callc2b
FAIL: gdb.base/funcargs.exp: run to call3a (GDB internal error)
FAIL: gdb.base/funcargs.exp: print *cp
FAIL: gdb.base/funcargs.exp: print *sp
FAIL: gdb.base/funcargs.exp: print *ip
FAIL: gdb.base/funcargs.exp: print *lp
FAIL: gdb.base/funcargs.exp: continue to call3b
FAIL: gdb.base/funcargs.exp: print *ucp
FAIL: gdb.base/funcargs.exp: print *usp
FAIL: gdb.base/funcargs.exp: print *uip
FAIL: gdb.base/funcargs.exp: print *ulp
FAIL: gdb.base/funcargs.exp: continue to call3c
FAIL: gdb.base/funcargs.exp: print *fp
FAIL: gdb.base/funcargs.exp: print *dp
FAIL: gdb.base/funcargs.exp: run to call4a (GDB internal error)
FAIL: gdb.base/funcargs.exp: print *stp
FAIL: gdb.base/funcargs.exp: continue to call4b
FAIL: gdb.base/funcargs.exp: print *unp (sizeof long == sizeof int)
PASS: gdb.base/funcargs.exp: locate actual args, structs/unions passed by reference
FAIL: gdb.base/funcargs.exp: run to call5a (GDB internal error)
FAIL: gdb.base/funcargs.exp: print st
FAIL: gdb.base/funcargs.exp: continue to call5b (sizeof long == sizeof int)
FAIL: gdb.base/funcargs.exp: print un (sizeof long == sizeof int)
FAIL: gdb.base/funcargs.exp: run to call6a (GDB internal error)
FAIL: gdb.base/funcargs.exp: backtrace from call6a
FAIL: gdb.base/funcargs.exp: continue to call6b
FAIL: gdb.base/funcargs.exp: backtrace from call6b (pattern 1)
FAIL: gdb.base/funcargs.exp: continue to call6c
FAIL: gdb.base/funcargs.exp: backtrace from call6c (pattern 1)
FAIL: gdb.base/funcargs.exp: continue to call6d
FAIL: gdb.base/funcargs.exp: backtrace from call6d (pattern 1)
FAIL: gdb.base/funcargs.exp: continue to call6e
FAIL: gdb.base/funcargs.exp: backtrace from call6e (pattern 1)
FAIL: gdb.base/funcargs.exp: continue to call6f
FAIL: gdb.base/funcargs.exp: backtrace from call6f (pattern 1)
FAIL: gdb.base/funcargs.exp: continue to call6g
FAIL: gdb.base/funcargs.exp: backtrace from call6g (pattern 1)
FAIL: gdb.base/funcargs.exp: continue to call6h
FAIL: gdb.base/funcargs.exp: backtrace from call6h (pattern 1)
FAIL: gdb.base/funcargs.exp: continue to call6i
FAIL: gdb.base/funcargs.exp: backtrace from call6i (pattern 1)
FAIL: gdb.base/funcargs.exp: continue to call6j
FAIL: gdb.base/funcargs.exp: backtrace from call6j (pattern 1)
FAIL: gdb.base/funcargs.exp: continue to call6k
FAIL: gdb.base/funcargs.exp: backtrace from call6k (pattern 1)
FAIL: gdb.base/funcargs.exp: run to call7a (GDB internal error)
FAIL: gdb.base/funcargs.exp: backtrace from call7a
FAIL: gdb.base/funcargs.exp: continue to call7b
FAIL: gdb.base/funcargs.exp: backtrace from call7b (pattern 1)
FAIL: gdb.base/funcargs.exp: continue to call7c
FAIL: gdb.base/funcargs.exp: backtrace from call7c (pattern 1)
FAIL: gdb.base/funcargs.exp: continue to call7d
FAIL: gdb.base/funcargs.exp: backtrace from call7d (pattern 1)
FAIL: gdb.base/funcargs.exp: continue to call7e
FAIL: gdb.base/funcargs.exp: backtrace from call7e (pattern 1)
FAIL: gdb.base/funcargs.exp: continue to call7f
FAIL: gdb.base/funcargs.exp: backtrace from call7f (pattern 1)
FAIL: gdb.base/funcargs.exp: continue to call7g
FAIL: gdb.base/funcargs.exp: backtrace from call7g (pattern 1)
FAIL: gdb.base/funcargs.exp: continue to call7h
FAIL: gdb.base/funcargs.exp: backtrace from call7h (pattern 1)
FAIL: gdb.base/funcargs.exp: continue to call7i
FAIL: gdb.base/funcargs.exp: backtrace from call7i (pattern 1)
FAIL: gdb.base/funcargs.exp: continue to call7j
FAIL: gdb.base/funcargs.exp: backtrace from call7j (pattern 1)
FAIL: gdb.base/funcargs.exp: continue to call7k
FAIL: gdb.base/funcargs.exp: backtrace from call7k (pattern 1)
FAIL: gdb.base/funcargs.exp: run to hitbottom (GDB internal error)
FAIL: gdb.base/funcargs.exp: recursive passing of structs by value (pattern 1)
FAIL: gdb.base/funcargs.exp: print c after runto localvars_after_alloca
FAIL: gdb.base/funcargs.exp: print s after runto localvars_after_alloca
FAIL: gdb.base/funcargs.exp: print i after runto localvars_after_alloca
FAIL: gdb.base/funcargs.exp: print l after runto localvars_after_alloca
PASS: gdb.base/funcargs.exp: next in localvars_after_alloca()
FAIL: gdb.base/funcargs.exp: print c in localvars_after_alloca
FAIL: gdb.base/funcargs.exp: print s in localvars_after_alloca
FAIL: gdb.base/funcargs.exp: print i in localvars_after_alloca
FAIL: gdb.base/funcargs.exp: print l in localvars_after_alloca
FAIL: gdb.base/funcargs.exp: backtrace after alloca
FAIL: gdb.base/funcargs.exp: print c in call_after_alloca
FAIL: gdb.base/funcargs.exp: print s in call_after_alloca
FAIL: gdb.base/funcargs.exp: print i in call_after_alloca
FAIL: gdb.base/funcargs.exp: print l in call_after_alloca
FAIL: gdb.base/funcargs.exp: backtrace from call_after_alloca_subr
FAIL: gdb.base/funcargs.exp: continue to call0a
FAIL: gdb.base/funcargs.exp: print c in localvars_in_indirect_call
FAIL: gdb.base/funcargs.exp: print s in localvars_in_indirect_call
FAIL: gdb.base/funcargs.exp: print i in localvars_in_indirect_call
FAIL: gdb.base/funcargs.exp: print l in localvars_in_indirect_call
FAIL: gdb.base/funcargs.exp: backtrace in indirectly called function
FAIL: gdb.base/funcargs.exp: finish from indirectly called function
FAIL: gdb.base/funcargs.exp: stepping into indirectly called function
FAIL: gdb.base/funcargs.exp: finish from marker_call_with_trampolines
FAIL: gdb.base/funcargs.exp: stepping into function called with trampolines
FAIL: gdb.base/funcargs.exp: backtrace through call with trampolines
FAIL: gdb.base/funcargs.exp: stepping back to main from function called with trampolines
PASS: gdb.base/gcore-buffer-overflow.exp: set buffer exceeding arguments
UNTESTED: gdb.base/gcore-buffer-overflow.exp: could not run to main
UNTESTED: gdb.base/gcore-relro-pie.exp: failed to prepare
UNSUPPORTED: gdb.base/gcore-relro.exp: -Wl,-z,relro compilation failed
UNTESTED: gdb.base/gcore.exp: couldn't run to main
PASS: gdb.base/gdb-sigterm-2.exp: expect eof
FAIL: gdb.base/gdb-sigterm.exp: 50 SIGTERM passes
PASS: gdb.base/gdb1056.exp: print 1/0
PASS: gdb.base/gdb1056.exp: test unsigned division by zero
FAIL: gdb.base/gdb1090.exp: can't run to main
FAIL: gdb.base/gdb11530.exp: run to main
FAIL: gdb.base/gdb11531.exp: run to main
UNRESOLVED: gdb.base/gdbhistsize-history.exp: histsize=: show history size
PASS: gdb.base/gdbhistsize-history.exp: histsize=: show commands
PASS: gdb.base/gdbhistsize-history.exp: histsize=0: show history size
PASS: gdb.base/gdbhistsize-history.exp: histsize=0: show commands
PASS: gdb.base/gdbhistsize-history.exp: histsize=20: show history size
PASS: gdb.base/gdbhistsize-history.exp: histsize=20: show commands
PASS: gdb.base/gdbhistsize-history.exp: histsize= 20 : show history size
PASS: gdb.base/gdbhistsize-history.exp: histsize= 20 : show commands
PASS: gdb.base/gdbhistsize-history.exp: histsize=-5: show history size
PASS: gdb.base/gdbhistsize-history.exp: histsize=-5: show commands
PASS: gdb.base/gdbhistsize-history.exp: histsize=not_an_integer: show history size
PASS: gdb.base/gdbhistsize-history.exp: histsize=not_an_integer: show commands
PASS: gdb.base/gdbhistsize-history.exp: histsize=10zab: show history size
PASS: gdb.base/gdbhistsize-history.exp: histsize=10zab: show commands
PASS: gdb.base/gdbhistsize-history.exp: histsize=-5ab: show history size
PASS: gdb.base/gdbhistsize-history.exp: histsize=-5ab: show commands
PASS: gdb.base/gdbhistsize-history.exp: histsize=99999999999999999999999999999999999: show history size
PASS: gdb.base/gdbhistsize-history.exp: histsize=99999999999999999999999999999999999: show commands
PASS: gdb.base/gdbhistsize-history.exp: histsize=50: show history size
PASS: gdb.base/gdbhistsize-history.exp: histsize=50: show commands
PASS: gdb.base/gdbindex-stabs.exp: list stabs_function
PASS: gdb.base/gdbinit-history.exp: home=gdbinit-history/unlimited: show history size
PASS: gdb.base/gdbinit-history.exp: home=gdbinit-history/unlimited: show commands
PASS: gdb.base/gdbinit-history.exp: home=gdbinit-history/zero: show history size
PASS: gdb.base/gdbinit-history.exp: home=gdbinit-history/zero: show commands
PASS: gdb.base/gdbinit-history.exp: truncation: print 1
PASS: gdb.base/gdbinit-history.exp: truncation: creating: server show commands
PASS: gdb.base/gdbinit-history.exp: truncation: appending: server show commands
PASS: gdb.base/gdbinit-history.exp: home=gdbinit-history/unlimited gdbhistsize=1000: show history size
PASS: gdb.base/gdbinit-history.exp: home=gdbinit-history/unlimited gdbhistsize=1000: show commands
PASS: gdb.base/gdbinit-history.exp: home=gdbinit-history/unlimited gdbhistsize=foo: show history size
PASS: gdb.base/gdbinit-history.exp: home=gdbinit-history/unlimited gdbhistsize=foo: show commands
PASS: gdb.base/gdbvars.exp: set print sevenbit-strings
PASS: gdb.base/gdbvars.exp: Set value-history[1] using $1
PASS: gdb.base/gdbvars.exp: Set value-history[2] using $2
PASS: gdb.base/gdbvars.exp: Set value-history[3] using $3
PASS: gdb.base/gdbvars.exp: Print value-history[MAX-1] using inplicit index $$
PASS: gdb.base/gdbvars.exp: Print value-history[MAX-1] again using implicit index $$
PASS: gdb.base/gdbvars.exp: Print value-history[MAX] using implicit index $
PASS: gdb.base/gdbvars.exp: Print value-history[MAX-2] using explicit index $$2
PASS: gdb.base/gdbvars.exp: Print value-history[MAX] using explicit index $0
PASS: gdb.base/gdbvars.exp: print 108
PASS: gdb.base/gdbvars.exp: Print value-history[MAX] using explicit index $$0
PASS: gdb.base/gdbvars.exp: Print value-history[1] using explicit index $1
PASS: gdb.base/gdbvars.exp: Print value-history[2] using explicit index $2
PASS: gdb.base/gdbvars.exp: Print value-history[3] using explicit index $3
PASS: gdb.base/gdbvars.exp: Print (value-history[MAX] - 3) using implicit index $
PASS: gdb.base/gdbvars.exp: Use value-history element in arithmetic expression
PASS: gdb.base/gdbvars.exp: Set a new convenience variable
PASS: gdb.base/gdbvars.exp: Print contents of new convenience variable
PASS: gdb.base/gdbvars.exp: Set convenience variable to a new value
PASS: gdb.base/gdbvars.exp: Print new contents of convenience variable
PASS: gdb.base/gdbvars.exp: Set convenience variable $_
PASS: gdb.base/gdbvars.exp: Print contents of convenience variable $_
PASS: gdb.base/gdbvars.exp: Use convenience variable in arithmetic expression
PASS: gdb.base/gdbvars.exp: Use convenience variable assignment in arithmetic expression
PASS: gdb.base/gdbvars.exp: Print contents of uninitialized convenience variable
PASS: gdb.base/gdbvars.exp: Print internal function $_isvoid
PASS: gdb.base/gdbvars.exp: Print void convenience variable
PASS: gdb.base/gdbvars.exp: Check whether void convenience variable is void
PASS: gdb.base/gdbvars.exp: Set void convenience variable to 1
PASS: gdb.base/gdbvars.exp: Check whether non-void convenience variable is void
FAIL: gdb.base/gdbvars.exp: Set a new convenience variable to a program variable
FAIL: gdb.base/gdbvars.exp: Print contents of new convenience variable of program variable
PASS: gdb.base/gnu-debugdata.exp: nm -D - invoke nm
PASS: gdb.base/gnu-debugdata.exp: nm -D - invoke awk
PASS: gdb.base/gnu-debugdata.exp: nm -D - invoke sort
PASS: gdb.base/gnu-debugdata.exp: nm - invoke nm
PASS: gdb.base/gnu-debugdata.exp: nm - invoke awk
PASS: gdb.base/gnu-debugdata.exp: nm - invoke sort
PASS: gdb.base/gnu-debugdata.exp: comm
FAIL: gdb.base/gnu-debugdata.exp: strip
UNTESTED: gdb.base/gnu-ifunc.exp: failed to compile first testcase
FAIL: gdb.base/gnu_vector.exp: runto main
PASS: gdb.base/hashline1.exp: set breakpoint
PASS: gdb.base/hashline2.exp: set breakpoint
PASS: gdb.base/hashline3.exp: set breakpoint
UNTESTED: gdb.base/hbreak-in-shr-unsupported.exp: failed to compile
FAIL: gdb.base/hbreak-unmapped.exp: can't run to main
UNTESTED: gdb.base/hbreak.exp: hbreak.exp
FAIL: gdb.base/hbreak2.exp: break tests suppressed
UNSUPPORTED: gdb.base/hbreak2.exp: hardware breakpoints
PASS: gdb.base/help.exp: disable pagination
PASS: gdb.base/help.exp: help aliases
PASS: gdb.base/help.exp: help breakpoints
PASS: gdb.base/help.exp: help data
PASS: gdb.base/help.exp: help files
PASS: gdb.base/help.exp: help internals
PASS: gdb.base/help.exp: help obscure
PASS: gdb.base/help.exp: help running
PASS: gdb.base/help.exp: help stack
PASS: gdb.base/help.exp: help status
PASS: gdb.base/help.exp: help support
PASS: gdb.base/help.exp: help tracepoints
PASS: gdb.base/help.exp: help user-defined
PASS: gdb.base/help.exp: help breakpoint "b" abbreviation
PASS: gdb.base/help.exp: help breakpoint "br" abbreviation
PASS: gdb.base/help.exp: help breakpoint "bre" abbreviation
PASS: gdb.base/help.exp: help breakpoint "brea" abbreviation
PASS: gdb.base/help.exp: help breakpoint "break" abbreviation
PASS: gdb.base/help.exp: help backtrace "bt" abbreviation
PASS: gdb.base/help.exp: help backtrace
PASS: gdb.base/help.exp: help commands
PASS: gdb.base/help.exp: help delete "d" abbreviation
PASS: gdb.base/help.exp: help delete
PASS: gdb.base/help.exp: help help "h" abbreviation
PASS: gdb.base/help.exp: help help
PASS: gdb.base/help.exp: help show copying
PASS: gdb.base/help.exp: help show warranty
PASS: gdb.base/help.exp: help show commands
PASS: gdb.base/help.exp: help show confirm
PASS: gdb.base/help.exp: help info bogus-gdb-command
PASS: gdb.base/help.exp: help gotcha
PASS: gdb.base/help.exp: apropos \(print[^ bsiedf\".-]\)
PASS: gdb.base/help.exp: apropos handle signal
PASS: gdb.base/help.exp: apropos apropos
PASS: gdb.base/history-duplicates.exp: show history remove-duplicates
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: set history remove-duplicates unlimited
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: printing 0 (item #0)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: printing 1 (item #1)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: printing 2 (item #2)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: printing 1 (item #3)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: printing 1 (item #4)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: printing 2 (item #5)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: printing 3 (item #6)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: printing 3 (item #7)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: printing 4 (item #8)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: printing 1 (item #9)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: printing 2 (item #10)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: printing 3 (item #11)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: printing 4 (item #12)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: history entry is print 4
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: history entry is print 3
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: history entry is print 2
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: history entry is print 1
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: history entry is print 0
PASS: gdb.base/history-duplicates.exp: remove-duplicates=1: set history remove-duplicates 1
PASS: gdb.base/history-duplicates.exp: remove-duplicates=1: printing 0 (item #0)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=1: printing 1 (item #1)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=1: printing 0 (item #2)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=1: printing 2 (item #3)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=1: printing 2 (item #4)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=1: printing 1 (item #5)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=1: history entry is print 1
PASS: gdb.base/history-duplicates.exp: remove-duplicates=1: history entry is print 2
PASS: gdb.base/history-duplicates.exp: remove-duplicates=1: history entry is print 0
PASS: gdb.base/history-duplicates.exp: remove-duplicates=1: history entry is print 1 (again)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=1: history entry is print 0 (again)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=0: set history remove-duplicates 0
PASS: gdb.base/history-duplicates.exp: remove-duplicates=0: printing 0 (item #0)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=0: printing 0 (item #1)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=0: printing 1 (item #2)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=0: printing 1 (item #3)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=0: history entry is print 1
PASS: gdb.base/history-duplicates.exp: remove-duplicates=0: history entry is print 1 (again)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=0: history entry is print 0
PASS: gdb.base/history-duplicates.exp: remove-duplicates=0: history entry is print 0 (again)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=2: set history remove-duplicates 2
PASS: gdb.base/history-duplicates.exp: remove-duplicates=2: printing 1 (item #0)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=2: printing 2 (item #1)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=2: printing 0 (item #2)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=2: printing 2 (item #3)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=2: printing 0 (item #4)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=2: history entry is print 0
PASS: gdb.base/history-duplicates.exp: remove-duplicates=2: history entry is print 2
PASS: gdb.base/history-duplicates.exp: remove-duplicates=2: history entry is print 1
FAIL: gdb.base/hook-stop.exp: hook-stop runs before frame print: can't run to main
FAIL: gdb.base/hook-stop.exp: hook-stop kills inferior: can't run to main
FAIL: gdb.base/hook-stop.exp: hook-stop runs continue: can't run to main
FAIL: gdb.base/hook-stop.exp: hook-stop runs continue&: can't run to main
FAIL: gdb.base/hook-stop.exp: hook-stop runs next: can't run to main
UNTESTED: gdb.base/huge.exp: couldn't run to main
PASS: gdb.base/ifelse.exp: if 1 with empty body
PASS: gdb.base/ifelse.exp: if 0 with empty body
PASS: gdb.base/ifelse.exp: if true else false #1
PASS: gdb.base/ifelse.exp: if 1 .. else with empty body
PASS: gdb.base/ifelse.exp: if true else false #2
PASS: gdb.base/ifelse.exp: if 0 .. else with empty body
PASS: gdb.base/ifelse.exp: if true else false #3
PASS: gdb.base/ifelse.exp: create define with empty else
PASS: gdb.base/ifelse.exp: call original define
PASS: gdb.base/ifelse.exp: replace define with if .. else with empty body
PASS: gdb.base/ifelse.exp: call replacement define
PASS: gdb.base/included.exp: set listsize 1
PASS: gdb.base/included.exp: list main
PASS: gdb.base/included.exp: list integer
PASS: gdb.base/included.exp: ptype integer
PASS: gdb.base/included.exp: info variables integer
UNTESTED: gdb.base/infcall-exec.exp: could not run to main
FAIL: gdb.base/infcall-input.exp: couldn't run to main
UNSUPPORTED: gdb.base/inferior-died.exp: inferior-died.exp
FAIL: gdb.base/infnan.exp: print a
FAIL: gdb.base/infnan.exp: print b
UNTESTED: gdb.base/info-fun.exp: NO: failed to compile
UNTESTED: gdb.base/info-macros.exp: could not run to main
UNSUPPORTED: gdb.base/info-os.exp: info-os.exp
PASS: gdb.base/info-proc.exp: help info proc
PASS: gdb.base/info-proc.exp: info proc without a process
UNTESTED: gdb.base/info-proc.exp: could not run to main
PASS: gdb.base/info-target.exp: info target
PASS: gdb.base/infoline.exp: info line infoline.c:18
PASS: gdb.base/interact.exp: set interactive-mode auto
PASS: gdb.base/interact.exp: source script with interactive-mode auto
PASS: gdb.base/interact.exp: sanity check with interactive-mode auto
PASS: gdb.base/interact.exp: show interactive-mode (auto)
PASS: gdb.base/interact.exp: set interactive-mode on
PASS: gdb.base/interact.exp: source script with interactive-mode on
PASS: gdb.base/interact.exp: sanity check with interactive-mode on
PASS: gdb.base/interact.exp: show interactive-mode (on)
PASS: gdb.base/interact.exp: set interactive-mode off
PASS: gdb.base/interact.exp: source script with interactive-mode off
PASS: gdb.base/interact.exp: sanity check with interactive-mode off
PASS: gdb.base/interact.exp: show interactive-mode (off)
PASS: gdb.base/interp.exp: interpreter-exec mi "-var-update *"
PASS: gdb.base/interp.exp: interpreter-exec console "show version"
PASS: gdb.base/interp.exp: interpreter-exec mi "-var-update *"
PASS: gdb.base/interp.exp: interpreter-exec mi "-stack-info-frame"
PASS: gdb.base/interp.exp: interpreter-exec mi1 "-break-insert main"
PASS: gdb.base/interp.exp: interpreter-exec mi2 "-break-insert main"
PASS: gdb.base/interp.exp: interpreter-exec mi3 "-break-insert main"
FAIL: gdb.base/interp.exp: run to main
PASS: gdb.base/interrupt-noterm.exp: set interactive-mode off
UNRESOLVED: gdb.base/interrupt-noterm.exp: can't run to main
PASS: gdb.base/interrupt.exp: set interrupt character in interrupt.exp
UNSUPPORTED: gdb.base/jit-attach-pie.exp: couldn't compile jit-attach-pie0.o: unrecognized error
UNTESTED: gdb.base/jit-attach-pie.exp: jit-attach-pie.exp
PASS: gdb.base/jit-simple.exp: standalone: change addr: initial run: get address of __jit_debug_descriptor
PASS: gdb.base/jit-simple.exp: standalone: change addr: initial run: maint info breakpoints shows jit breakpoint
PASS: gdb.base/jit-simple.exp: standalone: change addr: second run: recompile
PASS: gdb.base/jit-simple.exp: standalone: change addr: second run: get address of __jit_debug_descriptor
PASS: gdb.base/jit-simple.exp: standalone: change addr: second run: maint info breakpoints shows jit breakpoint
PASS: gdb.base/jit-simple.exp: standalone: change addr: address changed
PASS: gdb.base/jit-simple.exp: standalone: same addr: initial run: get address of __jit_debug_descriptor
PASS: gdb.base/jit-simple.exp: standalone: same addr: initial run: maint info breakpoints shows jit breakpoint
PASS: gdb.base/jit-simple.exp: standalone: same addr: second run: get address of __jit_debug_descriptor
PASS: gdb.base/jit-simple.exp: standalone: same addr: second run: maint info breakpoints shows jit breakpoint
PASS: gdb.base/jit-simple.exp: standalone: same addr: address didn't change
UNRESOLVED: gdb.base/jit-simple.exp: shared: change addr: initial run: get address of __jit_debug_descriptor
FAIL: gdb.base/jit-simple.exp: shared: change addr: initial run: maint info breakpoints shows jit breakpoint
PASS: gdb.base/jit-simple.exp: shared: change addr: second run: recompile
FAIL: gdb.base/jit-simple.exp: shared: change addr: second run: get address of __jit_debug_descriptor
FAIL: gdb.base/jit-simple.exp: shared: change addr: second run: maint info breakpoints shows jit breakpoint
FAIL: gdb.base/jit-simple.exp: shared: change addr: address changed
UNRESOLVED: gdb.base/jit-simple.exp: shared: same addr: initial run: get address of __jit_debug_descriptor
FAIL: gdb.base/jit-simple.exp: shared: same addr: initial run: maint info breakpoints shows jit breakpoint
FAIL: gdb.base/jit-simple.exp: shared: same addr: second run: get address of __jit_debug_descriptor
FAIL: gdb.base/jit-simple.exp: shared: same addr: second run: maint info breakpoints shows jit breakpoint
PASS: gdb.base/jit-simple.exp: shared: same addr: address didn't change
FAIL: gdb.base/jit-so.exp: one_jit_test-1: can't run to main
FAIL: gdb.base/jit-so.exp: one_jit_test-2: can't run to main
PASS: gdb.base/jit-so.exp: test jit-reader-load filename completion
FAIL: gdb.base/jit.exp: one_jit_test-1: can't run to main
FAIL: gdb.base/jit.exp: one_jit_test-2: can't run to main
FAIL: gdb.base/jit.exp: attach: one_jit_test-2: can't run to main
UNTESTED: gdb.base/jit.exp: PIE: jit.exp PIE tests
UNRESOLVED: gdb.base/kill-after-signal.exp: handle SIGUSR1 stop print pass
PASS: gdb.base/kill-detach-inferiors-cmd.exp: add inferior 2
PASS: gdb.base/kill-detach-inferiors-cmd.exp: inferior 2
PASS: gdb.base/kill-detach-inferiors-cmd.exp: load binary
FAIL: gdb.base/kill-detach-inferiors-cmd.exp: start
PASS: gdb.base/kill-detach-inferiors-cmd.exp: add inferior 3
PASS: gdb.base/kill-detach-inferiors-cmd.exp: inferior 3
PASS: gdb.base/kill-detach-inferiors-cmd.exp: attach to pid
FAIL: gdb.base/kill-detach-inferiors-cmd.exp: kill inferiors 1 2
PASS: gdb.base/kill-detach-inferiors-cmd.exp: inferior 1
PASS: gdb.base/kill-detach-inferiors-cmd.exp: kill
PASS: gdb.base/kill-detach-inferiors-cmd.exp: detach inferiors 3
PASS: gdb.base/kill-detach-inferiors-cmd.exp: kill inferiors 1 2 3
PASS: gdb.base/kill-detach-inferiors-cmd.exp: detach inferiors 1 2 3
PASS: gdb.base/kill-detach-inferiors-cmd.exp: kill inferiors 10
FAIL: gdb.base/label.exp: label tests suppressed
PASS: gdb.base/langs.exp: break on nonexistent function in langs.exp
UNTESTED: gdb.base/ldbl_e308.exp: could not run to main
FAIL: gdb.base/line-symtabs.exp: can't run to main
PASS: gdb.base/lineinc.exp: tolerate macro info with multiple #inclusions per line
PASS: gdb.base/linespecs.exp: list c:/foo/bar/baz.c:1
PASS: gdb.base/linespecs.exp: list c:/foo/bar/baz.c
PASS: gdb.base/linespecs.exp: list fooc:/foo/bar/baz.c:1
PASS: gdb.base/linespecs.exp: list fooc:/foo/bar/baz.c
PASS: gdb.base/list.exp: set width 0
PASS: gdb.base/list.exp: show default list size
PASS: gdb.base/list.exp: list default lines around main
PASS: gdb.base/list.exp: setting listsize to 1 #1
PASS: gdb.base/list.exp: show listsize 1 #1
PASS: gdb.base/list.exp: list line 1 with listsize 1
PASS: gdb.base/list.exp: list line 2 with listsize 1
PASS: gdb.base/list.exp: setting listsize to 2 #2
PASS: gdb.base/list.exp: show listsize 2 #2
PASS: gdb.base/list.exp: list line 1 with listsize 2
PASS: gdb.base/list.exp: list line 2 with listsize 2
PASS: gdb.base/list.exp: list line 3 with listsize 2
PASS: gdb.base/list.exp: setting listsize to 3 #3
PASS: gdb.base/list.exp: show listsize 3 #3
PASS: gdb.base/list.exp: list line 1 with listsize 3
PASS: gdb.base/list.exp: list line 2 with listsize 3
PASS: gdb.base/list.exp: list line 3 with listsize 3
PASS: gdb.base/list.exp: setting listsize to 4 #4
PASS: gdb.base/list.exp: show listsize 4 #4
PASS: gdb.base/list.exp: list line 1 with listsize 4
PASS: gdb.base/list.exp: list line 2 with listsize 4
PASS: gdb.base/list.exp: list line 3 with listsize 4
PASS: gdb.base/list.exp: list line 4 with listsize 4
PASS: gdb.base/list.exp: setting listsize to 100 #5
PASS: gdb.base/list.exp: show listsize 100 #5
PASS: gdb.base/list.exp: list line 1 with listsize 100
PASS: gdb.base/list.exp: list line 10 with listsize 100
PASS: gdb.base/list.exp: setting listsize to 0 #6
PASS: gdb.base/list.exp: show listsize unlimited #6
PASS: gdb.base/list.exp: list line 1 with unlimited listsize
PASS: gdb.base/list.exp: setting listsize to 10 #7
PASS: gdb.base/list.exp: show listsize 10 #7
PASS: gdb.base/list.exp: list line 1 in include file
PASS: gdb.base/list.exp: list message for lines past EOF
PASS: gdb.base/list.exp: list filename:number (4 tests)
PASS: gdb.base/list.exp: list function in source file 1
PASS: gdb.base/list.exp: list function in source file 2
PASS: gdb.base/list.exp: list function in include file
PASS: gdb.base/list.exp: successive list commands to page forward (4 tests)
PASS: gdb.base/list.exp: end of file error after "list" command
PASS: gdb.base/list.exp: 4 successive "list -" commands to page backwards
PASS: gdb.base/list.exp: beginning of file error after "list -" command
PASS: gdb.base/list.exp: repeat list commands to page forward using 'return' (4 tests)
PASS: gdb.base/list.exp: end of file error after using 'return' to repeat the list command
PASS: gdb.base/list.exp: list range; filename:line1,filename:line2
PASS: gdb.base/list.exp: list range; line1,line2
PASS: gdb.base/list.exp: list range; upper bound past EOF
PASS: gdb.base/list.exp: list range; both bounds past EOF
PASS: gdb.base/list.exp: list range, must be same files
PASS: gdb.base/list.exp: list filename:function (5 tests)
PASS: gdb.base/list.exp: list 'list0.c:main'
XFAIL: gdb.base/list.exp: list filename:function; wrong filename rejected
PASS: gdb.base/list.exp: list filename:function; nonexistant file
PASS: gdb.base/list.exp: list filename:function; nonexistant function
PASS: gdb.base/list.exp: set listsize 4
PASS: gdb.base/list.exp: list long_line
PASS: gdb.base/list.exp: search 4321
PASS: gdb.base/list.exp: search 6789
PASS: gdb.base/list.exp: search extremely long line (> 5000 chars)
PASS: gdb.base/list.exp: set listsize 2
PASS: gdb.base/list.exp: list 1
PASS: gdb.base/list.exp: list ,5
PASS: gdb.base/list.exp: first use of "list -INVALID"
PASS: gdb.base/list.exp: second use of "list -INVALID"
PASS: gdb.base/list.exp: first use of "list +INVALID"
PASS: gdb.base/list.exp: second use of "list +INVALID"
FAIL: gdb.base/list.exp: list after stop: 1, 10: can't run to main
FAIL: gdb.base/list.exp: list after stop: 10, 10: can't run to main
FAIL: gdb.base/list.exp: list after stop: 10, 1: can't run to main
FAIL: gdb.base/list.exp: list after stop: 10, 2: can't run to main
FAIL: gdb.base/list.exp: list after stop: 10, 3: can't run to main
FAIL: gdb.base/list.exp: list - after stop: 10, 10: can't run to main
FAIL: gdb.base/list.exp: list - after stop: 10, 3: can't run to main
FAIL: gdb.base/list.exp: list - after stop: 10, 2: can't run to main
FAIL: gdb.base/list.exp: list - after stop: 10, 1: can't run to main
UNRESOLVED: gdb.base/long_long.exp: run to known_types
UNTESTED: gdb.base/longest-types.exp: failed to prepare
FAIL: gdb.base/longjmp.exp: can't run to main
PASS: gdb.base/macscp.exp: list main for support check
PASS: gdb.base/macscp.exp: list main for WHERE
PASS: gdb.base/macscp.exp: info macro WHERE after `list main'
PASS: gdb.base/macscp.exp: list macscp2_2 for WHERE
PASS: gdb.base/macscp.exp: info macro WHERE after `list macscp2_2'
PASS: gdb.base/macscp.exp: list macscp3_2 for WHERE
PASS: gdb.base/macscp.exp: info macro WHERE after `list macscp3_2'
PASS: gdb.base/macscp.exp: info macro FROM_COMMANDLINE
PASS: gdb.base/macscp.exp: info macro __FILE__ before running
PASS: gdb.base/macscp.exp: info macro __LINE__ before running
PASS: gdb.base/macscp.exp: list macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: info macro WHERE after `list macscp_4_2_from_macscp2'
PASS: gdb.base/macscp.exp: list macscp4_2_from_macscp3
KFAIL: gdb.base/macscp.exp: info macro WHERE after `list macscp_4_2_from_macscp3' (gdb/555) (PRMS: gdb/555)
FAIL: gdb.base/macscp.exp: macro tests suppressed: couldn't run to main
PASS: gdb.base/maint.exp: set height 0
PASS: gdb.base/maint.exp: maint print registers
PASS: gdb.base/maint.exp: mt set per on for expand-symtabs
PASS: gdb.base/maint.exp: mt expand-symtabs
PASS: gdb.base/maint.exp: mt set per off for expand-symtabs
UNRESOLVED: gdb.base/maint.exp: maint check-psymtabs
PASS: gdb.base/maint.exp: maint check-symtabs
PASS: gdb.base/maint.exp: maint set per-command on
PASS: gdb.base/maint.exp: pwd
PASS: gdb.base/maint.exp: maint set per-command off
PASS: gdb.base/maint.exp: maint print statistics
PASS: gdb.base/maint.exp: maint print dummy-frames
PASS: gdb.base/maint.exp: maint print objfiles: header
PASS: gdb.base/maint.exp: maint print objfiles: psymtabs
PASS: gdb.base/maint.exp: maint print objfiles: symtabs
PASS: gdb.base/maint.exp: maint print psymbols -source 1
PASS: gdb.base/maint.exp: shell rm -f psymbols_output
PASS: gdb.base/maint.exp: maint print psymbols -pc 1
PASS: gdb.base/maint.exp: shell rm -f psymbols_output
PASS: gdb.base/maint.exp: maint print msymbols
PASS: gdb.base/maint.exp: shell rm -f msymbols_output
PASS: gdb.base/maint.exp: cd to objdir
PASS: gdb.base/maint.exp: maint print msymbols
PASS: gdb.base/maint.exp: shell rm -f msymbols_output2
PASS: gdb.base/maint.exp: cd to mydir
PASS: gdb.base/maint.exp: maint print symbols -source
PASS: gdb.base/maint.exp: shell rm -f symbols_output
PASS: gdb.base/maint.exp: maint print symbols -pc
PASS: gdb.base/maint.exp: shell rm -f symbols_output
FAIL: gdb.base/maint.exp: maint print type
PASS: gdb.base/maint.exp: maint info sections
PASS: gdb.base/maint.exp: maint info sections .text
PASS: gdb.base/maint.exp: maint info sections CODE
PASS: gdb.base/maint.exp: maint info sections DATA
FAIL: gdb.base/maint.exp: maint info breakpoints
PASS: gdb.base/maint.exp: maint print w/o args
PASS: gdb.base/maint.exp: maint info w/o args
PASS: gdb.base/maint.exp: maint w/o args
PASS: gdb.base/maint.exp: maint info line-table w/o a file name
PASS: gdb.base/maint.exp: maint info line-table with filename of current symtab
PASS: gdb.base/maint.exp: maint info line-table with filename of symtab that is not currently expanded
PASS: gdb.base/maint.exp: maint expand-symtabs
PASS: gdb.base/maint.exp: maint info line-table with filename of symtab that is not current
PASS: gdb.base/maint.exp: maint info line-table with invalid filename
PASS: gdb.base/maint.exp: help maint
PASS: gdb.base/maint.exp: help maint info
PASS: gdb.base/maint.exp: help maint print
PASS: gdb.base/maint.exp: help maint
PASS: gdb.base/maint.exp: maint dump-me
PASS: gdb.base/maint.exp: maint internal-error
PASS: gdb.base/maint.exp: internal-error resync
PASS: gdb.base/maint.exp: maint print symbols
PASS: gdb.base/maint.exp: maint print msymbols
PASS: gdb.base/maint.exp: maint print psymbols
FAIL: gdb.base/max-value-size.exp: can't run to main
PASS: gdb.base/memattr.exp: create mem region 1
PASS: gdb.base/memattr.exp: create mem region 2
PASS: gdb.base/memattr.exp: create mem region 3
PASS: gdb.base/memattr.exp: create mem region 4
PASS: gdb.base/memattr.exp: create mem region 5
PASS: gdb.base/memattr.exp: info mem (1)
PASS: gdb.base/memattr.exp: mem1 cannot be read
FAIL: gdb.base/memattr.exp: mem1 can be written
PASS: gdb.base/memattr.exp: mem2 cannot be written
FAIL: gdb.base/memattr.exp: mem2 can be read
PASS: gdb.base/memattr.exp: disable mem 1
PASS: gdb.base/memattr.exp: mem 1 was disabled
PASS: gdb.base/memattr.exp: enable mem 1
PASS: gdb.base/memattr.exp: mem 1 was enabled
PASS: gdb.base/memattr.exp: disable mem 2 4
PASS: gdb.base/memattr.exp: mem 2 and 4 were disabled
PASS: gdb.base/memattr.exp: enable mem 2-4
PASS: gdb.base/memattr.exp: mem 2-4 were enabled
PASS: gdb.base/memattr.exp: disable mem
PASS: gdb.base/memattr.exp: mem 1 to 5 were disabled
PASS: gdb.base/memattr.exp: enable mem
PASS: gdb.base/memattr.exp: mem 1 to 5 were enabled
PASS: gdb.base/memattr.exp: disable non-existant regions
PASS: gdb.base/memattr.exp: delete mem 1
PASS: gdb.base/memattr.exp: mem 1 was deleted
PASS: gdb.base/memattr.exp: delete mem 2 4
PASS: gdb.base/memattr.exp: mem 2 and 4 were deleted
PASS: gdb.base/memattr.exp: delete mem 2-4
PASS: gdb.base/memattr.exp: mem 2-4 were deleted
PASS: gdb.base/memattr.exp: delete non-existant region
PASS: gdb.base/memattr.exp: mem 0x30 0x60 ro
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x20 0x40: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x30 0x40: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x40 0x50: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x50 0x60: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x50 0x70: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x30 0x60: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x20 0x70: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x20 0x0: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x30 0x0: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x40 0x0: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x20 0x30: no-overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x60 0x70: no-overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x80 0x0: no-overlap
PASS: gdb.base/memattr.exp: mem 0x30 0x0 ro
PASS: gdb.base/memattr.exp: 0x30 0x0: 0x20 0x50: overlap
PASS: gdb.base/memattr.exp: 0x30 0x0: 0x30 0x50: overlap
PASS: gdb.base/memattr.exp: 0x30 0x0: 0x40 0x50: overlap
PASS: gdb.base/memattr.exp: 0x30 0x0: 0x20 0x0: overlap
PASS: gdb.base/memattr.exp: 0x30 0x0: 0x30 0x0: overlap
PASS: gdb.base/memattr.exp: 0x30 0x0: 0x40 0x0: overlap
PASS: gdb.base/memattr.exp: 0x30 0x0: 0x20 0x30: no-overlap
PASS: gdb.base/memattr.exp: 0x30 0x0: 0x00 0x10: no-overlap
UNRESOLVED: gdb.base/morestack.exp: failed to prepare
UNTESTED: gdb.base/morestack.exp: failed to prepare
UNSUPPORTED: gdb.base/moribund-step.exp: displaced stepping
UNRESOLVED: gdb.base/multi-line-starts-subshell.exp: spawn subshell from multi-line
UNRESOLVED: gdb.base/multi-line-starts-subshell.exp: gdb input still works
UNRESOLVED: gdb.base/new-ui-echo.exp: extra console as driver: initial prompt on extra console
PASS: gdb.base/new-ui-echo.exp: extra console as driver: set breakpoint using extra console
FAIL: gdb.base/new-ui-echo.exp: extra console as driver: run to breakpoint on extra console (GDB internal error)
UNRESOLVED: gdb.base/new-ui-echo.exp: extra console as driver: breakpoint hit reported on main console too
PASS: gdb.base/new-ui-echo.exp: main console as driver: initial prompt on extra console
PASS: gdb.base/new-ui-echo.exp: main console as driver: set breakpoint using main console
FAIL: gdb.base/new-ui-echo.exp: main console as driver: run to breakpoint on main console (GDB internal error)
FAIL: gdb.base/new-ui-echo.exp: main console as driver: breakpoint hit reported on extra console too (timeout)
FAIL: gdb.base/new-ui-echo.exp: main console as driver: next on extra console
PASS: gdb.base/new-ui-echo.exp: main console as driver: print on main console echoes
PASS: gdb.base/new-ui-echo.exp: main console as driver: print on extra console echoes
PASS: gdb.base/new-ui-pending-input.exp: commands pending
PASS: gdb.base/new-ui-pending-input.exp: spawn gdb
PASS: gdb.base/new-ui-pending-input.exp: initial prompt on extra console
PASS: gdb.base/new-ui-pending-input.exp: print 1 on extra console
PASS: gdb.base/new-ui-pending-input.exp: print 2 on extra console
PASS: gdb.base/new-ui-pending-input.exp: print 3 on extra console
FAIL: gdb.base/new-ui-pending-input.exp: run to breakpoint on main console (GDB internal error)
FAIL: gdb.base/new-ui-pending-input.exp: run to breakpoint on extra console (timeout)
UNTESTED: gdb.base/new-ui.exp: do_test: could not run to main
PASS: gdb.base/new-ui.exp: do_test_invalid_args: new-ui with bad terminal path
PASS: gdb.base/new-ui.exp: do_test_invalid_args: new-ui with bad interpreter name
FAIL: gdb.base/new-ui.exp: do_test_invalid_args: could not run to main
PASS: gdb.base/nofield.exp: ptype struct not_empty
PASS: gdb.base/nofield.exp: ptype struct empty
PASS: gdb.base/nofield.exp: ptype union empty_union
UNTESTED: gdb.base/noreturn-finish.exp: could not run to main
UNTESTED: gdb.base/noreturn-return.exp: could not run to main
FAIL: gdb.base/nostdlib.exp: stop at run (GDB internal error)
FAIL: gdb.base/nostdlib.exp: continue to marker
PASS: gdb.base/offsets.exp: print &big_struct test (0x8061160)
PASS: gdb.base/offsets.exp: big offsets
PASS: gdb.base/opaque.exp: whatis on opaque struct pointer (statically)
PASS: gdb.base/opaque.exp: ptype on opaque struct pointer (statically)
PASS: gdb.base/opaque.exp: whatis on opaque struct instance (statically)
PASS: gdb.base/opaque.exp: ptype on opaque struct instance (statically)
PASS: gdb.base/opaque.exp: ptype on opaque struct tagname (statically)
UNRESOLVED: gdb.base/opaque.exp: whatis on opaque struct pointer (dynamically)
PASS: gdb.base/opaque.exp: ptype on opaque struct pointer (dynamically) 1
PASS: gdb.base/opaque.exp: whatis on opaque struct instance (dynamically) 1
PASS: gdb.base/opaque.exp: ptype on opaque struct instance (dynamically) 1
PASS: gdb.base/opaque.exp: ptype on opaque struct tagname (dynamically) 1
UNRESOLVED: gdb.base/opaque.exp: whatis on opaque struct pointer (dynamically) 1
PASS: gdb.base/opaque.exp: ptype on opaque struct pointer (dynamically) 2
PASS: gdb.base/opaque.exp: whatis on opaque struct instance (dynamically) 2
PASS: gdb.base/opaque.exp: ptype on opaque struct instance (dynamically) 2
PASS: gdb.base/opaque.exp: ptype on opaque struct tagname (dynamically) 2
PASS: gdb.base/page.exp: set pagination off
PASS: gdb.base/page.exp: pagination is off
PASS: gdb.base/page.exp: unpaged help
PASS: gdb.base/page.exp: set pagination on
PASS: gdb.base/page.exp: pagination is on
PASS: gdb.base/page.exp: set height 10
PASS: gdb.base/page.exp: paged help
PASS: gdb.base/page.exp: q
FAIL: gdb.base/paginate-after-ctrl-c-running.exp: ctrlc target running: can't run to main
FAIL: gdb.base/paginate-bg-execution.exp: paginate: can't run to main
FAIL: gdb.base/paginate-bg-execution.exp: cancel with ctrl-c: can't run to main
FAIL: gdb.base/paginate-bg-execution.exp: cancel with quit: can't run to main
FAIL: gdb.base/paginate-execution-startup.exp: probe support: run to main (GDB internal error)
PASS: gdb.base/paginate-execution-startup.exp: probe support: set height unlimited
FAIL: gdb.base/paginate-inferior-exit.exp: paginate: can't run to main
UNRESOLVED: gdb.base/pending.exp: failed to compile
PASS: gdb.base/permissions.exp: show may-write-registers
PASS: gdb.base/permissions.exp: show may-write-memory
PASS: gdb.base/permissions.exp: show may-insert-breakpoints
PASS: gdb.base/permissions.exp: show may-insert-tracepoints
PASS: gdb.base/permissions.exp: show may-insert-fast-tracepoints
PASS: gdb.base/permissions.exp: show may-interrupt
PASS: gdb.base/permissions.exp: enable observer mode
PASS: gdb.base/permissions.exp: show may-write-memory
PASS: gdb.base/permissions.exp: show may-write-registers
PASS: gdb.base/permissions.exp: show may-insert-breakpoints
PASS: gdb.base/permissions.exp: show may-insert-tracepoints
PASS: gdb.base/permissions.exp: show may-insert-fast-tracepoints
PASS: gdb.base/permissions.exp: show may-interrupt
PASS: gdb.base/permissions.exp: disable observer mode
PASS: gdb.base/permissions.exp: set non-stop off
UNRESOLVED: gdb.base/pr10179.exp: pr10179
FAIL: gdb.base/pr11022.exp: can't run to main
UNTESTED: gdb.base/print-symbol-loading.exp: failed to compile
PASS: gdb.base/printcmds.exp: print $pc
PASS: gdb.base/printcmds.exp: print "abc"
PASS: gdb.base/printcmds.exp: print sizeof ("abc")
PASS: gdb.base/printcmds.exp: ptype "abc"
PASS: gdb.base/printcmds.exp: print $cvar = "abc"
PASS: gdb.base/printcmds.exp: print sizeof ($cvar)
PASS: gdb.base/printcmds.exp: print $pc (with file)
PASS: gdb.base/printcmds.exp: set print sevenbit-strings
PASS: gdb.base/printcmds.exp: set print address off
PASS: gdb.base/printcmds.exp: set width 0
PASS: gdb.base/printcmds.exp: p ctable1[120] #1
FAIL: gdb.base/printcmds.exp: can't run to main
PASS: gdb.base/prologue-include.exp: breakpoint main
UNRESOLVED: gdb.base/psymtab.exp: psymtab pending setup
PASS: gdb.base/psymtab.exp: Don't search past end of psymtab.
UNTESTED: gdb.base/ptr-typedef.exp: couldn't run to marker1
FAIL: gdb.base/ptr-typedef.exp: print foo_ptr
FAIL: gdb.base/ptr-typedef.exp: print foz_ptr
PASS: gdb.base/ptype.exp: ptype unnamed enumeration member
PASS: gdb.base/ptype.exp: ptype structure
PASS: gdb.base/ptype.exp: ptype v_struct1.v_float_member
PASS: gdb.base/ptype.exp: ptype v_struct1->v_float_member
PASS: gdb.base/ptype.exp: ptype v_t_struct_p.v_float_member
PASS: gdb.base/ptype.exp: ptype v_t_struct_p->v_float_member
PASS: gdb.base/ptype.exp: ptype linked list structure
PASS: gdb.base/ptype.exp: ptype union
PASS: gdb.base/ptype.exp: ptype linked list union
PASS: gdb.base/ptype.exp: ptype unnamed enumeration
PASS: gdb.base/ptype.exp: ptype named enumeration
PASS: gdb.base/ptype.exp: ptype unnamed typedef'd enumeration
PASS: gdb.base/ptype.exp: list main
PASS: gdb.base/ptype.exp: whatis unnamed typedef'd enum (compiler bug in IBM's xlc)
PASS: gdb.base/ptype.exp: printing typedef'd struct
PASS: gdb.base/ptype.exp: printing typedef'd union
PASS: gdb.base/ptype.exp: ptype named typedef'd enumf'd enum
PASS: gdb.base/ptype.exp: ptype misordered enumeration
PASS: gdb.base/ptype.exp: ptype named enumeration member
PASS: gdb.base/ptype.exp: ptype unnamed enumeration member #2
PASS: gdb.base/ptype.exp: ptype short
PASS: gdb.base/ptype.exp: ptype int
PASS: gdb.base/ptype.exp: ptype t_char_array
PASS: gdb.base/ptype.exp: ptype pv_char_array
PASS: gdb.base/ptype.exp: ptype outer structure
PASS: gdb.base/ptype.exp: ptype inner structure
PASS: gdb.base/ptype.exp: ptype inner union
PASS: gdb.base/ptype.exp: ptype nested structure
PASS: gdb.base/ptype.exp: ptype outer int
PASS: gdb.base/ptype.exp: ptype nested structure #2
PASS: gdb.base/ptype.exp: ptype inner int
PASS: gdb.base/ptype.exp: ptype nested union
PASS: gdb.base/ptype.exp: ptype the_highest
PASS: gdb.base/ptype.exp: ptype the_highest
PASS: gdb.base/ptype.exp: ptype func_type
PASS: gdb.base/ptype.exp: ptype old_fptr
PASS: gdb.base/ptype.exp: ptype new_fptr
PASS: gdb.base/ptype.exp: ptype fptr
PASS: gdb.base/ptype.exp: ptype fptr2
PASS: gdb.base/ptype.exp: ptype xptr
PASS: gdb.base/ptype.exp: ptype ffptr
PASS: gdb.base/ptype.exp: ptype fffptr
PASS: gdb.base/ptype.exp: list intfoo
PASS: gdb.base/ptype.exp: ptype foo typedef after first list of intfoo
PASS: gdb.base/ptype.exp: list charfoo
PASS: gdb.base/ptype.exp: ptype foo typedef after first list of charfoo
PASS: gdb.base/ptype.exp: list intfoo
PASS: gdb.base/ptype.exp: ptype foo typedef after second list of intfoo
PASS: gdb.base/ptype.exp: list charfoo
PASS: gdb.base/ptype.exp: ptype foo typedef after second list of charfoo
PASS: gdb.base/quit.exp: quit with syntax error
PASS: gdb.base/quit.exp: quit with expression
PASS: gdb.base/radix.exp: initialize radix, input radix 2
PASS: gdb.base/radix.exp: set input-radix 2
PASS: gdb.base/radix.exp: show radix, input radix 2
PASS: gdb.base/radix.exp: print 010; expect 8; input radix 2
PASS: gdb.base/radix.exp: print 20.; expect 20; input radix 2
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; input radix 2
PASS: gdb.base/radix.exp: print 0xf; expect 15; input radix 2
PASS: gdb.base/radix.exp: print 0; expect 0; input radix 2
PASS: gdb.base/radix.exp: print 1; expect 1; input radix 2
PASS: gdb.base/radix.exp: print -1; expect -1; input radix 2
PASS: gdb.base/radix.exp: print 10; expect 2; input radix 2
PASS: gdb.base/radix.exp: print 11; expect 3; input radix 2
PASS: gdb.base/radix.exp: print -10; expect -2; input radix 2
PASS: gdb.base/radix.exp: print -11; expect -3; input radix 2
PASS: gdb.base/radix.exp: print 100; expect 4; input radix 2
PASS: gdb.base/radix.exp: print 101; expect 5; input radix 2
PASS: gdb.base/radix.exp: print -100; expect -4; input radix 2
PASS: gdb.base/radix.exp: print -101; expect -5; input radix 2
PASS: gdb.base/radix.exp: print 10101; expect 21; input radix 2
PASS: gdb.base/radix.exp: print 4; expect Invalid number "4"\.; input radix 2
PASS: gdb.base/radix.exp: print -2; expect Invalid number "2"\.; input radix 2
PASS: gdb.base/radix.exp: initialize radix, input radix 3
PASS: gdb.base/radix.exp: set input-radix 3
PASS: gdb.base/radix.exp: show radix, input radix 3
PASS: gdb.base/radix.exp: print 010; expect 8; input radix 3
PASS: gdb.base/radix.exp: print 20.; expect 20; input radix 3
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; input radix 3
PASS: gdb.base/radix.exp: print 0xf; expect 15; input radix 3
PASS: gdb.base/radix.exp: print 0; expect 0; input radix 3
PASS: gdb.base/radix.exp: print 1; expect 1; input radix 3
PASS: gdb.base/radix.exp: print -1; expect -1; input radix 3
PASS: gdb.base/radix.exp: print 10; expect 3; input radix 3
PASS: gdb.base/radix.exp: print 11; expect 4; input radix 3
PASS: gdb.base/radix.exp: print -10; expect -3; input radix 3
PASS: gdb.base/radix.exp: print -11; expect -4; input radix 3
PASS: gdb.base/radix.exp: print 100; expect 9; input radix 3
PASS: gdb.base/radix.exp: print 101; expect 10; input radix 3
PASS: gdb.base/radix.exp: print -100; expect -9; input radix 3
PASS: gdb.base/radix.exp: print -101; expect -10; input radix 3
PASS: gdb.base/radix.exp: print 10101; expect 91; input radix 3
PASS: gdb.base/radix.exp: print 2; expect 2; input radix 3
PASS: gdb.base/radix.exp: print 20; expect 6; input radix 3
PASS: gdb.base/radix.exp: print 3; expect Invalid number "3"\.; input radix 3
PASS: gdb.base/radix.exp: print 30; expect Invalid number "30"\.; input radix 2
PASS: gdb.base/radix.exp: initialize radix, input radix 8
PASS: gdb.base/radix.exp: set input-radix 8
PASS: gdb.base/radix.exp: show radix, input radix 8
PASS: gdb.base/radix.exp: print 010; expect 8; input radix 8
PASS: gdb.base/radix.exp: print 20.; expect 20; input radix 8
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; input radix 8
PASS: gdb.base/radix.exp: print 0xf; expect 15; input radix 8
PASS: gdb.base/radix.exp: print 0; expect 0; input radix 8
PASS: gdb.base/radix.exp: print 1; expect 1; input radix 8
PASS: gdb.base/radix.exp: print -1; expect -1; input radix 8
PASS: gdb.base/radix.exp: print 10; expect 8; input radix 8
PASS: gdb.base/radix.exp: print 11; expect 9; input radix 8
PASS: gdb.base/radix.exp: print -10; expect -8; input radix 8
PASS: gdb.base/radix.exp: print -11; expect -9; input radix 8
PASS: gdb.base/radix.exp: print 100; expect 64; input radix 8
PASS: gdb.base/radix.exp: print 101; expect 65; input radix 8
PASS: gdb.base/radix.exp: print -100; expect -64; input radix 8
PASS: gdb.base/radix.exp: print -101; expect -65; input radix 8
PASS: gdb.base/radix.exp: print 10101; expect 4161; input radix 8
PASS: gdb.base/radix.exp: print 20; expect 16; input radix 8
PASS: gdb.base/radix.exp: print -20; expect -16; input radix 8
PASS: gdb.base/radix.exp: print 8; expect Invalid number "8".; input radix 8
PASS: gdb.base/radix.exp: print -9; expect Invalid number "9".; input radix 8
PASS: gdb.base/radix.exp: initialize radix, input radix 10
PASS: gdb.base/radix.exp: set input-radix 10
PASS: gdb.base/radix.exp: show radix, input radix 10
PASS: gdb.base/radix.exp: print 010; expect 8; input radix 10
PASS: gdb.base/radix.exp: print 20.; expect 20; input radix 10
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; input radix 10
PASS: gdb.base/radix.exp: print 0xf; expect 15; input radix 10
PASS: gdb.base/radix.exp: print 0; expect 0; input radix 10
PASS: gdb.base/radix.exp: print 1; expect 1; input radix 10
PASS: gdb.base/radix.exp: print -1; expect -1; input radix 10
PASS: gdb.base/radix.exp: print 10; expect 10; input radix 10
PASS: gdb.base/radix.exp: print 11; expect 11; input radix 10
PASS: gdb.base/radix.exp: print -10; expect -10; input radix 10
PASS: gdb.base/radix.exp: print -11; expect -11; input radix 10
PASS: gdb.base/radix.exp: print 100; expect 100; input radix 10
PASS: gdb.base/radix.exp: print 101; expect 101; input radix 10
PASS: gdb.base/radix.exp: print -100; expect -100; input radix 10
PASS: gdb.base/radix.exp: print -101; expect -101; input radix 10
PASS: gdb.base/radix.exp: print 10101; expect 10101; input radix 10
PASS: gdb.base/radix.exp: print -12; expect -12; input radix 10
PASS: gdb.base/radix.exp: initialize radix, input radix 16
PASS: gdb.base/radix.exp: set input-radix 16
PASS: gdb.base/radix.exp: show radix, input radix 16
PASS: gdb.base/radix.exp: print 010; expect 8; input radix 16
PASS: gdb.base/radix.exp: print 20.; expect 20; input radix 16
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; input radix 16
PASS: gdb.base/radix.exp: print 0xf; expect 15; input radix 16
PASS: gdb.base/radix.exp: print 0; expect 0; input radix 16
PASS: gdb.base/radix.exp: print 1; expect 1; input radix 16
PASS: gdb.base/radix.exp: print -1; expect -1; input radix 16
PASS: gdb.base/radix.exp: print 10; expect 16; input radix 16
PASS: gdb.base/radix.exp: print 11; expect 17; input radix 16
PASS: gdb.base/radix.exp: print -10; expect -16; input radix 16
PASS: gdb.base/radix.exp: print -11; expect -17; input radix 16
PASS: gdb.base/radix.exp: print 100; expect 256; input radix 16
PASS: gdb.base/radix.exp: print 101; expect 257; input radix 16
PASS: gdb.base/radix.exp: print -100; expect -256; input radix 16
PASS: gdb.base/radix.exp: print -101; expect -257; input radix 16
PASS: gdb.base/radix.exp: print 10101; expect 65793; input radix 16
PASS: gdb.base/radix.exp: initialize radix, output radix 8
PASS: gdb.base/radix.exp: set output-radix 8
PASS: gdb.base/radix.exp: show radix, output radix 8
PASS: gdb.base/radix.exp: print 010; expect 010; output radix 8
PASS: gdb.base/radix.exp: print 0xf; expect 17; output radix 8
PASS: gdb.base/radix.exp: print 10; expect 12; output radix 8
PASS: gdb.base/radix.exp: print 100; expect 144; output radix 8
KFAIL: gdb.base/radix.exp: print 20.; expect 24; output radix 8 (PRMS: gdb/1715)
PASS: gdb.base/radix.exp: print (int) 20.; expect 24; output radix 8
PASS: gdb.base/radix.exp: initialize radix, output radix 10
PASS: gdb.base/radix.exp: set output-radix 10
PASS: gdb.base/radix.exp: show radix, output radix 10
PASS: gdb.base/radix.exp: print 010; expect 8; output radix 10
PASS: gdb.base/radix.exp: print 0xf; expect 15; output radix 10
PASS: gdb.base/radix.exp: print 10; expect 10; output radix 10
PASS: gdb.base/radix.exp: print 100; expect 100; output radix 10
PASS: gdb.base/radix.exp: print 20.; expect 20; output radix 10
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; output radix 10
PASS: gdb.base/radix.exp: initialize radix, output radix 16
PASS: gdb.base/radix.exp: set output-radix 16
PASS: gdb.base/radix.exp: show radix, output radix 16
PASS: gdb.base/radix.exp: print 010; expect 8; output radix 16
PASS: gdb.base/radix.exp: print 0xf; expect f; output radix 16
PASS: gdb.base/radix.exp: print 10; expect a; output radix 16
PASS: gdb.base/radix.exp: print 100; expect 64; output radix 16
KFAIL: gdb.base/radix.exp: print 20.; expect 14; output radix 16 (PRMS: gdb/1715)
PASS: gdb.base/radix.exp: print (int) 20.; expect 14; output radix 16
PASS: gdb.base/radix.exp: reset radices
PASS: gdb.base/radix.exp: Reject input-radix 0
PASS: gdb.base/radix.exp: input radix unchanged after rejecting 0
PASS: gdb.base/radix.exp: Reject input-radix 1
PASS: gdb.base/radix.exp: input radix unchanged after rejecting 1
PASS: gdb.base/radix.exp: Reject output-radix 0
PASS: gdb.base/radix.exp: Output radix unchanged after rejecting 0
PASS: gdb.base/radix.exp: Reject output-radix 1
PASS: gdb.base/radix.exp: output radix unchanged after rejecting 1
PASS: gdb.base/radix.exp: set radix 7 rejected
PASS: gdb.base/radix.exp: output radix unchanged after rejection through set radix command
UNTESTED: gdb.base/randomize.exp: disabling randomization is not supported on this Linux GDB
FAIL: gdb.base/range-stepping.exp: can't run to main
PASS: gdb.base/readline-ask.exp: set width 50
PASS: gdb.base/readline-ask.exp: set height 3
PASS: gdb.base/readline-ask.exp: bell for more message
PASS: gdb.base/readline-ask.exp: more message for 01 and 02
PASS: gdb.base/readline-ask.exp: more message for 03
PASS: gdb.base/readline-ask.exp: more finish for 04
PASS: gdb.base/readline-ask.exp: abort more message
PASS: gdb.base/readline-ask.exp: bell for ask message
PASS: gdb.base/readline-ask.exp: ask message
PASS: gdb.base/readline-ask.exp: ask message for 01 and 02
PASS: gdb.base/readline-ask.exp: ask message no
PASS: gdb.base/readline-ask.exp: abort ask message
PASS: gdb.base/readline.exp: Simple operate-and-get-next - send p 1
PASS: gdb.base/readline.exp: Simple operate-and-get-next - send p 2
PASS: gdb.base/readline.exp: Simple operate-and-get-next - send p 3
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-p to p 3
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-p to p 2
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-p to p 1
FAIL: gdb.base/readline.exp: Simple operate-and-get-next - C-o for p 1
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - send if 1 > 0
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - send p 5
FAIL: gdb.base/readline.exp: operate-and-get-next with secondary prompt - send end
FAIL: gdb.base/readline.exp: print 42
PASS: gdb.base/readline.exp: arrow keys with secondary prompt
PASS: gdb.base/readline.exp: Simple operate-and-get-next - send p 7
PASS: gdb.base/readline.exp: Simple operate-and-get-next - send p 8
PASS: gdb.base/readline.exp: Simple operate-and-get-next - send p 9
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-p to p 9
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-p to p 8
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-p to p 7
FAIL: gdb.base/readline.exp: Simple operate-and-get-next - C-o for p 7
PASS: gdb.base/realname-expand.exp: set basenames-may-differ on
PASS: gdb.base/realname-expand.exp: rbreak realname-expand-real.c:func
PASS: gdb.base/realname-expand.exp: set basenames-may-differ on
PASS: gdb.base/realname-expand.exp: break realname-expand-real.c:func
UNTESTED: gdb.base/recpar.exp: could not run to main
UNRESOLVED: gdb.base/relativedebug.exp: continue
FAIL: gdb.base/relativedebug.exp: pause found in backtrace
PASS: gdb.base/relocate.exp: add-symbol-file: unknown option -raednow
PASS: gdb.base/relocate.exp: add-symbol-file: unknown option readnow
PASS: gdb.base/relocate.exp: add-symbol-file: unknown option foo
PASS: gdb.base/relocate.exp: add-symbol-file: unknown option -readnow s
PASS: gdb.base/relocate.exp: add-symbol-file relocate.o 0
PASS: gdb.base/relocate.exp: get address of static_foo
PASS: gdb.base/relocate.exp: get address of static_bar
PASS: gdb.base/relocate.exp: static variables have different addresses
PASS: gdb.base/relocate.exp: get address of global_foo
PASS: gdb.base/relocate.exp: get address of global_bar
PASS: gdb.base/relocate.exp: global variables have different addresses
PASS: gdb.base/relocate.exp: get address of function_foo
PASS: gdb.base/relocate.exp: get address of function_bar
PASS: gdb.base/relocate.exp: functions have different addresses
PASS: gdb.base/relocate.exp: set $offset = 0x10000
PASS: gdb.base/relocate.exp: add-symbol-file relocate.o $offset
PASS: gdb.base/relocate.exp: get address of function_foo
PASS: gdb.base/relocate.exp: function foo has a different address
PASS: gdb.base/relocate.exp: print static_foo
PASS: gdb.base/relocate.exp: print static_bar
PASS: gdb.base/relocate.exp: print global_foo
PASS: gdb.base/relocate.exp: print global_bar
PASS: gdb.base/remotetimeout.exp: correct remotetimeout printed
PASS: gdb.base/reread.exp: breakpoint foo in first file
FAIL: gdb.base/reread.exp: run to foo() (GDB internal error)
FAIL: gdb.base/reread.exp: run to foo() second time (GDB internal error)
PASS: gdb.base/reread.exp: second pass: breakpoint foo in first file
FAIL: gdb.base/reread.exp: second pass: run to foo() (GDB internal error)
FAIL: gdb.base/reread.exp: continue until exit at second pass
FAIL: gdb.base/reread.exp: second pass: run to foo() second time (GDB internal error)
UNTESTED: gdb.base/return2.exp: couldn't run to main
PASS: gdb.base/run-after-attach.exp: attach to process
PASS: gdb.base/run-after-attach.exp: kill process
FAIL: gdb.base/run-after-attach.exp: restart process (GDB internal error)
PASS: gdb.base/run-after-attach.exp: attempt kill via quit
UNTESTED: gdb.base/save-bp.exp: could not run to main
FAIL: gdb.base/savedregs.exp: advance thrower
FAIL: gdb.base/savedregs.exp: get main info frame
PASS: gdb.base/savedregs.exp: handle SIGSEGV pass print nostop
PASS: gdb.base/savedregs.exp: handle SIGILL pass print nostop
FAIL: gdb.base/savedregs.exp: advance catcher
FAIL: gdb.base/savedregs.exp: get sigtramp info frame
FAIL: gdb.base/savedregs.exp: get thrower info frame
FAIL: gdb.base/savedregs.exp: Check main info frame; stack contains catcher sigtramp thrower main
PASS: gdb.base/savedregs.exp: break caller
PASS: gdb.base/savedregs.exp: call caller (1,2,3,4,5,6,7,8)
PASS: gdb.base/savedregs.exp: get dummy info frame
FAIL: gdb.base/savedregs.exp: get catcher info frame
FAIL: gdb.base/savedregs.exp: Check sigtramp info frame; stack contains caller dummy catcher sigtramp thrower main
PASS: gdb.base/savedregs.exp: Check thrower info frame; stack contains caller dummy catcher sigtramp thrower main (skipped)
PASS: gdb.base/savedregs.exp: Check main info frame; stack contains caller dummy catcher sigtramp thrower main (skipped)
FAIL: gdb.base/savedregs.exp: advance callee
FAIL: gdb.base/savedregs.exp: get caller info frame
FAIL: gdb.base/savedregs.exp: Check dummy info frame; stack contains callee caller dummy catcher sigtramp thrower main
PASS: gdb.base/savedregs.exp: Check catcher info frame; stack contains callee caller dummy catcher sigtramp thrower main (skipped)
PASS: gdb.base/savedregs.exp: Check sigtramp info frame; stack contains callee caller dummy catcher sigtramp thrower main (skipped)
PASS: gdb.base/savedregs.exp: Check thrower info frame; stack contains callee caller dummy catcher sigtramp thrower main (skipped)
PASS: gdb.base/savedregs.exp: Check main info frame; stack contains callee caller dummy catcher sigtramp thrower main (skipped)
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_ro
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_bss before run
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal before run
PASS: gdb.base/sep.exp: list using location inside included file
PASS: gdb.base/sep.exp: breakpoint inside included file
UNSUPPORTED: gdb.base/sepdebug.exp: cannot produce separate debug info files
UNSUPPORTED: gdb.base/sepsymtab.exp: cannot produce separate debug info files
PASS: gdb.base/set-inferior-tty.exp: command=set inferior-tty: set inferior-tty to hello
PASS: gdb.base/set-inferior-tty.exp: command=set inferior-tty: show inferior-tty shows hello
PASS: gdb.base/set-inferior-tty.exp: command=set inferior-tty: set inferior-tty to empty
PASS: gdb.base/set-inferior-tty.exp: command=set inferior-tty: show inferior-tty shows empty
PASS: gdb.base/set-inferior-tty.exp: command=tty: set inferior-tty to hello
PASS: gdb.base/set-inferior-tty.exp: command=tty: show inferior-tty shows hello
PASS: gdb.base/set-inferior-tty.exp: command=tty: set inferior-tty to empty
PASS: gdb.base/set-inferior-tty.exp: command=tty: show inferior-tty shows empty
PASS: gdb.base/set-lang-auto.exp: show lang after loading binary
PASS: gdb.base/set-lang-auto.exp: forcing the language to ada
PASS: gdb.base/set-lang-auto.exp: show lang after switching language to ada
PASS: gdb.base/set-lang-auto.exp: switching the language back to auto
PASS: gdb.base/set-lang-auto.exp: show lang after having switched back to auto
FAIL: gdb.base/set-noassign.exp: can't run to main
PASS: gdb.base/setshow.exp: default annotation_level is zero
PASS: gdb.base/setshow.exp: set annotate 2
PASS: gdb.base/setshow.exp: show annotate 2
PASS: gdb.base/setshow.exp: annotation_level 2
PASS: gdb.base/setshow.exp: set annotate 1
PASS: gdb.base/setshow.exp: show annotate (1)
PASS: gdb.base/setshow.exp: annotation_level 1
PASS: gdb.base/setshow.exp: set annotate 0
PASS: gdb.base/setshow.exp: show annotate (0)
PASS: gdb.base/setshow.exp: annotation_level 0
PASS: gdb.base/setshow.exp: set args ~
PASS: gdb.base/setshow.exp: show args ~
PASS: gdb.base/setshow.exp: set args
PASS: gdb.base/setshow.exp: show args
PASS: gdb.base/setshow.exp: continuing
FAIL: gdb.base/setshow.exp: passing args (got interactive prompt)
PASS: gdb.base/setshow.exp: set check range on
PASS: gdb.base/setshow.exp: show check range (on)
PASS: gdb.base/setshow.exp: set check range off
PASS: gdb.base/setshow.exp: show check range (off)
PASS: gdb.base/setshow.exp: set check range auto
PASS: gdb.base/setshow.exp: show check range (auto)
PASS: gdb.base/setshow.exp: set check type on
PASS: gdb.base/setshow.exp: show check type (on)
PASS: gdb.base/setshow.exp: set check type off
PASS: gdb.base/setshow.exp: show check type (off)
PASS: gdb.base/setshow.exp: set complaints 100
PASS: gdb.base/setshow.exp: show complaints (100)
PASS: gdb.base/setshow.exp: set complaints 0
PASS: gdb.base/setshow.exp: show complaints (0)
PASS: gdb.base/setshow.exp: set confirm off
PASS: gdb.base/setshow.exp: show confirm (off)
PASS: gdb.base/setshow.exp: set confirm on
PASS: gdb.base/setshow.exp: show confirm (on)
PASS: gdb.base/setshow.exp: set editing off
PASS: gdb.base/setshow.exp: show editing (off)
PASS: gdb.base/setshow.exp: set environment FOOBARBAZ
PASS: gdb.base/setshow.exp: show environment FOOBARBAZ
PASS: gdb.base/setshow.exp: set height 100
PASS: gdb.base/setshow.exp: show height
PASS: gdb.base/setshow.exp: set height unlimited
PASS: gdb.base/setshow.exp: set history expansion on
PASS: gdb.base/setshow.exp: show history expansion
PASS: gdb.base/setshow.exp: show environment HOME
PASS: gdb.base/setshow.exp: set history filename ~/foobar.baz
PASS: gdb.base/setshow.exp: show history filename (~/foobar.baz)
PASS: gdb.base/setshow.exp: show working directory
PASS: gdb.base/setshow.exp: set history filename foobar.baz
PASS: gdb.base/setshow.exp: show history filename (current_directory/foobar.baz)
PASS: gdb.base/setshow.exp: set history save on
PASS: gdb.base/setshow.exp: show history save (on)
PASS: gdb.base/setshow.exp: set history save off
PASS: gdb.base/setshow.exp: set history size 100
PASS: gdb.base/setshow.exp: show history size (100)
PASS: gdb.base/setshow.exp: set language asm
PASS: gdb.base/setshow.exp: show language (asm)
PASS: gdb.base/setshow.exp: set language rust
PASS: gdb.base/setshow.exp: show language (rust)
PASS: gdb.base/setshow.exp: complete set language minimal
PASS: gdb.base/setshow.exp: set language auto
PASS: gdb.base/setshow.exp: show language (auto)
PASS: gdb.base/setshow.exp: set listsize 100
PASS: gdb.base/setshow.exp: show listsize (100)
PASS: gdb.base/setshow.exp: set prompt FooBarBaz
PASS: gdb.base/setshow.exp: show prompt FooBarBaz
PASS: gdb.base/setshow.exp: set prompt gdb
PASS: gdb.base/setshow.exp: set radix 11
PASS: gdb.base/setshow.exp: set radix 16
PASS: gdb.base/setshow.exp: show radix (16)
PASS: gdb.base/setshow.exp: set radix 10
PASS: gdb.base/setshow.exp: show radix (10)
PASS: gdb.base/setshow.exp: set width 90
PASS: gdb.base/setshow.exp: show width (90)
PASS: gdb.base/setshow.exp: set write on
PASS: gdb.base/setshow.exp: show write (on)
PASS: gdb.base/setshow.exp: show user
PASS: gdb.base/setshow.exp: set verbose on
PASS: gdb.base/setshow.exp: show verbose (on)
PASS: gdb.base/setshow.exp: set verbose off
PASS: gdb.base/setshow.exp: show verbose (off)
PASS: gdb.base/setshow.exp: history file is not set to /home/
PASS: gdb.base/setshow.exp: history file is not set to .
PASS: gdb.base/setshow.exp: history file is not set to ~/home
PASS: gdb.base/setshow.exp: history file is not set to =home
PASS: gdb.base/setshow.exp: solib-search-path is not set to /home/
PASS: gdb.base/setshow.exp: solib-search-path is not set to .
PASS: gdb.base/setshow.exp: solib-search-path is not set to ~/home
PASS: gdb.base/setshow.exp: solib-search-path is not set to =home
PASS: gdb.base/setshow.exp: data-directory is not set to /home/
PASS: gdb.base/setshow.exp: data-directory is not set to .
PASS: gdb.base/setshow.exp: data-directory is not set to ~/home
PASS: gdb.base/setshow.exp: data-directory is not set to =home
PASS: gdb.base/setvar.exp: set print sevenbit-strings
UNRESOLVED: gdb.base/shell.exp: shell echo foo
PASS: gdb.base/shell.exp: ! echo foo
PASS: gdb.base/shell.exp: !echo foo
UNTESTED: gdb.base/shlib-call.exp: failed to compile
UNTESTED: gdb.base/shreloc.exp: could not build $(@D)/gdb/testsuite/outputs/gdb.base/shreloc/shreloc.
PASS: gdb.base/sigall.exp: handle SIGABRT stop print
PASS: gdb.base/sigall.exp: b handle_ABRT
PASS: gdb.base/sigall.exp: b gen_HUP
FAIL: gdb.base/sigall.exp: get signal ABRT
FAIL: gdb.base/sigall.exp: send signal ABRT
FAIL: gdb.base/sigall.exp: advance to HUP
PASS: gdb.base/sigall.exp: handle SIGHUP stop print
PASS: gdb.base/sigall.exp: b handle_HUP
PASS: gdb.base/sigall.exp: b gen_QUIT
FAIL: gdb.base/sigall.exp: get signal HUP
FAIL: gdb.base/sigall.exp: send signal HUP
FAIL: gdb.base/sigall.exp: advance to QUIT
PASS: gdb.base/sigall.exp: handle SIGQUIT stop print
PASS: gdb.base/sigall.exp: b handle_QUIT
PASS: gdb.base/sigall.exp: b gen_ILL
FAIL: gdb.base/sigall.exp: get signal QUIT
FAIL: gdb.base/sigall.exp: send signal QUIT
FAIL: gdb.base/sigall.exp: advance to ILL
PASS: gdb.base/sigall.exp: handle SIGILL stop print
PASS: gdb.base/sigall.exp: b handle_ILL
PASS: gdb.base/sigall.exp: b gen_EMT
FAIL: gdb.base/sigall.exp: get signal ILL
FAIL: gdb.base/sigall.exp: send signal ILL
FAIL: gdb.base/sigall.exp: advance to EMT
PASS: gdb.base/sigall.exp: handle SIGEMT stop print
PASS: gdb.base/sigall.exp: b handle_EMT
PASS: gdb.base/sigall.exp: b gen_FPE
FAIL: gdb.base/sigall.exp: get signal EMT
FAIL: gdb.base/sigall.exp: send signal EMT
FAIL: gdb.base/sigall.exp: advance to FPE
PASS: gdb.base/sigall.exp: handle SIGFPE stop print
PASS: gdb.base/sigall.exp: b handle_FPE
PASS: gdb.base/sigall.exp: b gen_BUS
FAIL: gdb.base/sigall.exp: get signal FPE
FAIL: gdb.base/sigall.exp: send signal FPE
FAIL: gdb.base/sigall.exp: advance to BUS
PASS: gdb.base/sigall.exp: handle SIGBUS stop print
PASS: gdb.base/sigall.exp: b handle_BUS
PASS: gdb.base/sigall.exp: b gen_SEGV
FAIL: gdb.base/sigall.exp: get signal BUS
FAIL: gdb.base/sigall.exp: send signal BUS
FAIL: gdb.base/sigall.exp: advance to SEGV
PASS: gdb.base/sigall.exp: handle SIGSEGV stop print
PASS: gdb.base/sigall.exp: b handle_SEGV
PASS: gdb.base/sigall.exp: b gen_SYS
FAIL: gdb.base/sigall.exp: get signal SEGV
FAIL: gdb.base/sigall.exp: send signal SEGV
FAIL: gdb.base/sigall.exp: advance to SYS
PASS: gdb.base/sigall.exp: handle SIGSYS stop print
PASS: gdb.base/sigall.exp: b handle_SYS
PASS: gdb.base/sigall.exp: b gen_PIPE
FAIL: gdb.base/sigall.exp: get signal SYS
FAIL: gdb.base/sigall.exp: send signal SYS
FAIL: gdb.base/sigall.exp: advance to PIPE
PASS: gdb.base/sigall.exp: handle SIGPIPE stop print
PASS: gdb.base/sigall.exp: b handle_PIPE
PASS: gdb.base/sigall.exp: b gen_ALRM
FAIL: gdb.base/sigall.exp: get signal PIPE
FAIL: gdb.base/sigall.exp: send signal PIPE
FAIL: gdb.base/sigall.exp: advance to ALRM
PASS: gdb.base/sigall.exp: handle SIGALRM stop print
PASS: gdb.base/sigall.exp: b handle_ALRM
PASS: gdb.base/sigall.exp: b gen_URG
FAIL: gdb.base/sigall.exp: get signal ALRM
FAIL: gdb.base/sigall.exp: send signal ALRM
FAIL: gdb.base/sigall.exp: advance to URG
PASS: gdb.base/sigall.exp: handle SIGURG stop print
PASS: gdb.base/sigall.exp: b handle_URG
PASS: gdb.base/sigall.exp: b gen_TSTP
FAIL: gdb.base/sigall.exp: get signal URG
FAIL: gdb.base/sigall.exp: send signal URG
FAIL: gdb.base/sigall.exp: advance to TSTP
PASS: gdb.base/sigall.exp: handle SIGTSTP stop print
PASS: gdb.base/sigall.exp: b handle_TSTP
PASS: gdb.base/sigall.exp: b gen_CONT
FAIL: gdb.base/sigall.exp: get signal TSTP
FAIL: gdb.base/sigall.exp: send signal TSTP
FAIL: gdb.base/sigall.exp: advance to CONT
PASS: gdb.base/sigall.exp: handle SIGCONT stop print
PASS: gdb.base/sigall.exp: b handle_CONT
PASS: gdb.base/sigall.exp: b gen_CHLD
FAIL: gdb.base/sigall.exp: get signal CONT
FAIL: gdb.base/sigall.exp: send signal CONT
FAIL: gdb.base/sigall.exp: advance to CHLD
PASS: gdb.base/sigall.exp: handle SIGCHLD stop print
PASS: gdb.base/sigall.exp: b handle_CHLD
PASS: gdb.base/sigall.exp: b gen_TTIN
FAIL: gdb.base/sigall.exp: get signal CHLD
FAIL: gdb.base/sigall.exp: send signal CHLD
FAIL: gdb.base/sigall.exp: advance to TTIN
PASS: gdb.base/sigall.exp: handle SIGTTIN stop print
PASS: gdb.base/sigall.exp: b handle_TTIN
PASS: gdb.base/sigall.exp: b gen_TTOU
FAIL: gdb.base/sigall.exp: get signal TTIN
FAIL: gdb.base/sigall.exp: send signal TTIN
FAIL: gdb.base/sigall.exp: advance to TTOU
PASS: gdb.base/sigall.exp: handle SIGTTOU stop print
PASS: gdb.base/sigall.exp: b handle_TTOU
PASS: gdb.base/sigall.exp: b gen_IO
FAIL: gdb.base/sigall.exp: get signal TTOU
FAIL: gdb.base/sigall.exp: send signal TTOU
FAIL: gdb.base/sigall.exp: advance to IO
PASS: gdb.base/sigall.exp: handle SIGIO stop print
PASS: gdb.base/sigall.exp: b handle_IO
PASS: gdb.base/sigall.exp: b gen_XCPU
FAIL: gdb.base/sigall.exp: get signal IO
FAIL: gdb.base/sigall.exp: send signal IO
FAIL: gdb.base/sigall.exp: advance to XCPU
PASS: gdb.base/sigall.exp: handle SIGXCPU stop print
PASS: gdb.base/sigall.exp: b handle_XCPU
PASS: gdb.base/sigall.exp: b gen_XFSZ
FAIL: gdb.base/sigall.exp: get signal XCPU
FAIL: gdb.base/sigall.exp: send signal XCPU
FAIL: gdb.base/sigall.exp: advance to XFSZ
PASS: gdb.base/sigall.exp: handle SIGXFSZ stop print
PASS: gdb.base/sigall.exp: b handle_XFSZ
PASS: gdb.base/sigall.exp: b gen_VTALRM
FAIL: gdb.base/sigall.exp: get signal XFSZ
FAIL: gdb.base/sigall.exp: send signal XFSZ
FAIL: gdb.base/sigall.exp: advance to VTALRM
PASS: gdb.base/sigall.exp: handle SIGVTALRM stop print
PASS: gdb.base/sigall.exp: b handle_VTALRM
PASS: gdb.base/sigall.exp: b gen_PROF
FAIL: gdb.base/sigall.exp: get signal VTALRM
FAIL: gdb.base/sigall.exp: send signal VTALRM
FAIL: gdb.base/sigall.exp: advance to PROF
PASS: gdb.base/sigall.exp: handle SIGPROF stop print
PASS: gdb.base/sigall.exp: b handle_PROF
PASS: gdb.base/sigall.exp: b gen_WINCH
FAIL: gdb.base/sigall.exp: get signal PROF
FAIL: gdb.base/sigall.exp: send signal PROF
FAIL: gdb.base/sigall.exp: advance to WINCH
PASS: gdb.base/sigall.exp: handle SIGWINCH stop print
PASS: gdb.base/sigall.exp: b handle_WINCH
PASS: gdb.base/sigall.exp: b gen_LOST
FAIL: gdb.base/sigall.exp: get signal WINCH
FAIL: gdb.base/sigall.exp: send signal WINCH
FAIL: gdb.base/sigall.exp: advance to LOST
PASS: gdb.base/sigall.exp: handle SIGLOST stop print
PASS: gdb.base/sigall.exp: b handle_LOST
PASS: gdb.base/sigall.exp: b gen_USR1
FAIL: gdb.base/sigall.exp: get signal LOST
FAIL: gdb.base/sigall.exp: send signal LOST
FAIL: gdb.base/sigall.exp: advance to USR1
PASS: gdb.base/sigall.exp: handle SIGUSR1 stop print
PASS: gdb.base/sigall.exp: b handle_USR1
PASS: gdb.base/sigall.exp: b gen_USR2
FAIL: gdb.base/sigall.exp: get signal USR1
FAIL: gdb.base/sigall.exp: send signal USR1
FAIL: gdb.base/sigall.exp: advance to USR2
PASS: gdb.base/sigall.exp: handle SIGUSR2 stop print
PASS: gdb.base/sigall.exp: b handle_USR2
PASS: gdb.base/sigall.exp: b gen_PWR
FAIL: gdb.base/sigall.exp: get signal USR2
FAIL: gdb.base/sigall.exp: send signal USR2
FAIL: gdb.base/sigall.exp: advance to PWR
PASS: gdb.base/sigall.exp: handle SIGPWR stop print
PASS: gdb.base/sigall.exp: b handle_PWR
PASS: gdb.base/sigall.exp: b gen_POLL
FAIL: gdb.base/sigall.exp: get signal PWR
FAIL: gdb.base/sigall.exp: send signal PWR
FAIL: gdb.base/sigall.exp: advance to POLL
PASS: gdb.base/sigall.exp: handle SIGPOLL stop print
PASS: gdb.base/sigall.exp: b handle_POLL
PASS: gdb.base/sigall.exp: b gen_WIND
FAIL: gdb.base/sigall.exp: get signal POLL
FAIL: gdb.base/sigall.exp: send signal POLL
FAIL: gdb.base/sigall.exp: advance to WIND
PASS: gdb.base/sigall.exp: handle SIGWIND stop print
PASS: gdb.base/sigall.exp: b handle_WIND
PASS: gdb.base/sigall.exp: b gen_PHONE
FAIL: gdb.base/sigall.exp: get signal WIND
FAIL: gdb.base/sigall.exp: send signal WIND
FAIL: gdb.base/sigall.exp: advance to PHONE
PASS: gdb.base/sigall.exp: handle SIGPHONE stop print
PASS: gdb.base/sigall.exp: b handle_PHONE
PASS: gdb.base/sigall.exp: b gen_WAITING
FAIL: gdb.base/sigall.exp: get signal PHONE
FAIL: gdb.base/sigall.exp: send signal PHONE
FAIL: gdb.base/sigall.exp: advance to WAITING
PASS: gdb.base/sigall.exp: handle SIGWAITING stop print
PASS: gdb.base/sigall.exp: b handle_WAITING
PASS: gdb.base/sigall.exp: b gen_LWP
FAIL: gdb.base/sigall.exp: get signal WAITING
FAIL: gdb.base/sigall.exp: send signal WAITING
FAIL: gdb.base/sigall.exp: advance to LWP
PASS: gdb.base/sigall.exp: handle SIGLWP stop print
PASS: gdb.base/sigall.exp: b handle_LWP
PASS: gdb.base/sigall.exp: b gen_DANGER
FAIL: gdb.base/sigall.exp: get signal LWP
FAIL: gdb.base/sigall.exp: send signal LWP
FAIL: gdb.base/sigall.exp: advance to DANGER
PASS: gdb.base/sigall.exp: handle SIGDANGER stop print
PASS: gdb.base/sigall.exp: b handle_DANGER
PASS: gdb.base/sigall.exp: b gen_GRANT
FAIL: gdb.base/sigall.exp: get signal DANGER
FAIL: gdb.base/sigall.exp: send signal DANGER
FAIL: gdb.base/sigall.exp: advance to GRANT
PASS: gdb.base/sigall.exp: handle SIGGRANT stop print
PASS: gdb.base/sigall.exp: b handle_GRANT
PASS: gdb.base/sigall.exp: b gen_RETRACT
FAIL: gdb.base/sigall.exp: get signal GRANT
FAIL: gdb.base/sigall.exp: send signal GRANT
FAIL: gdb.base/sigall.exp: advance to RETRACT
PASS: gdb.base/sigall.exp: handle SIGRETRACT stop print
PASS: gdb.base/sigall.exp: b handle_RETRACT
PASS: gdb.base/sigall.exp: b gen_MSG
FAIL: gdb.base/sigall.exp: get signal RETRACT
FAIL: gdb.base/sigall.exp: send signal RETRACT
FAIL: gdb.base/sigall.exp: advance to MSG
PASS: gdb.base/sigall.exp: handle SIGMSG stop print
PASS: gdb.base/sigall.exp: b handle_MSG
PASS: gdb.base/sigall.exp: b gen_SOUND
FAIL: gdb.base/sigall.exp: get signal MSG
FAIL: gdb.base/sigall.exp: send signal MSG
FAIL: gdb.base/sigall.exp: advance to SOUND
PASS: gdb.base/sigall.exp: handle SIGSOUND stop print
PASS: gdb.base/sigall.exp: b handle_SOUND
PASS: gdb.base/sigall.exp: b gen_SAK
FAIL: gdb.base/sigall.exp: get signal SOUND
FAIL: gdb.base/sigall.exp: send signal SOUND
FAIL: gdb.base/sigall.exp: advance to SAK
PASS: gdb.base/sigall.exp: handle SIGSAK stop print
PASS: gdb.base/sigall.exp: b handle_SAK
PASS: gdb.base/sigall.exp: b gen_PRIO
FAIL: gdb.base/sigall.exp: get signal SAK
FAIL: gdb.base/sigall.exp: send signal SAK
FAIL: gdb.base/sigall.exp: advance to PRIO
PASS: gdb.base/sigall.exp: handle SIGPRIO stop print
PASS: gdb.base/sigall.exp: b handle_PRIO
PASS: gdb.base/sigall.exp: b gen_33
FAIL: gdb.base/sigall.exp: get signal PRIO
FAIL: gdb.base/sigall.exp: send signal PRIO
FAIL: gdb.base/sigall.exp: advance to 33
PASS: gdb.base/sigall.exp: handle SIG33 stop print
PASS: gdb.base/sigall.exp: b handle_33
PASS: gdb.base/sigall.exp: b gen_34
FAIL: gdb.base/sigall.exp: get signal 33
FAIL: gdb.base/sigall.exp: send signal 33
FAIL: gdb.base/sigall.exp: advance to 34
PASS: gdb.base/sigall.exp: handle SIG34 stop print
PASS: gdb.base/sigall.exp: b handle_34
PASS: gdb.base/sigall.exp: b gen_35
FAIL: gdb.base/sigall.exp: get signal 34
FAIL: gdb.base/sigall.exp: send signal 34
FAIL: gdb.base/sigall.exp: advance to 35
PASS: gdb.base/sigall.exp: handle SIG35 stop print
PASS: gdb.base/sigall.exp: b handle_35
PASS: gdb.base/sigall.exp: b gen_36
FAIL: gdb.base/sigall.exp: get signal 35
FAIL: gdb.base/sigall.exp: send signal 35
FAIL: gdb.base/sigall.exp: advance to 36
PASS: gdb.base/sigall.exp: handle SIG36 stop print
PASS: gdb.base/sigall.exp: b handle_36
PASS: gdb.base/sigall.exp: b gen_37
FAIL: gdb.base/sigall.exp: get signal 36
FAIL: gdb.base/sigall.exp: send signal 36
FAIL: gdb.base/sigall.exp: advance to 37
PASS: gdb.base/sigall.exp: handle SIG37 stop print
PASS: gdb.base/sigall.exp: b handle_37
PASS: gdb.base/sigall.exp: b gen_38
FAIL: gdb.base/sigall.exp: get signal 37
FAIL: gdb.base/sigall.exp: send signal 37
FAIL: gdb.base/sigall.exp: advance to 38
PASS: gdb.base/sigall.exp: handle SIG38 stop print
PASS: gdb.base/sigall.exp: b handle_38
PASS: gdb.base/sigall.exp: b gen_39
FAIL: gdb.base/sigall.exp: get signal 38
FAIL: gdb.base/sigall.exp: send signal 38
FAIL: gdb.base/sigall.exp: advance to 39
PASS: gdb.base/sigall.exp: handle SIG39 stop print
PASS: gdb.base/sigall.exp: b handle_39
PASS: gdb.base/sigall.exp: b gen_40
FAIL: gdb.base/sigall.exp: get signal 39
FAIL: gdb.base/sigall.exp: send signal 39
FAIL: gdb.base/sigall.exp: advance to 40
PASS: gdb.base/sigall.exp: handle SIG40 stop print
PASS: gdb.base/sigall.exp: b handle_40
PASS: gdb.base/sigall.exp: b gen_41
FAIL: gdb.base/sigall.exp: get signal 40
FAIL: gdb.base/sigall.exp: send signal 40
FAIL: gdb.base/sigall.exp: advance to 41
PASS: gdb.base/sigall.exp: handle SIG41 stop print
PASS: gdb.base/sigall.exp: b handle_41
PASS: gdb.base/sigall.exp: b gen_42
FAIL: gdb.base/sigall.exp: get signal 41
FAIL: gdb.base/sigall.exp: send signal 41
FAIL: gdb.base/sigall.exp: advance to 42
PASS: gdb.base/sigall.exp: handle SIG42 stop print
PASS: gdb.base/sigall.exp: b handle_42
PASS: gdb.base/sigall.exp: b gen_43
FAIL: gdb.base/sigall.exp: get signal 42
FAIL: gdb.base/sigall.exp: send signal 42
FAIL: gdb.base/sigall.exp: advance to 43
PASS: gdb.base/sigall.exp: handle SIG43 stop print
PASS: gdb.base/sigall.exp: b handle_43
PASS: gdb.base/sigall.exp: b gen_44
FAIL: gdb.base/sigall.exp: get signal 43
FAIL: gdb.base/sigall.exp: send signal 43
FAIL: gdb.base/sigall.exp: advance to 44
PASS: gdb.base/sigall.exp: handle SIG44 stop print
PASS: gdb.base/sigall.exp: b handle_44
PASS: gdb.base/sigall.exp: b gen_45
FAIL: gdb.base/sigall.exp: get signal 44
FAIL: gdb.base/sigall.exp: send signal 44
FAIL: gdb.base/sigall.exp: advance to 45
PASS: gdb.base/sigall.exp: handle SIG45 stop print
PASS: gdb.base/sigall.exp: b handle_45
PASS: gdb.base/sigall.exp: b gen_46
FAIL: gdb.base/sigall.exp: get signal 45
FAIL: gdb.base/sigall.exp: send signal 45
FAIL: gdb.base/sigall.exp: advance to 46
PASS: gdb.base/sigall.exp: handle SIG46 stop print
PASS: gdb.base/sigall.exp: b handle_46
PASS: gdb.base/sigall.exp: b gen_47
FAIL: gdb.base/sigall.exp: get signal 46
FAIL: gdb.base/sigall.exp: send signal 46
FAIL: gdb.base/sigall.exp: advance to 47
PASS: gdb.base/sigall.exp: handle SIG47 stop print
PASS: gdb.base/sigall.exp: b handle_47
PASS: gdb.base/sigall.exp: b gen_48
FAIL: gdb.base/sigall.exp: get signal 47
FAIL: gdb.base/sigall.exp: send signal 47
FAIL: gdb.base/sigall.exp: advance to 48
PASS: gdb.base/sigall.exp: handle SIG48 stop print
PASS: gdb.base/sigall.exp: b handle_48
PASS: gdb.base/sigall.exp: b gen_49
FAIL: gdb.base/sigall.exp: get signal 48
FAIL: gdb.base/sigall.exp: send signal 48
FAIL: gdb.base/sigall.exp: advance to 49
PASS: gdb.base/sigall.exp: handle SIG49 stop print
PASS: gdb.base/sigall.exp: b handle_49
PASS: gdb.base/sigall.exp: b gen_50
FAIL: gdb.base/sigall.exp: get signal 49
FAIL: gdb.base/sigall.exp: send signal 49
FAIL: gdb.base/sigall.exp: advance to 50
PASS: gdb.base/sigall.exp: handle SIG50 stop print
PASS: gdb.base/sigall.exp: b handle_50
PASS: gdb.base/sigall.exp: b gen_51
FAIL: gdb.base/sigall.exp: get signal 50
FAIL: gdb.base/sigall.exp: send signal 50
FAIL: gdb.base/sigall.exp: advance to 51
PASS: gdb.base/sigall.exp: handle SIG51 stop print
PASS: gdb.base/sigall.exp: b handle_51
PASS: gdb.base/sigall.exp: b gen_52
FAIL: gdb.base/sigall.exp: get signal 51
FAIL: gdb.base/sigall.exp: send signal 51
FAIL: gdb.base/sigall.exp: advance to 52
PASS: gdb.base/sigall.exp: handle SIG52 stop print
PASS: gdb.base/sigall.exp: b handle_52
PASS: gdb.base/sigall.exp: b gen_53
FAIL: gdb.base/sigall.exp: get signal 52
FAIL: gdb.base/sigall.exp: send signal 52
FAIL: gdb.base/sigall.exp: advance to 53
PASS: gdb.base/sigall.exp: handle SIG53 stop print
PASS: gdb.base/sigall.exp: b handle_53
PASS: gdb.base/sigall.exp: b gen_54
FAIL: gdb.base/sigall.exp: get signal 53
FAIL: gdb.base/sigall.exp: send signal 53
FAIL: gdb.base/sigall.exp: advance to 54
PASS: gdb.base/sigall.exp: handle SIG54 stop print
PASS: gdb.base/sigall.exp: b handle_54
PASS: gdb.base/sigall.exp: b gen_55
FAIL: gdb.base/sigall.exp: get signal 54
FAIL: gdb.base/sigall.exp: send signal 54
FAIL: gdb.base/sigall.exp: advance to 55
PASS: gdb.base/sigall.exp: handle SIG55 stop print
PASS: gdb.base/sigall.exp: b handle_55
PASS: gdb.base/sigall.exp: b gen_56
FAIL: gdb.base/sigall.exp: get signal 55
FAIL: gdb.base/sigall.exp: send signal 55
FAIL: gdb.base/sigall.exp: advance to 56
PASS: gdb.base/sigall.exp: handle SIG56 stop print
PASS: gdb.base/sigall.exp: b handle_56
PASS: gdb.base/sigall.exp: b gen_57
FAIL: gdb.base/sigall.exp: get signal 56
FAIL: gdb.base/sigall.exp: send signal 56
FAIL: gdb.base/sigall.exp: advance to 57
PASS: gdb.base/sigall.exp: handle SIG57 stop print
PASS: gdb.base/sigall.exp: b handle_57
PASS: gdb.base/sigall.exp: b gen_58
FAIL: gdb.base/sigall.exp: get signal 57
FAIL: gdb.base/sigall.exp: send signal 57
FAIL: gdb.base/sigall.exp: advance to 58
PASS: gdb.base/sigall.exp: handle SIG58 stop print
PASS: gdb.base/sigall.exp: b handle_58
PASS: gdb.base/sigall.exp: b gen_59
FAIL: gdb.base/sigall.exp: get signal 58
FAIL: gdb.base/sigall.exp: send signal 58
FAIL: gdb.base/sigall.exp: advance to 59
PASS: gdb.base/sigall.exp: handle SIG59 stop print
PASS: gdb.base/sigall.exp: b handle_59
PASS: gdb.base/sigall.exp: b gen_60
FAIL: gdb.base/sigall.exp: get signal 59
FAIL: gdb.base/sigall.exp: send signal 59
FAIL: gdb.base/sigall.exp: advance to 60
PASS: gdb.base/sigall.exp: handle SIG60 stop print
PASS: gdb.base/sigall.exp: b handle_60
PASS: gdb.base/sigall.exp: b gen_61
FAIL: gdb.base/sigall.exp: get signal 60
FAIL: gdb.base/sigall.exp: send signal 60
FAIL: gdb.base/sigall.exp: advance to 61
PASS: gdb.base/sigall.exp: handle SIG61 stop print
PASS: gdb.base/sigall.exp: b handle_61
PASS: gdb.base/sigall.exp: b gen_62
FAIL: gdb.base/sigall.exp: get signal 61
FAIL: gdb.base/sigall.exp: send signal 61
FAIL: gdb.base/sigall.exp: advance to 62
PASS: gdb.base/sigall.exp: handle SIG62 stop print
PASS: gdb.base/sigall.exp: b handle_62
PASS: gdb.base/sigall.exp: b gen_63
FAIL: gdb.base/sigall.exp: get signal 62
FAIL: gdb.base/sigall.exp: send signal 62
FAIL: gdb.base/sigall.exp: advance to 63
PASS: gdb.base/sigall.exp: handle SIG63 stop print
PASS: gdb.base/sigall.exp: b handle_63
PASS: gdb.base/sigall.exp: b gen_TERM
FAIL: gdb.base/sigall.exp: get signal 63
FAIL: gdb.base/sigall.exp: send signal 63
FAIL: gdb.base/sigall.exp: advance to TERM
PASS: gdb.base/sigall.exp: handle SIGTERM stop print
PASS: gdb.base/sigall.exp: b handle_TERM
FAIL: gdb.base/sigall.exp: get signal TERM
FAIL: gdb.base/sigall.exp: send signal TERM
FAIL: gdb.base/sigall.exp: continue until exit at continue to sigall exit
PASS: gdb.base/sigaltstack.exp: handle SIGALRM print pass nostop
PASS: gdb.base/sigaltstack.exp: handle SIGVTALRM print pass nostop
PASS: gdb.base/sigaltstack.exp: handle SIGPROF print pass nostop
PASS: gdb.base/sigaltstack.exp: break catcher if level == INNER
FAIL: gdb.base/sigaltstack.exp: continue to catch
PASS: gdb.base/sigaltstack.exp: next
FAIL: gdb.base/sigaltstack.exp: backtrace (pattern 1)
FAIL: gdb.base/sigaltstack.exp: finish from catch LEAF
FAIL: gdb.base/sigaltstack.exp: finish to throw INNER
FAIL: gdb.base/sigaltstack.exp: finish to catch INNER
FAIL: gdb.base/sigaltstack.exp: finish from catch INNER
FAIL: gdb.base/sigaltstack.exp: finish to OUTER
FAIL: gdb.base/sigaltstack.exp: finish to catch MAIN
FAIL: gdb.base/sigaltstack.exp: finish to MAIN
PASS: gdb.base/sigbpt.exp: break keeper
PASS: gdb.base/sigbpt.exp: display/i $pc
PASS: gdb.base/sigbpt.exp: advance to the bowler
FAIL: gdb.base/sigbpt.exp: stepping to fault
FAIL: gdb.base/sigbpt.exp: get insn after fault
FAIL: gdb.base/sigbpt.exp: verify that SIGSEGV occurs at the last STEPI insn (none )
FAIL: gdb.base/sigbpt.exp: (timeout) rerun to main
FAIL: gdb.base/sigbpt.exp: stepi; pass SIGSEGV (GDB internal error)
FAIL: gdb.base/sigbpt.exp: stepi; continue to keeper
PASS: gdb.base/sigbpt.exp: stepi; nopass SIGSEGV
FAIL: gdb.base/sigbpt.exp: stepi; stepi out of handler (could not insert single-step breakpoint)
FAIL: gdb.base/sigbpt.exp: (timeout) rerun to main
FAIL: gdb.base/sigbpt.exp: stepi bp before segv; pass SIGSEGV (GDB internal error)
FAIL: gdb.base/sigbpt.exp: stepi bp before segv; continue to keeper
PASS: gdb.base/sigbpt.exp: stepi bp before segv; nopass SIGSEGV
FAIL: gdb.base/sigbpt.exp: stepi bp before segv; set breakpoint 0 of 1
FAIL: gdb.base/sigbpt.exp: stepi bp before segv; stepi out of handler (could not insert single-step breakpoint)
FAIL: gdb.base/sigbpt.exp: stepi bp before segv; clear breakpoint 0 of 1
FAIL: gdb.base/sigbpt.exp: (timeout) rerun to main
FAIL: gdb.base/sigbpt.exp: stepi bp at segv; pass SIGSEGV (GDB internal error)
FAIL: gdb.base/sigbpt.exp: stepi bp at segv; continue to keeper
PASS: gdb.base/sigbpt.exp: stepi bp at segv; nopass SIGSEGV
FAIL: gdb.base/sigbpt.exp: stepi bp at segv; set breakpoint 0 of 1
FAIL: gdb.base/sigbpt.exp: stepi bp at segv; stepi out of handler (could not insert single-step breakpoint)
FAIL: gdb.base/sigbpt.exp: stepi bp at segv; clear breakpoint 0 of 1
FAIL: gdb.base/sigbpt.exp: (timeout) rerun to main
FAIL: gdb.base/sigbpt.exp: stepi bp before and at segv; pass SIGSEGV (GDB internal error)
FAIL: gdb.base/sigbpt.exp: stepi bp before and at segv; continue to keeper
PASS: gdb.base/sigbpt.exp: stepi bp before and at segv; nopass SIGSEGV
FAIL: gdb.base/sigbpt.exp: stepi bp before and at segv; set breakpoint 0 of 2
FAIL: gdb.base/sigbpt.exp: stepi bp before and at segv; set breakpoint 1 of 2
FAIL: gdb.base/sigbpt.exp: stepi bp before and at segv; stepi out of handler (could not insert single-step breakpoint)
FAIL: gdb.base/sigbpt.exp: stepi bp before and at segv; clear breakpoint 0 of 2
FAIL: gdb.base/sigbpt.exp: stepi bp before and at segv; clear breakpoint 1 of 2
FAIL: gdb.base/sigbpt.exp: (timeout) rerun to main
FAIL: gdb.base/sigbpt.exp: cont; pass SIGSEGV (GDB internal error)
FAIL: gdb.base/sigbpt.exp: cont; continue to keeper
PASS: gdb.base/sigbpt.exp: cont; nopass SIGSEGV
FAIL: gdb.base/sigbpt.exp: cont; set breakpoint 0  of 1
FAIL: gdb.base/sigbpt.exp: cont; continue to breakpoint at fault
FAIL: gdb.base/sigbpt.exp: cont; stepi fault
FAIL: gdb.base/sigbpt.exp: cont; clear breakpoint 0 of 1
FAIL: gdb.base/sigbpt.exp: (timeout) rerun to main
FAIL: gdb.base/sigbpt.exp: cont bp after segv; pass SIGSEGV (GDB internal error)
FAIL: gdb.base/sigbpt.exp: cont bp after segv; continue to keeper
PASS: gdb.base/sigbpt.exp: cont bp after segv; nopass SIGSEGV
FAIL: gdb.base/sigbpt.exp: cont bp after segv; set breakpoint 0  of 2
FAIL: gdb.base/sigbpt.exp: cont bp after segv; set breakpoint 1  of 2
FAIL: gdb.base/sigbpt.exp: cont bp after segv; continue to breakpoint at fault
FAIL: gdb.base/sigbpt.exp: cont bp after segv; stepi fault
FAIL: gdb.base/sigbpt.exp: cont bp after segv; clear breakpoint 0 of 2
FAIL: gdb.base/sigbpt.exp: cont bp after segv; clear breakpoint 1 of 2
FAIL: gdb.base/sigbpt.exp: (timeout) rerun to main
FAIL: gdb.base/sigbpt.exp: cont bp before and after segv; pass SIGSEGV (GDB internal error)
FAIL: gdb.base/sigbpt.exp: cont bp before and after segv; continue to keeper
PASS: gdb.base/sigbpt.exp: cont bp before and after segv; nopass SIGSEGV
FAIL: gdb.base/sigbpt.exp: cont bp before and after segv; set breakpoint 0  of 3
PASS: gdb.base/sigbpt.exp: cont bp before and after segv; set breakpoint 1  of 3
FAIL: gdb.base/sigbpt.exp: cont bp before and after segv; set breakpoint 2  of 3
FAIL: gdb.base/sigbpt.exp: cont bp before and after segv; continue to breakpoint at fault
FAIL: gdb.base/sigbpt.exp: cont bp before and after segv; stepi fault
FAIL: gdb.base/sigbpt.exp: cont bp before and after segv; clear breakpoint 0 of 3
PASS: gdb.base/sigbpt.exp: cont bp before and after segv; clear breakpoint 1 of 3
FAIL: gdb.base/sigbpt.exp: cont bp before and after segv; clear breakpoint 2 of 3
PASS: gdb.base/sigchld.exp: set breakpoint at success exit
PASS: gdb.base/sigchld.exp: set breakpoint at failure exit
FAIL: gdb.base/sigchld.exp: SIGCHLD blocked in inferior
PASS: gdb.base/siginfo-addr.exp: display/i $pc
FAIL: gdb.base/siginfo-addr.exp: continue to signal
FAIL: gdb.base/siginfo-addr.exp: correct si_addr
PASS: gdb.base/siginfo.exp: display/i $pc
PASS: gdb.base/siginfo.exp: break handler
FAIL: gdb.base/siginfo.exp: continue to stepi handler
FAIL: gdb.base/siginfo.exp: backtrace for nexti (pattern 1)
FAIL: gdb.base/siginfo.exp: step out of handler
PASS: gdb.base/signals-state-child.exp: collect standalone signals state
UNTESTED: gdb.base/signals-state-child.exp: failed to compile
PASS: gdb.base/signals.exp: handle all print
UNTESTED: gdb.base/signest.exp: could not run to main
FAIL: gdb.base/signull.exp: set for function pointer probe
FAIL: gdb.base/signull.exp: probe function pointer
FAIL: gdb.base/signull.exp: (timeout) rerun to main
FAIL: gdb.base/signull.exp: break bowler (GDB internal error)
PASS: gdb.base/signull.exp: break keeper
PASS: gdb.base/signull.exp: handle SIGSEGV
PASS: gdb.base/signull.exp: handle SIGBUS
FAIL: gdb.base/signull.exp: data read; start with the bowler
FAIL: gdb.base/signull.exp: data read; select the pointer type
FAIL: gdb.base/signull.exp: data read; take the SIGSEGV
FAIL: gdb.base/signull.exp: data read; backtrace from SIGSEGV
FAIL: gdb.base/signull.exp: data read; continue to the keeper
FAIL: gdb.base/signull.exp: data read; backtrace from keeper through SIGSEGV
FAIL: gdb.base/signull.exp: data write; start with the bowler
FAIL: gdb.base/signull.exp: data write; select the pointer type
FAIL: gdb.base/signull.exp: data write; take the SIGSEGV
FAIL: gdb.base/signull.exp: data write; backtrace from SIGSEGV
FAIL: gdb.base/signull.exp: data write; continue to the keeper
FAIL: gdb.base/signull.exp: data write; backtrace from keeper through SIGSEGV
FAIL: gdb.base/signull.exp: code; start with the bowler
FAIL: gdb.base/signull.exp: code; select the pointer type
FAIL: gdb.base/signull.exp: code; take the SIGSEGV
FAIL: gdb.base/signull.exp: code; backtrace from SIGSEGV
FAIL: gdb.base/signull.exp: code; continue to the keeper
FAIL: gdb.base/signull.exp: code; backtrace from keeper through SIGSEGV
PASS: gdb.base/sigrepeat.exp: advance to infinite loop
FAIL: gdb.base/sigrepeat.exp: next
PASS: gdb.base/sigstep.exp: validate backtrace: display/i $pc
PASS: gdb.base/sigstep.exp: validate backtrace: break handler
FAIL: gdb.base/sigstep.exp: validate backtrace: continue to stepi handler
FAIL: gdb.base/sigstep.exp: validate backtrace: backtrace for nexti (pattern 1)
PASS: gdb.base/sigstep.exp: stepi to handler, nothing in handler, step from handler: display/i $pc
PASS: gdb.base/sigstep.exp: stepi to handler, nothing in handler, step from handler: handle SIGALRM print pass stop
PASS: gdb.base/sigstep.exp: stepi to handler, nothing in handler, step from handler: handle SIGVTALRM print pass stop
FAIL: gdb.base/sigstep.exp: stepi to handler, nothing in handler, step from handler: continue to signal
FAIL: gdb.base/sigstep.exp: stepi to handler, nothing in handler, step from handler: stepi to handler
FAIL: gdb.base/sigstep.exp: stepi to handler, nothing in handler, step from handler: leave handler
PASS: gdb.base/sigstep.exp: stepi to handler, si+advance in handler, step from handler: display/i $pc
PASS: gdb.base/sigstep.exp: stepi to handler, si+advance in handler, step from handler: handle SIGALRM print pass stop
PASS: gdb.base/sigstep.exp: stepi to handler, si+advance in handler, step from handler: handle SIGVTALRM print pass stop
FAIL: gdb.base/sigstep.exp: stepi to handler, si+advance in handler, step from handler: continue to signal
FAIL: gdb.base/sigstep.exp: stepi to handler, si+advance in handler, step from handler: stepi to handler
FAIL: gdb.base/sigstep.exp: stepi to handler, si+advance in handler, step from handler: si in handler
FAIL: gdb.base/sigstep.exp: stepi to handler, si+advance in handler, step from handler: advance in handler
FAIL: gdb.base/sigstep.exp: stepi to handler, si+advance in handler, step from handler: leave handler
PASS: gdb.base/sigstep.exp: stepi to handler, nothing in handler, next from handler: display/i $pc
PASS: gdb.base/sigstep.exp: stepi to handler, nothing in handler, next from handler: handle SIGALRM print pass stop
PASS: gdb.base/sigstep.exp: stepi to handler, nothing in handler, next from handler: handle SIGVTALRM print pass stop
FAIL: gdb.base/sigstep.exp: stepi to handler, nothing in handler, next from handler: continue to signal
FAIL: gdb.base/sigstep.exp: stepi to handler, nothing in handler, next from handler: stepi to handler
FAIL: gdb.base/sigstep.exp: stepi to handler, nothing in handler, next from handler: leave handler
PASS: gdb.base/sigstep.exp: stepi to handler, si+advance in handler, next from handler: display/i $pc
PASS: gdb.base/sigstep.exp: stepi to handler, si+advance in handler, next from handler: handle SIGALRM print pass stop
PASS: gdb.base/sigstep.exp: stepi to handler, si+advance in handler, next from handler: handle SIGVTALRM print pass stop
FAIL: gdb.base/sigstep.exp: stepi to handler, si+advance in handler, next from handler: continue to signal
FAIL: gdb.base/sigstep.exp: stepi to handler, si+advance in handler, next from handler: stepi to handler
FAIL: gdb.base/sigstep.exp: stepi to handler, si+advance in handler, next from handler: si in handler
FAIL: gdb.base/sigstep.exp: stepi to handler, si+advance in handler, next from handler: advance in handler
FAIL: gdb.base/sigstep.exp: stepi to handler, si+advance in handler, next from handler: leave handler
PASS: gdb.base/sigstep.exp: stepi to handler, nothing in handler, continue from handler: display/i $pc
PASS: gdb.base/sigstep.exp: stepi to handler, nothing in handler, continue from handler: handle SIGALRM print pass stop
PASS: gdb.base/sigstep.exp: stepi to handler, nothing in handler, continue from handler: handle SIGVTALRM print pass stop
FAIL: gdb.base/sigstep.exp: stepi to handler, nothing in handler, continue from handler: continue to signal
FAIL: gdb.base/sigstep.exp: stepi to handler, nothing in handler, continue from handler: stepi to handler
PASS: gdb.base/sigstep.exp: stepi to handler, nothing in handler, continue from handler: break clear done
FAIL: gdb.base/sigstep.exp: stepi to handler, nothing in handler, continue from handler: leave handler (could not insert single-step breakpoint)
PASS: gdb.base/sigstep.exp: stepi to handler, si+advance in handler, continue from handler: display/i $pc
PASS: gdb.base/sigstep.exp: stepi to handler, si+advance in handler, continue from handler: handle SIGALRM print pass stop
PASS: gdb.base/sigstep.exp: stepi to handler, si+advance in handler, continue from handler: handle SIGVTALRM print pass stop
FAIL: gdb.base/sigstep.exp: stepi to handler, si+advance in handler, continue from handler: continue to signal
FAIL: gdb.base/sigstep.exp: stepi to handler, si+advance in handler, continue from handler: stepi to handler
FAIL: gdb.base/sigstep.exp: stepi to handler, si+advance in handler, continue from handler: si in handler
FAIL: gdb.base/sigstep.exp: stepi to handler, si+advance in handler, continue from handler: advance in handler
PASS: gdb.base/sigstep.exp: stepi to handler, si+advance in handler, continue from handler: break clear done
FAIL: gdb.base/sigstep.exp: stepi to handler, si+advance in handler, continue from handler: leave handler (could not insert single-step breakpoint)
PASS: gdb.base/sigstep.exp: nexti to handler, nothing in handler, step from handler: display/i $pc
PASS: gdb.base/sigstep.exp: nexti to handler, nothing in handler, step from handler: handle SIGALRM print pass stop
PASS: gdb.base/sigstep.exp: nexti to handler, nothing in handler, step from handler: handle SIGVTALRM print pass stop
FAIL: gdb.base/sigstep.exp: nexti to handler, nothing in handler, step from handler: continue to signal
FAIL: gdb.base/sigstep.exp: nexti to handler, nothing in handler, step from handler: nexti to handler
FAIL: gdb.base/sigstep.exp: nexti to handler, nothing in handler, step from handler: leave handler
PASS: gdb.base/sigstep.exp: nexti to handler, si+advance in handler, step from handler: display/i $pc
PASS: gdb.base/sigstep.exp: nexti to handler, si+advance in handler, step from handler: handle SIGALRM print pass stop
PASS: gdb.base/sigstep.exp: nexti to handler, si+advance in handler, step from handler: handle SIGVTALRM print pass stop
FAIL: gdb.base/sigstep.exp: nexti to handler, si+advance in handler, step from handler: continue to signal
FAIL: gdb.base/sigstep.exp: nexti to handler, si+advance in handler, step from handler: nexti to handler
FAIL: gdb.base/sigstep.exp: nexti to handler, si+advance in handler, step from handler: si in handler
FAIL: gdb.base/sigstep.exp: nexti to handler, si+advance in handler, step from handler: advance in handler
FAIL: gdb.base/sigstep.exp: nexti to handler, si+advance in handler, step from handler: leave handler
PASS: gdb.base/sigstep.exp: nexti to handler, nothing in handler, next from handler: display/i $pc
PASS: gdb.base/sigstep.exp: nexti to handler, nothing in handler, next from handler: handle SIGALRM print pass stop
PASS: gdb.base/sigstep.exp: nexti to handler, nothing in handler, next from handler: handle SIGVTALRM print pass stop
FAIL: gdb.base/sigstep.exp: nexti to handler, nothing in handler, next from handler: continue to signal
FAIL: gdb.base/sigstep.exp: nexti to handler, nothing in handler, next from handler: nexti to handler
FAIL: gdb.base/sigstep.exp: nexti to handler, nothing in handler, next from handler: leave handler
PASS: gdb.base/sigstep.exp: nexti to handler, si+advance in handler, next from handler: display/i $pc
PASS: gdb.base/sigstep.exp: nexti to handler, si+advance in handler, next from handler: handle SIGALRM print pass stop
PASS: gdb.base/sigstep.exp: nexti to handler, si+advance in handler, next from handler: handle SIGVTALRM print pass stop
FAIL: gdb.base/sigstep.exp: nexti to handler, si+advance in handler, next from handler: continue to signal
FAIL: gdb.base/sigstep.exp: nexti to handler, si+advance in handler, next from handler: nexti to handler
FAIL: gdb.base/sigstep.exp: nexti to handler, si+advance in handler, next from handler: si in handler
FAIL: gdb.base/sigstep.exp: nexti to handler, si+advance in handler, next from handler: advance in handler
FAIL: gdb.base/sigstep.exp: nexti to handler, si+advance in handler, next from handler: leave handler
PASS: gdb.base/sigstep.exp: nexti to handler, nothing in handler, continue from handler: display/i $pc
PASS: gdb.base/sigstep.exp: nexti to handler, nothing in handler, continue from handler: handle SIGALRM print pass stop
PASS: gdb.base/sigstep.exp: nexti to handler, nothing in handler, continue from handler: handle SIGVTALRM print pass stop
FAIL: gdb.base/sigstep.exp: nexti to handler, nothing in handler, continue from handler: continue to signal
FAIL: gdb.base/sigstep.exp: nexti to handler, nothing in handler, continue from handler: nexti to handler
PASS: gdb.base/sigstep.exp: nexti to handler, nothing in handler, continue from handler: break clear done
FAIL: gdb.base/sigstep.exp: nexti to handler, nothing in handler, continue from handler: leave handler (could not insert single-step breakpoint)
PASS: gdb.base/sigstep.exp: nexti to handler, si+advance in handler, continue from handler: display/i $pc
PASS: gdb.base/sigstep.exp: nexti to handler, si+advance in handler, continue from handler: handle SIGALRM print pass stop
PASS: gdb.base/sigstep.exp: nexti to handler, si+advance in handler, continue from handler: handle SIGVTALRM print pass stop
FAIL: gdb.base/sigstep.exp: nexti to handler, si+advance in handler, continue from handler: continue to signal
FAIL: gdb.base/sigstep.exp: nexti to handler, si+advance in handler, continue from handler: nexti to handler
FAIL: gdb.base/sigstep.exp: nexti to handler, si+advance in handler, continue from handler: si in handler
FAIL: gdb.base/sigstep.exp: nexti to handler, si+advance in handler, continue from handler: advance in handler
PASS: gdb.base/sigstep.exp: nexti to handler, si+advance in handler, continue from handler: break clear done
FAIL: gdb.base/sigstep.exp: nexti to handler, si+advance in handler, continue from handler: leave handler (could not insert single-step breakpoint)
PASS: gdb.base/sigstep.exp: step to handler, nothing in handler, step from handler: display/i $pc
PASS: gdb.base/sigstep.exp: step to handler, nothing in handler, step from handler: handle SIGALRM print pass stop
PASS: gdb.base/sigstep.exp: step to handler, nothing in handler, step from handler: handle SIGVTALRM print pass stop
FAIL: gdb.base/sigstep.exp: step to handler, nothing in handler, step from handler: continue to signal
FAIL: gdb.base/sigstep.exp: step to handler, nothing in handler, step from handler: step to handler
FAIL: gdb.base/sigstep.exp: step to handler, nothing in handler, step from handler: leave handler
PASS: gdb.base/sigstep.exp: step to handler, si+advance in handler, step from handler: display/i $pc
PASS: gdb.base/sigstep.exp: step to handler, si+advance in handler, step from handler: handle SIGALRM print pass stop
PASS: gdb.base/sigstep.exp: step to handler, si+advance in handler, step from handler: handle SIGVTALRM print pass stop
FAIL: gdb.base/sigstep.exp: step to handler, si+advance in handler, step from handler: continue to signal
FAIL: gdb.base/sigstep.exp: step to handler, si+advance in handler, step from handler: step to handler
FAIL: gdb.base/sigstep.exp: step to handler, si+advance in handler, step from handler: si in handler
FAIL: gdb.base/sigstep.exp: step to handler, si+advance in handler, step from handler: advance in handler
FAIL: gdb.base/sigstep.exp: step to handler, si+advance in handler, step from handler: leave handler
PASS: gdb.base/sigstep.exp: step to handler, nothing in handler, next from handler: display/i $pc
PASS: gdb.base/sigstep.exp: step to handler, nothing in handler, next from handler: handle SIGALRM print pass stop
PASS: gdb.base/sigstep.exp: step to handler, nothing in handler, next from handler: handle SIGVTALRM print pass stop
FAIL: gdb.base/sigstep.exp: step to handler, nothing in handler, next from handler: continue to signal
FAIL: gdb.base/sigstep.exp: step to handler, nothing in handler, next from handler: step to handler
FAIL: gdb.base/sigstep.exp: step to handler, nothing in handler, next from handler: leave handler
PASS: gdb.base/sigstep.exp: step to handler, si+advance in handler, next from handler: display/i $pc
PASS: gdb.base/sigstep.exp: step to handler, si+advance in handler, next from handler: handle SIGALRM print pass stop
PASS: gdb.base/sigstep.exp: step to handler, si+advance in handler, next from handler: handle SIGVTALRM print pass stop
FAIL: gdb.base/sigstep.exp: step to handler, si+advance in handler, next from handler: continue to signal
FAIL: gdb.base/sigstep.exp: step to handler, si+advance in handler, next from handler: step to handler
FAIL: gdb.base/sigstep.exp: step to handler, si+advance in handler, next from handler: si in handler
FAIL: gdb.base/sigstep.exp: step to handler, si+advance in handler, next from handler: advance in handler
FAIL: gdb.base/sigstep.exp: step to handler, si+advance in handler, next from handler: leave handler
PASS: gdb.base/sigstep.exp: step to handler, nothing in handler, continue from handler: display/i $pc
PASS: gdb.base/sigstep.exp: step to handler, nothing in handler, continue from handler: handle SIGALRM print pass stop
PASS: gdb.base/sigstep.exp: step to handler, nothing in handler, continue from handler: handle SIGVTALRM print pass stop
FAIL: gdb.base/sigstep.exp: step to handler, nothing in handler, continue from handler: continue to signal
FAIL: gdb.base/sigstep.exp: step to handler, nothing in handler, continue from handler: step to handler
PASS: gdb.base/sigstep.exp: step to handler, nothing in handler, continue from handler: break clear done
FAIL: gdb.base/sigstep.exp: step to handler, nothing in handler, continue from handler: leave handler (could not insert single-step breakpoint)
PASS: gdb.base/sigstep.exp: step to handler, si+advance in handler, continue from handler: display/i $pc
PASS: gdb.base/sigstep.exp: step to handler, si+advance in handler, continue from handler: handle SIGALRM print pass stop
PASS: gdb.base/sigstep.exp: step to handler, si+advance in handler, continue from handler: handle SIGVTALRM print pass stop
FAIL: gdb.base/sigstep.exp: step to handler, si+advance in handler, continue from handler: continue to signal
FAIL: gdb.base/sigstep.exp: step to handler, si+advance in handler, continue from handler: step to handler
FAIL: gdb.base/sigstep.exp: step to handler, si+advance in handler, continue from handler: si in handler
FAIL: gdb.base/sigstep.exp: step to handler, si+advance in handler, continue from handler: advance in handler
PASS: gdb.base/sigstep.exp: step to handler, si+advance in handler, continue from handler: break clear done
FAIL: gdb.base/sigstep.exp: step to handler, si+advance in handler, continue from handler: leave handler (could not insert single-step breakpoint)
PASS: gdb.base/sigstep.exp: next to handler, nothing in handler, step from handler: display/i $pc
PASS: gdb.base/sigstep.exp: next to handler, nothing in handler, step from handler: handle SIGALRM print pass stop
PASS: gdb.base/sigstep.exp: next to handler, nothing in handler, step from handler: handle SIGVTALRM print pass stop
FAIL: gdb.base/sigstep.exp: next to handler, nothing in handler, step from handler: continue to signal
FAIL: gdb.base/sigstep.exp: next to handler, nothing in handler, step from handler: next to handler
FAIL: gdb.base/sigstep.exp: next to handler, nothing in handler, step from handler: leave handler
PASS: gdb.base/sigstep.exp: next to handler, si+advance in handler, step from handler: display/i $pc
PASS: gdb.base/sigstep.exp: next to handler, si+advance in handler, step from handler: handle SIGALRM print pass stop
PASS: gdb.base/sigstep.exp: next to handler, si+advance in handler, step from handler: handle SIGVTALRM print pass stop
FAIL: gdb.base/sigstep.exp: next to handler, si+advance in handler, step from handler: continue to signal
FAIL: gdb.base/sigstep.exp: next to handler, si+advance in handler, step from handler: next to handler
FAIL: gdb.base/sigstep.exp: next to handler, si+advance in handler, step from handler: si in handler
FAIL: gdb.base/sigstep.exp: next to handler, si+advance in handler, step from handler: advance in handler
FAIL: gdb.base/sigstep.exp: next to handler, si+advance in handler, step from handler: leave handler
PASS: gdb.base/sigstep.exp: next to handler, nothing in handler, next from handler: display/i $pc
PASS: gdb.base/sigstep.exp: next to handler, nothing in handler, next from handler: handle SIGALRM print pass stop
PASS: gdb.base/sigstep.exp: next to handler, nothing in handler, next from handler: handle SIGVTALRM print pass stop
FAIL: gdb.base/sigstep.exp: next to handler, nothing in handler, next from handler: continue to signal
FAIL: gdb.base/sigstep.exp: next to handler, nothing in handler, next from handler: next to handler
FAIL: gdb.base/sigstep.exp: next to handler, nothing in handler, next from handler: leave handler
PASS: gdb.base/sigstep.exp: next to handler, si+advance in handler, next from handler: display/i $pc
PASS: gdb.base/sigstep.exp: next to handler, si+advance in handler, next from handler: handle SIGALRM print pass stop
PASS: gdb.base/sigstep.exp: next to handler, si+advance in handler, next from handler: handle SIGVTALRM print pass stop
FAIL: gdb.base/sigstep.exp: next to handler, si+advance in handler, next from handler: continue to signal
FAIL: gdb.base/sigstep.exp: next to handler, si+advance in handler, next from handler: next to handler
FAIL: gdb.base/sigstep.exp: next to handler, si+advance in handler, next from handler: si in handler
FAIL: gdb.base/sigstep.exp: next to handler, si+advance in handler, next from handler: advance in handler
FAIL: gdb.base/sigstep.exp: next to handler, si+advance in handler, next from handler: leave handler
PASS: gdb.base/sigstep.exp: next to handler, nothing in handler, continue from handler: display/i $pc
PASS: gdb.base/sigstep.exp: next to handler, nothing in handler, continue from handler: handle SIGALRM print pass stop
PASS: gdb.base/sigstep.exp: next to handler, nothing in handler, continue from handler: handle SIGVTALRM print pass stop
FAIL: gdb.base/sigstep.exp: next to handler, nothing in handler, continue from handler: continue to signal
FAIL: gdb.base/sigstep.exp: next to handler, nothing in handler, continue from handler: next to handler
PASS: gdb.base/sigstep.exp: next to handler, nothing in handler, continue from handler: break clear done
FAIL: gdb.base/sigstep.exp: next to handler, nothing in handler, continue from handler: leave handler (could not insert single-step breakpoint)
PASS: gdb.base/sigstep.exp: next to handler, si+advance in handler, continue from handler: display/i $pc
PASS: gdb.base/sigstep.exp: next to handler, si+advance in handler, continue from handler: handle SIGALRM print pass stop
PASS: gdb.base/sigstep.exp: next to handler, si+advance in handler, continue from handler: handle SIGVTALRM print pass stop
FAIL: gdb.base/sigstep.exp: next to handler, si+advance in handler, continue from handler: continue to signal
FAIL: gdb.base/sigstep.exp: next to handler, si+advance in handler, continue from handler: next to handler
FAIL: gdb.base/sigstep.exp: next to handler, si+advance in handler, continue from handler: si in handler
FAIL: gdb.base/sigstep.exp: next to handler, si+advance in handler, continue from handler: advance in handler
PASS: gdb.base/sigstep.exp: next to handler, si+advance in handler, continue from handler: break clear done
FAIL: gdb.base/sigstep.exp: next to handler, si+advance in handler, continue from handler: leave handler (could not insert single-step breakpoint)
PASS: gdb.base/sigstep.exp: continue to handler, nothing in handler, step from handler: display/i $pc
PASS: gdb.base/sigstep.exp: continue to handler, nothing in handler, step from handler: break handler
FAIL: gdb.base/sigstep.exp: continue to handler, nothing in handler, step from handler: continue to handler
FAIL: gdb.base/sigstep.exp: continue to handler, nothing in handler, step from handler: leave handler
PASS: gdb.base/sigstep.exp: continue to handler, si+advance in handler, step from handler: display/i $pc
PASS: gdb.base/sigstep.exp: continue to handler, si+advance in handler, step from handler: break handler
FAIL: gdb.base/sigstep.exp: continue to handler, si+advance in handler, step from handler: continue to handler
FAIL: gdb.base/sigstep.exp: continue to handler, si+advance in handler, step from handler: si in handler
FAIL: gdb.base/sigstep.exp: continue to handler, si+advance in handler, step from handler: advance in handler
FAIL: gdb.base/sigstep.exp: continue to handler, si+advance in handler, step from handler: leave handler
PASS: gdb.base/sigstep.exp: continue to handler, nothing in handler, next from handler: display/i $pc
PASS: gdb.base/sigstep.exp: continue to handler, nothing in handler, next from handler: break handler
FAIL: gdb.base/sigstep.exp: continue to handler, nothing in handler, next from handler: continue to handler
FAIL: gdb.base/sigstep.exp: continue to handler, nothing in handler, next from handler: leave handler
PASS: gdb.base/sigstep.exp: continue to handler, si+advance in handler, next from handler: display/i $pc
PASS: gdb.base/sigstep.exp: continue to handler, si+advance in handler, next from handler: break handler
FAIL: gdb.base/sigstep.exp: continue to handler, si+advance in handler, next from handler: continue to handler
FAIL: gdb.base/sigstep.exp: continue to handler, si+advance in handler, next from handler: si in handler
FAIL: gdb.base/sigstep.exp: continue to handler, si+advance in handler, next from handler: advance in handler
FAIL: gdb.base/sigstep.exp: continue to handler, si+advance in handler, next from handler: leave handler
PASS: gdb.base/sigstep.exp: continue to handler, nothing in handler, continue from handler: display/i $pc
PASS: gdb.base/sigstep.exp: continue to handler, nothing in handler, continue from handler: break handler
FAIL: gdb.base/sigstep.exp: continue to handler, nothing in handler, continue from handler: continue to handler
PASS: gdb.base/sigstep.exp: continue to handler, nothing in handler, continue from handler: break clear done
FAIL: gdb.base/sigstep.exp: continue to handler, nothing in handler, continue from handler: leave handler (could not insert single-step breakpoint)
PASS: gdb.base/sigstep.exp: continue to handler, si+advance in handler, continue from handler: display/i $pc
PASS: gdb.base/sigstep.exp: continue to handler, si+advance in handler, continue from handler: break handler
FAIL: gdb.base/sigstep.exp: continue to handler, si+advance in handler, continue from handler: continue to handler
FAIL: gdb.base/sigstep.exp: continue to handler, si+advance in handler, continue from handler: si in handler
FAIL: gdb.base/sigstep.exp: continue to handler, si+advance in handler, continue from handler: advance in handler
PASS: gdb.base/sigstep.exp: continue to handler, si+advance in handler, continue from handler: break clear done
FAIL: gdb.base/sigstep.exp: continue to handler, si+advance in handler, continue from handler: leave handler (could not insert single-step breakpoint)
PASS: gdb.base/sigstep.exp: stepi from handleri: display/i $pc
PASS: gdb.base/sigstep.exp: stepi from handleri: break handler
FAIL: gdb.base/sigstep.exp: stepi from handleri: continue to handler
FAIL: gdb.base/sigstep.exp: stepi from handleri: leave handler
FAIL: gdb.base/sigstep.exp: stepi from handleri: leave signal trampoline
PASS: gdb.base/sigstep.exp: nexti from handleri: display/i $pc
PASS: gdb.base/sigstep.exp: nexti from handleri: break handler
FAIL: gdb.base/sigstep.exp: nexti from handleri: continue to handler
FAIL: gdb.base/sigstep.exp: nexti from handleri: leave handler
FAIL: gdb.base/sigstep.exp: nexti from handleri: leave signal trampoline
PASS: gdb.base/sigstep.exp: finish from handleri: display/i $pc
PASS: gdb.base/sigstep.exp: finish from handleri: break handler
FAIL: gdb.base/sigstep.exp: finish from handleri: continue to handler
FAIL: gdb.base/sigstep.exp: finish from handleri: leave handler
FAIL: gdb.base/sigstep.exp: finish from handleri: leave signal trampoline
PASS: gdb.base/sigstep.exp: return from handleri: display/i $pc
PASS: gdb.base/sigstep.exp: return from handleri: break handler
FAIL: gdb.base/sigstep.exp: return from handleri: continue to handler
FAIL: gdb.base/sigstep.exp: return from handleri: leave handler (got interactive prompt)
FAIL: gdb.base/sigstep.exp: return from handleri: leave signal trampoline
PASS: gdb.base/sigstep.exp: step to handler: display/i $pc
FAIL: gdb.base/sigstep.exp: step to handler: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: step to handler: advance to infinite loop
PASS: gdb.base/sigstep.exp: step to handler: break handler
FAIL: gdb.base/sigstep.exp: step to handler: performing step
PASS: gdb.base/sigstep.exp: next to handler: display/i $pc
FAIL: gdb.base/sigstep.exp: next to handler: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: next to handler: advance to infinite loop
PASS: gdb.base/sigstep.exp: next to handler: break handler
FAIL: gdb.base/sigstep.exp: next to handler: performing next
PASS: gdb.base/sigstep.exp: continue to handler: display/i $pc
FAIL: gdb.base/sigstep.exp: continue to handler: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: continue to handler: advance to infinite loop
PASS: gdb.base/sigstep.exp: continue to handler: break handler
FAIL: gdb.base/sigstep.exp: continue to handler: performing continue
PASS: gdb.base/sigstep.exp: stepi to handler entry: display/i $pc
FAIL: gdb.base/sigstep.exp: stepi to handler entry: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: stepi to handler entry: advance to infinite loop
PASS: gdb.base/sigstep.exp: stepi to handler entry: break handler
FAIL: gdb.base/sigstep.exp: stepi to handler entry: performing stepi
PASS: gdb.base/sigstep.exp: nexti to handler entry: display/i $pc
FAIL: gdb.base/sigstep.exp: nexti to handler entry: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: nexti to handler entry: advance to infinite loop
PASS: gdb.base/sigstep.exp: nexti to handler entry: break handler
FAIL: gdb.base/sigstep.exp: nexti to handler entry: performing nexti
PASS: gdb.base/sigstep.exp: step to handler entry: display/i $pc
FAIL: gdb.base/sigstep.exp: step to handler entry: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: step to handler entry: advance to infinite loop
PASS: gdb.base/sigstep.exp: step to handler entry: break handler
FAIL: gdb.base/sigstep.exp: step to handler entry: performing step
PASS: gdb.base/sigstep.exp: next to handler entry: display/i $pc
FAIL: gdb.base/sigstep.exp: next to handler entry: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: next to handler entry: advance to infinite loop
PASS: gdb.base/sigstep.exp: next to handler entry: break handler
FAIL: gdb.base/sigstep.exp: next to handler entry: performing next
PASS: gdb.base/sigstep.exp: continue to handler entry: display/i $pc
FAIL: gdb.base/sigstep.exp: continue to handler entry: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: continue to handler entry: advance to infinite loop
PASS: gdb.base/sigstep.exp: continue to handler entry: break handler
FAIL: gdb.base/sigstep.exp: continue to handler entry: performing continue
PASS: gdb.base/sigstep.exp: stepi over handler: display/i $pc
FAIL: gdb.base/sigstep.exp: stepi over handler: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: stepi over handler: break clear done
PASS: gdb.base/sigstep.exp: stepi over handler: advance to infinite loop
FAIL: gdb.base/sigstep.exp: stepi over handler: get next PC
FAIL: gdb.base/sigstep.exp: stepi over handler: performing stepi
FAIL: gdb.base/sigstep.exp: stepi over handler: advanced
PASS: gdb.base/sigstep.exp: nexti over handler: display/i $pc
FAIL: gdb.base/sigstep.exp: nexti over handler: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: nexti over handler: break clear done
PASS: gdb.base/sigstep.exp: nexti over handler: advance to infinite loop
FAIL: gdb.base/sigstep.exp: nexti over handler: get next PC
FAIL: gdb.base/sigstep.exp: nexti over handler: performing nexti
FAIL: gdb.base/sigstep.exp: nexti over handler: advanced
PASS: gdb.base/sigstep.exp: step over handler: display/i $pc
FAIL: gdb.base/sigstep.exp: step over handler: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: step over handler: break clear done
PASS: gdb.base/sigstep.exp: step over handler: advance to infinite loop
FAIL: gdb.base/sigstep.exp: step over handler: performing step
PASS: gdb.base/sigstep.exp: next over handler: display/i $pc
FAIL: gdb.base/sigstep.exp: next over handler: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: next over handler: break clear done
PASS: gdb.base/sigstep.exp: next over handler: advance to infinite loop
FAIL: gdb.base/sigstep.exp: next over handler: performing next
PASS: gdb.base/sigstep.exp: continue over handler: display/i $pc
FAIL: gdb.base/sigstep.exp: continue over handler: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: continue over handler: break clear done
PASS: gdb.base/sigstep.exp: continue over handler: advance to infinite loop
FAIL: gdb.base/sigstep.exp: continue over handler: performing continue
PASS: gdb.base/sigstep.exp: displaced=off: step on breakpoint, to handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=off: step on breakpoint, to handler: set displaced-stepping off
FAIL: gdb.base/sigstep.exp: displaced=off: step on breakpoint, to handler: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=off: step on breakpoint, to handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: step on breakpoint, to handler: break handler
FAIL: gdb.base/sigstep.exp: displaced=off: step on breakpoint, to handler: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=off: step on breakpoint, to handler: performing step
FAIL: gdb.base/sigstep.exp: displaced=off: step on breakpoint, to handler: backtrace (pattern 1)
PASS: gdb.base/sigstep.exp: displaced=off: next on breakpoint, to handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=off: next on breakpoint, to handler: set displaced-stepping off
FAIL: gdb.base/sigstep.exp: displaced=off: next on breakpoint, to handler: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=off: next on breakpoint, to handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: next on breakpoint, to handler: break handler
FAIL: gdb.base/sigstep.exp: displaced=off: next on breakpoint, to handler: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=off: next on breakpoint, to handler: performing next
FAIL: gdb.base/sigstep.exp: displaced=off: next on breakpoint, to handler: backtrace (pattern 1)
PASS: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, to handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, to handler: set displaced-stepping off
FAIL: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, to handler: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, to handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, to handler: break handler
FAIL: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, to handler: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, to handler: performing continue
FAIL: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, to handler: backtrace (pattern 1)
PASS: gdb.base/sigstep.exp: displaced=on: step on breakpoint, to handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=on: step on breakpoint, to handler: set displaced-stepping on
FAIL: gdb.base/sigstep.exp: displaced=on: step on breakpoint, to handler: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=on: step on breakpoint, to handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: step on breakpoint, to handler: break handler
FAIL: gdb.base/sigstep.exp: displaced=on: step on breakpoint, to handler: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=on: step on breakpoint, to handler: performing step
FAIL: gdb.base/sigstep.exp: displaced=on: step on breakpoint, to handler: backtrace (pattern 1)
PASS: gdb.base/sigstep.exp: displaced=on: next on breakpoint, to handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=on: next on breakpoint, to handler: set displaced-stepping on
FAIL: gdb.base/sigstep.exp: displaced=on: next on breakpoint, to handler: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=on: next on breakpoint, to handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: next on breakpoint, to handler: break handler
FAIL: gdb.base/sigstep.exp: displaced=on: next on breakpoint, to handler: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=on: next on breakpoint, to handler: performing next
FAIL: gdb.base/sigstep.exp: displaced=on: next on breakpoint, to handler: backtrace (pattern 1)
PASS: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, to handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, to handler: set displaced-stepping on
FAIL: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, to handler: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, to handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, to handler: break handler
FAIL: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, to handler: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, to handler: performing continue
FAIL: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, to handler: backtrace (pattern 1)
PASS: gdb.base/sigstep.exp: displaced=off: step on breakpoint, to handler entry: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=off: step on breakpoint, to handler entry: set displaced-stepping off
FAIL: gdb.base/sigstep.exp: displaced=off: step on breakpoint, to handler entry: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=off: step on breakpoint, to handler entry: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: step on breakpoint, to handler entry: break handler
FAIL: gdb.base/sigstep.exp: displaced=off: step on breakpoint, to handler entry: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=off: step on breakpoint, to handler entry: performing step
FAIL: gdb.base/sigstep.exp: displaced=off: step on breakpoint, to handler entry: backtrace (pattern 1)
PASS: gdb.base/sigstep.exp: displaced=off: next on breakpoint, to handler entry: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=off: next on breakpoint, to handler entry: set displaced-stepping off
FAIL: gdb.base/sigstep.exp: displaced=off: next on breakpoint, to handler entry: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=off: next on breakpoint, to handler entry: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: next on breakpoint, to handler entry: break handler
FAIL: gdb.base/sigstep.exp: displaced=off: next on breakpoint, to handler entry: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=off: next on breakpoint, to handler entry: performing next
FAIL: gdb.base/sigstep.exp: displaced=off: next on breakpoint, to handler entry: backtrace (pattern 1)
PASS: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, to handler entry: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, to handler entry: set displaced-stepping off
FAIL: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, to handler entry: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, to handler entry: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, to handler entry: break handler
FAIL: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, to handler entry: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, to handler entry: performing continue
FAIL: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, to handler entry: backtrace (pattern 1)
PASS: gdb.base/sigstep.exp: displaced=on: step on breakpoint, to handler entry: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=on: step on breakpoint, to handler entry: set displaced-stepping on
FAIL: gdb.base/sigstep.exp: displaced=on: step on breakpoint, to handler entry: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=on: step on breakpoint, to handler entry: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: step on breakpoint, to handler entry: break handler
FAIL: gdb.base/sigstep.exp: displaced=on: step on breakpoint, to handler entry: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=on: step on breakpoint, to handler entry: performing step
FAIL: gdb.base/sigstep.exp: displaced=on: step on breakpoint, to handler entry: backtrace (pattern 1)
PASS: gdb.base/sigstep.exp: displaced=on: next on breakpoint, to handler entry: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=on: next on breakpoint, to handler entry: set displaced-stepping on
FAIL: gdb.base/sigstep.exp: displaced=on: next on breakpoint, to handler entry: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=on: next on breakpoint, to handler entry: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: next on breakpoint, to handler entry: break handler
FAIL: gdb.base/sigstep.exp: displaced=on: next on breakpoint, to handler entry: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=on: next on breakpoint, to handler entry: performing next
FAIL: gdb.base/sigstep.exp: displaced=on: next on breakpoint, to handler entry: backtrace (pattern 1)
PASS: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, to handler entry: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, to handler entry: set displaced-stepping on
FAIL: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, to handler entry: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, to handler entry: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, to handler entry: break handler
FAIL: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, to handler entry: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, to handler entry: performing continue
FAIL: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, to handler entry: backtrace (pattern 1)
PASS: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler: set displaced-stepping off
FAIL: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler: get next PC
FAIL: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler: performing stepi
FAIL: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler: advanced
PASS: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, no handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, no handler: set displaced-stepping off
FAIL: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, no handler: set itimer = itimer_real
FAIL: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, no handler: set no_handler
PASS: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, no handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, no handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, no handler: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, no handler: set done
FAIL: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, no handler: get next PC
FAIL: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, no handler: performing stepi
FAIL: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, no handler: advanced
PASS: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, with sw-watchpoint: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, with sw-watchpoint: set displaced-stepping off
FAIL: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, with sw-watchpoint: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, with sw-watchpoint: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, with sw-watchpoint: break clear done
FAIL: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, with sw-watchpoint: continue to infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, with sw-watchpoint: watch $convenience
FAIL: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, with sw-watchpoint: get next PC
FAIL: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, with sw-watchpoint: performing stepi
FAIL: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, with sw-watchpoint: advanced
PASS: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, with sw-watchpoint, no handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, with sw-watchpoint, no handler: set displaced-stepping off
FAIL: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, with sw-watchpoint, no handler: set itimer = itimer_real
FAIL: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, with sw-watchpoint, no handler: set no_handler
PASS: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, with sw-watchpoint, no handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, with sw-watchpoint, no handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, with sw-watchpoint, no handler: continue to infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, with sw-watchpoint, no handler: watch $convenience
FAIL: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, with sw-watchpoint, no handler: set done
FAIL: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, with sw-watchpoint, no handler: get next PC
FAIL: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, with sw-watchpoint, no handler: performing stepi
FAIL: gdb.base/sigstep.exp: displaced=off: stepi on breakpoint, skip handler, with sw-watchpoint, no handler: advanced
PASS: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler: set displaced-stepping off
FAIL: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler: get next PC
FAIL: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler: performing nexti
FAIL: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler: advanced
PASS: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, no handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, no handler: set displaced-stepping off
FAIL: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, no handler: set itimer = itimer_real
FAIL: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, no handler: set no_handler
PASS: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, no handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, no handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, no handler: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, no handler: set done
FAIL: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, no handler: get next PC
FAIL: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, no handler: performing nexti
FAIL: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, no handler: advanced
PASS: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, with sw-watchpoint: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, with sw-watchpoint: set displaced-stepping off
FAIL: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, with sw-watchpoint: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, with sw-watchpoint: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, with sw-watchpoint: break clear done
FAIL: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, with sw-watchpoint: continue to infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, with sw-watchpoint: watch $convenience
FAIL: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, with sw-watchpoint: get next PC
FAIL: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, with sw-watchpoint: performing nexti
FAIL: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, with sw-watchpoint: advanced
PASS: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, with sw-watchpoint, no handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, with sw-watchpoint, no handler: set displaced-stepping off
FAIL: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, with sw-watchpoint, no handler: set itimer = itimer_real
FAIL: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, with sw-watchpoint, no handler: set no_handler
PASS: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, with sw-watchpoint, no handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, with sw-watchpoint, no handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, with sw-watchpoint, no handler: continue to infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, with sw-watchpoint, no handler: watch $convenience
FAIL: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, with sw-watchpoint, no handler: set done
FAIL: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, with sw-watchpoint, no handler: get next PC
FAIL: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, with sw-watchpoint, no handler: performing nexti
FAIL: gdb.base/sigstep.exp: displaced=off: nexti on breakpoint, skip handler, with sw-watchpoint, no handler: advanced
PASS: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler: set displaced-stepping off
FAIL: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler: performing step
PASS: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler, no handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler, no handler: set displaced-stepping off
FAIL: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler, no handler: set itimer = itimer_real
FAIL: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler, no handler: set no_handler
PASS: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler, no handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler, no handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler, no handler: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler, no handler: set done
FAIL: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler, no handler: performing step
PASS: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler, with sw-watchpoint: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler, with sw-watchpoint: set displaced-stepping off
FAIL: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler, with sw-watchpoint: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler, with sw-watchpoint: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler, with sw-watchpoint: break clear done
FAIL: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler, with sw-watchpoint: continue to infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler, with sw-watchpoint: watch $convenience
FAIL: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler, with sw-watchpoint: performing step
PASS: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler, with sw-watchpoint, no handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler, with sw-watchpoint, no handler: set displaced-stepping off
FAIL: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler, with sw-watchpoint, no handler: set itimer = itimer_real
FAIL: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler, with sw-watchpoint, no handler: set no_handler
PASS: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler, with sw-watchpoint, no handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler, with sw-watchpoint, no handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler, with sw-watchpoint, no handler: continue to infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler, with sw-watchpoint, no handler: watch $convenience
FAIL: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler, with sw-watchpoint, no handler: set done
FAIL: gdb.base/sigstep.exp: displaced=off: step on breakpoint, skip handler, with sw-watchpoint, no handler: performing step
PASS: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler: set displaced-stepping off
FAIL: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler: performing next
PASS: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler, no handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler, no handler: set displaced-stepping off
FAIL: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler, no handler: set itimer = itimer_real
FAIL: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler, no handler: set no_handler
PASS: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler, no handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler, no handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler, no handler: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler, no handler: set done
FAIL: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler, no handler: performing next
PASS: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler, with sw-watchpoint: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler, with sw-watchpoint: set displaced-stepping off
FAIL: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler, with sw-watchpoint: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler, with sw-watchpoint: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler, with sw-watchpoint: break clear done
FAIL: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler, with sw-watchpoint: continue to infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler, with sw-watchpoint: watch $convenience
FAIL: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler, with sw-watchpoint: performing next
PASS: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler, with sw-watchpoint, no handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler, with sw-watchpoint, no handler: set displaced-stepping off
FAIL: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler, with sw-watchpoint, no handler: set itimer = itimer_real
FAIL: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler, with sw-watchpoint, no handler: set no_handler
PASS: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler, with sw-watchpoint, no handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler, with sw-watchpoint, no handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler, with sw-watchpoint, no handler: continue to infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler, with sw-watchpoint, no handler: watch $convenience
FAIL: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler, with sw-watchpoint, no handler: set done
FAIL: gdb.base/sigstep.exp: displaced=off: next on breakpoint, skip handler, with sw-watchpoint, no handler: performing next
PASS: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler: set displaced-stepping off
FAIL: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler: performing continue
PASS: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler, no handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler, no handler: set displaced-stepping off
FAIL: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler, no handler: set itimer = itimer_real
FAIL: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler, no handler: set no_handler
PASS: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler, no handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler, no handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler, no handler: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler, no handler: set done
FAIL: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler, no handler: performing continue
PASS: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler, with sw-watchpoint: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler, with sw-watchpoint: set displaced-stepping off
FAIL: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler, with sw-watchpoint: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler, with sw-watchpoint: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler, with sw-watchpoint: break clear done
FAIL: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler, with sw-watchpoint: continue to infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler, with sw-watchpoint: watch $convenience
FAIL: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler, with sw-watchpoint: performing continue
PASS: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler, with sw-watchpoint, no handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler, with sw-watchpoint, no handler: set displaced-stepping off
FAIL: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler, with sw-watchpoint, no handler: set itimer = itimer_real
FAIL: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler, with sw-watchpoint, no handler: set no_handler
PASS: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler, with sw-watchpoint, no handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler, with sw-watchpoint, no handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler, with sw-watchpoint, no handler: continue to infinite loop
PASS: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler, with sw-watchpoint, no handler: watch $convenience
FAIL: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler, with sw-watchpoint, no handler: set done
FAIL: gdb.base/sigstep.exp: displaced=off: continue on breakpoint, skip handler, with sw-watchpoint, no handler: performing continue
PASS: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler: set displaced-stepping on
FAIL: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler: get next PC
FAIL: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler: performing stepi
FAIL: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler: advanced
PASS: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, no handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, no handler: set displaced-stepping on
FAIL: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, no handler: set itimer = itimer_real
FAIL: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, no handler: set no_handler
PASS: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, no handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, no handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, no handler: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, no handler: set done
FAIL: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, no handler: get next PC
FAIL: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, no handler: performing stepi
FAIL: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, no handler: advanced
PASS: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, with sw-watchpoint: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, with sw-watchpoint: set displaced-stepping on
FAIL: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, with sw-watchpoint: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, with sw-watchpoint: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, with sw-watchpoint: break clear done
FAIL: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, with sw-watchpoint: continue to infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, with sw-watchpoint: watch $convenience
FAIL: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, with sw-watchpoint: get next PC
FAIL: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, with sw-watchpoint: performing stepi
FAIL: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, with sw-watchpoint: advanced
PASS: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, with sw-watchpoint, no handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, with sw-watchpoint, no handler: set displaced-stepping on
FAIL: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, with sw-watchpoint, no handler: set itimer = itimer_real
FAIL: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, with sw-watchpoint, no handler: set no_handler
PASS: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, with sw-watchpoint, no handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, with sw-watchpoint, no handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, with sw-watchpoint, no handler: continue to infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, with sw-watchpoint, no handler: watch $convenience
FAIL: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, with sw-watchpoint, no handler: set done
FAIL: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, with sw-watchpoint, no handler: get next PC
FAIL: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, with sw-watchpoint, no handler: performing stepi
FAIL: gdb.base/sigstep.exp: displaced=on: stepi on breakpoint, skip handler, with sw-watchpoint, no handler: advanced
PASS: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler: set displaced-stepping on
FAIL: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler: get next PC
FAIL: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler: performing nexti
FAIL: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler: advanced
PASS: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, no handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, no handler: set displaced-stepping on
FAIL: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, no handler: set itimer = itimer_real
FAIL: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, no handler: set no_handler
PASS: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, no handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, no handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, no handler: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, no handler: set done
FAIL: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, no handler: get next PC
FAIL: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, no handler: performing nexti
FAIL: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, no handler: advanced
PASS: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, with sw-watchpoint: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, with sw-watchpoint: set displaced-stepping on
FAIL: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, with sw-watchpoint: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, with sw-watchpoint: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, with sw-watchpoint: break clear done
FAIL: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, with sw-watchpoint: continue to infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, with sw-watchpoint: watch $convenience
FAIL: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, with sw-watchpoint: get next PC
FAIL: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, with sw-watchpoint: performing nexti
FAIL: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, with sw-watchpoint: advanced
PASS: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, with sw-watchpoint, no handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, with sw-watchpoint, no handler: set displaced-stepping on
FAIL: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, with sw-watchpoint, no handler: set itimer = itimer_real
FAIL: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, with sw-watchpoint, no handler: set no_handler
PASS: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, with sw-watchpoint, no handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, with sw-watchpoint, no handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, with sw-watchpoint, no handler: continue to infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, with sw-watchpoint, no handler: watch $convenience
FAIL: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, with sw-watchpoint, no handler: set done
FAIL: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, with sw-watchpoint, no handler: get next PC
FAIL: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, with sw-watchpoint, no handler: performing nexti
FAIL: gdb.base/sigstep.exp: displaced=on: nexti on breakpoint, skip handler, with sw-watchpoint, no handler: advanced
PASS: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler: set displaced-stepping on
FAIL: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler: performing step
PASS: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler, no handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler, no handler: set displaced-stepping on
FAIL: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler, no handler: set itimer = itimer_real
FAIL: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler, no handler: set no_handler
PASS: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler, no handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler, no handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler, no handler: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler, no handler: set done
FAIL: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler, no handler: performing step
PASS: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler, with sw-watchpoint: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler, with sw-watchpoint: set displaced-stepping on
FAIL: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler, with sw-watchpoint: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler, with sw-watchpoint: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler, with sw-watchpoint: break clear done
FAIL: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler, with sw-watchpoint: continue to infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler, with sw-watchpoint: watch $convenience
FAIL: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler, with sw-watchpoint: performing step
PASS: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler, with sw-watchpoint, no handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler, with sw-watchpoint, no handler: set displaced-stepping on
FAIL: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler, with sw-watchpoint, no handler: set itimer = itimer_real
FAIL: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler, with sw-watchpoint, no handler: set no_handler
PASS: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler, with sw-watchpoint, no handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler, with sw-watchpoint, no handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler, with sw-watchpoint, no handler: continue to infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler, with sw-watchpoint, no handler: watch $convenience
FAIL: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler, with sw-watchpoint, no handler: set done
FAIL: gdb.base/sigstep.exp: displaced=on: step on breakpoint, skip handler, with sw-watchpoint, no handler: performing step
PASS: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler: set displaced-stepping on
FAIL: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler: performing next
PASS: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler, no handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler, no handler: set displaced-stepping on
FAIL: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler, no handler: set itimer = itimer_real
FAIL: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler, no handler: set no_handler
PASS: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler, no handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler, no handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler, no handler: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler, no handler: set done
FAIL: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler, no handler: performing next
PASS: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler, with sw-watchpoint: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler, with sw-watchpoint: set displaced-stepping on
FAIL: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler, with sw-watchpoint: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler, with sw-watchpoint: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler, with sw-watchpoint: break clear done
FAIL: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler, with sw-watchpoint: continue to infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler, with sw-watchpoint: watch $convenience
FAIL: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler, with sw-watchpoint: performing next
PASS: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler, with sw-watchpoint, no handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler, with sw-watchpoint, no handler: set displaced-stepping on
FAIL: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler, with sw-watchpoint, no handler: set itimer = itimer_real
FAIL: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler, with sw-watchpoint, no handler: set no_handler
PASS: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler, with sw-watchpoint, no handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler, with sw-watchpoint, no handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler, with sw-watchpoint, no handler: continue to infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler, with sw-watchpoint, no handler: watch $convenience
FAIL: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler, with sw-watchpoint, no handler: set done
FAIL: gdb.base/sigstep.exp: displaced=on: next on breakpoint, skip handler, with sw-watchpoint, no handler: performing next
PASS: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler: set displaced-stepping on
FAIL: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler: performing continue
PASS: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler, no handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler, no handler: set displaced-stepping on
FAIL: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler, no handler: set itimer = itimer_real
FAIL: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler, no handler: set no_handler
PASS: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler, no handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler, no handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler, no handler: continue to infinite loop
FAIL: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler, no handler: set done
FAIL: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler, no handler: performing continue
PASS: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler, with sw-watchpoint: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler, with sw-watchpoint: set displaced-stepping on
FAIL: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler, with sw-watchpoint: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler, with sw-watchpoint: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler, with sw-watchpoint: break clear done
FAIL: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler, with sw-watchpoint: continue to infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler, with sw-watchpoint: watch $convenience
FAIL: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler, with sw-watchpoint: performing continue
PASS: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler, with sw-watchpoint, no handler: display/i $pc
PASS: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler, with sw-watchpoint, no handler: set displaced-stepping on
FAIL: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler, with sw-watchpoint, no handler: set itimer = itimer_real
FAIL: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler, with sw-watchpoint, no handler: set no_handler
PASS: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler, with sw-watchpoint, no handler: break infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler, with sw-watchpoint, no handler: break clear done
FAIL: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler, with sw-watchpoint, no handler: continue to infinite loop
PASS: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler, with sw-watchpoint, no handler: watch $convenience
FAIL: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler, with sw-watchpoint, no handler: set done
FAIL: gdb.base/sigstep.exp: displaced=on: continue on breakpoint, skip handler, with sw-watchpoint, no handler: performing continue
UNRESOLVED: gdb.base/skip.exp: skip file (no default file)
PASS: gdb.base/skip.exp: skip function
PASS: gdb.base/skip.exp: skip (no default function)
PASS: gdb.base/skip.exp: skip -fi
PASS: gdb.base/skip.exp: skip -file
PASS: gdb.base/skip.exp: skip -fu
PASS: gdb.base/skip.exp: skip -function
PASS: gdb.base/skip.exp: skip -rfu
PASS: gdb.base/skip.exp: skip -rfunction
PASS: gdb.base/skip.exp: skip -x
PASS: gdb.base/skip.exp: skip -rfu foo.* xyzzy
FAIL: gdb.base/skip.exp: can't run to main
UNTESTED: gdb.base/so-impl-ld.exp: failed to compile
FAIL: gdb.base/solib-corrupted.exp: can't run to main
UNTESTED: gdb.base/solib-display.exp: NO: failed to compile
UNTESTED: gdb.base/solib-nodir.exp: failed to compile
UNTESTED: gdb.base/solib-overlap.exp: 0x40000000: failed to compile
UNTESTED: gdb.base/solib-search.exp: failed to compile shared library
UNTESTED: gdb.base/solib-symbol.exp: failed to compile
PASS: gdb.base/source-dir.exp: directory /nOtExStInG/a /nOtExStInG/b /nOtExStInG/c
PASS: gdb.base/source-dir.exp: directory /nOtExStInG/b /nOtExStInG/d /nOtExStInG/c
FAIL: gdb.base/source-execution.exp: can't run to main
PASS: gdb.base/source.exp: script contains error
PASS: gdb.base/source.exp: source -v
PASS: gdb.base/source.exp: source after -v
PASS: gdb.base/source.exp: set search directories
PASS: gdb.base/source.exp: source -s
PASS: gdb.base/source.exp: source -s -v
PASS: gdb.base/source.exp: source -v -s
PASS: gdb.base/source.exp: source for-sure-nonexistant-file
PASS: gdb.base/source.exp: source source-nofile.gdb
FAIL: gdb.base/sss-bp-on-user-bp-2.exp: can't run to main
FAIL: gdb.base/sss-bp-on-user-bp.exp: can't run to main
FAIL: gdb.base/stack-checking.exp: can't run to main
UNTESTED: gdb.base/stap-probe.exp: without semaphore, not optimized: failed to prepare
UNTESTED: gdb.base/stap-probe.exp: without semaphore, not optimized: stap probe test failed
FAIL: gdb.base/start.exp: start (GDB internal error)
PASS: gdb.base/statistics.exp: startup time and space
FAIL: gdb.base/step-break.exp: can't run to main
PASS: gdb.base/step-bt.exp: breakpoint at first instruction of hello()
FAIL: gdb.base/step-bt.exp: run to hello() (GDB internal error)
PASS: gdb.base/step-bt.exp: step first instruction
FAIL: gdb.base/step-bt.exp: backtrace after first instruction step
PASS: gdb.base/step-bt.exp: step second instruction
FAIL: gdb.base/step-bt.exp: backtrace after second instruction step
FAIL: gdb.base/step-line.exp: can't run to main
UNSUPPORTED: gdb.base/step-over-exit.exp: unknown syscall instruction
FAIL: gdb.base/step-over-no-symbols.exp: displaced=off: couldn't run to main
UNTESTED: gdb.base/step-over-no-symbols.exp: displaced=off: stepping over breakpoint with displaced=off
PASS: gdb.base/step-sw-breakpoint-adjust-pc.exp: non_stop=off: displaced_step=off: always_inserted=off: set non-stop off
PASS: gdb.base/step-sw-breakpoint-adjust-pc.exp: non_stop=off: displaced_step=off: always_inserted=off: set displaced-stepping off
PASS: gdb.base/step-sw-breakpoint-adjust-pc.exp: non_stop=off: displaced_step=off: always_inserted=off: set breakpoint always-inserted off
PASS: gdb.base/step-sw-breakpoint-adjust-pc.exp: non_stop=off: displaced_step=off: always_inserted=on: set non-stop off
PASS: gdb.base/step-sw-breakpoint-adjust-pc.exp: non_stop=off: displaced_step=off: always_inserted=on: set displaced-stepping off
PASS: gdb.base/step-sw-breakpoint-adjust-pc.exp: non_stop=off: displaced_step=off: always_inserted=on: set breakpoint always-inserted on
PASS: gdb.base/step-sw-breakpoint-adjust-pc.exp: non_stop=off: displaced_step=on: always_inserted=off: set non-stop off
PASS: gdb.base/step-sw-breakpoint-adjust-pc.exp: non_stop=off: displaced_step=on: always_inserted=off: set displaced-stepping on
PASS: gdb.base/step-sw-breakpoint-adjust-pc.exp: non_stop=off: displaced_step=on: always_inserted=off: set breakpoint always-inserted off
PASS: gdb.base/step-sw-breakpoint-adjust-pc.exp: non_stop=off: displaced_step=on: always_inserted=on: set non-stop off
PASS: gdb.base/step-sw-breakpoint-adjust-pc.exp: non_stop=off: displaced_step=on: always_inserted=on: set displaced-stepping on
PASS: gdb.base/step-sw-breakpoint-adjust-pc.exp: non_stop=off: displaced_step=on: always_inserted=on: set breakpoint always-inserted on
PASS: gdb.base/step-sw-breakpoint-adjust-pc.exp: non_stop=on: displaced_step=off: always_inserted=off: set non-stop on
PASS: gdb.base/step-sw-breakpoint-adjust-pc.exp: non_stop=on: displaced_step=off: always_inserted=off: set displaced-stepping off
PASS: gdb.base/step-sw-breakpoint-adjust-pc.exp: non_stop=on: displaced_step=off: always_inserted=off: set breakpoint always-inserted off
PASS: gdb.base/step-sw-breakpoint-adjust-pc.exp: non_stop=on: displaced_step=off: always_inserted=on: set non-stop on
PASS: gdb.base/step-sw-breakpoint-adjust-pc.exp: non_stop=on: displaced_step=off: always_inserted=on: set displaced-stepping off
PASS: gdb.base/step-sw-breakpoint-adjust-pc.exp: non_stop=on: displaced_step=off: always_inserted=on: set breakpoint always-inserted on
PASS: gdb.base/step-sw-breakpoint-adjust-pc.exp: non_stop=on: displaced_step=on: always_inserted=off: set non-stop on
PASS: gdb.base/step-sw-breakpoint-adjust-pc.exp: non_stop=on: displaced_step=on: always_inserted=off: set displaced-stepping on
PASS: gdb.base/step-sw-breakpoint-adjust-pc.exp: non_stop=on: displaced_step=on: always_inserted=off: set breakpoint always-inserted off
PASS: gdb.base/step-sw-breakpoint-adjust-pc.exp: non_stop=on: displaced_step=on: always_inserted=on: set non-stop on
PASS: gdb.base/step-sw-breakpoint-adjust-pc.exp: non_stop=on: displaced_step=on: always_inserted=on: set displaced-stepping on
PASS: gdb.base/step-sw-breakpoint-adjust-pc.exp: non_stop=on: displaced_step=on: always_inserted=on: set breakpoint always-inserted on
PASS: gdb.base/step-symless.exp: strip stub symbols
FAIL: gdb.base/step-test.exp: can't run to main
UNRESOLVED: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
UNRESOLVED: gdb.base/structs.exp: continue to breakpoint: chartest-done
FAIL: gdb.base/structs.exp: p chartest
PASS: gdb.base/structs.exp: ptype foo1; structs-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 1 structs-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 3 structs-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 4 structs-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 5 structs-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 5 structs-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 5 structs-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 6 structs-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 6 structs-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 6 structs-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 7 structs-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 7 structs-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 7 structs-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 8 structs-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 8 structs-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 8 structs-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 9 structs-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 9 structs-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 9 structs-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 10 structs-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 10 structs-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 10 structs-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 11 structs-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 11 structs-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 11 structs-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 12 structs-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 12 structs-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 12 structs-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 13 structs-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 13 structs-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 13 structs-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 14 structs-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 14 structs-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 14 structs-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 15 structs-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 15 structs-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 15 structs-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 16 structs-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 16 structs-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 16 structs-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 17 structs-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 17 structs-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 17 structs-tc
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-tc
FAIL: gdb.base/structs.exp: zed L<n> for return; return 1 structs-tc
FAIL: gdb.base/structs.exp: return foo<n>; return 1 structs-tc
FAIL: gdb.base/structs.exp: value foo<n> returned; return 1 structs-tc
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-tc
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-tc
FAIL: gdb.base/structs.exp: finish foo<n>; return 1 structs-tc
FAIL: gdb.base/structs.exp: value foo<n> finished; return 1 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-tc
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tc
FAIL: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tc
FAIL: gdb.base/structs.exp: return foo<n>; return 2 structs-tc
FAIL: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tc
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tc
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tc
FAIL: gdb.base/structs.exp: finish foo<n>; return 2 structs-tc
FAIL: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tc
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 3 structs-tc
FAIL: gdb.base/structs.exp: zed L<n> for return; return 3 structs-tc
FAIL: gdb.base/structs.exp: return foo<n>; return 3 structs-tc
FAIL: gdb.base/structs.exp: value foo<n> returned; return 3 structs-tc
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 3 structs-tc
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 3 structs-tc
FAIL: gdb.base/structs.exp: finish foo<n>; return 3 structs-tc
FAIL: gdb.base/structs.exp: value foo<n> finished; return 3 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 3 structs-tc
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 4 structs-tc
FAIL: gdb.base/structs.exp: zed L<n> for return; return 4 structs-tc
FAIL: gdb.base/structs.exp: return foo<n>; return 4 structs-tc
FAIL: gdb.base/structs.exp: value foo<n> returned; return 4 structs-tc
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 4 structs-tc
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 4 structs-tc
FAIL: gdb.base/structs.exp: finish foo<n>; return 4 structs-tc
FAIL: gdb.base/structs.exp: value foo<n> finished; return 4 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 4 structs-tc
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 5 structs-tc
FAIL: gdb.base/structs.exp: zed L<n> for return; return 5 structs-tc
FAIL: gdb.base/structs.exp: return foo<n>; return 5 structs-tc
FAIL: gdb.base/structs.exp: value foo<n> returned; return 5 structs-tc
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 5 structs-tc
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 5 structs-tc
FAIL: gdb.base/structs.exp: finish foo<n>; return 5 structs-tc
FAIL: gdb.base/structs.exp: value foo<n> finished; return 5 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 5 structs-tc
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 6 structs-tc
FAIL: gdb.base/structs.exp: zed L<n> for return; return 6 structs-tc
FAIL: gdb.base/structs.exp: return foo<n>; return 6 structs-tc
FAIL: gdb.base/structs.exp: value foo<n> returned; return 6 structs-tc
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 6 structs-tc
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 6 structs-tc
FAIL: gdb.base/structs.exp: finish foo<n>; return 6 structs-tc
FAIL: gdb.base/structs.exp: value foo<n> finished; return 6 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 6 structs-tc
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 7 structs-tc
FAIL: gdb.base/structs.exp: zed L<n> for return; return 7 structs-tc
FAIL: gdb.base/structs.exp: return foo<n>; return 7 structs-tc
FAIL: gdb.base/structs.exp: value foo<n> returned; return 7 structs-tc
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 7 structs-tc
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 7 structs-tc
FAIL: gdb.base/structs.exp: finish foo<n>; return 7 structs-tc
FAIL: gdb.base/structs.exp: value foo<n> finished; return 7 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 7 structs-tc
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 8 structs-tc
FAIL: gdb.base/structs.exp: zed L<n> for return; return 8 structs-tc
FAIL: gdb.base/structs.exp: return foo<n>; return 8 structs-tc
FAIL: gdb.base/structs.exp: value foo<n> returned; return 8 structs-tc
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 8 structs-tc
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 8 structs-tc
FAIL: gdb.base/structs.exp: finish foo<n>; return 8 structs-tc
FAIL: gdb.base/structs.exp: value foo<n> finished; return 8 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 8 structs-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
UNRESOLVED: gdb.base/structs.exp: ptype foo1; structs-ts
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-ts
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-ts
FAIL: gdb.base/structs.exp: p/c L<n>; call 1 structs-ts
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-ts
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-ts
FAIL: gdb.base/structs.exp: p/c L<n>; call 2 structs-ts
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-ts
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-ts
FAIL: gdb.base/structs.exp: p/c L<n>; call 3 structs-ts
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-ts
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-ts
FAIL: gdb.base/structs.exp: p/c L<n>; call 4 structs-ts
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 5 structs-ts
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 5 structs-ts
FAIL: gdb.base/structs.exp: p/c L<n>; call 5 structs-ts
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-ts
FAIL: gdb.base/structs.exp: zed L<n> for return; return 1 structs-ts
FAIL: gdb.base/structs.exp: return foo<n>; return 1 structs-ts
FAIL: gdb.base/structs.exp: value foo<n> returned; return 1 structs-ts
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-ts
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-ts
FAIL: gdb.base/structs.exp: finish foo<n>; return 1 structs-ts
FAIL: gdb.base/structs.exp: value foo<n> finished; return 1 structs-ts
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-ts
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-ts
FAIL: gdb.base/structs.exp: zed L<n> for return; return 2 structs-ts
FAIL: gdb.base/structs.exp: return foo<n>; return 2 structs-ts
FAIL: gdb.base/structs.exp: value foo<n> returned; return 2 structs-ts
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-ts
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-ts
FAIL: gdb.base/structs.exp: finish foo<n>; return 2 structs-ts
FAIL: gdb.base/structs.exp: value foo<n> finished; return 2 structs-ts
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-ts
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 3 structs-ts
FAIL: gdb.base/structs.exp: zed L<n> for return; return 3 structs-ts
FAIL: gdb.base/structs.exp: return foo<n>; return 3 structs-ts
FAIL: gdb.base/structs.exp: value foo<n> returned; return 3 structs-ts
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 3 structs-ts
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 3 structs-ts
FAIL: gdb.base/structs.exp: finish foo<n>; return 3 structs-ts
FAIL: gdb.base/structs.exp: value foo<n> finished; return 3 structs-ts
PASS: gdb.base/structs.exp: return value known implies finish value known; return 3 structs-ts
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 4 structs-ts
FAIL: gdb.base/structs.exp: zed L<n> for return; return 4 structs-ts
FAIL: gdb.base/structs.exp: return foo<n>; return 4 structs-ts
FAIL: gdb.base/structs.exp: value foo<n> returned; return 4 structs-ts
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 4 structs-ts
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 4 structs-ts
FAIL: gdb.base/structs.exp: finish foo<n>; return 4 structs-ts
FAIL: gdb.base/structs.exp: value foo<n> finished; return 4 structs-ts
PASS: gdb.base/structs.exp: return value known implies finish value known; return 4 structs-ts
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
UNRESOLVED: gdb.base/structs.exp: ptype foo1; structs-ti
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-ti
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-ti
FAIL: gdb.base/structs.exp: p/c L<n>; call 1 structs-ti
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-ti
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-ti
FAIL: gdb.base/structs.exp: p/c L<n>; call 2 structs-ti
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-ti
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-ti
FAIL: gdb.base/structs.exp: p/c L<n>; call 3 structs-ti
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-ti
FAIL: gdb.base/structs.exp: zed L<n> for return; return 1 structs-ti
FAIL: gdb.base/structs.exp: return foo<n>; return 1 structs-ti
FAIL: gdb.base/structs.exp: value foo<n> returned; return 1 structs-ti
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-ti
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-ti
FAIL: gdb.base/structs.exp: finish foo<n>; return 1 structs-ti
FAIL: gdb.base/structs.exp: value foo<n> finished; return 1 structs-ti
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-ti
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-ti
FAIL: gdb.base/structs.exp: zed L<n> for return; return 2 structs-ti
FAIL: gdb.base/structs.exp: return foo<n>; return 2 structs-ti
FAIL: gdb.base/structs.exp: value foo<n> returned; return 2 structs-ti
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-ti
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-ti
FAIL: gdb.base/structs.exp: finish foo<n>; return 2 structs-ti
FAIL: gdb.base/structs.exp: value foo<n> finished; return 2 structs-ti
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-ti
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
UNRESOLVED: gdb.base/structs.exp: ptype foo1; structs-tl
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-tl
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-tl
FAIL: gdb.base/structs.exp: p/c L<n>; call 1 structs-tl
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tl
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tl
FAIL: gdb.base/structs.exp: p/c L<n>; call 2 structs-tl
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tl
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tl
FAIL: gdb.base/structs.exp: p/c L<n>; call 3 structs-tl
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-tl
FAIL: gdb.base/structs.exp: zed L<n> for return; return 1 structs-tl
FAIL: gdb.base/structs.exp: return foo<n>; return 1 structs-tl
FAIL: gdb.base/structs.exp: value foo<n> returned; return 1 structs-tl
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-tl
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-tl
FAIL: gdb.base/structs.exp: finish foo<n>; return 1 structs-tl
FAIL: gdb.base/structs.exp: value foo<n> finished; return 1 structs-tl
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-tl
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tl
FAIL: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tl
FAIL: gdb.base/structs.exp: return foo<n>; return 2 structs-tl
FAIL: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tl
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tl
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tl
FAIL: gdb.base/structs.exp: finish foo<n>; return 2 structs-tl
FAIL: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tl
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tl
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
UNRESOLVED: gdb.base/structs.exp: ptype foo1; structs-tll
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-tll
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-tll
FAIL: gdb.base/structs.exp: p/c L<n>; call 1 structs-tll
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tll
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tll
FAIL: gdb.base/structs.exp: p/c L<n>; call 2 structs-tll
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-tll
FAIL: gdb.base/structs.exp: zed L<n> for return; return 1 structs-tll
FAIL: gdb.base/structs.exp: return foo<n>; return 1 structs-tll
FAIL: gdb.base/structs.exp: value foo<n> returned; return 1 structs-tll
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-tll
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-tll
FAIL: gdb.base/structs.exp: finish foo<n>; return 1 structs-tll
FAIL: gdb.base/structs.exp: value foo<n> finished; return 1 structs-tll
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-tll
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
UNRESOLVED: gdb.base/structs.exp: ptype foo1; structs-tf
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-tf
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-tf
FAIL: gdb.base/structs.exp: p/c L<n>; call 1 structs-tf
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tf
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tf
FAIL: gdb.base/structs.exp: p/c L<n>; call 2 structs-tf
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tf
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tf
FAIL: gdb.base/structs.exp: p/c L<n>; call 3 structs-tf
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-tf
FAIL: gdb.base/structs.exp: zed L<n> for return; return 1 structs-tf
FAIL: gdb.base/structs.exp: return foo<n>; return 1 structs-tf
FAIL: gdb.base/structs.exp: value foo<n> returned; return 1 structs-tf
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-tf
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-tf
FAIL: gdb.base/structs.exp: finish foo<n>; return 1 structs-tf
FAIL: gdb.base/structs.exp: value foo<n> finished; return 1 structs-tf
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-tf
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tf
FAIL: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tf
FAIL: gdb.base/structs.exp: return foo<n>; return 2 structs-tf
FAIL: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tf
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tf
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tf
FAIL: gdb.base/structs.exp: finish foo<n>; return 2 structs-tf
FAIL: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tf
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tf
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
UNRESOLVED: gdb.base/structs.exp: ptype foo1; structs-td
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-td
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-td
FAIL: gdb.base/structs.exp: p/c L<n>; call 1 structs-td
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-td
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-td
FAIL: gdb.base/structs.exp: p/c L<n>; call 2 structs-td
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-td
FAIL: gdb.base/structs.exp: zed L<n> for return; return 1 structs-td
FAIL: gdb.base/structs.exp: return foo<n>; return 1 structs-td
FAIL: gdb.base/structs.exp: value foo<n> returned; return 1 structs-td
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-td
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-td
FAIL: gdb.base/structs.exp: finish foo<n>; return 1 structs-td
FAIL: gdb.base/structs.exp: value foo<n> finished; return 1 structs-td
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-td
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
UNRESOLVED: gdb.base/structs.exp: ptype foo1; structs-tld
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-tld
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-tld
FAIL: gdb.base/structs.exp: p/c L<n>; call 1 structs-tld
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tld
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tld
FAIL: gdb.base/structs.exp: p/c L<n>; call 2 structs-tld
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-tld
FAIL: gdb.base/structs.exp: zed L<n> for return; return 1 structs-tld
FAIL: gdb.base/structs.exp: return foo<n>; return 1 structs-tld
FAIL: gdb.base/structs.exp: value foo<n> returned; return 1 structs-tld
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-tld
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-tld
FAIL: gdb.base/structs.exp: finish foo<n>; return 1 structs-tld
FAIL: gdb.base/structs.exp: value foo<n> finished; return 1 structs-tld
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-tld
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
UNRESOLVED: gdb.base/structs.exp: ptype foo2; structs-ts-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-ts-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-ts-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 2 structs-ts-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-ts-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-ts-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 3 structs-ts-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-ts-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-ts-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 4 structs-ts-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 5 structs-ts-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 5 structs-ts-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 5 structs-ts-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 6 structs-ts-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 6 structs-ts-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 6 structs-ts-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 7 structs-ts-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 7 structs-ts-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 7 structs-ts-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 8 structs-ts-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 8 structs-ts-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 8 structs-ts-tc
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-ts-tc
FAIL: gdb.base/structs.exp: zed L<n> for return; return 2 structs-ts-tc
FAIL: gdb.base/structs.exp: return foo<n>; return 2 structs-ts-tc
FAIL: gdb.base/structs.exp: value foo<n> returned; return 2 structs-ts-tc
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-ts-tc
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-ts-tc
FAIL: gdb.base/structs.exp: finish foo<n>; return 2 structs-ts-tc
FAIL: gdb.base/structs.exp: value foo<n> finished; return 2 structs-ts-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-ts-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
UNRESOLVED: gdb.base/structs.exp: ptype foo2; structs-ti-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-ti-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-ti-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 2 structs-ti-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-ti-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-ti-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 3 structs-ti-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-ti-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-ti-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 4 structs-ti-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 5 structs-ti-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 5 structs-ti-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 5 structs-ti-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 6 structs-ti-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 6 structs-ti-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 6 structs-ti-tc
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-ti-tc
FAIL: gdb.base/structs.exp: zed L<n> for return; return 2 structs-ti-tc
FAIL: gdb.base/structs.exp: return foo<n>; return 2 structs-ti-tc
FAIL: gdb.base/structs.exp: value foo<n> returned; return 2 structs-ti-tc
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-ti-tc
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-ti-tc
FAIL: gdb.base/structs.exp: finish foo<n>; return 2 structs-ti-tc
FAIL: gdb.base/structs.exp: value foo<n> finished; return 2 structs-ti-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-ti-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
UNRESOLVED: gdb.base/structs.exp: ptype foo2; structs-tl-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tl-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tl-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 2 structs-tl-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tl-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tl-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 3 structs-tl-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-tl-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-tl-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 4 structs-tl-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 5 structs-tl-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 5 structs-tl-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 5 structs-tl-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 6 structs-tl-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 6 structs-tl-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 6 structs-tl-tc
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tl-tc
FAIL: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tl-tc
FAIL: gdb.base/structs.exp: return foo<n>; return 2 structs-tl-tc
FAIL: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tl-tc
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tl-tc
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tl-tc
FAIL: gdb.base/structs.exp: finish foo<n>; return 2 structs-tl-tc
FAIL: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tl-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tl-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
UNRESOLVED: gdb.base/structs.exp: ptype foo2; structs-tll-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tll-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tll-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 2 structs-tll-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
UNRESOLVED: gdb.base/structs.exp: ptype foo2; structs-tf-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tf-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tf-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 2 structs-tf-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tf-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tf-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 3 structs-tf-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-tf-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-tf-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 4 structs-tf-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 5 structs-tf-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 5 structs-tf-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 5 structs-tf-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 6 structs-tf-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 6 structs-tf-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 6 structs-tf-tc
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tf-tc
FAIL: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tf-tc
FAIL: gdb.base/structs.exp: return foo<n>; return 2 structs-tf-tc
FAIL: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tf-tc
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tf-tc
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tf-tc
FAIL: gdb.base/structs.exp: finish foo<n>; return 2 structs-tf-tc
FAIL: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tf-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tf-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
UNRESOLVED: gdb.base/structs.exp: ptype foo2; structs-td-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-td-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-td-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 2 structs-td-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
UNRESOLVED: gdb.base/structs.exp: ptype foo2; structs-tld-tc
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tld-tc
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tld-tc
FAIL: gdb.base/structs.exp: p/c L<n>; call 2 structs-tld-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
UNRESOLVED: gdb.base/structs.exp: ptype foo2; structs-tc-ts
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc-ts
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc-ts
FAIL: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc-ts
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tc-ts
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tc-ts
FAIL: gdb.base/structs.exp: p/c L<n>; call 3 structs-tc-ts
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-tc-ts
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-tc-ts
FAIL: gdb.base/structs.exp: p/c L<n>; call 4 structs-tc-ts
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 5 structs-tc-ts
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 5 structs-tc-ts
FAIL: gdb.base/structs.exp: p/c L<n>; call 5 structs-tc-ts
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 6 structs-tc-ts
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 6 structs-tc-ts
FAIL: gdb.base/structs.exp: p/c L<n>; call 6 structs-tc-ts
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tc-ts
FAIL: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tc-ts
FAIL: gdb.base/structs.exp: return foo<n>; return 2 structs-tc-ts
FAIL: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tc-ts
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tc-ts
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tc-ts
FAIL: gdb.base/structs.exp: finish foo<n>; return 2 structs-tc-ts
FAIL: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tc-ts
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tc-ts
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
UNRESOLVED: gdb.base/structs.exp: ptype foo2; structs-tc-ti
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc-ti
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc-ti
FAIL: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc-ti
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tc-ti
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tc-ti
FAIL: gdb.base/structs.exp: p/c L<n>; call 3 structs-tc-ti
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-tc-ti
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-tc-ti
FAIL: gdb.base/structs.exp: p/c L<n>; call 4 structs-tc-ti
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tc-ti
FAIL: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tc-ti
FAIL: gdb.base/structs.exp: return foo<n>; return 2 structs-tc-ti
FAIL: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tc-ti
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tc-ti
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tc-ti
FAIL: gdb.base/structs.exp: finish foo<n>; return 2 structs-tc-ti
FAIL: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tc-ti
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tc-ti
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
UNRESOLVED: gdb.base/structs.exp: ptype foo2; structs-tc-tl
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc-tl
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc-tl
FAIL: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc-tl
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tc-tl
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tc-tl
FAIL: gdb.base/structs.exp: p/c L<n>; call 3 structs-tc-tl
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-tc-tl
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-tc-tl
FAIL: gdb.base/structs.exp: p/c L<n>; call 4 structs-tc-tl
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tc-tl
FAIL: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tc-tl
FAIL: gdb.base/structs.exp: return foo<n>; return 2 structs-tc-tl
FAIL: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tc-tl
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tc-tl
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tc-tl
FAIL: gdb.base/structs.exp: finish foo<n>; return 2 structs-tc-tl
FAIL: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tc-tl
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tc-tl
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
UNRESOLVED: gdb.base/structs.exp: ptype foo2; structs-tc-tll
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc-tll
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc-tll
FAIL: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc-tll
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
UNRESOLVED: gdb.base/structs.exp: ptype foo2; structs-tc-tf
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc-tf
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc-tf
FAIL: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc-tf
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tc-tf
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tc-tf
FAIL: gdb.base/structs.exp: p/c L<n>; call 3 structs-tc-tf
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-tc-tf
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-tc-tf
FAIL: gdb.base/structs.exp: p/c L<n>; call 4 structs-tc-tf
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
UNRESOLVED: gdb.base/structs.exp: ptype foo2; structs-tc-td
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc-td
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc-td
FAIL: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc-td
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
UNRESOLVED: gdb.base/structs.exp: ptype foo2; structs-tc-tld
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc-tld
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc-tld
FAIL: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc-tld
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
UNRESOLVED: gdb.base/structs.exp: ptype foo2; structs-td-tf
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-td-tf
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-td-tf
FAIL: gdb.base/structs.exp: p/c L<n>; call 2 structs-td-tf
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-td-tf
FAIL: gdb.base/structs.exp: zed L<n> for return; return 2 structs-td-tf
FAIL: gdb.base/structs.exp: return foo<n>; return 2 structs-td-tf
FAIL: gdb.base/structs.exp: value foo<n> returned; return 2 structs-td-tf
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-td-tf
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-td-tf
FAIL: gdb.base/structs.exp: finish foo<n>; return 2 structs-td-tf
FAIL: gdb.base/structs.exp: value foo<n> finished; return 2 structs-td-tf
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-td-tf
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
UNRESOLVED: gdb.base/structs.exp: ptype foo2; structs-tf-td
FAIL: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tf-td
FAIL: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tf-td
FAIL: gdb.base/structs.exp: p/c L<n>; call 2 structs-tf-td
FAIL: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tf-td
FAIL: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tf-td
FAIL: gdb.base/structs.exp: return foo<n>; return 2 structs-tf-td
FAIL: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tf-td
FAIL: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tf-td
FAIL: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tf-td
FAIL: gdb.base/structs.exp: finish foo<n>; return 2 structs-tf-td
FAIL: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tf-td
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tf-td
PASS: gdb.base/structs2.exp: set width 0
FAIL: gdb.base/structs2.exp: structs2 sanity check
PASS: gdb.base/structs2.exp: structs2 breakpoint set
FAIL: gdb.base/structs2.exp: structs2 continue1
FAIL: gdb.base/structs2.exp: structs2 continue2
UNTESTED: gdb.base/structs3.exp: could not run to main
PASS: gdb.base/subst.exp: deactivate GDB's confirmation interface
PASS: gdb.base/subst.exp: remove default substitution rules
PASS: gdb.base/subst.exp: show substitute-path, no rule entered yet
PASS: gdb.base/subst.exp: show substitute-path from, no rule entered yet
PASS: gdb.base/subst.exp: show substitute-path, too many arguments
PASS: gdb.base/subst.exp: unset substitute-path from, no rule entered yet
PASS: gdb.base/subst.exp: unset substitute-path, no rule entered yet
PASS: gdb.base/subst.exp: unset substitute-path from, no rule entered yet
PASS: gdb.base/subst.exp: unset substitute-path, too many arguments
PASS: gdb.base/subst.exp: set substitute-path, too many arguments
PASS: gdb.base/subst.exp: set substitute-path, too few arguments
PASS: gdb.base/subst.exp: set substitute-path, first argument is empty string
PASS: gdb.base/subst.exp: add from -> to substitution rule
PASS: gdb.base/subst.exp: add from1 -> to1 substitution rule
PASS: gdb.base/subst.exp: add source -> destination substitution rule
PASS: gdb.base/subst.exp: add depuis -> vers substitution rule
PASS: gdb.base/subst.exp: add substitution rule to empty string
PASS: gdb.base/subst.exp: show substitute-path after all paths added
PASS: gdb.base/subst.exp: show substitute-path from, after all paths added
PASS: gdb.base/subst.exp: show substitute-path depuis, after all paths added
PASS: gdb.base/subst.exp: show substitute-path from/path, after all paths added
PASS: gdb.base/subst.exp: show substitute-path from_a_bad_path, after all paths added
PASS: gdb.base/subst.exp: show substitute-path garbage, after all paths added
PASS: gdb.base/subst.exp: unset substitute-path from
PASS: gdb.base/subst.exp: show substitute-path from, after unsetting it
PASS: gdb.base/subst.exp: show substitute-path after from rule removed
PASS: gdb.base/subst.exp: unset substitute-path from after the rule was removed
PASS: gdb.base/subst.exp: unset substitute-path depuis (middle of list)
PASS: gdb.base/subst.exp: show substitute-path after depuis rule removed
PASS: gdb.base/subst.exp: unset substitute-path empty (end of list)
PASS: gdb.base/subst.exp: show substitute-path after empty rule removed
PASS: gdb.base/subst.exp: remove all remaining substitution rules
PASS: gdb.base/subst.exp: show substitute-path after all remaining rules removed
UNTESTED: gdb.base/sym-file.exp: failed to prepare
PASS: gdb.base/symbol-without-target_section.exp: add-symbol-file
PASS: gdb.base/symbol-without-target_section.exp: list main
PASS: gdb.base/symbol-without-target_section.exp: print symbol_without_target_section
UNTESTED: gdb.base/symtab-search-order.exp: failed to compile
PASS: gdb.base/term.exp: test info terminal
FAIL: gdb.base/term.exp: can't run to main
FAIL: gdb.base/testenv.exp: test no TEST_GDB var
PASS: gdb.base/testenv.exp: set TEST_GDB_VAR1
FAIL: gdb.base/testenv.exp: test with one TEST_GDB var
PASS: gdb.base/testenv.exp: set TEST_GDB_VAR2
FAIL: gdb.base/testenv.exp: test with two TEST_GDB var
PASS: gdb.base/testenv.exp: unset TEST_GDB_VAR1
FAIL: gdb.base/testenv.exp: test with one TEST_GDB var, after unset
PASS: gdb.base/testenv.exp: test passing TEST_GDB_GLOBAL to GDB
FAIL: gdb.base/testenv.exp: test with TEST_GDB_GLOBAL
PASS: gdb.base/testenv.exp: unset TEST_GDB_GLOBAL
FAIL: gdb.base/testenv.exp: test with TEST_GDB_GLOBAL unset
PASS: gdb.base/trace-commands.exp: show trace-commands says off
PASS: gdb.base/trace-commands.exp: source -v
PASS: gdb.base/trace-commands.exp: set trace-commands
PASS: gdb.base/trace-commands.exp: show trace-commands says on
PASS: gdb.base/trace-commands.exp: simple trace-commands test
PASS: gdb.base/trace-commands.exp: nested trace-commands test
PASS: gdb.base/trace-commands.exp: define user command
PASS: gdb.base/trace-commands.exp: nested trace-commands test with source
PASS: gdb.base/trace-commands.exp: depth resets on error part 1
PASS: gdb.base/trace-commands.exp: depth resets on error part 2
PASS: gdb.base/ui-redirect.exp: commands
PASS: gdb.base/ui-redirect.exp: print 1
PASS: gdb.base/ui-redirect.exp: end
PASS: gdb.base/ui-redirect.exp: set logging file /dev/null
PASS: gdb.base/ui-redirect.exp: set logging on
PASS: gdb.base/ui-redirect.exp: save breakpoints /dev/null
PASS: gdb.base/ui-redirect.exp: set logging off
PASS: gdb.base/ui-redirect.exp: help
PASS: gdb.base/unload.exp: pending breakpoint info before run
FAIL: gdb.base/unload.exp: running program (GDB internal error)
FAIL: gdb.base/unload.exp: pending breakpoint info on first run at shrfunc1
FAIL: gdb.base/unload.exp: continuing to unloaded libfile
FAIL: gdb.base/unload.exp: print y from libfile
FAIL: gdb.base/unload.exp: rerun to shared library breakpoint (GDB internal error)
FAIL: gdb.base/unload.exp: pending breakpoint info on second run at shrfunc1
FAIL: gdb.base/unload.exp: continuing to unloaded libfile
FAIL: gdb.base/unload.exp: continue to shrfunc2
FAIL: gdb.base/unload.exp: pending breakpoint info on second run at shrfunc2
FAIL: gdb.base/unload.exp: continuing to unloaded libfile2
FAIL: gdb.base/unload.exp: print y from libfile2
FAIL: gdb.base/until-nodebug.exp: can't run to main
FAIL: gdb.base/until.exp: can't run to main
FAIL: gdb.base/unwindonsignal.exp: can't run to main
UNSUPPORTED: gdb.base/valgrind-db-attach.exp: spawn valgrind
UNSUPPORTED: gdb.base/valgrind-disp-step.exp: spawn valgrind
UNSUPPORTED: gdb.base/valgrind-infcall.exp: spawn valgrind
PASS: gdb.base/varargs.exp: set print sevenbit-strings
PASS: gdb.base/varargs.exp: set print address off
PASS: gdb.base/varargs.exp: set width 0
UNRESOLVED: gdb.base/vdso-warning.exp: setup: set environment LD_DEBUG=unused
FAIL: gdb.base/vdso-warning.exp: run: startup (GDB internal error)
PASS: gdb.base/vdso-warning.exp: run: no vdso without symbols is listed
PASS: gdb.base/vdso-warning.exp: core: save a corefile
FAIL: gdb.base/vdso-warning.exp: core: startup
PASS: gdb.base/vdso-warning.exp: core: no vdso without symbols is listed
PASS: gdb.base/vla-stub.exp: p *local_struct.ptr
PASS: gdb.base/vla-stub.exp: whatis local_struct.here
PASS: gdb.base/vla-stub.exp: whatis *local_struct.ptr
UNRESOLVED: gdb.base/watch-cond-infcall.exp: hw: run to main
FAIL: gdb.base/watch-cond-infcall.exp: sw: run to main
FAIL: gdb.base/watch-cond.exp: can't run to main
FAIL: gdb.base/watch-non-mem.exp: can't run to main
FAIL: gdb.base/watch-read.exp: run to main
FAIL: gdb.base/watch-vfork.exp: run to main (hw)
FAIL: gdb.base/watch-vfork.exp: run to main (sw)
PASS: gdb.base/watch_thread_num.exp: successfully compiled posix threads test case
FAIL: gdb.base/watch_thread_num.exp: run to main
PASS: gdb.base/watchpoint-cond-gone.exp: set can-use-hw-watchpoints 0
PASS: gdb.base/watchpoint-delete.exp: set can-use-hw-watchpoints 0
PASS: gdb.base/watchpoint-hw.exp: watch watchee
FAIL: gdb.base/watchpoint-hw.exp: start (GDB internal error)
PASS: gdb.base/watchpoint-hw.exp: info watchpoints
FAIL: gdb.base/watchpoint-reuse-slot.exp: can't run to main
PASS: gdb.base/watchpoint-solib.exp: set pending breakpoint
FAIL: gdb.base/watchpoint-solib.exp: continue to foo
FAIL: gdb.base/watchpoint-solib.exp: set watchpoint on g
FAIL: gdb.base/watchpoint-solib.exp: continue to watchpoint hit
FAIL: gdb.base/watchpoint-solib.exp: (timeout) rerun to main
FAIL: gdb.base/watchpoint-solib.exp: continue to foo again (GDB internal error)
FAIL: gdb.base/watchpoint-solib.exp: continue to watchpoint hit again
FAIL: gdb.base/watchpoint-stops-at-right-insn.exp: run to main
FAIL: gdb.base/watchpoint.exp: watch tests suppressed
PASS: gdb.base/watchpoint.exp: disable fast watches
PASS: gdb.base/watchpoint.exp: show disable fast watches
PASS: gdb.base/watchpoint.exp: set slow conditional watch
FAIL: gdb.base/watchpoint.exp: trigger slow conditional watch
PASS: gdb.base/watchpoint.exp: delete watch ival3
PASS: gdb.base/watchpoint.exp: set slow condition watch w/thread
PASS: gdb.base/watchpoint.exp: delete watch w/condition and thread
PASS: gdb.base/watchpoint.exp: rwatch disallowed when can-set-hw-watchpoints cleared
PASS: gdb.base/watchpoint.exp: awatch disallowed when can-set-hw-watchpoints cleared
PASS: gdb.base/watchpoint.exp: set breakpoint at marker1
PASS: gdb.base/watchpoint.exp: set breakpoint at marker2
PASS: gdb.base/watchpoint.exp: info break in watchpoint.exp
PASS: gdb.base/watchpoint.exp: set watchpoint on ival3
PASS: gdb.base/watchpoint.exp: watchpoint found in watchpoint/breakpoint table
PASS: gdb.base/watchpoint.exp: disable watchpoint
PASS: gdb.base/watchpoint.exp: disable watchpoint in test_simple_watchpoint
FAIL: gdb.base/watchpoint.exp: run to marker1 in test_simple_watchpoint (GDB internal error)
PASS: gdb.base/watchpoint.exp: watchpoints found in watchpoint/breakpoint table
PASS: gdb.base/watchpoint.exp: disable watchpoint in test_disabling_watchpoints
FAIL: gdb.base/watchpoint.exp: run to marker1 in test_disabling_watchpoints (GDB internal error)
PASS: gdb.base/watchpoint.exp: watch buf
FAIL: gdb.base/watchpoint.exp: watchpoint on buf hit
PASS: gdb.base/watchpoint.exp: delete watch buf
PASS: gdb.base/watchpoint.exp: number is constant
PASS: gdb.base/watchpoint.exp: number with cast is constant
PASS: gdb.base/watchpoint.exp: marker1 is constant
PASS: gdb.base/watchpoint.exp: watch count + 6
PASS: gdb.base/watchpoint.exp: delete watchpoint `count + 6'
PASS: gdb.base/watchpoint.exp: watch 7 + count
PASS: gdb.base/watchpoint.exp: delete watchpoint `7 + count'
PASS: gdb.base/watchpoint.exp: watch $pc
PASS: gdb.base/watchpoint.exp: disable watchpoint `$pc'
PASS: gdb.base/watchpoint.exp: reenable watchpoint `$pc'
PASS: gdb.base/watchpoint.exp: watchpoint `$pc' is enabled
PASS: gdb.base/watchpoint.exp: delete watchpoint `$pc'
FAIL: gdb.base/watchpoint.exp: continue to breakpoint: func5 breakpoint here
FAIL: gdb.base/watchpoint.exp: watch -location .x
FAIL: gdb.base/watchpoint.exp: continue with watch -location
PASS: gdb.base/watchpoint.exp: delete watch -location
FAIL: gdb.base/watchpoint.exp: continue to breakpoint: func6 breakpoint here
FAIL: gdb.base/watchpoint.exp: watch foo2
FAIL: gdb.base/watchpoint.exp: continue with watch foo2
PASS: gdb.base/watchpoint.exp: delete watch foo2
FAIL: gdb.base/watchpoint.exp: continue to breakpoint: func7 breakpoint here
FAIL: gdb.base/watchpoint.exp: watch foo4
FAIL: gdb.base/watchpoint.exp: continue with watch foo4
PASS: gdb.base/watchpoint.exp: delete watch foo4
PASS: gdb.base/watchpoint.exp: rwatch disallowed for register based expression
PASS: gdb.base/watchpoint.exp: awatch disallowed for register based expression
PASS: gdb.base/watchpoint.exp: no-hw: set breakpoint at marker1
PASS: gdb.base/watchpoint.exp: no-hw: set breakpoint at marker2
PASS: gdb.base/watchpoint.exp: no-hw: info break in watchpoint.exp
PASS: gdb.base/watchpoint.exp: no-hw: set watchpoint on ival3
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint found in watchpoint/breakpoint table
PASS: gdb.base/watchpoint.exp: no-hw: disable watchpoint
PASS: gdb.base/watchpoint.exp: no-hw: disable watchpoint in test_simple_watchpoint
FAIL: gdb.base/watchpoint.exp: no-hw: run to marker1 in test_simple_watchpoint (GDB internal error)
PASS: gdb.base/watchpoint.exp: no-hw: watchpoints found in watchpoint/breakpoint table
PASS: gdb.base/watchpoint.exp: no-hw: disable watchpoint in test_disabling_watchpoints
FAIL: gdb.base/watchpoint.exp: no-hw: run to marker1 in test_disabling_watchpoints (GDB internal error)
PASS: gdb.base/watchpoint.exp: no-hw: watch buf
FAIL: gdb.base/watchpoint.exp: no-hw: watchpoint on buf hit
PASS: gdb.base/watchpoint.exp: no-hw: delete watch buf
PASS: gdb.base/watchpoint.exp: no-hw: number is constant
PASS: gdb.base/watchpoint.exp: no-hw: number with cast is constant
PASS: gdb.base/watchpoint.exp: no-hw: marker1 is constant
PASS: gdb.base/watchpoint.exp: no-hw: watch count + 6
PASS: gdb.base/watchpoint.exp: no-hw: delete watchpoint `count + 6'
PASS: gdb.base/watchpoint.exp: no-hw: watch 7 + count
PASS: gdb.base/watchpoint.exp: no-hw: delete watchpoint `7 + count'
PASS: gdb.base/watchpoint.exp: no-hw: watch $pc
PASS: gdb.base/watchpoint.exp: no-hw: disable watchpoint `$pc'
PASS: gdb.base/watchpoint.exp: no-hw: reenable watchpoint `$pc'
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint `$pc' is enabled
PASS: gdb.base/watchpoint.exp: no-hw: delete watchpoint `$pc'
FAIL: gdb.base/watchpoint.exp: no-hw: continue to breakpoint: func5 breakpoint here
FAIL: gdb.base/watchpoint.exp: no-hw: watch -location .x
FAIL: gdb.base/watchpoint.exp: no-hw: continue with watch -location
PASS: gdb.base/watchpoint.exp: no-hw: delete watch -location
FAIL: gdb.base/watchpoint.exp: no-hw: continue to breakpoint: func6 breakpoint here
PASS: gdb.base/watchpoint.exp: no-hw: watch foo2
FAIL: gdb.base/watchpoint.exp: no-hw: continue with watch foo2
PASS: gdb.base/watchpoint.exp: no-hw: delete watch foo2
FAIL: gdb.base/watchpoint.exp: no-hw: continue to breakpoint: func7 breakpoint here
PASS: gdb.base/watchpoint.exp: no-hw: watch foo4
FAIL: gdb.base/watchpoint.exp: no-hw: continue with watch foo4
PASS: gdb.base/watchpoint.exp: no-hw: delete watch foo4
PASS: gdb.base/watchpoints.exp: before inferior start: create watchpoint
PASS: gdb.base/watchpoints.exp: before inferior start: create access watchpoint
PASS: gdb.base/watchpoints.exp: before inferior start: create read watchpoint
FAIL: gdb.base/watchpoints.exp: watchpoint hit, first time
FAIL: gdb.base/watchpoints.exp: watchpoint hit, first time
FAIL: gdb.base/watchpoints.exp: watchpoint hit count is 1
FAIL: gdb.base/watchpoints.exp: watchpoint ival1 hit, second time
FAIL: gdb.base/watchpoints.exp: watchpoint ival1 hit count is 2
FAIL: gdb.base/watchpoints.exp: watchpoint hit, second time
FAIL: gdb.base/watchpoints.exp: watchpoint hit count is 2
FAIL: gdb.base/watchpoints.exp: watchpoint ival1 hit, third time
FAIL: gdb.base/watchpoints.exp: watchpoint ival1 hit count is 3
FAIL: gdb.base/watchpoints.exp: watchpoint hit, third time
FAIL: gdb.base/watchpoints.exp: watchpoint hit count is 3
FAIL: gdb.base/watchpoints.exp: watchpoint hit, fourth time
FAIL: gdb.base/watchpoints.exp: watchpoint hit count is 4
FAIL: gdb.base/watchpoints.exp: watchpoint hit, fifth time
FAIL: gdb.base/watchpoints.exp: watchpoint hit count is 5
UNRESOLVED: gdb.base/whatis.exp: whatis char
PASS: gdb.base/whatis.exp: whatis signed char
PASS: gdb.base/whatis.exp: whatis unsigned char
PASS: gdb.base/whatis.exp: whatis short
PASS: gdb.base/whatis.exp: whatis signed short
PASS: gdb.base/whatis.exp: whatis unsigned short
PASS: gdb.base/whatis.exp: whatis int
PASS: gdb.base/whatis.exp: whatis signed int
PASS: gdb.base/whatis.exp: whatis unsigned int
PASS: gdb.base/whatis.exp: whatis long
PASS: gdb.base/whatis.exp: whatis signed long
PASS: gdb.base/whatis.exp: whatis unsigned long
PASS: gdb.base/whatis.exp: whatis unsigned long long
PASS: gdb.base/whatis.exp: whatis float
PASS: gdb.base/whatis.exp: whatis double
PASS: gdb.base/whatis.exp: whatis char array
PASS: gdb.base/whatis.exp: whatis signed char array
PASS: gdb.base/whatis.exp: whatis unsigned char array
PASS: gdb.base/whatis.exp: whatis short array
PASS: gdb.base/whatis.exp: whatis signed short array
PASS: gdb.base/whatis.exp: whatis unsigned short array
PASS: gdb.base/whatis.exp: whatis int array
PASS: gdb.base/whatis.exp: whatis signed int array
PASS: gdb.base/whatis.exp: whatis unsigned int array
PASS: gdb.base/whatis.exp: whatis long array
PASS: gdb.base/whatis.exp: whatis signed long array
PASS: gdb.base/whatis.exp: whatis unsigned long array
PASS: gdb.base/whatis.exp: whatis unsigned long array
PASS: gdb.base/whatis.exp: whatis float array
PASS: gdb.base/whatis.exp: whatis double array
PASS: gdb.base/whatis.exp: whatis char pointer
PASS: gdb.base/whatis.exp: whatis signed char pointer
PASS: gdb.base/whatis.exp: whatis unsigned char pointer
PASS: gdb.base/whatis.exp: whatis short pointer
PASS: gdb.base/whatis.exp: whatis signed short pointer
PASS: gdb.base/whatis.exp: whatis unsigned short pointer
PASS: gdb.base/whatis.exp: whatis int pointer
PASS: gdb.base/whatis.exp: whatis signed int pointer
PASS: gdb.base/whatis.exp: whatis unsigned int pointer
PASS: gdb.base/whatis.exp: whatis long pointer
PASS: gdb.base/whatis.exp: whatis signed long pointer
PASS: gdb.base/whatis.exp: whatis unsigned long pointer
PASS: gdb.base/whatis.exp: whatis long long pointer
PASS: gdb.base/whatis.exp: whatis signed long long pointer
PASS: gdb.base/whatis.exp: whatis unsigned long long pointer
PASS: gdb.base/whatis.exp: whatis float pointer
PASS: gdb.base/whatis.exp: whatis double pointer
PASS: gdb.base/whatis.exp: whatis named structure
PASS: gdb.base/whatis.exp: whatis named structure using type name
PASS: gdb.base/whatis.exp: whatis unnamed structure
PASS: gdb.base/whatis.exp: whatis &v_struct1
PASS: gdb.base/whatis.exp: whatis &v_struct2
PASS: gdb.base/whatis.exp: whatis v_struct_ptr1
PASS: gdb.base/whatis.exp: whatis v_struct_ptr2
PASS: gdb.base/whatis.exp: whatis &v_struct_ptr1
PASS: gdb.base/whatis.exp: whatis &v_struct_ptr2
PASS: gdb.base/whatis.exp: whatis v_struct1.v_char_member
PASS: gdb.base/whatis.exp: whatis v_struct2.v_char_member
PASS: gdb.base/whatis.exp: whatis v_struct_ptr1->v_char_member
PASS: gdb.base/whatis.exp: whatis v_struct_ptr2->v_char_member
PASS: gdb.base/whatis.exp: whatis &(v_struct1.v_char_member)
PASS: gdb.base/whatis.exp: whatis &(v_struct2.v_char_member)
PASS: gdb.base/whatis.exp: whatis &(v_struct_ptr1->v_char_member)
PASS: gdb.base/whatis.exp: whatis &(v_struct_ptr2->v_char_member)
PASS: gdb.base/whatis.exp: whatis named union
PASS: gdb.base/whatis.exp: whatis named union using type name
PASS: gdb.base/whatis.exp: whatis unnamed union
PASS: gdb.base/whatis.exp: whatis &v_union
PASS: gdb.base/whatis.exp: whatis &v_union2
PASS: gdb.base/whatis.exp: whatis v_union_ptr
PASS: gdb.base/whatis.exp: whatis v_union_ptr2
PASS: gdb.base/whatis.exp: whatis &v_union_ptr
PASS: gdb.base/whatis.exp: whatis &v_union_ptr2
PASS: gdb.base/whatis.exp: whatis v_union.v_char_member
PASS: gdb.base/whatis.exp: whatis v_union2.v_char_member
PASS: gdb.base/whatis.exp: whatis v_union_ptr->v_char_member
PASS: gdb.base/whatis.exp: whatis v_union_ptr2->v_char_member
PASS: gdb.base/whatis.exp: whatis &(v_union.v_char_member)
PASS: gdb.base/whatis.exp: whatis &(v_union2.v_char_member)
PASS: gdb.base/whatis.exp: whatis &(v_union_ptr->v_char_member)
PASS: gdb.base/whatis.exp: whatis &(v_union_ptr2->v_char_member)
PASS: gdb.base/whatis.exp: whatis char function
PASS: gdb.base/whatis.exp: whatis signed char function
PASS: gdb.base/whatis.exp: whatis unsigned char function
PASS: gdb.base/whatis.exp: whatis short function
PASS: gdb.base/whatis.exp: whatis signed short function
PASS: gdb.base/whatis.exp: whatis unsigned short function
PASS: gdb.base/whatis.exp: whatis int function
PASS: gdb.base/whatis.exp: whatis signed int function
PASS: gdb.base/whatis.exp: whatis unsigned int function
PASS: gdb.base/whatis.exp: whatis long function
PASS: gdb.base/whatis.exp: whatis signed long function
PASS: gdb.base/whatis.exp: whatis unsigned long function
PASS: gdb.base/whatis.exp: whatis long long function
PASS: gdb.base/whatis.exp: whatis signed long long function
PASS: gdb.base/whatis.exp: whatis unsigned long long function
PASS: gdb.base/whatis.exp: whatis float function
PASS: gdb.base/whatis.exp: whatis double function
PASS: gdb.base/whatis.exp: whatis complicated structure
PASS: gdb.base/whatis.exp: whatis complicated union
PASS: gdb.base/whatis.exp: whatis enumeration
PASS: gdb.base/whatis.exp: whatis enumeration using type name
PASS: gdb.base/whatis.exp: whatis outer structure
PASS: gdb.base/whatis.exp: whatis outer structure member
PASS: gdb.base/whatis.exp: whatis inner structure
PASS: gdb.base/whatis.exp: whatis inner structure member
PASS: gdb.base/whatis.exp: whatis inner union
PASS: gdb.base/whatis.exp: whatis inner union member
PASS: gdb.base/whatis.exp: whatis using typedef type name
PASS: gdb.base/whatis.exp: whatis applied to variable defined by typedef
PASS: gdb.base/whatis.exp: whatis applied to pointer to pointer to function
PASS: gdb.base/whatis.exp: whatis applied to const pointer to pointer to function
PASS: gdb.base/whatis.exp: whatis applied to pointer to const pointer to function
PASS: gdb.base/whatis.exp: whatis applied to pointer to function returning pointer to int
PASS: gdb.base/whatis.exp: whatis applied to pointer to pointer to function returning pointer to int
PASS: gdb.base/whatis.exp: whatis applied to pointer to function returning pointer to array
PASS: gdb.base/whatis.exp: whatis applied to pointer to function taking int,int and returning int
PASS: gdb.base/whatis.exp: whatis applied to pointer to function taking const int ptr and varargs and returning int
PASS: gdb.base/whatis.exp: whatis applied to function with types trailing 'void'
PASS: gdb.base/whatis.exp: whatis applied to function with 'void' parameter type
UNTESTED: gdb.base/wrong_frame_bt_full.exp: could not run to opaque_routine
UNSUPPORTED: gdb.btrace/buffer-size.exp: target does not support record-btrace
UNSUPPORTED: gdb.btrace/data.exp: target does not support record-btrace
UNSUPPORTED: gdb.btrace/delta.exp: target does not support record-btrace
UNSUPPORTED: gdb.btrace/dlopen.exp: target does not support record-btrace
UNSUPPORTED: gdb.btrace/enable-running.exp: target does not support record-btrace
UNSUPPORTED: gdb.btrace/enable.exp: target does not support record-btrace
UNSUPPORTED: gdb.btrace/exception.exp: target does not support record-btrace
UNSUPPORTED: gdb.btrace/function_call_history.exp: target does not support record-btrace
UNSUPPORTED: gdb.btrace/gcore.exp: target does not support record-btrace
UNSUPPORTED: gdb.btrace/instruction_history.exp: target does not support record-btrace
UNSUPPORTED: gdb.btrace/multi-thread-step.exp: target does not support record-btrace
UNSUPPORTED: gdb.btrace/nohist.exp: target does not support record-btrace
UNSUPPORTED: gdb.btrace/non-stop.exp: target does not support record-btrace
UNSUPPORTED: gdb.btrace/reconnect.exp: target does not support record-btrace
UNSUPPORTED: gdb.btrace/record_goto-step.exp: target does not support record-btrace
UNSUPPORTED: gdb.btrace/record_goto.exp: target does not support record-btrace
UNSUPPORTED: gdb.btrace/rn-dl-bind.exp: target does not support record-btrace
UNSUPPORTED: gdb.btrace/segv.exp: target does not support record-btrace
UNSUPPORTED: gdb.btrace/step.exp: target does not support record-btrace
UNSUPPORTED: gdb.btrace/stepi.exp: target does not support record-btrace
UNSUPPORTED: gdb.btrace/tailcall-only.exp: target does not support record-btrace
UNSUPPORTED: gdb.btrace/tailcall.exp: target does not support record-btrace
UNSUPPORTED: gdb.btrace/tsx.exp: target does not support PT
UNSUPPORTED: gdb.btrace/unknown_functions.exp: target does not support record-btrace
UNSUPPORTED: gdb.btrace/vdso.exp: target does not support record-btrace
PASS: gdb.compile/compile-tls.exp: successfully compiled posix threads test case
FAIL: gdb.compile/compile-tls.exp: can't run to main
PASS: gdb.compile/compile.exp: test compile code command without running inferior
PASS: gdb.compile/compile.exp: test compile command without running inferior
PASS: gdb.compile/compile.exp: test compile file command without running inferior
UNTESTED: gdb.cp/abstract-origin.exp: abstract-origin
PASS: gdb.cp/annota2.exp: set height 0
PASS: gdb.cp/annota2.exp: breakpoint main
PASS: gdb.cp/annota2.exp: annotation set at level 2
FAIL: gdb.cp/annota2.exp: run until main breakpoint (GDB internal error)
UNRESOLVED: gdb.cp/annota2.exp: print class (got interactive prompt)
FAIL: gdb.cp/annota2.exp: continue until exit (GDB internal error)
UNRESOLVED: gdb.cp/annota2.exp: delete bps (timeout)
FAIL: gdb.cp/annota2.exp: break at main (GDB internal error)
UNRESOLVED: gdb.cp/annota2.exp: run until main breakpoint (GDB internal error)
UNRESOLVED: gdb.cp/annota2.exp: set watch on a.x (GDB internal error)
UNRESOLVED: gdb.cp/annota2.exp: watch triggered on a.x (GDB internal error)
UNRESOLVED: gdb.cp/annota2.exp: annotate-quit
PASS: gdb.cp/annota3.exp: set height 0
PASS: gdb.cp/annota3.exp: breakpoint main
PASS: gdb.cp/annota3.exp: annotation set at level 3
FAIL: gdb.cp/annota3.exp: first run until main breakpoint (GDB internal error)
UNRESOLVED: gdb.cp/annota3.exp: print class (GDB internal error)
UNRESOLVED: gdb.cp/annota3.exp: continue to exit (GDB internal error)
UNRESOLVED: gdb.cp/annota3.exp: delete bps (timeout)
FAIL: gdb.cp/annota3.exp: break at main (GDB internal error)
UNRESOLVED: gdb.cp/annota3.exp: second run until main breakpoint (GDB internal error)
UNRESOLVED: gdb.cp/annota3.exp: set watch on a.x (GDB internal error)
UNRESOLVED: gdb.cp/annota3.exp: watch triggered on a.x (GDB internal error)
UNRESOLVED: gdb.cp/annota3.exp: annotate-quit (GDB internal error)
UNRESOLVED: gdb.cp/anon-struct.exp: print type of t::t
PASS: gdb.cp/anon-struct.exp: print type of X::t2
PASS: gdb.cp/anon-struct.exp: print type of X::t2::t2
PASS: gdb.cp/anon-struct.exp: print type of t3::~t3
UNRESOLVED: gdb.cp/arg-reference.exp: no false reference
UNTESTED: gdb.cp/baseenum.exp: could not run to main
FAIL: gdb.cp/bool.exp: print return_true()
FAIL: gdb.cp/bool.exp: print return_false()
UNRESOLVED: gdb.cp/call-c.exp: b 42
FAIL: gdb.cp/call-c.exp: print foo(1)
FAIL: gdb.cp/call-c.exp: continue to bp
FAIL: gdb.cp/call-c.exp: print rf->func()
FAIL: gdb.cp/call-c.exp: print handle->func()
UNRESOLVED: gdb.cp/class2.exp: set print object off
PASS: gdb.cp/class2.exp: set print symbol off
UNRESOLVED: gdb.cp/cmpd-minsyms.exp: setting breakpoint at 'GDB<int>::a() const'
PASS: gdb.cp/cmpd-minsyms.exp: setting breakpoint at 'GDB<int>::b() volatile'
PASS: gdb.cp/cmpd-minsyms.exp: setting breakpoint at 'GDB<int>::c() const volatile'
PASS: gdb.cp/cmpd-minsyms.exp: set language c++
PASS: gdb.cp/cmpd-minsyms.exp: setting breakpoint at GDB<int>::operator ==
PASS: gdb.cp/cmpd-minsyms.exp: setting breakpoint at GDB<int>::operator==(GDB<int> const&)
PASS: gdb.cp/cmpd-minsyms.exp: setting breakpoint at GDB<char>::harder(char)
PASS: gdb.cp/cmpd-minsyms.exp: setting breakpoint at GDB<int>::harder(int)
PASS: gdb.cp/cmpd-minsyms.exp: setting breakpoint at "int GDB<char>::even_harder<int>(char)"
PASS: gdb.cp/cmpd-minsyms.exp: setting breakpoint at GDB<int>::simple()
UNRESOLVED: gdb.cp/cp-relocate.exp: info functions
PASS: gdb.cp/cp-relocate.exp: get address of func<1>(int)
PASS: gdb.cp/cp-relocate.exp: get address of func<2>(int)
PASS: gdb.cp/cp-relocate.exp: get address of caller
PASS: gdb.cp/cp-relocate.exp: C++ functions have different addresses
PASS: gdb.cp/cp-relocate.exp: info file
PASS: gdb.cp/cp-relocate.exp: add-symbol-file cp-relocate.o
PASS: gdb.cp/cp-relocate.exp: break *func<1>(int)
PASS: gdb.cp/cp-relocate.exp: break *func<2>(int)
PASS: gdb.cp/cpcompletion.exp: complete class methods
PASS: gdb.cp/cpcompletion.exp: complete class methods beginning with F
UNRESOLVED: gdb.cp/cplabel.exp: could not run to main
PASS: gdb.cp/cplusfuncs.exp: set width 0
PASS: gdb.cp/cplusfuncs.exp: set language c++
PASS: gdb.cp/cplusfuncs.exp: detect dm_operator_comma
PASS: gdb.cp/cplusfuncs.exp: detect dm_operator_char_star
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_char_star
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_foo_ref
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_int_star
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_long_star
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_unsigned_int
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_void
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_void_star
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_short
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_unsigned_short
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_long
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_unsigned_long
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_typedef
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(void)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(char)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(signed char)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(unsigned char)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(short)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(unsigned short)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(unsigned int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(long)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(unsigned long)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(float)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(double)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int, int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int, int, int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int, int, int, int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int, int, int, int, int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int, int, int, int, int, int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int, int, int, int, int, int, int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int, int, int, int, int, int, int, int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int, int, int, int, int, int, int, int, int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator*(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator%(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator-(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator>>(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator!=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator>(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator>=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator|(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator&&(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator!(void)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator++(int)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator+=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator*=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator%=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator>>=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator|=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator,(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator/(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator+(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator<<(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator==(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator<(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator<=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator&(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator^(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator||(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator~(void)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator--(int)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator->(void)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator-=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator/=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator<<=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator&=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator^=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator->*(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator[](foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator()(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator new
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator new[]
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator delete(void*)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator delete(void*)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator int(void)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator char*(void)
PASS: gdb.cp/cplusfuncs.exp: print &hairyfunc1
PASS: gdb.cp/cplusfuncs.exp: print &hairyfunc2
PASS: gdb.cp/cplusfuncs.exp: print &hairyfunc3
PASS: gdb.cp/cplusfuncs.exp: print &hairyfunc4
PASS: gdb.cp/cplusfuncs.exp: print &hairyfunc5
PASS: gdb.cp/cplusfuncs.exp: print &hairyfunc6
PASS: gdb.cp/cplusfuncs.exp: print &hairyfunc7
PASS: gdb.cp/cplusfuncs.exp: info function for "operator\*("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator%("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator-("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator>>("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator!=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator>("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator>=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator|("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator&&("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator!("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator++("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator+=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator\*=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator%=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator>>=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator|=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator,("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator/("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator+("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator<<("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator==("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator<("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator<=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator&("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator^("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator||("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator~("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator--("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator->("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator-=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator/=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator<<=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator&=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator^=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator->\*("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator\[\]("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator new("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator delete("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator int("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator()("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator char\*("
PASS: gdb.cp/cplusfuncs.exp: list foo::operator int*
UNRESOLVED: gdb.cp/debug-expr.exp: set language c++
PASS: gdb.cp/debug-expr.exp: set debug expression 1
PASS: gdb.cp/debug-expr.exp: print static_cast<void*>(0)
PASS: gdb.cp/debug-expr.exp: print reinterpret_cast<void*>(0)
PASS: gdb.cp/debug-expr.exp: print dynamic_cast<void*>(0)
PASS: gdb.cp/demangle.exp: set language c++
PASS: gdb.cp/demangle.exp: set width 0
PASS: gdb.cp/demangle.exp: lucid: WS__FR7istream: lucid: set demangle-style
PASS: gdb.cp/demangle.exp: lucid: WS__FR7istream: lucid: check demangling style
PASS: gdb.cp/demangle.exp: lucid: WS__FR7istream
PASS: gdb.cp/demangle.exp: lucid: __aa__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __aad__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __ad__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __adv__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __adv__7complexF7complex
PASS: gdb.cp/demangle.exp: lucid: __aer__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __als__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __amd__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __ami__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __amu__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __amu__7complexF7complex
PASS: gdb.cp/demangle.exp: lucid: __aor__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __apl__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __ars__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __as__18istream_withassignFP9streambuf
PASS: gdb.cp/demangle.exp: lucid: __as__18istream_withassignFR7istream
PASS: gdb.cp/demangle.exp: lucid: __as__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __as__3iosFR3ios
PASS: gdb.cp/demangle.exp: lucid: __cl__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __cm__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __co__3fooFv
PASS: gdb.cp/demangle.exp: lucid: __ct__10istrstreamFPc
PASS: gdb.cp/demangle.exp: lucid: __ct__10istrstreamFPci
PASS: gdb.cp/demangle.exp: lucid: __ct__10ostrstreamFPciT2
PASS: gdb.cp/demangle.exp: lucid: __ct__10ostrstreamFv
PASS: gdb.cp/demangle.exp: lucid: __ct__10smanip_intFPFR3iosi_R3iosi
PASS: gdb.cp/demangle.exp: lucid: __ct__11c_exceptionFPcRC7complexT2
PASS: gdb.cp/demangle.exp: lucid: __ct__11fstreambaseFPCciT2
PASS: gdb.cp/demangle.exp: lucid: __ct__11fstreambaseFi
PASS: gdb.cp/demangle.exp: lucid: __ct__11fstreambaseFiPcT1
PASS: gdb.cp/demangle.exp: lucid: __ct__11fstreambaseFv
PASS: gdb.cp/demangle.exp: lucid: __ct__11smanip_longFPFR3iosl_R3iosl
PASS: gdb.cp/demangle.exp: lucid: __ct__11stdiostreamFP4FILE
PASS: gdb.cp/demangle.exp: lucid: __ct__12strstreambufFPFl_PvPFPv_v
PASS: gdb.cp/demangle.exp: lucid: __ct__12strstreambufFPUciT1
PASS: gdb.cp/demangle.exp: lucid: __ct__12strstreambufFPciT1
PASS: gdb.cp/demangle.exp: lucid: __ct__12strstreambufFi
PASS: gdb.cp/demangle.exp: lucid: __ct__12strstreambufFv
PASS: gdb.cp/demangle.exp: lucid: __ct__13strstreambaseFPciT1
PASS: gdb.cp/demangle.exp: lucid: __ct__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __ct__3fooFi
PASS: gdb.cp/demangle.exp: lucid: __ct__3fooFiN31
PASS: gdb.cp/demangle.exp: lucid: __ct__3fooFiPCc
PASS: gdb.cp/demangle.exp: lucid: __ct__3fooFiR3fooT1T2T1T2
PASS: gdb.cp/demangle.exp: lucid: __ct__3iosFP9streambuf
PASS: gdb.cp/demangle.exp: lucid: __ct__7filebufFiPcT1
PASS: gdb.cp/demangle.exp: lucid: __ct__7fstreamFPCciT2
PASS: gdb.cp/demangle.exp: lucid: __ct__7fstreamFiPcT1
PASS: gdb.cp/demangle.exp: lucid: __ct__7istreamFP9streambuf
PASS: gdb.cp/demangle.exp: lucid: __ct__7istreamFP9streambufiP7ostream
PASS: gdb.cp/demangle.exp: lucid: __ct__7istreamFiPcT1
PASS: gdb.cp/demangle.exp: lucid: __ct__7istreamFiT1P7ostream
PASS: gdb.cp/demangle.exp: lucid: __ct__7ostreamFP9streambuf
PASS: gdb.cp/demangle.exp: lucid: __ct__7ostreamFiPc
PASS: gdb.cp/demangle.exp: lucid: __ct__8ifstreamFPCciT2
PASS: gdb.cp/demangle.exp: lucid: __ct__8ifstreamFiPcT1
PASS: gdb.cp/demangle.exp: lucid: __ct__Q23foo3barFv
PASS: gdb.cp/demangle.exp: lucid: __ct__Q33foo3bar4bellFv
PASS: gdb.cp/demangle.exp: lucid: __dl__3fooSFPv
PASS: gdb.cp/demangle.exp: lucid: __dl__FPv
PASS: gdb.cp/demangle.exp: lucid: __dt__10istrstreamFv
PASS: gdb.cp/demangle.exp: lucid: __dt__Q23foo3barFv
PASS: gdb.cp/demangle.exp: lucid: __dt__Q33foo3bar4bellFv
PASS: gdb.cp/demangle.exp: lucid: __dv__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __dv__F7complexT1
PASS: gdb.cp/demangle.exp: lucid: __eq__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __er__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __ge__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __gt__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __le__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __ls__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFP9streambuf
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFPCc
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFPFR3ios_R3ios
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFPv
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFUi
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFUl
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFd
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFf
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFi
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFl
PASS: gdb.cp/demangle.exp: lucid: __ls__FR7ostream7complex
PASS: gdb.cp/demangle.exp: lucid: __lt__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __md__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __mi__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __ml__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __ml__F7complexT1
PASS: gdb.cp/demangle.exp: lucid: __mm__3fooFi
PASS: gdb.cp/demangle.exp: lucid: __ne__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __nt__3fooFv
PASS: gdb.cp/demangle.exp: lucid: __nw__3fooSFi
PASS: gdb.cp/demangle.exp: lucid: __nw__FUi
PASS: gdb.cp/demangle.exp: lucid: __nw__FUiPv
PASS: gdb.cp/demangle.exp: lucid: __oo__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __opPc__3fooFv
PASS: gdb.cp/demangle.exp: lucid: __opi__3fooFv
PASS: gdb.cp/demangle.exp: lucid: __or__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __pl__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __pp__3fooFi
PASS: gdb.cp/demangle.exp: lucid: __pt__3fooFv
PASS: gdb.cp/demangle.exp: lucid: __rm__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __rs__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFP9streambuf
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFPFR3ios_R3ios
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFPFR7istream_R7istream
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFPUc
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFPc
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFRUi
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFRUl
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFRUs
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFRd
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFRf
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFRi
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFRl
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFRs
PASS: gdb.cp/demangle.exp: lucid: __rs__FR7istreamR7complex
PASS: gdb.cp/demangle.exp: lucid: __vc__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __vtbl__10istrstream
PASS: gdb.cp/demangle.exp: lucid: __vtbl__17ostream__iostream__19iostream_withassign
PASS: gdb.cp/demangle.exp: lucid: __vtbl__3ios
PASS: gdb.cp/demangle.exp: lucid: __vtbl__3ios__13strstreambase
KFAIL: gdb.cp/demangle.exp: lucid: __vtbl__3foo__vt_cc_main_ (PRMS: gdb/945)
PASS: gdb.cp/demangle.exp: lucid: abs__F7complex
PASS: gdb.cp/demangle.exp: lucid: allocate__9streambufFv
PASS: gdb.cp/demangle.exp: lucid: attach__11fstreambaseFi
PASS: gdb.cp/demangle.exp: lucid: bitalloc__3iosSFv
PASS: gdb.cp/demangle.exp: lucid: chr__FiT1
PASS: gdb.cp/demangle.exp: lucid: complex_error__FR11c_exception
PASS: gdb.cp/demangle.exp: lucid: complexfunc2__FPFPc_i
PASS: gdb.cp/demangle.exp: lucid: complexfunc3__FPFPFPl_s_i
PASS: gdb.cp/demangle.exp: lucid: complexfunc4__FPFPFPc_s_i
PASS: gdb.cp/demangle.exp: lucid: complexfunc5__FPFPc_PFl_i
PASS: gdb.cp/demangle.exp: lucid: complexfunc6__FPFPi_PFl_i
PASS: gdb.cp/demangle.exp: lucid: complexfunc7__FPFPFPc_i_PFl_i
PASS: gdb.cp/demangle.exp: lucid: complicated_put__7ostreamFc
PASS: gdb.cp/demangle.exp: lucid: conv10__FlPc
PASS: gdb.cp/demangle.exp: lucid: conv16__FUlPc
PASS: gdb.cp/demangle.exp: lucid: dec__FR3ios
PASS: gdb.cp/demangle.exp: lucid: dec__Fli
PASS: gdb.cp/demangle.exp: lucid: dofield__FP7ostreamPciT2T3
PASS: gdb.cp/demangle.exp: lucid: flags__3iosFl
PASS: gdb.cp/demangle.exp: lucid: flags__3iosFv
PASS: gdb.cp/demangle.exp: lucid: foo__FiN31
PASS: gdb.cp/demangle.exp: lucid: foo__FiR3fooT1T2T1T2
PASS: gdb.cp/demangle.exp: lucid: foo___3barFl
PASS: gdb.cp/demangle.exp: lucid: form__FPCce
PASS: gdb.cp/demangle.exp: lucid: get__7istreamFPcic
PASS: gdb.cp/demangle.exp: lucid: get__7istreamFR9streambufc
PASS: gdb.cp/demangle.exp: lucid: get_complicated__7istreamFRUc
PASS: gdb.cp/demangle.exp: lucid: get_complicated__7istreamFRc
PASS: gdb.cp/demangle.exp: lucid: getline__7istreamFPUcic
PASS: gdb.cp/demangle.exp: lucid: getline__7istreamFPcic
PASS: gdb.cp/demangle.exp: lucid: ignore__7istreamFiT1
PASS: gdb.cp/demangle.exp: lucid: init__12strstreambufFPciT1
PASS: gdb.cp/demangle.exp: lucid: init__3iosFP9streambuf
PASS: gdb.cp/demangle.exp: lucid: initcount__13Iostream_init
PASS: gdb.cp/demangle.exp: lucid: ipfx__7istreamFi
PASS: gdb.cp/demangle.exp: lucid: ls_complicated__7ostreamFUc
PASS: gdb.cp/demangle.exp: lucid: ls_complicated__7ostreamFc
PASS: gdb.cp/demangle.exp: lucid: open__11fstreambaseFPCciT2
PASS: gdb.cp/demangle.exp: lucid: open__7filebufFPCciT2
PASS: gdb.cp/demangle.exp: lucid: overload1arg__FSc
PASS: gdb.cp/demangle.exp: lucid: overload1arg__FUc
PASS: gdb.cp/demangle.exp: lucid: overload1arg__FUi
PASS: gdb.cp/demangle.exp: lucid: overload1arg__FUl
PASS: gdb.cp/demangle.exp: lucid: overload1arg__FUs
PASS: gdb.cp/demangle.exp: lucid: overload1arg__Fc
PASS: gdb.cp/demangle.exp: lucid: overload1arg__Fd
PASS: gdb.cp/demangle.exp: lucid: overload1arg__Ff
PASS: gdb.cp/demangle.exp: lucid: overload1arg__Fi
PASS: gdb.cp/demangle.exp: lucid: overload1arg__Fl
PASS: gdb.cp/demangle.exp: lucid: overload1arg__Fs
PASS: gdb.cp/demangle.exp: lucid: overload1arg__Fv
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiN21
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiN31
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiN41
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiN51
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiN61
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiN71
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiN81
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiN91
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiN91N11
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiT1
PASS: gdb.cp/demangle.exp: lucid: polar__FdT1
PASS: gdb.cp/demangle.exp: lucid: pow__F7complexT1
PASS: gdb.cp/demangle.exp: lucid: pow__F7complexd
PASS: gdb.cp/demangle.exp: lucid: pow__F7complexi
PASS: gdb.cp/demangle.exp: lucid: pow__Fd7complex
PASS: gdb.cp/demangle.exp: lucid: pstart__FPciT2
PASS: gdb.cp/demangle.exp: lucid: put__7ostreamFc
PASS: gdb.cp/demangle.exp: lucid: read__7istreamFPci
PASS: gdb.cp/demangle.exp: lucid: resetiosflags__FR3iosl
PASS: gdb.cp/demangle.exp: lucid: restore_errno__FRi
PASS: gdb.cp/demangle.exp: lucid: rs_complicated__7istreamFRUc
PASS: gdb.cp/demangle.exp: lucid: rs_complicated__7istreamFRc
PASS: gdb.cp/demangle.exp: lucid: seekg__7istreamFl8seek_dir
PASS: gdb.cp/demangle.exp: lucid: seekoff__12strstreambufFl8seek_diri
PASS: gdb.cp/demangle.exp: lucid: seekoff__9streambufFlQ2_3ios12ios_seek_diri
PASS: gdb.cp/demangle.exp: lucid: seekpos__9streambufFli
PASS: gdb.cp/demangle.exp: lucid: set_new_handler__FPFv_v
PASS: gdb.cp/demangle.exp: lucid: setb__9streambufFPcT1i
PASS: gdb.cp/demangle.exp: lucid: setb__FR3iosi
PASS: gdb.cp/demangle.exp: lucid: setbuf__11fstreambaseFPci
PASS: gdb.cp/demangle.exp: lucid: setbuf__9streambufFPUci
PASS: gdb.cp/demangle.exp: lucid: setbuf__9streambufFPciT2
PASS: gdb.cp/demangle.exp: lucid: setf__3iosFlT1
PASS: gdb.cp/demangle.exp: lucid: setfill__FR3iosi
PASS: gdb.cp/demangle.exp: lucid: setg__9streambufFPcN21
PASS: gdb.cp/demangle.exp: lucid: setp__9streambufFPcT1
PASS: gdb.cp/demangle.exp: lucid: sputn__9streambufFPCci
PASS: gdb.cp/demangle.exp: lucid: str__FPCci
PASS: gdb.cp/demangle.exp: lucid: tie__3iosFP7ostream
PASS: gdb.cp/demangle.exp: lucid: uconv10__FUlPc
PASS: gdb.cp/demangle.exp: lucid: write__7ostreamFPCci
PASS: gdb.cp/demangle.exp: lucid: xget__7istreamFPc
PASS: gdb.cp/demangle.exp: lucid: xsgetn__9streambufFPci
PASS: gdb.cp/demangle.exp: lucid: xsputn__9streambufFPCci
PASS: gdb.cp/demangle.exp: lucid: _Utf390_1__1_9223372036854775807__9223372036854775
PASS: gdb.cp/demangle.exp: gnu: Abort__FP6EditoriPCc: gnu: set demangle-style
PASS: gdb.cp/demangle.exp: gnu: Abort__FP6EditoriPCc: gnu: check demangling style
PASS: gdb.cp/demangle.exp: gnu: Abort__FP6EditoriPCc
PASS: gdb.cp/demangle.exp: gnu: AddAlignment__9ivTSolverUiP12ivInteractorP7ivTGlue
PASS: gdb.cp/demangle.exp: gnu: Append__15NameChooserViewPCc
PASS: gdb.cp/demangle.exp: gnu: ArrowheadIntersects__9ArrowLineP9ArrowheadR6BoxObjP7Graphic
PASS: gdb.cp/demangle.exp: gnu: AtEnd__13ivRubberGroup
PASS: gdb.cp/demangle.exp: gnu: BgFilter__9ivTSolverP12ivInteractor
PASS: gdb.cp/demangle.exp: gnu: BitPatterntoa__FRC10BitPatternccc
PASS: gdb.cp/demangle.exp: gnu: Check__6UArrayi
PASS: gdb.cp/demangle.exp: gnu: CoreConstDecls__8TextCodeR7ostream
PASS: gdb.cp/demangle.exp: gnu: Detach__8StateVarP12StateVarView
PASS: gdb.cp/demangle.exp: gnu: Done__9ComponentG8Iterator
PASS: gdb.cp/demangle.exp: gnu: DrawDestinationTransformedImage__FP7_XImageiiT0iiUlUiiiUiUlUlP4_XGCRC13ivTransformeriiii
PASS: gdb.cp/demangle.exp: gnu: Edit__12StringEditorPCcii
PASS: gdb.cp/demangle.exp: gnu: Effect__11RelateManipR7ivEvent
PASS: gdb.cp/demangle.exp: gnu: FilterName__FPCc
PASS: gdb.cp/demangle.exp: gnu: Filter__6PSTextPCci
PASS: gdb.cp/demangle.exp: gnu: FindColor__7CatalogPCciii
PASS: gdb.cp/demangle.exp: gnu: FindFixed__FRP4CNetP4CNet
PASS: gdb.cp/demangle.exp: gnu: FindFont__7CatalogPCcN21
PASS: gdb.cp/demangle.exp: gnu: Fix48_abort__FR8twolongs
PASS: gdb.cp/demangle.exp: gnu: GetBarInfo__15iv2_6_VScrollerP13ivPerspectiveRiT2
PASS: gdb.cp/demangle.exp: gnu: GetBgColor__C9ivPainter
PASS: gdb.cp/demangle.exp: gnu: Iisdouble__FPC6IntRep
PASS: gdb.cp/demangle.exp: gnu: InsertBody__15H_PullrightMenuii
PASS: gdb.cp/demangle.exp: gnu: InsertCharacter__9TextManipc
PASS: gdb.cp/demangle.exp: gnu: InsertToplevel__7ivWorldP12ivInteractorT1
PASS: gdb.cp/demangle.exp: gnu: InsertToplevel__7ivWorldP12ivInteractorT1iiUi
PASS: gdb.cp/demangle.exp: gnu: IsADirectory__FPCcR4stat
PASS: gdb.cp/demangle.exp: gnu: IsAGroup__FP11GraphicViewP11GraphicComp
PASS: gdb.cp/demangle.exp: gnu: IsA__10ButtonCodeUl
PASS: gdb.cp/demangle.exp: gnu: ReadName__FR7istreamPc
PASS: gdb.cp/demangle.exp: gnu: Redraw__13StringBrowseriiii
PASS: gdb.cp/demangle.exp: gnu: Rotate__13ivTransformerf
PASS: gdb.cp/demangle.exp: gnu: Rotated__C13ivTransformerf
PASS: gdb.cp/demangle.exp: gnu: Round__Ff
PASS: gdb.cp/demangle.exp: gnu: SetExport__16MemberSharedNameUi
PASS: gdb.cp/demangle.exp: gnu: Set__14ivControlState13ControlStatusUi
PASS: gdb.cp/demangle.exp: gnu: Set__5DFacePcii
PASS: gdb.cp/demangle.exp: gnu: VConvert__9ivTSolverP12ivInteractorRP8TElementT2
PASS: gdb.cp/demangle.exp: gnu: VConvert__9ivTSolverP7ivTGlueRP8TElement
PASS: gdb.cp/demangle.exp: gnu: VOrder__9ivTSolverUiRP12ivInteractorT2
PASS: gdb.cp/demangle.exp: gnu: Valid__7CatalogPCcRP4Tool
PASS: gdb.cp/demangle.exp: gnu: _10PageButton$__both
PASS: gdb.cp/demangle.exp: gnu: _3RNG$singleMantissa
PASS: gdb.cp/demangle.exp: gnu: _5IComp$_release
PASS: gdb.cp/demangle.exp: gnu: _$_10BitmapComp
PASS: gdb.cp/demangle.exp: gnu: _$_9__io_defs
PASS: gdb.cp/demangle.exp: gnu: _$_Q23foo3bar
PASS: gdb.cp/demangle.exp: gnu: _$_Q33foo3bar4bell
PASS: gdb.cp/demangle.exp: gnu: __10ivTelltaleiP7ivGlyph
PASS: gdb.cp/demangle.exp: gnu: __10ivViewportiP12ivInteractorUi
PASS: gdb.cp/demangle.exp: gnu: __10ostrstream
PASS: gdb.cp/demangle.exp: gnu: __10ostrstreamPcii
PASS: gdb.cp/demangle.exp: gnu: __11BasicDialogiPCcP13ivButtonStateN22Ui
PASS: gdb.cp/demangle.exp: gnu: __11BitmapTablei
PASS: gdb.cp/demangle.exp: gnu: __12ViewportCodeP12ViewportComp
PASS: gdb.cp/demangle.exp: gnu: __12iv2_6_BorderiPCci
PASS: gdb.cp/demangle.exp: gnu: __12iv2_6_Borderii
PASS: gdb.cp/demangle.exp: gnu: __12ivBackgroundiP7ivGlyphPC7ivColor
PASS: gdb.cp/demangle.exp: gnu: __12ivBreak_Listl
PASS: gdb.cp/demangle.exp: gnu: __14TextInteractoriPCcUi
PASS: gdb.cp/demangle.exp: gnu: __14iv2_6_MenuItemiP12ivInteractor
PASS: gdb.cp/demangle.exp: gnu: __14iv2_6_MenuItemiPCcP12ivInteractor
PASS: gdb.cp/demangle.exp: gnu: __20DisplayList_IteratorR11DisplayList
PASS: gdb.cp/demangle.exp: gnu: __3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __3fooiN31
PASS: gdb.cp/demangle.exp: gnu: __3fooiPCc
PASS: gdb.cp/demangle.exp: gnu: __3fooiRT0iT2iT2
PASS: gdb.cp/demangle.exp: gnu: __6GetOptiPPcPCc
PASS: gdb.cp/demangle.exp: gnu: __6KeyMapPT0
PASS: gdb.cp/demangle.exp: gnu: __7ivWorldPCcRiPPcPC12ivOptionDescPC14ivPropertyData
PASS: gdb.cp/demangle.exp: gnu: __7procbufPCci
PASS: gdb.cp/demangle.exp: gnu: __8ArrowCmdP6EditorUiUi
PASS: gdb.cp/demangle.exp: gnu: __9F_EllipseiiiiP7Graphic
PASS: gdb.cp/demangle.exp: gnu: __9FrameDataP9FrameCompi
PASS: gdb.cp/demangle.exp: gnu: __9HVGraphicP9CanvasVarP7Graphic
PASS: gdb.cp/demangle.exp: gnu: __Q23foo3bar
PASS: gdb.cp/demangle.exp: gnu: __Q33foo3bar4bell
PASS: gdb.cp/demangle.exp: gnu: __aa__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __aad__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __ad__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __adv__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __aer__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __als__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __amd__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __ami__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __aml__3FixRT0
PASS: gdb.cp/demangle.exp: gnu: __aml__5Fix16i
PASS: gdb.cp/demangle.exp: gnu: __aml__5Fix32RT0
PASS: gdb.cp/demangle.exp: gnu: __aor__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __apl__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __ars__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __as__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __cl__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __cl__6Normal
PASS: gdb.cp/demangle.exp: gnu: __cl__6Stringii
PASS: gdb.cp/demangle.exp: gnu: __cm__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __co__3foo
PASS: gdb.cp/demangle.exp: gnu: __dl__3fooPv
PASS: gdb.cp/demangle.exp: gnu: __dv__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __eq__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __er__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __ge__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __gt__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __le__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __ls__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __ls__FR7ostreamPFR3ios_R3ios
PASS: gdb.cp/demangle.exp: gnu: __ls__FR7ostreamR3Fix
PASS: gdb.cp/demangle.exp: gnu: __lt__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __md__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __mi__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __ml__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __mm__3fooi
PASS: gdb.cp/demangle.exp: gnu: __ne__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __ne__FRC7ComplexT0
PASS: gdb.cp/demangle.exp: gnu: __ne__FRC7Complexd
PASS: gdb.cp/demangle.exp: gnu: __ne__FRC9SubStringRC6String
PASS: gdb.cp/demangle.exp: gnu: __nt__3foo
PASS: gdb.cp/demangle.exp: gnu: __nw__3fooi
PASS: gdb.cp/demangle.exp: gnu: __oo__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __opPc__3foo
PASS: gdb.cp/demangle.exp: gnu: __opi__3foo
PASS: gdb.cp/demangle.exp: gnu: __or__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __pl__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __pp__3fooi
PASS: gdb.cp/demangle.exp: gnu: __rf__3foo
PASS: gdb.cp/demangle.exp: gnu: __rm__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __rs__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __vc__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: _gsub__6StringRC5RegexPCci
PASS: gdb.cp/demangle.exp: gnu: _new_Fix__FUs
PASS: gdb.cp/demangle.exp: gnu: _vt.foo
PASS: gdb.cp/demangle.exp: gnu: _vt.foo.bar
PASS: gdb.cp/demangle.exp: gnu: _vt$foo
PASS: gdb.cp/demangle.exp: gnu: _vt$foo$bar
PASS: gdb.cp/demangle.exp: gnu: append__7ivGlyphPT0
PASS: gdb.cp/demangle.exp: gnu: arg__FRC7Complex
PASS: gdb.cp/demangle.exp: gnu: clearok__FP7_win_sti
PASS: gdb.cp/demangle.exp: gnu: complexfunc2__FPFPc_i
PASS: gdb.cp/demangle.exp: gnu: complexfunc3__FPFPFPl_s_i
PASS: gdb.cp/demangle.exp: gnu: complexfunc4__FPFPFPc_s_i
PASS: gdb.cp/demangle.exp: gnu: complexfunc5__FPFPc_PFl_i
PASS: gdb.cp/demangle.exp: gnu: complexfunc6__FPFPi_PFl_i
PASS: gdb.cp/demangle.exp: gnu: complexfunc7__FPFPFPc_i_PFl_i
PASS: gdb.cp/demangle.exp: gnu: contains__C9BitStringRC10BitPattern
PASS: gdb.cp/demangle.exp: gnu: contains__C9BitStringRC12BitSubStringi
PASS: gdb.cp/demangle.exp: gnu: contains__C9BitStringRT0
PASS: gdb.cp/demangle.exp: gnu: div__FPC6IntRepT0P6IntRep
PASS: gdb.cp/demangle.exp: gnu: div__FPC6IntReplP6IntRep
PASS: gdb.cp/demangle.exp: gnu: div__FRC8RationalT0R8Rational
PASS: gdb.cp/demangle.exp: gnu: divide__FRC7IntegerT0R7IntegerT2
PASS: gdb.cp/demangle.exp: gnu: divide__FRC7IntegerlR7IntegerRl
PASS: gdb.cp/demangle.exp: gnu: enable__14DocumentViewerPCcUi
PASS: gdb.cp/demangle.exp: gnu: foo__FiN30
PASS: gdb.cp/demangle.exp: gnu: foo__FiR3fooiT1iT1
PASS: gdb.cp/demangle.exp: gnu: foo___3barl
PASS: gdb.cp/demangle.exp: gnu: insert__15ivClippingStacklRP8_XRegion
PASS: gdb.cp/demangle.exp: gnu: insert__16ChooserInfo_ListlR11ChooserInfo
PASS: gdb.cp/demangle.exp: gnu: insert__17FontFamilyRepListlRP15ivFontFamilyRep
PASS: gdb.cp/demangle.exp: gnu: leaveok__FP7_win_stc
PASS: gdb.cp/demangle.exp: gnu: left_mover__C7ivMFKitP12ivAdjustableP7ivStyle
PASS: gdb.cp/demangle.exp: gnu: matches__C9BitStringRC10BitPatterni
PASS: gdb.cp/demangle.exp: gnu: matches__C9SubStringRC5Regex
PASS: gdb.cp/demangle.exp: gnu: overload1arg__FSc
PASS: gdb.cp/demangle.exp: gnu: overload1arg__FUc
PASS: gdb.cp/demangle.exp: gnu: overload1arg__FUi
PASS: gdb.cp/demangle.exp: gnu: overload1arg__FUl
PASS: gdb.cp/demangle.exp: gnu: overload1arg__FUs
PASS: gdb.cp/demangle.exp: gnu: overload1arg__Fc
PASS: gdb.cp/demangle.exp: gnu: overload1arg__Fd
PASS: gdb.cp/demangle.exp: gnu: overload1arg__Ff
PASS: gdb.cp/demangle.exp: gnu: overload1arg__Fi
PASS: gdb.cp/demangle.exp: gnu: overload1arg__Fl
PASS: gdb.cp/demangle.exp: gnu: overload1arg__Fs
PASS: gdb.cp/demangle.exp: gnu: overload1arg__Fv
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fi
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fii
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fiii
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fiiii
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fiiiii
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fiiiiii
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fiiiiiii
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fiiiiiiii
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fiiiiiiiii
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fiiiiiiiiii
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fiiiiiiiiiii
PASS: gdb.cp/demangle.exp: gnu: pick__13ivCompositionP8ivCanvasRC12ivAllocationiR5ivHit
PASS: gdb.cp/demangle.exp: gnu: pointer__C11ivHScrollerRC7ivEventRC12ivAllocation
PASS: gdb.cp/demangle.exp: gnu: poke__8ivRasterUlUlffff
PASS: gdb.cp/demangle.exp: gnu: polar__Fdd
PASS: gdb.cp/demangle.exp: gnu: read__10osStdInputRPCc
PASS: gdb.cp/demangle.exp: gnu: scale__13ivTransformerff
PASS: gdb.cp/demangle.exp: gnu: scanw__12CursesWindowPCce
PASS: gdb.cp/demangle.exp: gnu: scmp__FPCcT0
PASS: gdb.cp/demangle.exp: gnu: sgetn__7filebufPci
PASS: gdb.cp/demangle.exp: gnu: shift__FP5_FrepiT0
PASS: gdb.cp/demangle.exp: gnu: test__C6BitSeti
PASS: gdb.cp/demangle.exp: gnu: test__C6BitSetii
PASS: gdb.cp/demangle.exp: gnu: testbit__FRC7Integerl
PASS: gdb.cp/demangle.exp: gnu: text_source__8Documentl
PASS: gdb.cp/demangle.exp: gnu: variance__6Erlangd
PASS: gdb.cp/demangle.exp: gnu: vform__8iostreamPCcPc
PASS: gdb.cp/demangle.exp: gnu: view__14DocumentViewerP8ItemViewP11TabularItem
PASS: gdb.cp/demangle.exp: gnu: xy_extents__11ivExtensionffff
PASS: gdb.cp/demangle.exp: gnu: zero__8osMemoryPvUi
PASS: gdb.cp/demangle.exp: gnu: _2T4$N
PASS: gdb.cp/demangle.exp: gnu: _Q22T42t1$N
PASS: gdb.cp/demangle.exp: gnu: get__2T1
PASS: gdb.cp/demangle.exp: gnu: get__Q22T11a
PASS: gdb.cp/demangle.exp: gnu: get__Q32T11a1b
PASS: gdb.cp/demangle.exp: gnu: get__Q42T11a1b1c
PASS: gdb.cp/demangle.exp: gnu: get__Q52T11a1b1c1d
PASS: gdb.cp/demangle.exp: gnu: put__2T1i
PASS: gdb.cp/demangle.exp: gnu: put__Q22T11ai
PASS: gdb.cp/demangle.exp: gnu: put__Q32T11a1bi
PASS: gdb.cp/demangle.exp: gnu: put__Q42T11a1b1ci
PASS: gdb.cp/demangle.exp: gnu: put__Q52T11a1b1c1di
PASS: gdb.cp/demangle.exp: gnu: bar__3fooPv
PASS: gdb.cp/demangle.exp: gnu: bar__3fooPCv
PASS: gdb.cp/demangle.exp: gnu: bar__C3fooPv
PASS: gdb.cp/demangle.exp: gnu: bar__C3fooPCv
PASS: gdb.cp/demangle.exp: gnu: __eq__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __eq__3fooRC3foo
PASS: gdb.cp/demangle.exp: gnu: __eq__C3fooR3foo
PASS: gdb.cp/demangle.exp: gnu: __eq__C3fooRT0
PASS: gdb.cp/demangle.exp: gnu: elem__t6vector1Zdi
PASS: gdb.cp/demangle.exp: gnu: elem__t6vector1Zii
PASS: gdb.cp/demangle.exp: gnu: __t6vector1Zdi
PASS: gdb.cp/demangle.exp: gnu: __t6vector1Zii
PASS: gdb.cp/demangle.exp: gnu: _$_t6vector1Zdi
PASS: gdb.cp/demangle.exp: gnu: _$_t6vector1Zii
PASS: gdb.cp/demangle.exp: gnu: __nw__t2T11ZcUi
PASS: gdb.cp/demangle.exp: gnu: __nw__t2T11Z1tUi
PASS: gdb.cp/demangle.exp: gnu: __dl__t2T11ZcPv
PASS: gdb.cp/demangle.exp: gnu: __dl__t2T11Z1tPv
PASS: gdb.cp/demangle.exp: gnu: __t2T11Zci
PASS: gdb.cp/demangle.exp: gnu: __t2T11Zc
PASS: gdb.cp/demangle.exp: gnu: __t2T11Z1ti
PASS: gdb.cp/demangle.exp: gnu: __t2T11Z1t
PASS: gdb.cp/demangle.exp: gnu: __Q2t4List1Z10VHDLEntity3Pix
PASS: gdb.cp/demangle.exp: gnu: __Q2t4List1Z10VHDLEntity3PixPQ2t4List1Z10VHDLEntity7element
PASS: gdb.cp/demangle.exp: gnu: __Q2t4List1Z10VHDLEntity3PixRCQ2t4List1Z10VHDLEntity3Pix
PASS: gdb.cp/demangle.exp: gnu: __Q2t4List1Z10VHDLEntity7elementRC10VHDLEntityPT0
PASS: gdb.cp/demangle.exp: gnu: __Q2t4List1Z10VHDLEntity7elementRCQ2t4List1Z10VHDLEntity7element
PASS: gdb.cp/demangle.exp: gnu: __cl__C11VHDLLibraryGt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity
PASS: gdb.cp/demangle.exp: gnu: __cl__Ct4List1Z10VHDLEntityRCQ2t4List1Z10VHDLEntity3Pix
PASS: gdb.cp/demangle.exp: gnu: __ne__FPvRCQ2t4List1Z10VHDLEntity3Pix
PASS: gdb.cp/demangle.exp: gnu: __ne__FPvRCt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity
PASS: gdb.cp/demangle.exp: gnu: __t4List1Z10VHDLEntityRCt4List1Z10VHDLEntity
PASS: gdb.cp/demangle.exp: gnu: __t4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity
PASS: gdb.cp/demangle.exp: gnu: __t4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntityP14VHDLLibraryRepGQ2t4List1Z10VHDLEntity3Pix
PASS: gdb.cp/demangle.exp: gnu: __t4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntityRCt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity
PASS: gdb.cp/demangle.exp: gnu: nextE__C11VHDLLibraryRt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity
PASS: gdb.cp/demangle.exp: gnu: next__Ct4List1Z10VHDLEntityRQ2t4List1Z10VHDLEntity3Pix
PASS: gdb.cp/demangle.exp: gnu: _GLOBAL_$D$set
PASS: gdb.cp/demangle.exp: gnu: _GLOBAL_$I$set
PASS: gdb.cp/demangle.exp: gnu: __as__t5ListS1ZUiRCt5ListS1ZUi
PASS: gdb.cp/demangle.exp: gnu: __cl__Ct5ListS1ZUiRCQ2t5ListS1ZUi3Vix
PASS: gdb.cp/demangle.exp: gnu: __cl__Ct5SetLS1ZUiRCQ2t5SetLS1ZUi3Vix
PASS: gdb.cp/demangle.exp: gnu: __t10ListS_link1ZUiRCUiPT0
PASS: gdb.cp/demangle.exp: gnu: __t10ListS_link1ZUiRCt10ListS_link1ZUi
PASS: gdb.cp/demangle.exp: gnu: __t5ListS1ZUiRCt5ListS1ZUi
PASS: gdb.cp/demangle.exp: gnu: next__Ct5ListS1ZUiRQ2t5ListS1ZUi3Vix
PASS: gdb.cp/demangle.exp: gnu: __ne__FPvRCQ2t5SetLS1ZUi3Vix
PASS: gdb.cp/demangle.exp: gnu: __t8ListElem1Z5LabelRt4List1Z5Label
PASS: gdb.cp/demangle.exp: gnu: __t8BDDHookV1ZPcRCPc
PASS: gdb.cp/demangle.exp: gnu: _vt$t8BDDHookV1ZPc
PASS: gdb.cp/demangle.exp: gnu: __ne__FPvRCQ211BDDFunction4VixB
PASS: gdb.cp/demangle.exp: gnu: __eq__FPvRCQ211BDDFunction4VixB
PASS: gdb.cp/demangle.exp: gnu: relativeId__CQ36T_phi210T_preserve8FPC_nextRCQ26T_phi210T_preserveRC10Parameters
PASS: gdb.cp/demangle.exp: gnu: _Utf390_1__1_9223372036854775807__9223372036854775
PASS: gdb.cp/demangle.exp: gnu: foo__I40
PASS: gdb.cp/demangle.exp: gnu: foo__I_200_
PASS: gdb.cp/demangle.exp: gnu: foo__I_200
PASS: gdb.cp/demangle.exp: gnu-v3: _ZN9ArrowLine19ArrowheadIntersectsEP9ArrowheadO6BoxObjP7Graphic: gnu-v3: set demangle-style
PASS: gdb.cp/demangle.exp: gnu-v3: _ZN9ArrowLine19ArrowheadIntersectsEP9ArrowheadO6BoxObjP7Graphic: gnu-v3: check demangling style
PASS: gdb.cp/demangle.exp: gnu-v3: _ZN9ArrowLine19ArrowheadIntersectsEP9ArrowheadO6BoxObjP7Graphic
PASS: gdb.cp/demangle.exp: gnu-v3: _Z13BitPatterntoaOK10BitPatternccc
PASS: gdb.cp/demangle.exp: gnu-v3: _ZN8TextCode14CoreConstDeclsEO7ostream
PASS: gdb.cp/demangle.exp: gnu-v3: _Z31DrawDestinationTransformedImageP7_XImageiiS0_iimjiijmmP4_XGCOK13ivTransformeriiii
PASS: gdb.cp/demangle.exp: gnu-v3: _ZN11RelateManip6EffectEO7ivEvent
PASS: gdb.cp/demangle.exp: gnu-v3: _ZN20DisplayList_IteratorC4EO11DisplayList
PASS: gdb.cp/demangle.exp: gnu-v3: _ZN3fooC4EOS_
PASS: gdb.cp/demangle.exp: gnu-v3: _ZN3fooC4EiOS_iS0_iS0_
PASS: gdb.cp/demangle.exp: gnu-v3: _ZN7ivWorldC2EPKcOiPPcPK12ivOptionDescPK14ivPropertyData
PASS: gdb.cp/demangle.exp: gnu-v3: _Z3argOK7Complex
PASS: gdb.cp/demangle.exp: gnu-v3: _ZNK9BitString8containsEOK10BitPattern
PASS: gdb.cp/demangle.exp: gnu-v3: _ZNK9BitString8containsEOK12BitSubStringi
PASS: gdb.cp/demangle.exp: gnu-v3: _ZNK9BitString8containsEOKS_
PASS: gdb.cp/demangle.exp: gnu-v3: _ZN4ListI10VHDLEntityE3PixC4EOKS2_
PASS: gdb.cp/demangle.exp: gnu-v3: _ZN4ListI10VHDLEntityE7elementC2EOKS0_PS2_
PASS: gdb.cp/demangle.exp: gnu-v3: _ZN4ListI10VHDLEntityE7elementC4EOKS2_
PASS: gdb.cp/demangle.exp: gnu-v3: _ZNK4ListI10VHDLEntityEclEOKNS1_3PixE
PASS: gdb.cp/demangle.exp: gnu-v3: _ZN4ListI10VHDLEntityEC4EOKS1_
PASS: gdb.cp/demangle.exp: gnu-v3: _ZN4PixXI11VHDLLibrary14VHDLLibraryRep4ListI10VHDLEntityEEC2EOKS5_
PASS: gdb.cp/demangle.exp: gnu-v3: _ZNK11VHDLLibrary5nextEEO4PixXIS_14VHDLLibraryRep4ListI10VHDLEntityEE
PASS: gdb.cp/demangle.exp: gnu-v3: _ZNK4ListI10VHDLEntityE4nextEONS1_3PixE
PASS: gdb.cp/demangle.exp: gnu: foo__I_4000000000000000000000000000000000000000000000000000000000000000000000000: gnu: set demangle-style
PASS: gdb.cp/demangle.exp: gnu: foo__I_4000000000000000000000000000000000000000000000000000000000000000000000000: gnu: check demangling style
PASS: gdb.cp/demangle.exp: gnu: foo__I_4000000000000000000000000000000000000000000000000000000000000000000000000
PASS: gdb.cp/demangle.exp: gnu: __thunk_64__0RL__list__Q29CosNaming20_proxy_NamingContextUlRPt25_CORBA_Unbounded_Sequence1ZQ29CosNaming7BindingRPQ29CosNaming15BindingIterator
PASS: gdb.cp/demangle.exp: arm: __dt__21T5__pt__11_PFiPPdPv_iFv: arm: set demangle-style
PASS: gdb.cp/demangle.exp: arm: __dt__21T5__pt__11_PFiPPdPv_iFv: arm: check demangling style
PASS: gdb.cp/demangle.exp: arm: __dt__21T5__pt__11_PFiPPdPv_iFv
PASS: gdb.cp/demangle.exp: arm: __ct__1cFi
PASS: gdb.cp/demangle.exp: arm: __dt__11T5__pt__2_iFv
PASS: gdb.cp/demangle.exp: arm: __dt__11T5__pt__2_cFv
PASS: gdb.cp/demangle.exp: arm: __ct__2T2Fi
PASS: gdb.cp/demangle.exp: arm: __dt__2T1Fv
PASS: gdb.cp/demangle.exp: arm: __dt__12T5__pt__3_1xFv
PASS: gdb.cp/demangle.exp: arm: __dt__17T5__pt__8_PFcPv_iFv
PASS: gdb.cp/demangle.exp: arm: g__FP1cPC1cT1
PASS: gdb.cp/demangle.exp: arm: g__FPUlPCUlT1
PASS: gdb.cp/demangle.exp: arm: g__FPUiPCUiT1
PASS: gdb.cp/demangle.exp: arm: g__FPUsPCUsT1
PASS: gdb.cp/demangle.exp: arm: g__FPUcPCUcT1
PASS: gdb.cp/demangle.exp: arm: g__F1TPlPClT2
PASS: gdb.cp/demangle.exp: arm: g__F1RRlRClT2
PASS: gdb.cp/demangle.exp: arm: g__F1TPiPCiT2
PASS: gdb.cp/demangle.exp: arm: g__F1RRiRCiT2
PASS: gdb.cp/demangle.exp: arm: g__F1TPsPCsT2
PASS: gdb.cp/demangle.exp: arm: g__F1RRsRCsT2
PASS: gdb.cp/demangle.exp: arm: g__F1TPcPCcT2
PASS: gdb.cp/demangle.exp: arm: g__F1RRcRCcT2
PASS: gdb.cp/demangle.exp: arm: __ct__21T5__pt__11_PFiPPdPv_iFi
PASS: gdb.cp/demangle.exp: arm: __gt__FRC2T2c
PASS: gdb.cp/demangle.exp: arm: __ge__FRC2T2c
PASS: gdb.cp/demangle.exp: arm: __lt__FRC2T2c
PASS: gdb.cp/demangle.exp: arm: __le__FRC2T2c
PASS: gdb.cp/demangle.exp: arm: __ne__FRC2T2c
PASS: gdb.cp/demangle.exp: arm: __eq__FRC2T2c
PASS: gdb.cp/demangle.exp: arm: __amd__FR2T2i
PASS: gdb.cp/demangle.exp: arm: __adv__FR2T2i
PASS: gdb.cp/demangle.exp: arm: __amu__FR2T2i
PASS: gdb.cp/demangle.exp: arm: __ami__FR2T2i
PASS: gdb.cp/demangle.exp: arm: __apl__FR2T2i
PASS: gdb.cp/demangle.exp: arm: __nw__2T1SFUi
PASS: gdb.cp/demangle.exp: arm: __dl__2T1SFPv
PASS: gdb.cp/demangle.exp: arm: put__2T7SFi
PASS: gdb.cp/demangle.exp: arm: __dl__12T5__pt__3_1xSFPv
PASS: gdb.cp/demangle.exp: arm: h__FUc
PASS: gdb.cp/demangle.exp: arm: f__Fic
PASS: gdb.cp/demangle.exp: arm: h__FUi
PASS: gdb.cp/demangle.exp: arm: h__Fci
PASS: gdb.cp/demangle.exp: arm: h__FUl
PASS: gdb.cp/demangle.exp: arm: h__Fcl
PASS: gdb.cp/demangle.exp: arm: h__FUs
PASS: gdb.cp/demangle.exp: arm: h__Fcs
PASS: gdb.cp/demangle.exp: arm: __amd__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: __adv__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: __amu__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: __ami__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: __apl__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: g__F1SRPUlRPCUlT2
PASS: gdb.cp/demangle.exp: arm: g__F1SRPUiRPCUiT2
PASS: gdb.cp/demangle.exp: arm: g__F1SRPUsRPCUsT2
PASS: gdb.cp/demangle.exp: arm: g__F1SRPUcRPCUcT2
PASS: gdb.cp/demangle.exp: arm: g__F1T1SRPlRPClT3
PASS: gdb.cp/demangle.exp: arm: g__F1T1SRPiRPCiT3
PASS: gdb.cp/demangle.exp: arm: g__F1T1SRPcRPCcT3
PASS: gdb.cp/demangle.exp: arm: X__12T5__pt__3_1x
PASS: gdb.cp/demangle.exp: arm: __ct__11T5__pt__2_iFi
PASS: gdb.cp/demangle.exp: arm: __ct__11T5__pt__2_cFi
PASS: gdb.cp/demangle.exp: arm: __gt__FRC2T2T1
PASS: gdb.cp/demangle.exp: arm: __ge__FRC2T2T1
PASS: gdb.cp/demangle.exp: arm: __lt__FRC2T2T1
PASS: gdb.cp/demangle.exp: arm: __le__FRC2T2T1
PASS: gdb.cp/demangle.exp: arm: __ne__FRC2T2T1
PASS: gdb.cp/demangle.exp: arm: __eq__FRC2T2T1
PASS: gdb.cp/demangle.exp: arm: g__FcR1cRC1cT2
PASS: gdb.cp/demangle.exp: arm: g__FcRPdRPCdT2
PASS: gdb.cp/demangle.exp: arm: g__FcRPfRPCfT2
PASS: gdb.cp/demangle.exp: arm: h__FcT1
PASS: gdb.cp/demangle.exp: arm: f__Ficd
PASS: gdb.cp/demangle.exp: arm: g__F1T1SdRPsRPCsT4
PASS: gdb.cp/demangle.exp: arm: g__F1cC1cT1
PASS: gdb.cp/demangle.exp: arm: g__FPdPCdT1
PASS: gdb.cp/demangle.exp: arm: g__FPfPCfT1
PASS: gdb.cp/demangle.exp: arm: g__FUlCUlT1
PASS: gdb.cp/demangle.exp: arm: g__FPlPClT1
PASS: gdb.cp/demangle.exp: arm: g__FUiCUiT1
PASS: gdb.cp/demangle.exp: arm: g__FPiPCiT1
PASS: gdb.cp/demangle.exp: arm: g__FUsCUsT1
PASS: gdb.cp/demangle.exp: arm: g__FPsPCsT1
PASS: gdb.cp/demangle.exp: arm: g__FUcCUcT1
PASS: gdb.cp/demangle.exp: arm: g__FPcPCcT1
PASS: gdb.cp/demangle.exp: arm: g__F1TlClT2
PASS: gdb.cp/demangle.exp: arm: g__F1TiCiT2
PASS: gdb.cp/demangle.exp: arm: g__F1TsCsT2
PASS: gdb.cp/demangle.exp: arm: g__F1TcCcT2
PASS: gdb.cp/demangle.exp: arm: __dl__17T5__pt__8_PFcPv_iSFPv
PASS: gdb.cp/demangle.exp: arm: printf__FPCce
PASS: gdb.cp/demangle.exp: arm: X__17T5__pt__8_PFcPv_i
PASS: gdb.cp/demangle.exp: arm: __ct__12T5__pt__3_1xFi
PASS: gdb.cp/demangle.exp: arm: g__F1SRUlRCUlT2
PASS: gdb.cp/demangle.exp: arm: g__F1SRPlRPClT2
PASS: gdb.cp/demangle.exp: arm: g__F1RRUiRCUiT2
PASS: gdb.cp/demangle.exp: arm: g__F1SRPiRPCiT2
PASS: gdb.cp/demangle.exp: arm: g__F1RRUsRCUsT2
PASS: gdb.cp/demangle.exp: arm: g__F1SRPsRPCsT2
PASS: gdb.cp/demangle.exp: arm: g__F1RRUcRCUcT2
PASS: gdb.cp/demangle.exp: arm: g__F1SRPcRPCcT2
PASS: gdb.cp/demangle.exp: arm: g__F1T1RRlRClT3
PASS: gdb.cp/demangle.exp: arm: g__F1T1RRiRCiT3
PASS: gdb.cp/demangle.exp: arm: g__F1T1RRsRCsT3
PASS: gdb.cp/demangle.exp: arm: g__F1T1RRcRCcT3
PASS: gdb.cp/demangle.exp: arm: __dl__21T5__pt__11_PFiPPdPv_iSFPv
PASS: gdb.cp/demangle.exp: arm: __std__foo
PASS: gdb.cp/demangle.exp: arm: __sti__bar
PASS: gdb.cp/demangle.exp: arm: f__FicdPcPFci_v
PASS: gdb.cp/demangle.exp: arm: f__FicdPcPFic_v
PASS: gdb.cp/demangle.exp: arm: get__2T7SFv
PASS: gdb.cp/demangle.exp: arm: X__21T5__pt__11_PFiPPdPv_i
PASS: gdb.cp/demangle.exp: arm: g__FcRdRCdT2
PASS: gdb.cp/demangle.exp: arm: g__FcRfRCfT2
PASS: gdb.cp/demangle.exp: arm: __md__FC2T2i
PASS: gdb.cp/demangle.exp: arm: __dv__FC2T2i
PASS: gdb.cp/demangle.exp: arm: __ml__FC2T2i
PASS: gdb.cp/demangle.exp: arm: __mi__FC2T2i
PASS: gdb.cp/demangle.exp: arm: __pl__FC2T2i
PASS: gdb.cp/demangle.exp: arm: __dl__11T5__pt__2_iSFPv
PASS: gdb.cp/demangle.exp: arm: __dl__11T5__pt__2_cSFPv
PASS: gdb.cp/demangle.exp: arm: h__Fc
PASS: gdb.cp/demangle.exp: arm: h__Fd
PASS: gdb.cp/demangle.exp: arm: h__Ff
PASS: gdb.cp/demangle.exp: arm: h__Fi
PASS: gdb.cp/demangle.exp: arm: f__Fi
PASS: gdb.cp/demangle.exp: arm: h__Fl
PASS: gdb.cp/demangle.exp: arm: h__Fs
PASS: gdb.cp/demangle.exp: arm: __md__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: __dv__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: __ml__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: __mi__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: __pl__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: g__FcRP1cRPC1cT2
PASS: gdb.cp/demangle.exp: arm: X__11T5__pt__2_c
PASS: gdb.cp/demangle.exp: arm: X__11T5__pt__2_i
PASS: gdb.cp/demangle.exp: arm: g__FdCdT1
PASS: gdb.cp/demangle.exp: arm: g__FfCfT1
PASS: gdb.cp/demangle.exp: arm: g__FlClT1
PASS: gdb.cp/demangle.exp: arm: g__FiCiT1
PASS: gdb.cp/demangle.exp: arm: g__FsCsT1
PASS: gdb.cp/demangle.exp: arm: g__FcCcT1
PASS: gdb.cp/demangle.exp: arm: __ct__17T5__pt__8_PFcPv_iFi
PASS: gdb.cp/demangle.exp: arm: f__FicdPc
PASS: gdb.cp/demangle.exp: arm: __nw__FUi
PASS: gdb.cp/demangle.exp: arm: __ct__Q3_2T11a1bSFi
PASS: gdb.cp/demangle.exp: arm: __dt__Q3_2T11a1bSFi
PASS: gdb.cp/demangle.exp: arm: put__Q3_2T11a1bSFi
PASS: gdb.cp/demangle.exp: arm: get__Q2_2T11aSFv
PASS: gdb.cp/demangle.exp: arm: put__2T1SFi
PASS: gdb.cp/demangle.exp: arm: put__Q5_2T11a1b1c1dSFi
PASS: gdb.cp/demangle.exp: arm: get__Q4_2T11a1b1cSFv
PASS: gdb.cp/demangle.exp: arm: put__Q2_2T11aSFi
PASS: gdb.cp/demangle.exp: arm: put__Q4_2T11a1b1cSFi
PASS: gdb.cp/demangle.exp: arm: get__Q3_2T11a1bSFv
PASS: gdb.cp/demangle.exp: arm: get__2T1SFv
PASS: gdb.cp/demangle.exp: arm: get__Q5_2T11a1b1c1dSFv
PASS: gdb.cp/demangle.exp: arm: __dt__11T1__pt__2_cFv
PASS: gdb.cp/demangle.exp: arm: __dt__12T1__pt__3_1tFv
PASS: gdb.cp/demangle.exp: arm: __dl__12T1__pt__3_1tSFPv
PASS: gdb.cp/demangle.exp: arm: __ct__11T1__pt__2_cFi
PASS: gdb.cp/demangle.exp: arm: __ct__11T1__pt__2_cFv
PASS: gdb.cp/demangle.exp: arm: __ct__12T1__pt__3_1tFi
PASS: gdb.cp/demangle.exp: arm: __ct__12T1__pt__3_1tFv
PASS: gdb.cp/demangle.exp: arm: __dl__11T1__pt__2_cSFPv
PASS: gdb.cp/demangle.exp: arm: bar__3fooFPv
PASS: gdb.cp/demangle.exp: arm: bar__3fooFPCv
PASS: gdb.cp/demangle.exp: arm: bar__3fooCFPv
PASS: gdb.cp/demangle.exp: arm: bar__3fooCFPCv
PASS: gdb.cp/demangle.exp: arm: __eq__3fooFR3foo
PASS: gdb.cp/demangle.exp: arm: __eq__3fooFRC3foo
PASS: gdb.cp/demangle.exp: arm: __eq__3fooCFR3foo
PASS: gdb.cp/demangle.exp: arm: __eq__3fooCFRC3foo
PASS: gdb.cp/demangle.exp: arm: elem__15vector__pt__2_dFi
PASS: gdb.cp/demangle.exp: arm: elem__15vector__pt__2_iFi
PASS: gdb.cp/demangle.exp: arm: __ct__15vector__pt__2_dFi
PASS: gdb.cp/demangle.exp: arm: __ct__15vector__pt__2_iFi
PASS: gdb.cp/demangle.exp: arm: __ct__25DListNode__pt__9_R6RLabelFR6RLabelP25DListNode__pt__9_R6RLabelT2
PASS: gdb.cp/demangle.exp: arm: bar__3fooFiT16FooBar
PASS: gdb.cp/demangle.exp: arm: bar__3fooFPiN51PdN37PcN211T1iN215
PASS: gdb.cp/demangle.exp: arm: _Utf390_1__1_9223372036854775807__9223372036854775
PASS: gdb.cp/demangle.exp: hp: g__FP1cPC1cT1: hp: set demangle-style
PASS: gdb.cp/demangle.exp: hp: g__FP1cPC1cT1: hp: check demangling style
PASS: gdb.cp/demangle.exp: hp: g__FP1cPC1cT1
PASS: gdb.cp/demangle.exp: hp: g__FPUlPCUlT1
PASS: gdb.cp/demangle.exp: hp: g__FPUiPCUiT1
PASS: gdb.cp/demangle.exp: hp: g__FPUsPCUsT1
PASS: gdb.cp/demangle.exp: hp: g__FPUcPCUcT1
PASS: gdb.cp/demangle.exp: hp: g__F1TPlPClT2
PASS: gdb.cp/demangle.exp: hp: g__F1RRlRClT2
PASS: gdb.cp/demangle.exp: hp: g__F1TPiPCiT2
PASS: gdb.cp/demangle.exp: hp: g__F1RRiRCiT2
PASS: gdb.cp/demangle.exp: hp: g__F1TPsPCsT2
PASS: gdb.cp/demangle.exp: hp: g__F1RRsRCsT2
PASS: gdb.cp/demangle.exp: hp: g__F1TPcPCcT2
PASS: gdb.cp/demangle.exp: hp: g__F1RRcRCcT2
PASS: gdb.cp/demangle.exp: hp: __gt__FRC2T2c
PASS: gdb.cp/demangle.exp: hp: __ge__FRC2T2c
PASS: gdb.cp/demangle.exp: hp: __lt__FRC2T2c
PASS: gdb.cp/demangle.exp: hp: __le__FRC2T2c
PASS: gdb.cp/demangle.exp: hp: __ne__FRC2T2c
PASS: gdb.cp/demangle.exp: hp: __eq__FRC2T2c
PASS: gdb.cp/demangle.exp: hp: __amd__FR2T2i
PASS: gdb.cp/demangle.exp: hp: __adv__FR2T2i
PASS: gdb.cp/demangle.exp: hp: __amu__FR2T2i
PASS: gdb.cp/demangle.exp: hp: __ami__FR2T2i
PASS: gdb.cp/demangle.exp: hp: __apl__FR2T2i
PASS: gdb.cp/demangle.exp: hp: __nw__2T1SFUi
PASS: gdb.cp/demangle.exp: hp: __dl__2T1SFPv
PASS: gdb.cp/demangle.exp: hp: put__2T7SFi
PASS: gdb.cp/demangle.exp: hp: h__FUc
PASS: gdb.cp/demangle.exp: hp: f__Fic
PASS: gdb.cp/demangle.exp: hp: h__FUi
PASS: gdb.cp/demangle.exp: hp: h__Fci
PASS: gdb.cp/demangle.exp: hp: h__FUl
PASS: gdb.cp/demangle.exp: hp: h__Fcl
PASS: gdb.cp/demangle.exp: hp: h__FUs
PASS: gdb.cp/demangle.exp: hp: h__Fcs
PASS: gdb.cp/demangle.exp: hp: __amd__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: __adv__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: __amu__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: __ami__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: __apl__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: g__F1SRPUlRPCUlT2
PASS: gdb.cp/demangle.exp: hp: g__F1SRPUiRPCUiT2
PASS: gdb.cp/demangle.exp: hp: g__F1SRPUsRPCUsT2
PASS: gdb.cp/demangle.exp: hp: g__F1SRPUcRPCUcT2
PASS: gdb.cp/demangle.exp: hp: g__F1T1SRPlRPClT3
PASS: gdb.cp/demangle.exp: hp: g__F1T1SRPiRPCiT3
PASS: gdb.cp/demangle.exp: hp: g__F1T1SRPcRPCcT3
PASS: gdb.cp/demangle.exp: hp: __gt__FRC2T2T1
PASS: gdb.cp/demangle.exp: hp: __ge__FRC2T2T1
PASS: gdb.cp/demangle.exp: hp: __lt__FRC2T2T1
PASS: gdb.cp/demangle.exp: hp: __le__FRC2T2T1
PASS: gdb.cp/demangle.exp: hp: __ne__FRC2T2T1
PASS: gdb.cp/demangle.exp: hp: __eq__FRC2T2T1
PASS: gdb.cp/demangle.exp: hp: g__FcR1cRC1cT2
PASS: gdb.cp/demangle.exp: hp: g__FcRPdRPCdT2
PASS: gdb.cp/demangle.exp: hp: g__FcRPfRPCfT2
PASS: gdb.cp/demangle.exp: hp: h__FcT1
PASS: gdb.cp/demangle.exp: hp: f__Ficd
PASS: gdb.cp/demangle.exp: hp: g__F1T1SdRPsRPCsT4
PASS: gdb.cp/demangle.exp: hp: g__F1cC1cT1
PASS: gdb.cp/demangle.exp: hp: g__FPdPCdT1
PASS: gdb.cp/demangle.exp: hp: g__FPfPCfT1
PASS: gdb.cp/demangle.exp: hp: g__FUlCUlT1
PASS: gdb.cp/demangle.exp: hp: g__FPlPClT1
PASS: gdb.cp/demangle.exp: hp: g__FUiCUiT1
PASS: gdb.cp/demangle.exp: hp: g__FPiPCiT1
PASS: gdb.cp/demangle.exp: hp: g__FUsCUsT1
PASS: gdb.cp/demangle.exp: hp: g__FPsPCsT1
PASS: gdb.cp/demangle.exp: hp: g__FUcCUcT1
PASS: gdb.cp/demangle.exp: hp: g__FPcPCcT1
PASS: gdb.cp/demangle.exp: hp: g__F1TlClT2
PASS: gdb.cp/demangle.exp: hp: g__F1TiCiT2
PASS: gdb.cp/demangle.exp: hp: g__F1TsCsT2
PASS: gdb.cp/demangle.exp: hp: g__F1TcCcT2
PASS: gdb.cp/demangle.exp: hp: printf__FPCce
PASS: gdb.cp/demangle.exp: hp: g__F1SRUlRCUlT2
PASS: gdb.cp/demangle.exp: hp: g__F1SRPlRPClT2
PASS: gdb.cp/demangle.exp: hp: g__F1RRUiRCUiT2
PASS: gdb.cp/demangle.exp: hp: g__F1SRPiRPCiT2
PASS: gdb.cp/demangle.exp: hp: g__F1RRUsRCUsT2
PASS: gdb.cp/demangle.exp: hp: g__F1SRPsRPCsT2
PASS: gdb.cp/demangle.exp: hp: g__F1RRUcRCUcT2
PASS: gdb.cp/demangle.exp: hp: g__F1SRPcRPCcT2
PASS: gdb.cp/demangle.exp: hp: g__F1T1RRlRClT3
PASS: gdb.cp/demangle.exp: hp: g__F1T1RRiRCiT3
PASS: gdb.cp/demangle.exp: hp: g__F1T1RRsRCsT3
PASS: gdb.cp/demangle.exp: hp: g__F1T1RRcRCcT3
PASS: gdb.cp/demangle.exp: hp: f__FicdPcPFci_v
PASS: gdb.cp/demangle.exp: hp: f__FicdPcPFic_v
PASS: gdb.cp/demangle.exp: hp: get__2T7SFv
PASS: gdb.cp/demangle.exp: hp: g__FcRdRCdT2
PASS: gdb.cp/demangle.exp: hp: g__FcRfRCfT2
PASS: gdb.cp/demangle.exp: hp: __md__FC2T2i
PASS: gdb.cp/demangle.exp: hp: __dv__FC2T2i
PASS: gdb.cp/demangle.exp: hp: __ml__FC2T2i
PASS: gdb.cp/demangle.exp: hp: __mi__FC2T2i
PASS: gdb.cp/demangle.exp: hp: __pl__FC2T2i
PASS: gdb.cp/demangle.exp: hp: h__Fc
PASS: gdb.cp/demangle.exp: hp: h__Fd
PASS: gdb.cp/demangle.exp: hp: h__Ff
PASS: gdb.cp/demangle.exp: hp: h__Fi
PASS: gdb.cp/demangle.exp: hp: f__Fi
PASS: gdb.cp/demangle.exp: hp: h__Fl
PASS: gdb.cp/demangle.exp: hp: h__Fs
PASS: gdb.cp/demangle.exp: hp: __md__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: __dv__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: __ml__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: __mi__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: __pl__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: g__FcRP1cRPC1cT2
PASS: gdb.cp/demangle.exp: hp: g__FdCdT1
PASS: gdb.cp/demangle.exp: hp: g__FfCfT1
PASS: gdb.cp/demangle.exp: hp: g__FlClT1
PASS: gdb.cp/demangle.exp: hp: g__FiCiT1
PASS: gdb.cp/demangle.exp: hp: g__FsCsT1
PASS: gdb.cp/demangle.exp: hp: g__FcCcT1
PASS: gdb.cp/demangle.exp: hp: f__FicdPc
PASS: gdb.cp/demangle.exp: hp: __nw__FUi
PASS: gdb.cp/demangle.exp: hp: __ct__Q3_2T11a1bSFi
PASS: gdb.cp/demangle.exp: hp: __dt__Q3_2T11a1bSFi
PASS: gdb.cp/demangle.exp: hp: put__Q3_2T11a1bSFi
PASS: gdb.cp/demangle.exp: hp: get__Q2_2T11aSFv
PASS: gdb.cp/demangle.exp: hp: put__2T1SFi
PASS: gdb.cp/demangle.exp: hp: put__Q5_2T11a1b1c1dSFi
PASS: gdb.cp/demangle.exp: hp: get__Q4_2T11a1b1cSFv
PASS: gdb.cp/demangle.exp: hp: put__Q2_2T11aSFi
PASS: gdb.cp/demangle.exp: hp: put__Q4_2T11a1b1cSFi
PASS: gdb.cp/demangle.exp: hp: get__Q3_2T11a1bSFv
PASS: gdb.cp/demangle.exp: hp: get__2T1SFv
PASS: gdb.cp/demangle.exp: hp: get__Q5_2T11a1b1c1dSFv
PASS: gdb.cp/demangle.exp: hp: bar__3fooFPv
PASS: gdb.cp/demangle.exp: hp: bar__3fooFPCv
PASS: gdb.cp/demangle.exp: hp: bar__3fooCFPv
PASS: gdb.cp/demangle.exp: hp: bar__3fooCFPCv
PASS: gdb.cp/demangle.exp: hp: __eq__3fooFR3foo
PASS: gdb.cp/demangle.exp: hp: __eq__3fooFRC3foo
PASS: gdb.cp/demangle.exp: hp: __eq__3fooCFR3foo
PASS: gdb.cp/demangle.exp: hp: __eq__3fooCFRC3foo
PASS: gdb.cp/demangle.exp: hp: bar__3fooFiT16FooBar
PASS: gdb.cp/demangle.exp: hp: bar__3fooFPiN51PdN37PcN211T1iN215
PASS: gdb.cp/demangle.exp: hp: __dt__2T5XTPFiPPdPv_i__Fv
PASS: gdb.cp/demangle.exp: hp: __ct__1cFi
PASS: gdb.cp/demangle.exp: hp: __dt__2T5XTi__Fv
PASS: gdb.cp/demangle.exp: hp: __dt__2T5XTc__Fv
PASS: gdb.cp/demangle.exp: hp: __ct__2T2Fi
PASS: gdb.cp/demangle.exp: hp: __dt__2T1Fv
PASS: gdb.cp/demangle.exp: hp: __dt__2T5XT1x__Fv
PASS: gdb.cp/demangle.exp: hp: __dt__2T5XTPFcPv_i__Fv
PASS: gdb.cp/demangle.exp: hp: __ct__2T5XTPFiPPdPv_i__Fi
PASS: gdb.cp/demangle.exp: hp: __dl__2T5XT1x__SFPv
PASS: gdb.cp/demangle.exp: hp: X__2T5XT1x
PASS: gdb.cp/demangle.exp: hp: __ct__2T5XTi__Fi
PASS: gdb.cp/demangle.exp: hp: __ct__2T5XTc__Fi
PASS: gdb.cp/demangle.exp: hp: __dl__2T5XTPFcPv_i__SFPv
PASS: gdb.cp/demangle.exp: hp: X__2T5XTPFcPv_i
PASS: gdb.cp/demangle.exp: hp: __ct__2T5XT1x__Fi
PASS: gdb.cp/demangle.exp: hp: __dl__2T5XTPFiPPdPv_i__SFPv
PASS: gdb.cp/demangle.exp: hp: X__2T5XTPFiPPdPv_i
PASS: gdb.cp/demangle.exp: hp: __dl__2T5XTi__SFPv
PASS: gdb.cp/demangle.exp: hp: __dl__2T5XTc__SFPv
PASS: gdb.cp/demangle.exp: hp: X__2T5XTc
PASS: gdb.cp/demangle.exp: hp: X__2T5XTi
PASS: gdb.cp/demangle.exp: hp: __ct__2T5XTPFcPv_i__Fi
PASS: gdb.cp/demangle.exp: hp: __dt__2T1XTc__Fv
PASS: gdb.cp/demangle.exp: hp: __dt__2T1XT1t__Fv
PASS: gdb.cp/demangle.exp: hp: __dl__2T1XT1t__SFPv
PASS: gdb.cp/demangle.exp: hp: __ct__2T1XTc__Fi
PASS: gdb.cp/demangle.exp: hp: __ct__2T1XTc__Fv
PASS: gdb.cp/demangle.exp: hp: __ct__2T1XT1t__Fi
PASS: gdb.cp/demangle.exp: hp: __ct__2T1XT1t__Fv
PASS: gdb.cp/demangle.exp: hp: __dl__2T1XTc__SFPv
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTd__Fi
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTi__Fi
PASS: gdb.cp/demangle.exp: hp: __ct__6vectorXTd__Fi
PASS: gdb.cp/demangle.exp: hp: __ct__6vectorXTi__Fi
PASS: gdb.cp/demangle.exp: hp: __ct__9DListNodeXTR6RLabel__FR6RLabelP9DListNodeXTR6RLabel_T2
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTiUP34__Fi
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXUP2701Td__Fi
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTiSP334__Fi
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTiSN67__Fi
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTiSM__SCFPPd
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTiSN67UP4000TRs__Fi
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTiSN67TRdTFPv_i__Fi
PASS: gdb.cp/demangle.exp: hp: X__6vectorXTiSN67TdTPvUP5TRs
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTiA3foo__Fi
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTiA3fooTPvA5Label__FiPPvT2
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTiSN42A3foo__Fi
PASS: gdb.cp/demangle.exp: hp: __ct__2T5XTPFcPv_i__Fi_2
PASS: gdb.cp/demangle.exp: hp: __ct__2T5XTPFcPv_i__Fi_19
PASS: gdb.cp/demangle.exp: hp: f__FicdPcPFci_v_34
PASS: gdb.cp/demangle.exp: hp: spec__13Spec<%1,%1.*>XTiTPi_FPi
PASS: gdb.cp/demangle.exp: hp: spec__16Spec<%1,%1.&,%1>XTiTRiTi_FPi
PASS: gdb.cp/demangle.exp: hp: add__XTc_FcT1
PASS: gdb.cp/demangle.exp: hp: add__XTcSP9A5label_FcPPlT1
PASS: gdb.cp/demangle.exp: hp: add__XTPfTFPd_f_FcT1
PASS: gdb.cp/demangle.exp: hp: unLink__12basic_stringXTcT18string_char_traitsXTc_T9allocator_Fv
PASS: gdb.cp/demangle.exp: hp: _Utf390_1__1_9223372036854775807__9223372036854775
PASS: gdb.cp/demangle.exp: set language unknown
PASS: gdb.cp/demangle.exp: auto: set demangle-style
PASS: gdb.cp/demangle.exp: auto: check demangling style
PASS: gdb.cp/demangle.exp: demangle -l c++ -- _ZSt4cout
PASS: gdb.cp/demangle.exp: demangle -l c++ _ZSt4cout
PASS: gdb.cp/demangle.exp: demangle -l c -- _ZSt4cout
PASS: gdb.cp/demangle.exp: demangle -l garbage xyzdje
PASS: gdb.cp/derivation.exp: before run: ptype A::value_type
PASS: gdb.cp/derivation.exp: before run: whatis A::value_type
PASS: gdb.cp/derivation.exp: before run: p (A::value_type) 0
PASS: gdb.cp/derivation.exp: before run: ptype D::value_type
PASS: gdb.cp/derivation.exp: before run: whatis D::value_type
PASS: gdb.cp/derivation.exp: before run: p (D::value_type) 0
PASS: gdb.cp/derivation.exp: before run: ptype E::value_type
PASS: gdb.cp/derivation.exp: before run: whatis E::value_type
PASS: gdb.cp/derivation.exp: before run: p (E::value_type) 0
PASS: gdb.cp/derivation.exp: before run: ptype F::value_type
PASS: gdb.cp/derivation.exp: before run: whatis F::value_type
PASS: gdb.cp/derivation.exp: before run: p (F::value_type) 0
PASS: gdb.cp/derivation.exp: before run: ptype A2::value_type
PASS: gdb.cp/derivation.exp: before run: whatis A2::value_type
PASS: gdb.cp/derivation.exp: before run: p (A2::value_type) 0
PASS: gdb.cp/derivation.exp: before run: ptype D2::value_type
PASS: gdb.cp/derivation.exp: before run: whatis D2::value_type
PASS: gdb.cp/derivation.exp: before run: p (D2::value_type) 0
PASS: gdb.cp/derivation.exp: before run: ptype Z::value_type
PASS: gdb.cp/derivation.exp: before run: whatis Z::value_type
PASS: gdb.cp/derivation.exp: before run: p (Z::value_type) 0
PASS: gdb.cp/derivation.exp: before run: ptype ZZ::value_type
PASS: gdb.cp/derivation.exp: before run: whatis ZZ::value_type
PASS: gdb.cp/derivation.exp: before run: p (ZZ::value_type) 0
UNRESOLVED: gdb.cp/destrprint.exp: destrprint
UNRESOLVED: gdb.cp/exception.exp: catch catch (before inferior run)
PASS: gdb.cp/exception.exp: catch throw (before inferior run)
PASS: gdb.cp/exception.exp: catch rethrow (before inferior run)
PASS: gdb.cp/exception.exp: info breakpoints (before inferior run)
PASS: gdb.cp/exception.exp: Set temporary breakpoint at main
FAIL: gdb.cp/exception.exp: run to main (GDB internal error)
PASS: gdb.cp/expand-psymtabs-cxx.exp: set language c++
PASS: gdb.cp/expand-psymtabs-cxx.exp: before expand
PASS: gdb.cp/expand-psymtabs-cxx.exp: force expand
PASS: gdb.cp/expand-psymtabs-cxx.exp: after expand
PASS: gdb.cp/extern-c.exp: setting breakpoint at c_func
FAIL: gdb.cp/extern-c.exp: continue to breakpoint: c_func
PASS: gdb.cp/extern-c.exp: initialize counter
PASS: gdb.cp/extern-c.exp: rbreak c_funcs
PASS: gdb.cp/extern-c.exp: command details for multiple breakpoints
PASS: gdb.cp/extern-c.exp: set commands on multiple breakpoints
FAIL: gdb.cp/extern-c.exp: continue to breakpoint: c_funcs_1
FAIL: gdb.cp/extern-c.exp: verify counter at first breakpoint
FAIL: gdb.cp/extern-c.exp: continue to breakpoint: c_funcs_2
FAIL: gdb.cp/extern-c.exp: verify counter at second breakpoint
UNRESOLVED: gdb.cp/formatted-ref.exp: print/x s
FAIL: gdb.cp/formatted-ref.exp: print/x e
FAIL: gdb.cp/formatted-ref.exp: print/x i
FAIL: gdb.cp/formatted-ref.exp: print/x &s
FAIL: gdb.cp/formatted-ref.exp: print/x &e
FAIL: gdb.cp/formatted-ref.exp: print/x &i
FAIL: gdb.cp/formatted-ref.exp: print/x *(&(&s))
FAIL: gdb.cp/formatted-ref.exp: print/x *(&(&i))
FAIL: gdb.cp/formatted-ref.exp: print/x *(&(&e))
FAIL: gdb.cp/formatted-ref.exp: print s.x == 13
UNRESOLVED: gdb.cp/gdb2384.exp: failed to compile
UNRESOLVED: gdb.cp/hang.exp: doesn't overwrite struct type
PASS: gdb.cp/hang.exp: doesn't corrupt cv_type chain
PASS: gdb.cp/impl-this.exp: before run: print i
PASS: gdb.cp/impl-this.exp: before run: print D::i
PASS: gdb.cp/impl-this.exp: before run: print D::B<int>::i
PASS: gdb.cp/impl-this.exp: before run: print B<int>::i
PASS: gdb.cp/impl-this.exp: before run: print D::C::i
PASS: gdb.cp/impl-this.exp: before run: print C::i
PASS: gdb.cp/impl-this.exp: before run: print D::B<int>::A<int>::i
PASS: gdb.cp/impl-this.exp: before run: print B<int>::A<int>::i
PASS: gdb.cp/impl-this.exp: before run: print A<int>::i
PASS: gdb.cp/impl-this.exp: before run: print D::C::A<int>::i
PASS: gdb.cp/impl-this.exp: before run: print C::A<int>::i
PASS: gdb.cp/impl-this.exp: before run: print D::x
PASS: gdb.cp/impl-this.exp: before run: print x
PASS: gdb.cp/impl-this.exp: before run: print D::C::c
PASS: gdb.cp/impl-this.exp: before run: print C::c
PASS: gdb.cp/impl-this.exp: before run: print c
PASS: gdb.cp/impl-this.exp: before run: print D::A<int>::i
UNRESOLVED: gdb.cp/inherit.exp: set width 0
UNRESOLVED: gdb.cp/maint.exp: help maintenance cplus
PASS: gdb.cp/maint.exp: help maint cp
PASS: gdb.cp/maint.exp: maint cp
PASS: gdb.cp/maint.exp: help maint cp first_component
PASS: gdb.cp/maint.exp: help maint cp namespace
PASS: gdb.cp/maint.exp: set complaints 1000
PASS: gdb.cp/maint.exp: maint cp first_component foo
PASS: gdb.cp/maint.exp: maint cp first_component operator<<
PASS: gdb.cp/maint.exp: maint cp first_component operator>>
PASS: gdb.cp/maint.exp: maint cp first_component operator ->
PASS: gdb.cp/maint.exp: maint cp first_component operator()
PASS: gdb.cp/maint.exp: maint cp first_component operator>
PASS: gdb.cp/maint.exp: maint cp first_component operator<
PASS: gdb.cp/maint.exp: maint cp first_component operator ->
PASS: gdb.cp/maint.exp: maint cp first_component operator  ->
PASS: gdb.cp/maint.exp: maint cp first_component foo()
PASS: gdb.cp/maint.exp: maint cp first_component foo(int)
PASS: gdb.cp/maint.exp: maint cp first_component foo(X::Y)
PASS: gdb.cp/maint.exp: maint cp first_component foo(X::Y, A::B)
PASS: gdb.cp/maint.exp: maint cp first_component foo(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >)
PASS: gdb.cp/maint.exp: maint cp first_component operator>(X::Y)
PASS: gdb.cp/maint.exp: maint cp first_component int operator<< <char>()
PASS: gdb.cp/maint.exp: maint cp first_component T<Cooperator>
PASS: gdb.cp/maint.exp: maint cp first_component int foo<&(operator<<(C, C))>()
PASS: gdb.cp/maint.exp: maint cp first_component int foo<&operator<<(C, C)>()
PASS: gdb.cp/maint.exp: maint cp first_component int foo<operator<<(C, C)>()
PASS: gdb.cp/maint.exp: maint cp first_component foo::bar
PASS: gdb.cp/maint.exp: maint cp first_component foo::bar::baz
PASS: gdb.cp/maint.exp: maint cp first_component C<A>::bar
PASS: gdb.cp/maint.exp: maint cp first_component C<std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > >::bar
PASS: gdb.cp/maint.exp: maint cp first_component foo<
PASS: gdb.cp/maint.exp: maint cp first_component foo(
PASS: gdb.cp/maint.exp: maint cp first_component bool operator<<char>
PASS: gdb.cp/maint.exp: maint cp namespace
UNRESOLVED: gdb.cp/mb-inline.exp: set breakpoint
PASS: gdb.cp/mb-inline.exp: info break
FAIL: gdb.cp/mb-inline.exp: run to breakpoint (GDB internal error)
FAIL: gdb.cp/mb-inline.exp: run to breakpoint 2
PASS: gdb.cp/mb-inline.exp: disabling location: disable
FAIL: gdb.cp/mb-inline.exp: disabling location: run to breakpoint (GDB internal error)
PASS: gdb.cp/mb-inline.exp: disabled breakpoint 1.2
FAIL: gdb.cp/mb-inline.exp: can't run to main for multi_line_foo tests.
PASS: gdb.cp/mb-templates.exp: initial condition: set breakpoint
FAIL: gdb.cp/mb-templates.exp: initial condition: run to breakpoint (GDB internal error)
FAIL: gdb.cp/mb-templates.exp: initial condition: run to breakpoint 2
PASS: gdb.cp/mb-templates.exp: kill
PASS: gdb.cp/mb-templates.exp: separate condition: set breakpoint
PASS: gdb.cp/mb-templates.exp: separate condition: set condition
FAIL: gdb.cp/mb-templates.exp: separate condition: run to breakpoint (GDB internal error)
FAIL: gdb.cp/mb-templates.exp: separate condition: run to breakpoint 2
PASS: gdb.cp/mb-templates.exp: disabling location: disable
FAIL: gdb.cp/mb-templates.exp: disabling location: run to breakpoint (GDB internal error)
PASS: gdb.cp/mb-templates.exp: disabling location: enable
PASS: gdb.cp/mb-templates.exp: disable breakpoint: disable
FAIL: gdb.cp/mb-templates.exp: disable breakpoint: run to breakpoint (GDB internal error)
PASS: gdb.cp/mb-templates.exp: instantiation: set breakpoint
FAIL: gdb.cp/mb-templates.exp: instantiation: run to breakpoint (GDB internal error)
FAIL: gdb.cp/mb-templates.exp: instantiation: run to breakpoint 2
FAIL: gdb.cp/mb-templates.exp: can't run to main for multi_line_foo tests.
UNRESOLVED: gdb.cp/minsym-fallback.exp: set breakpoint pending off
PASS: gdb.cp/minsym-fallback.exp: break C::f()
PASS: gdb.cp/minsym-fallback.exp: break C::operator()()
PASS: gdb.cp/misc.exp: deduced language is C++, before full symbols
PASS: gdb.cp/misc.exp: deduced language is C++, after full symbols
FAIL: gdb.cp/misc.exp: print s.a for foo struct (known gcc 2.7.2 and earlier bug)
PASS: gdb.cp/misc.exp: print as bool (setup)
PASS: gdb.cp/misc.exp: print as bool (print 1 == 1)
PASS: gdb.cp/misc.exp: print as bool (print 1 == 2)
FAIL: gdb.cp/misc.exp: print a bool var
FAIL: gdb.cp/misc.exp: set a bool var (setup)
FAIL: gdb.cp/misc.exp: set a bool var (print v_bool)
FAIL: gdb.cp/misc.exp: print a bool array
FAIL: gdb.cp/misc.exp: set a bool array elem (setup)
FAIL: gdb.cp/misc.exp: set a bool array elem (print v_bool_array)
PASS: gdb.cp/misc.exp: print true
PASS: gdb.cp/misc.exp: print false
PASS: gdb.cp/misc.exp: 1 + true
PASS: gdb.cp/misc.exp: 3 + false
PASS: gdb.cp/misc.exp: 1 < 2 < 3
PASS: gdb.cp/misc.exp: 2 < 1 > 4
PASS: gdb.cp/misc.exp: (bool)43
PASS: gdb.cp/misc.exp: (bool)0
PASS: gdb.cp/misc.exp: (bool)17.93
PASS: gdb.cp/misc.exp: (bool)0.0
PASS: gdb.cp/misc.exp: (int)true
PASS: gdb.cp/misc.exp: (int)false
FAIL: gdb.cp/misc.exp: expression using block qualifier
PASS: gdb.cp/namespace-enum.exp: print foo::B::B_B
PASS: gdb.cp/namespace-enum.exp: print foo::B_B
PASS: gdb.cp/namespace-enum.exp: print A_A
UNRESOLVED: gdb.cp/namespace.exp: show lang
UNRESOLVED: gdb.cp/no-dmgl-verbose.exp: set breakpoint pending off
FAIL: gdb.cp/no-dmgl-verbose.exp: setting breakpoint at 'f(std::string)'
PASS: gdb.cp/no-dmgl-verbose.exp: DMGL_VERBOSE-demangled f(std::string) is not defined
PASS: gdb.cp/noparam.exp: p C::m (int)
UNRESOLVED: gdb.cp/overload-const.exp: set language c++
PASS: gdb.cp/overload-const.exp: setting breakpoint at myclass::func
UNRESOLVED: gdb.cp/paren-type.exp: set breakpoint pending off
PASS: gdb.cp/paren-type.exp: break C::f(long)
PASS: gdb.cp/paren-type.exp: break C::f(short)
FAIL: gdb.cp/parse-lang.exp: breakpoint hit (GDB internal error)
UNRESOLVED: gdb.cp/pr10687.exp: can't run to main
UNRESOLVED: gdb.cp/pr9167.exp: can't run to main
UNRESOLVED: gdb.cp/psmang.exp: break s::method1
PASS: gdb.cp/psmang.exp: break s::method2
PASS: gdb.cp/psymtab-parameter.exp: set language c++
PASS: gdb.cp/psymtab-parameter.exp: maintenance info symtabs
PASS: gdb.cp/psymtab-parameter.exp: complete p 'func<short>(
PASS: gdb.cp/ptype-cv-cp.exp: whatis v_my_int
PASS: gdb.cp/ptype-cv-cp.exp: ptype v_my_int
PASS: gdb.cp/ptype-cv-cp.exp: whatis v_const_my_int
PASS: gdb.cp/ptype-cv-cp.exp: ptype v_const_my_int
PASS: gdb.cp/ptype-cv-cp.exp: whatis v_volatile_my_int
PASS: gdb.cp/ptype-cv-cp.exp: ptype v_volatile_my_int
PASS: gdb.cp/ptype-cv-cp.exp: whatis v_const_volatile_my_int
PASS: gdb.cp/ptype-cv-cp.exp: ptype v_const_volatile_my_int
PASS: gdb.cp/ptype-cv-cp.exp: whatis v_volatile_const_my_int
PASS: gdb.cp/ptype-cv-cp.exp: ptype v_volatile_const_my_int
UNRESOLVED: gdb.cp/punctuator.exp: set lang c++
PASS: gdb.cp/punctuator.exp: print (0x5a5a bitand 0xaaaa) == (0x5a5a & 0xaaaa)
PASS: gdb.cp/punctuator.exp: print (0x5a5a bitor 0xaaaa) == (0x5a5a | 0xaaaa)
PASS: gdb.cp/punctuator.exp: print (0x5a5a xor 0xaaaa) == (0x5a5a ^ 0xaaaa)
PASS: gdb.cp/punctuator.exp: print (0x5a5a and 0xaaaa) == (0x5a5a && 0xaaaa)
PASS: gdb.cp/punctuator.exp: print (0x5a5a or 0xaaaa) == (0x5a5a || 0xaaaa)
PASS: gdb.cp/punctuator.exp: print (not not 0xaaaa) == (!!0xaaaa)
PASS: gdb.cp/punctuator.exp: print (compl 0xaaaa) == (~0xaaaa)
PASS: gdb.cp/punctuator.exp: set $u 1
PASS: gdb.cp/punctuator.exp: set $v 1
PASS: gdb.cp/punctuator.exp: print ($u not_eq 0xaaaa) == ($v != 0xaaaa)
PASS: gdb.cp/punctuator.exp: print ($u and_eq 0xaaaa) == ($v &= 0xaaaa)
PASS: gdb.cp/punctuator.exp: set $u 2
PASS: gdb.cp/punctuator.exp: set $v 2
PASS: gdb.cp/punctuator.exp: print ($u or_eq 0xaaaa) == ($v |= 0xaaaa)
PASS: gdb.cp/punctuator.exp: set $u 3
PASS: gdb.cp/punctuator.exp: set $v 3
PASS: gdb.cp/punctuator.exp: print ($u xor_eq 0xaaaa) == ($v ^= 0xaaaa)
UNTESTED: gdb.cp/re-set-overloaded.exp: failed to compile
PASS: gdb.cp/readnow-language.exp: show language
FAIL: gdb.cp/ref-params.exp: print value of a Child in main
FAIL: gdb.cp/ref-params.exp: print value of f1 on Child in main
FAIL: gdb.cp/ref-params.exp: print value of f2 on Child in main
FAIL: gdb.cp/ref-params.exp: print value of f1 on (Child&) in main
FAIL: gdb.cp/ref-params.exp: print value of f2 on (Child&) in main
FAIL: gdb.cp/ref-params.exp: print value of Child& in f2
FAIL: gdb.cp/ref-params.exp: print value of f1 on Child& in f2
FAIL: gdb.cp/ref-params.exp: print value of Parent& in f1
FAIL: gdb.cp/ref-params.exp: print f1(MQ)
FAIL: gdb.cp/ref-params.exp: print mf1(MQ)
FAIL: gdb.cp/ref-params.exp: print mf2(MQ)
FAIL: gdb.cp/ref-params.exp: print f1(MQR)
FAIL: gdb.cp/ref-params.exp: print mf1(MQR)
FAIL: gdb.cp/ref-params.exp: print mf2(MQR)
UNRESOLVED: gdb.cp/rvalue-ref-casts.exp: couldn't run to main
UNTESTED: gdb.cp/rvalue-ref-overload.exp: couldn't run to marker1
FAIL: gdb.cp/rvalue-ref-params.exp: print value of f1 on (Child&&) in main
FAIL: gdb.cp/rvalue-ref-params.exp: print value of f2 on (Child&&) in main
FAIL: gdb.cp/rvalue-ref-params.exp: print value of Child&& in f2
FAIL: gdb.cp/rvalue-ref-params.exp: print value of f1 on Child&& in f2
FAIL: gdb.cp/rvalue-ref-params.exp: print value of Parent&& in f1
FAIL: gdb.cp/rvalue-ref-params.exp: print f1(static_cast<MultiChild&&>(MQ))
FAIL: gdb.cp/rvalue-ref-params.exp: print mf1(static_cast<MultiChild&&>(MQ))
FAIL: gdb.cp/rvalue-ref-params.exp: print mf2(static_cast<MultiChild&&>(MQ))
UNRESOLVED: gdb.cp/rvalue-ref-types.exp: couldn't run to breakpoint
FAIL: gdb.cp/scope-err.exp: can't run to main
UNRESOLVED: gdb.cp/static-method.exp: info addr A::func()
UNRESOLVED: gdb.cp/static-print-quit.exp: set width 80
PASS: gdb.cp/static-print-quit.exp: set height 2
PASS: gdb.cp/static-print-quit.exp: print c - <return>
PASS: gdb.cp/static-print-quit.exp: print c - q <return>
PASS: gdb.cp/static-print-quit.exp: print c - to quit
PASS: gdb.cp/static-print-quit.exp: q
PASS: gdb.cp/static-print-quit.exp: set pagination off
PASS: gdb.cp/static-print-quit.exp: first print
PASS: gdb.cp/static-print-quit.exp: second print
PASS: gdb.cp/templates.exp: set multiple-symbols ask
PASS: gdb.cp/templates.exp: ptype T5<int>
PASS: gdb.cp/templates.exp: ptype t5i
PASS: gdb.cp/templates.exp: constructor breakpoint
PASS: gdb.cp/templates.exp: destructor breakpoint
PASS: gdb.cp/templates.exp: value method breakpoint
PASS: gdb.cp/templates.exp: breakpoint on a line with no real code
FAIL: gdb.cp/templates.exp: print method of template typedef
FAIL: gdb.cp/templates.exp: print destructor of template typedef
PASS: gdb.cp/templates.exp: ptype empty
PASS: gdb.cp/templates.exp: ptype arg
PASS: gdb.cp/templates.exp: b 770
FAIL: gdb.cp/templates.exp: continue to line 770
FAIL: gdb.cp/templates.exp: print fint
PASS: gdb.cp/templates.exp: set print symbol off
FAIL: gdb.cp/templates.exp: print fvpchar
PASS: gdb.cp/templates.exp: ptype Foo
FAIL: gdb.cp/templates.exp: ptype fint
FAIL: gdb.cp/templates.exp: ptype fchar
FAIL: gdb.cp/templates.exp: ptype fvpchar
FAIL: gdb.cp/templates.exp: print Foo<volatile char *>::foo
FAIL: gdb.cp/templates.exp: print Foo<volatile char*>::foo
PASS: gdb.cp/templates.exp: ptype Bar
FAIL: gdb.cp/templates.exp: ptype bint
FAIL: gdb.cp/templates.exp: ptype bint2
PASS: gdb.cp/templates.exp: ptype Baz
FAIL: gdb.cp/templates.exp: ptype bazint
FAIL: gdb.cp/templates.exp: ptype bazint2
PASS: gdb.cp/templates.exp: ptype Qux
FAIL: gdb.cp/templates.exp: ptype quxint
PASS: gdb.cp/templates.exp: ptype Spec
FAIL: gdb.cp/templates.exp: ptype siip
PASS: gdb.cp/templates.exp: ptype Garply<int>
PASS: gdb.cp/templates.exp: ptype Garply<Garply<char> >
FAIL: gdb.cp/templates.exp: print Garply<Garply<char> >::garply
PASS: gdb.cp/templates.exp: break Garply<Garply<char> >::garply
UNRESOLVED: gdb.cp/typedef-operator.exp: set language c++
PASS: gdb.cp/typedef-operator.exp: test crash
PASS: gdb.cp/typeid.exp: before starting: print &typeid(i)
PASS: gdb.cp/typeid.exp: before starting: print &typeid(i) == &typeid(typeof(i))
PASS: gdb.cp/typeid.exp: before starting: print &typeid(cp)
PASS: gdb.cp/typeid.exp: before starting: print &typeid(cp) == &typeid(typeof(cp))
PASS: gdb.cp/typeid.exp: before starting: print &typeid(ccp)
PASS: gdb.cp/typeid.exp: before starting: print &typeid(ccp) == &typeid(typeof(ccp))
PASS: gdb.cp/typeid.exp: before starting: print &typeid(ca)
PASS: gdb.cp/typeid.exp: before starting: print &typeid(ca) == &typeid(typeof(ca))
PASS: gdb.cp/typeid.exp: before starting: print &typeid(b)
PASS: gdb.cp/typeid.exp: before starting: print &typeid(b) == &typeid(typeof(b))
UNTESTED: gdb.cp/typeid.exp: typeid
UNRESOLVED: gdb.cp/using-crash.exp: reload file
PASS: gdb.cp/var-tag.exp: before start: c++: set language c++
PASS: gdb.cp/var-tag.exp: before start: c++: ptype C
PASS: gdb.cp/var-tag.exp: before start: c++: print E
PASS: gdb.cp/var-tag.exp: before start: c++: ptype E
PASS: gdb.cp/var-tag.exp: before start: c++: print S
PASS: gdb.cp/var-tag.exp: before start: c++: ptype S
PASS: gdb.cp/var-tag.exp: before start: c++: print U
PASS: gdb.cp/var-tag.exp: before start: c++: ptype U
PASS: gdb.cp/var-tag.exp: before start: c++: print cc
PASS: gdb.cp/var-tag.exp: before start: c++: ptype cc
PASS: gdb.cp/var-tag.exp: before start: c++: print CC
PASS: gdb.cp/var-tag.exp: before start: c++: ptype CC
PASS: gdb.cp/var-tag.exp: before start: c++: print ss
PASS: gdb.cp/var-tag.exp: before start: c++: ptype ss
PASS: gdb.cp/var-tag.exp: before start: c++: print SS
PASS: gdb.cp/var-tag.exp: before start: c++: ptype SS
PASS: gdb.cp/var-tag.exp: before start: c++: print ee
PASS: gdb.cp/var-tag.exp: before start: c++: ptype ee
PASS: gdb.cp/var-tag.exp: before start: c++: print EE
PASS: gdb.cp/var-tag.exp: before start: c++: ptype EE
PASS: gdb.cp/var-tag.exp: before start: c++: print uu
PASS: gdb.cp/var-tag.exp: before start: c++: ptype uu
PASS: gdb.cp/var-tag.exp: before start: c++: print UU
PASS: gdb.cp/var-tag.exp: before start: c++: ptype UU
PASS: gdb.cp/var-tag.exp: before start: c++: print E2
PASS: gdb.cp/var-tag.exp: before start: c++: ptype E2
PASS: gdb.cp/var-tag.exp: before start: c++: print S2
PASS: gdb.cp/var-tag.exp: before start: c++: ptype S2
PASS: gdb.cp/var-tag.exp: before start: c++: print U2
PASS: gdb.cp/var-tag.exp: before start: c++: ptype U2
PASS: gdb.cp/var-tag.exp: before start: c: set language c
PASS: gdb.cp/var-tag.exp: before start: c: ptype C
PASS: gdb.cp/var-tag.exp: before start: c: print E
PASS: gdb.cp/var-tag.exp: before start: c: ptype E
PASS: gdb.cp/var-tag.exp: before start: c: print S
PASS: gdb.cp/var-tag.exp: before start: c: ptype S
PASS: gdb.cp/var-tag.exp: before start: c: print U
PASS: gdb.cp/var-tag.exp: before start: c: ptype U
PASS: gdb.cp/var-tag.exp: before start: c: print cc
PASS: gdb.cp/var-tag.exp: before start: c: ptype cc
PASS: gdb.cp/var-tag.exp: before start: c: print CC
PASS: gdb.cp/var-tag.exp: before start: c: ptype CC
PASS: gdb.cp/var-tag.exp: before start: c: print ss
PASS: gdb.cp/var-tag.exp: before start: c: ptype ss
PASS: gdb.cp/var-tag.exp: before start: c: print SS
PASS: gdb.cp/var-tag.exp: before start: c: ptype SS
PASS: gdb.cp/var-tag.exp: before start: c: print ee
PASS: gdb.cp/var-tag.exp: before start: c: ptype ee
PASS: gdb.cp/var-tag.exp: before start: c: print EE
PASS: gdb.cp/var-tag.exp: before start: c: ptype EE
PASS: gdb.cp/var-tag.exp: before start: c: print uu
PASS: gdb.cp/var-tag.exp: before start: c: ptype uu
PASS: gdb.cp/var-tag.exp: before start: c: print UU
PASS: gdb.cp/var-tag.exp: before start: c: ptype UU
PASS: gdb.cp/var-tag.exp: before start: c: print E2
PASS: gdb.cp/var-tag.exp: before start: c: ptype E2
PASS: gdb.cp/var-tag.exp: before start: c: print S2
PASS: gdb.cp/var-tag.exp: before start: c: ptype S2
PASS: gdb.cp/var-tag.exp: before start: c: print U2
PASS: gdb.cp/var-tag.exp: before start: c: ptype U2
UNRESOLVED: gdb.cp/wide_char_types.exp: no program: c: set language c
PASS: gdb.cp/wide_char_types.exp: no program: c: char16_t is not built-in
PASS: gdb.cp/wide_char_types.exp: no program: c: char32_t is not built-in
PASS: gdb.cp/wide_char_types.exp: no program: c: wchar_t is not built-in
PASS: gdb.cp/wide_char_types.exp: no program: c: p U"hello"
PASS: gdb.cp/wide_char_types.exp: no program: c: p u"hello"
PASS: gdb.cp/wide_char_types.exp: no program: c: p L"hello"
PASS: gdb.cp/wide_char_types.exp: no program: c++: set language c++
PASS: gdb.cp/wide_char_types.exp: no program: c++: char16_t is distinct
PASS: gdb.cp/wide_char_types.exp: no program: c++: char32_t is distinct
PASS: gdb.cp/wide_char_types.exp: no program: c++: wchar_t is distinct
FAIL: gdb.cp/wide_char_types.exp: no program: c++: char16_t is unsigned
PASS: gdb.cp/wide_char_types.exp: no program: c++: char32_t is unsigned
PASS: gdb.cp/wide_char_types.exp: no program: c++: wchar_t sign (signed)
PASS: gdb.cp/wide_char_types.exp: no program: c++: sizeof((char16_t) -1) == 2
PASS: gdb.cp/wide_char_types.exp: no program: c++: sizeof(char16_t) == 4
PASS: gdb.cp/wide_char_types.exp: no program: c++: sizeof(wchar_t)
FAIL: gdb.cp/wide_char_types.exp: no program: c++: p U"hello"
FAIL: gdb.cp/wide_char_types.exp: no program: c++: p u"hello"
FAIL: gdb.cp/wide_char_types.exp: no program: c++: p L"hello"
FAIL: gdb.cp/wide_char_types.exp: with program: lang=c: can't run to main
FAIL: gdb.cp/wide_char_types.exp: with program: lang=c++03: can't run to main
FAIL: gdb.cp/wide_char_types.exp: with program: lang=c++11: can't run to main
PASS: gdb.disasm/disassembler-options.exp: set disassembler-options
PASS: gdb.disasm/disassembler-options.exp: show NULL disassembler-options
PASS: gdb.disasm/disassembler-options.exp: set disassembler-options invalid_option_value
PASS: gdb.dlang/debug-expr.exp: set language d
PASS: gdb.dlang/debug-expr.exp: set debug expression 1
PASS: gdb.dlang/debug-expr.exp: print *(int*)(0)
PASS: gdb.dlang/demangle.exp: set language d
PASS: gdb.dlang/demangle.exp: set language to "d"
PASS: gdb.dlang/demangle.exp: set width 0
PASS: gdb.dlang/demangle.exp: _Dmain
PASS: gdb.dlang/demangle.exp: _D8demangle4testFaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFbZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFcZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFdZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFeZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFfZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFgZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFhZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFiZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFjZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFkZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFlZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFmZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFnZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFoZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFpZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFqZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFrZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFsZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFtZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFuZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFvZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFwZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFOaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFxaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFyaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFNgaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFOxaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFONgaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFAaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFAAaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFAAAaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFG42aZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFG42G42aZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFG42G42G42aZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFG1234567890aZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFHaaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFHHaaaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFPaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFPPaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFPPPaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFNhG8gZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFNhG16gZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFNhG32gZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFNhG4sZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFNhG8sZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFNhG16sZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFNhG2iZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFNhG4iZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFNhG8iZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFNhG1lZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFNhG2lZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFNhG4lZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFNhG2fZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFNhG4fZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFNhG8fZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFNhG1dZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFNhG2dZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFNhG4dZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFI5identZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFI5ident4testZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFC5classZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFC5class4testZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFS6structZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFS6struct4testZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFE4enumZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFE4enum4testZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFT7typedefZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFT7typedef4testZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFJaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFKaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFLaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFMaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFaXv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFaYv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFaaYv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFYv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFaaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFDFZaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFDUZaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFDWZaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFDVZaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFDRZaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFDYZaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFPFZaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFPUZaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFPWZaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFPVZaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFPRZaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFPYZaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFDFNaZaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFDFNbZaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFDFNcZaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFDFNdZaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFDFNeZaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFDFNfZaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFPFNaZaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFPFNbZaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFPFNcZaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFPFNdZaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFPFNeZaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFPFNfZaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFPFNaNbZaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFPFNbNaZaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFPFNdNfNaZaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4test6__vtblZ
PASS: gdb.dlang/demangle.exp: _D8demangle4test6__initZ
PASS: gdb.dlang/demangle.exp: _D8demangle4test12__ModuleInfoZ
PASS: gdb.dlang/demangle.exp: _D8demangle4test7__ClassZ
PASS: gdb.dlang/demangle.exp: _D8demangle4test11__InterfaceZ
PASS: gdb.dlang/demangle.exp: _D8demangle4test6__ctorMFZv
PASS: gdb.dlang/demangle.exp: _D8demangle4test6__dtorMFZv
PASS: gdb.dlang/demangle.exp: _D8demangle4test10__postblitMFZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFHAbaZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFHG42caZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFAiXv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFLAiXv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFAiYv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFLAiYv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFLilZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testFLliZv
PASS: gdb.dlang/demangle.exp: _D8demangle4testPFLAiYi
PASS: gdb.dlang/demangle.exp: _D1a1bi
PASS: gdb.dlang/demangle.exp: _D1a1bPFiZi
PASS: gdb.dlang/demangle.exp: _D4test3fooAa
PASS: gdb.dlang/demangle.exp: _D4test2dgDFiYd
PASS: gdb.dlang/demangle.exp: _D8demangle8demangleFAaZAa
PASS: gdb.dlang/demangle.exp: _D6object6Object8opAssignFC6ObjectZi
PASS: gdb.dlang/demangle.exp: _D6object6Object8opEqualsFC6ObjectZi
PASS: gdb.dlang/demangle.exp: _D8demangle4testFLC6ObjectLDFLiZiZi
PASS: gdb.dlang/demangle.exp: _D6plugin8generateFiiZAya
PASS: gdb.dlang/demangle.exp: _D8demangle3fnAFZ3fnBMFZv
PASS: gdb.dlang/demangle.exp: _D8demangle4mainFZ1S3fnCMFZv
PASS: gdb.dlang/demangle.exp: _D8demangle4mainFZ1S3fnDMFZv
PASS: gdb.dlang/demangle.exp: _D8demangle2fnFNgiZNgi
PASS: gdb.dlang/demangle.exp: _D8demangle4mainFZ5localMFZi
PASS: gdb.dlang/demangle.exp: _D3std5ascii9uppercaseyAa
PASS: gdb.dlang/demangle.exp: _D3std6stream9BOMEndianyG5E3std6system6Endian
PASS: gdb.dlang/demangle.exp: _D3std8internal7uni_tab10unicodeNkoyS3std8internal3uni12CodepointSet
PASS: gdb.dlang/demangle.exp: _D2gc2gc2GC6addrOfMFPvZPv
PASS: gdb.dlang/demangle.exp: _D3std7process10setCLOEXECFibZv
PASS: gdb.dlang/demangle.exp: _D3std6digest2md3MD53putMFNaNbNeMAxhXv
PASS: gdb.dlang/demangle.exp: _D3std6mmfile6MmFile13opIndexAssignMFhmZh
PASS: gdb.dlang/demangle.exp: _D3std7process18escapeShellCommandFxAAaXAya
PASS: gdb.dlang/demangle.exp: _D4core4sync5mutex5Mutex6__ctorMFC6ObjectZC4core4sync5mutex5Mutex
PASS: gdb.dlang/demangle.exp: _D6object14TypeInfo_Array8argTypesMFNbNfJC8TypeInfoJC8TypeInfoZi
PASS: gdb.dlang/demangle.exp: _D2rt6dmain211_d_run_mainUiPPaPUAAaZiZ7tryExecMFMDFZvZv
PASS: gdb.dlang/demangle.exp: _D6object9Exception6__ctorMFNaNbNfAyaAyamC6object9ThrowableZC9Exception
PASS: gdb.dlang/demangle.exp: _D3gcc3deh17parse_lsda_headerFPS3gcc6unwind7generic15_Unwind_ContextPhPS3gcc3deh16lsda_header_infoZPh
PASS: gdb.dlang/demangle.exp: _D3std6socket23UnknownAddressReference6__ctorMFPS4core3sys5posix3sys6socket8sockaddrkZC3std6socket23UnknownAddressReference
PASS: gdb.dlang/demangle.exp: demangle -l d -- _Dmain
PASS: gdb.dlang/expression.exp: set language d
PASS: gdb.dlang/expression.exp: set language to "d"
PASS: gdb.dlang/expression.exp: print 123456
PASS: gdb.dlang/expression.exp: print 123_456
PASS: gdb.dlang/expression.exp: print 1_2_3_4_5_6_
PASS: gdb.dlang/expression.exp: print 0x123456
PASS: gdb.dlang/expression.exp: print 0x123_456
PASS: gdb.dlang/expression.exp: print 0x1_2_3_4_5_6_
PASS: gdb.dlang/expression.exp: print 0123456
PASS: gdb.dlang/expression.exp: print 0123_456
PASS: gdb.dlang/expression.exp: print 01_2_3_4_5_6_
PASS: gdb.dlang/expression.exp: print 0b101010
PASS: gdb.dlang/expression.exp: print 0b101_010
PASS: gdb.dlang/expression.exp: print 0b1_0_1_0_1_0_
PASS: gdb.dlang/expression.exp: ptype 0
PASS: gdb.dlang/expression.exp: ptype 2_147_483_647
PASS: gdb.dlang/expression.exp: ptype 2_147_483_648
PASS: gdb.dlang/expression.exp: ptype 4_294_967_296
PASS: gdb.dlang/expression.exp: ptype 0L
PASS: gdb.dlang/expression.exp: ptype 2_147_483_648U
PASS: gdb.dlang/expression.exp: ptype 4_294_967_296U
PASS: gdb.dlang/expression.exp: ptype 0UL
PASS: gdb.dlang/expression.exp: ptype 0LU
PASS: gdb.dlang/expression.exp: ptype 0x0
PASS: gdb.dlang/expression.exp: ptype 0x7FFF_FFFF
PASS: gdb.dlang/expression.exp: ptype 0x8000_0000
PASS: gdb.dlang/expression.exp: ptype 0x1_0000_0000
PASS: gdb.dlang/expression.exp: ptype 0x0L
PASS: gdb.dlang/expression.exp: ptype 0x7FFF_FFFFU
PASS: gdb.dlang/expression.exp: ptype 0x1_0000_0000U
PASS: gdb.dlang/expression.exp: ptype 0x0UL
PASS: gdb.dlang/expression.exp: ptype 0x0LU
PASS: gdb.dlang/expression.exp: ptype 00
PASS: gdb.dlang/expression.exp: ptype 017_777_777_777
PASS: gdb.dlang/expression.exp: ptype 020_000_000_000
PASS: gdb.dlang/expression.exp: ptype 040_000_000_000
PASS: gdb.dlang/expression.exp: ptype 00L
PASS: gdb.dlang/expression.exp: ptype 017_777_777_777U
PASS: gdb.dlang/expression.exp: ptype 040_000_000_000U
PASS: gdb.dlang/expression.exp: ptype 00UL
PASS: gdb.dlang/expression.exp: ptype 00LU
PASS: gdb.dlang/expression.exp: ptype 0b0
PASS: gdb.dlang/expression.exp: ptype 0b1111111111111111111111111111111
PASS: gdb.dlang/expression.exp: ptype 0b10000000000000000000000000000000
PASS: gdb.dlang/expression.exp: ptype 0b100000000000000000000000000000000
PASS: gdb.dlang/expression.exp: ptype 0b0L
PASS: gdb.dlang/expression.exp: ptype 0b1111111111111111111111111111111U
PASS: gdb.dlang/expression.exp: ptype 0b100000000000000000000000000000000U
PASS: gdb.dlang/expression.exp: ptype 0b0UL
PASS: gdb.dlang/expression.exp: ptype 0b0LU
PASS: gdb.dlang/expression.exp: ptype 123_456.567_8
PASS: gdb.dlang/expression.exp: ptype 1_2_3_4_5_6_._5_6_7_8
PASS: gdb.dlang/expression.exp: ptype 1_2_3_4_5_6_._5e-6_
FAIL: gdb.dlang/expression.exp: ptype 0x1.FFFFFFFFFFFFFp1023
FAIL: gdb.dlang/expression.exp: ptype 0x1p-52L
PASS: gdb.dlang/expression.exp: ptype 1.175494351e-38F
PASS: gdb.dlang/expression.exp: ptype 6.3i
PASS: gdb.dlang/expression.exp: ptype 6.3fi
PASS: gdb.dlang/expression.exp: ptype 6.4Li
PASS: gdb.dlang/expression.exp: print 1 == 2 > 0
PASS: gdb.dlang/expression.exp: print (1 == 2) > 0
PASS: gdb.dlang/expression.exp: print 5 ^^ 5
PASS: gdb.dlang/expression.exp: print 144 ^^ 0.5
PASS: gdb.dlang/expression.exp: print (-10 ^^ 2)
PASS: gdb.dlang/expression.exp: print (-10) ^^ 2
PASS: gdb.dlang/expression.exp: print $var ^^= 2
PASS: gdb.dlang/primitive-types.exp: set language d
PASS: gdb.dlang/primitive-types.exp: set language to "d"
PASS: gdb.dlang/primitive-types.exp: ptype void
PASS: gdb.dlang/primitive-types.exp: ptype bool
PASS: gdb.dlang/primitive-types.exp: ptype byte
PASS: gdb.dlang/primitive-types.exp: ptype ubyte
PASS: gdb.dlang/primitive-types.exp: ptype short
PASS: gdb.dlang/primitive-types.exp: ptype ushort
PASS: gdb.dlang/primitive-types.exp: ptype int
PASS: gdb.dlang/primitive-types.exp: ptype uint
PASS: gdb.dlang/primitive-types.exp: ptype long
PASS: gdb.dlang/primitive-types.exp: ptype ulong
PASS: gdb.dlang/primitive-types.exp: ptype cent
PASS: gdb.dlang/primitive-types.exp: ptype ucent
PASS: gdb.dlang/primitive-types.exp: ptype float
PASS: gdb.dlang/primitive-types.exp: ptype double
PASS: gdb.dlang/primitive-types.exp: ptype real
PASS: gdb.dlang/primitive-types.exp: ptype ifloat
PASS: gdb.dlang/primitive-types.exp: ptype idouble
PASS: gdb.dlang/primitive-types.exp: ptype ireal
PASS: gdb.dlang/primitive-types.exp: ptype cfloat
PASS: gdb.dlang/primitive-types.exp: ptype cdouble
PASS: gdb.dlang/primitive-types.exp: ptype creal
PASS: gdb.dlang/primitive-types.exp: ptype char
PASS: gdb.dlang/primitive-types.exp: ptype wchar
PASS: gdb.dlang/primitive-types.exp: ptype dchar
PASS: gdb.dlang/properties.exp: set language d
PASS: gdb.dlang/properties.exp: set language to "d"
PASS: gdb.dlang/properties.exp: print bool.sizeof
PASS: gdb.dlang/properties.exp: print (bool).sizeof
PASS: gdb.dlang/properties.exp: print char.sizeof
PASS: gdb.dlang/properties.exp: print wchar.sizeof
PASS: gdb.dlang/properties.exp: print dchar.sizeof
PASS: gdb.dlang/properties.exp: print byte.sizeof
PASS: gdb.dlang/properties.exp: print ubyte.sizeof
PASS: gdb.dlang/properties.exp: print short.sizeof
PASS: gdb.dlang/properties.exp: print ushort.sizeof
PASS: gdb.dlang/properties.exp: print int.sizeof
PASS: gdb.dlang/properties.exp: print uint.sizeof
PASS: gdb.dlang/properties.exp: print long.sizeof
PASS: gdb.dlang/properties.exp: print ulong.sizeof
PASS: gdb.dlang/properties.exp: print cent.sizeof
PASS: gdb.dlang/properties.exp: print ucent.sizeof
PASS: gdb.dlang/properties.exp: print float.sizeof
PASS: gdb.dlang/properties.exp: print ifloat.sizeof
PASS: gdb.dlang/properties.exp: print double.sizeof
PASS: gdb.dlang/properties.exp: print idouble.sizeof
PASS: gdb.dlang/properties.exp: print (1).sizeof
PASS: gdb.dlang/properties.exp: print (1U).sizeof
PASS: gdb.dlang/properties.exp: print (1L).sizeof
PASS: gdb.dlang/properties.exp: print (1UL).sizeof
PASS: gdb.dlang/properties.exp: print (1.0).sizeof
PASS: gdb.dlang/properties.exp: print (1.0f).sizeof
PASS: gdb.dlang/properties.exp: print (7 ^^ 3).sizeof
PASS: gdb.dlang/properties.exp: print (7L ^^ 3).sizeof
PASS: gdb.dlang/properties.exp: print (7.0 ^^ 3).sizeof
PASS: gdb.dlang/properties.exp: print (7.0f ^^ 3).sizeof
PASS: gdb.dlang/properties.exp: ptype typeof(false)
PASS: gdb.dlang/properties.exp: ptype typeof(1)
PASS: gdb.dlang/properties.exp: ptype typeof(1U)
PASS: gdb.dlang/properties.exp: ptype typeof(1L)
PASS: gdb.dlang/properties.exp: ptype typeof(1UL)
PASS: gdb.dlang/properties.exp: ptype typeof(1.0)
PASS: gdb.dlang/properties.exp: ptype typeof(1.0L)
PASS: gdb.dlang/properties.exp: ptype typeof(1.0f)
PASS: gdb.dlang/properties.exp: ptype typeof(cast(byte) 1)
PASS: gdb.dlang/properties.exp: ptype typeof(cast(short) 1)
PASS: gdb.dlang/properties.exp: ptype typeof(7 ^^ 3)
PASS: gdb.dlang/properties.exp: ptype typeof(7L ^^ 3)
PASS: gdb.dlang/properties.exp: ptype typeof(7.0 ^^ 3)
PASS: gdb.dlang/properties.exp: ptype typeof(7.0L ^^ 3)
PASS: gdb.dlang/properties.exp: ptype typeof(7.0f ^^ 3)
PASS: gdb.dwarf2/dw4-sig-types.exp: maint set dwarf max-cache-age 0
UNSUPPORTED: gdb.dwarf2/dwp-sepdebug.exp: testsuite run does not produce dwp files
UNSUPPORTED: gdb.dwarf2/dwp-symlink.exp: testsuite run does not produce dwp files
UNRESOLVED: gdb.fortran/exprs.exp: set print sevenbit-strings
PASS: gdb.fortran/exprs.exp: set language fortran
PASS: gdb.fortran/exprs.exp: set language to "fortran"
PASS: gdb.fortran/exprs.exp: Set value-history[1] using $1
PASS: gdb.fortran/exprs.exp: Set value-history[2] using $2
PASS: gdb.fortran/exprs.exp: Set value-history[3] using $3
PASS: gdb.fortran/exprs.exp: Print value-history[MAX-1] using inplicit index $$
PASS: gdb.fortran/exprs.exp: Print value-history[MAX-1] again using implicit index $$
PASS: gdb.fortran/exprs.exp: Print value-history[MAX] using implicit index $
PASS: gdb.fortran/exprs.exp: Print value-history[MAX-2] using explicit index $$2
PASS: gdb.fortran/exprs.exp: Print value-history[MAX] using explicit index $0
PASS: gdb.fortran/exprs.exp: Print value-history[MAX] using explicit index $$0
PASS: gdb.fortran/exprs.exp: Print value-history[1] using explicit index $1
PASS: gdb.fortran/exprs.exp: Print value-history[2] using explicit index $2
PASS: gdb.fortran/exprs.exp: Print value-history[3] using explicit index $3
PASS: gdb.fortran/exprs.exp: Print (value-history[MAX] - 3) using implicit index $
PASS: gdb.fortran/exprs.exp: Use value-history element in arithmetic expression
PASS: gdb.fortran/exprs.exp: Set a new convenience variable
PASS: gdb.fortran/exprs.exp: Print contents of new convenience variable
PASS: gdb.fortran/exprs.exp: Set convenience variable to a new value
PASS: gdb.fortran/exprs.exp: Print new contents of convenience variable
PASS: gdb.fortran/exprs.exp: Set convenience variable $_
PASS: gdb.fortran/exprs.exp: Print contents of convenience variable $_
PASS: gdb.fortran/exprs.exp: Use convenience variable in arithmetic expression
PASS: gdb.fortran/exprs.exp: Use convenience variable assignment in arithmetic expression
PASS: gdb.fortran/exprs.exp: Print contents of uninitialized convenience variable
PASS: gdb.fortran/exprs.exp: p 123
PASS: gdb.fortran/exprs.exp: p -123
PASS: gdb.fortran/exprs.exp: reject p _
PASS: gdb.fortran/exprs.exp: p .TRUE.
PASS: gdb.fortran/exprs.exp: p .FALSE.
PASS: gdb.fortran/exprs.exp: p 'a'
PASS: gdb.fortran/exprs.exp: p 'abcdefg'(2:4)
PASS: gdb.fortran/exprs.exp: p 'abcdefg'(:3)
PASS: gdb.fortran/exprs.exp: p 'abcdefg'(5:)
PASS: gdb.fortran/exprs.exp: p 'abcdefg'(:)
PASS: gdb.fortran/exprs.exp: p .44 .LT. .45
PASS: gdb.fortran/exprs.exp: p .44 .GT. .45
PASS: gdb.fortran/exprs.exp: p 0.44 .LT. 0.45
PASS: gdb.fortran/exprs.exp: p 0.44 .GT. 0.45
PASS: gdb.fortran/exprs.exp: p 44. .LT. 45.
PASS: gdb.fortran/exprs.exp: p 44. .GT. 45.
PASS: gdb.fortran/exprs.exp: p 44.0 .LT. 45.0
PASS: gdb.fortran/exprs.exp: p 44.0 .GT. 45.0
PASS: gdb.fortran/exprs.exp: p 10D20 .LT. 10D21
PASS: gdb.fortran/exprs.exp: p 10D20 .GT. 10D21
PASS: gdb.fortran/exprs.exp: p 10d20 .LT. 10d21
PASS: gdb.fortran/exprs.exp: p 10d20 .GT. 10d21
PASS: gdb.fortran/exprs.exp: p 10E20 .LT. 10E21
PASS: gdb.fortran/exprs.exp: p 10E20 .GT. 10E21
PASS: gdb.fortran/exprs.exp: p 10e20 .LT. 10e21
PASS: gdb.fortran/exprs.exp: p 10e20 .GT. 10e21
PASS: gdb.fortran/exprs.exp: p 10.D20 .LT. 10.D21
PASS: gdb.fortran/exprs.exp: p 10.D20 .GT. 10.D21
PASS: gdb.fortran/exprs.exp: p 10.d20 .LT. 10.d21
PASS: gdb.fortran/exprs.exp: p 10.d20 .GT. 10.d21
PASS: gdb.fortran/exprs.exp: p 10.E20 .LT. 10.E21
PASS: gdb.fortran/exprs.exp: p 10.E20 .GT. 10.E21
PASS: gdb.fortran/exprs.exp: p 10.e20 .LT. 10.e21
PASS: gdb.fortran/exprs.exp: p 10.e20 .GT. 10.e21
PASS: gdb.fortran/exprs.exp: p 10.0D20 .LT. 10.0D21
PASS: gdb.fortran/exprs.exp: p 10.0D20 .GT. 10.0D21
PASS: gdb.fortran/exprs.exp: p 10.0d20 .LT. 10.0d21
PASS: gdb.fortran/exprs.exp: p 10.0d20 .GT. 10.0d21
PASS: gdb.fortran/exprs.exp: p 10.0E20 .LT. 10.0E21
PASS: gdb.fortran/exprs.exp: p 10.0E20 .GT. 10.0E21
PASS: gdb.fortran/exprs.exp: p 10.0e20 .LT. 10.0e21
PASS: gdb.fortran/exprs.exp: p 10.0e20 .GT. 10.0e21
PASS: gdb.fortran/exprs.exp: p 10.0D+20 .LT. 10.0D+21
PASS: gdb.fortran/exprs.exp: p 10.0D+20 .GT. 10.0D+21
PASS: gdb.fortran/exprs.exp: p 10.0d+20 .LT. 10.0d+21
PASS: gdb.fortran/exprs.exp: p 10.0d+20 .GT. 10.0d+21
PASS: gdb.fortran/exprs.exp: p 10.0E+20 .LT. 10.0E+21
PASS: gdb.fortran/exprs.exp: p 10.0E+20 .GT. 10.0E+21
PASS: gdb.fortran/exprs.exp: p 10.0e+20 .LT. 10.0e+21
PASS: gdb.fortran/exprs.exp: p 10.0e+20 .GT. 10.0e+21
PASS: gdb.fortran/exprs.exp: p 10.0D-11 .LT. 10.0D-10
PASS: gdb.fortran/exprs.exp: p 10.0D-11 .GT. 10.0D-10
PASS: gdb.fortran/exprs.exp: p 10.0d-11 .LT. 10.0d-10
PASS: gdb.fortran/exprs.exp: p 10.0d-11 .GT. 10.0d-10
PASS: gdb.fortran/exprs.exp: p 10.0E-11 .LT. 10.0E-10
PASS: gdb.fortran/exprs.exp: p 10.0E-11 .GT. 10.0E-10
PASS: gdb.fortran/exprs.exp: p 10.0e-11 .LT. 10.0e-10
PASS: gdb.fortran/exprs.exp: p 10.0e-11 .GT. 10.0e-10
PASS: gdb.fortran/exprs.exp: unary minus applied to int
PASS: gdb.fortran/exprs.exp: unary minus applied to real
PASS: gdb.fortran/exprs.exp: bool plus int
PASS: gdb.fortran/exprs.exp: int plus int
PASS: gdb.fortran/exprs.exp: real plus int
PASS: gdb.fortran/exprs.exp: real plus real
PASS: gdb.fortran/exprs.exp: bool minus int
PASS: gdb.fortran/exprs.exp: int minus int
PASS: gdb.fortran/exprs.exp: real minus int
PASS: gdb.fortran/exprs.exp: real minus real
PASS: gdb.fortran/exprs.exp: bool times int
PASS: gdb.fortran/exprs.exp: int times int
PASS: gdb.fortran/exprs.exp: real times int
PASS: gdb.fortran/exprs.exp: real times real
PASS: gdb.fortran/exprs.exp: bool divided by int
PASS: gdb.fortran/exprs.exp: int divided by int
PASS: gdb.fortran/exprs.exp: real divided by int
PASS: gdb.fortran/exprs.exp: real divided by real
PASS: gdb.fortran/exprs.exp: int powered by int
PASS: gdb.fortran/exprs.exp: combined exponentiation expression
PASS: gdb.fortran/exprs.exp: combined exponentiation expression in specified order
PASS: gdb.fortran/exprs.exp: int powered by real
PASS: gdb.fortran/exprs.exp: real powered by real
UNTESTED: gdb.fortran/library-module.exp: failed to compile
UNRESOLVED: gdb.fortran/module.exp: stopped language detection
PASS: gdb.fortran/module.exp: fully qualified name of DW_TAG_constant
UNRESOLVED: gdb.fortran/print-formatted.exp: runto MAIN__
UNRESOLVED: gdb.fortran/types.exp: set print sevenbit-strings
PASS: gdb.fortran/types.exp: set language fortran
PASS: gdb.fortran/types.exp: set language to "fortran"
PASS: gdb.fortran/types.exp: pt 123
PASS: gdb.fortran/types.exp: reject pt _
PASS: gdb.fortran/types.exp: pt .TRUE.
PASS: gdb.fortran/types.exp: pt .FALSE.
PASS: gdb.fortran/types.exp: pt 'a'
PASS: gdb.fortran/types.exp: pt .44
PASS: gdb.fortran/types.exp: pt 44.0
PASS: gdb.fortran/types.exp: pt 10D20
PASS: gdb.fortran/types.exp: pt 10D20
PASS: gdb.fortran/types.exp: pt 10d20
PASS: gdb.fortran/types.exp: pt 10d20
PASS: gdb.fortran/types.exp: pt 10E20
PASS: gdb.fortran/types.exp: pt 10E20
PASS: gdb.fortran/types.exp: pt 10e20
PASS: gdb.fortran/types.exp: pt 10e20
UNTESTED: gdb.fortran/vla-alloc-assoc.exp: could not run to main
UNTESTED: gdb.fortran/vla-datatypes.exp: could not run to main
UNTESTED: gdb.fortran/vla-history.exp: could not run to main
UNTESTED: gdb.fortran/vla-ptr-info.exp: could not run to main
UNTESTED: gdb.fortran/vla-ptype-sub.exp: could not run to main
UNTESTED: gdb.fortran/vla-ptype.exp: could not run to main
UNTESTED: gdb.fortran/vla-sizeof.exp: could not run to main
UNTESTED: gdb.fortran/vla-type.exp: could not run to main
UNTESTED: gdb.fortran/vla-value-sub-arbitrary.exp: could not run to main
UNTESTED: gdb.fortran/vla-value-sub-finish.exp: could not run to main
UNTESTED: gdb.fortran/vla-value-sub.exp: could not run to main
UNTESTED: gdb.fortran/vla-value.exp: could not run to main
FAIL: gdb.fortran/whatis_type.exp: run to MAIN__
PASS: gdb.gdb/complaints.exp: breakpoint in captured_command_loop
FAIL: gdb.gdb/complaints.exp: run until breakpoint at captured_command_loop
PASS: gdb.gdb/observer.exp: breakpoint in captured_main
FAIL: gdb.gdb/observer.exp: run until breakpoint at captured_main
PASS: gdb.gdb/python-interrupts.exp: breakpoint in captured_command_loop
FAIL: gdb.gdb/python-interrupts.exp: run until breakpoint at captured_command_loop
PASS: gdb.gdb/python-selftest.exp: breakpoint in captured_command_loop
FAIL: gdb.gdb/python-selftest.exp: run until breakpoint at captured_command_loop
PASS: gdb.gdb/selftest.exp: breakpoint in captured_main
FAIL: gdb.gdb/selftest.exp: run until breakpoint at captured_main
PASS: gdb.gdb/unittest.exp: maintenance selftest
PASS: gdb.gdb/xfullpath.exp: breakpoint in captured_main
FAIL: gdb.gdb/xfullpath.exp: run until breakpoint at captured_main
PASS: gdb.go/basic-types.exp: set language go
PASS: gdb.go/basic-types.exp: set language to "go"
PASS: gdb.go/basic-types.exp: pt 123
PASS: gdb.go/basic-types.exp: pt void(42)
PASS: gdb.go/basic-types.exp: pt byte(42)
PASS: gdb.go/basic-types.exp: pt int(42)
PASS: gdb.go/basic-types.exp: pt uint(42)
PASS: gdb.go/basic-types.exp: pt uintptr(42)
PASS: gdb.go/basic-types.exp: pt int8(42)
PASS: gdb.go/basic-types.exp: pt int16(42)
PASS: gdb.go/basic-types.exp: pt int32(42)
PASS: gdb.go/basic-types.exp: pt int64(42)
PASS: gdb.go/basic-types.exp: pt uint8(42)
PASS: gdb.go/basic-types.exp: pt uint16(42)
PASS: gdb.go/basic-types.exp: pt uint32(42)
PASS: gdb.go/basic-types.exp: pt uint64(42)
PASS: gdb.go/basic-types.exp: pt true
PASS: gdb.go/basic-types.exp: pt false
PASS: gdb.go/basic-types.exp: pt bool(0)
PASS: gdb.go/basic-types.exp: pt bool(1)
PASS: gdb.go/basic-types.exp: pt 'a'
PASS: gdb.go/basic-types.exp: pt "a simple string"
PASS: gdb.go/basic-types.exp: pt `a simple raw string`
PASS: gdb.go/basic-types.exp: pt .44
PASS: gdb.go/basic-types.exp: pt 44.0
PASS: gdb.go/basic-types.exp: pt 10e20
PASS: gdb.go/basic-types.exp: pt 10E20
PASS: gdb.go/basic-types.exp: pt float32(.42)
PASS: gdb.go/basic-types.exp: pt float64(.42)
PASS: gdb.go/basic-types.exp: pt complex64(.42)
XFAIL: gdb.go/basic-types.exp: pt complex64(.42i1.0)
XFAIL: gdb.go/basic-types.exp: pt complex64(i1.0)
PASS: gdb.go/basic-types.exp: pt complex128(.42)
XFAIL: gdb.go/basic-types.exp: pt complex128(.42i1.0)
XFAIL: gdb.go/basic-types.exp: pt complex128(i1.0)
UNTESTED: gdb.go/chan.exp: failed to prepare
UNTESTED: gdb.go/handcall.exp: failed to prepare
UNTESTED: gdb.go/hello.exp: failed to prepare
UNTESTED: gdb.go/integers.exp: failed to prepare
UNTESTED: gdb.go/methods.exp: failed to prepare
UNTESTED: gdb.go/package.exp: failed to compile
PASS: gdb.go/print.exp: set language go
PASS: gdb.go/print.exp: set language to "go"
PASS: gdb.go/print.exp: check fp + text
PASS: gdb.go/print.exp: p 1.
PASS: gdb.go/print.exp: p 1.5
PASS: gdb.go/print.exp: p 1.f
PASS: gdb.go/print.exp: p 1.5f
PASS: gdb.go/print.exp: p 1.l
PASS: gdb.go/print.exp: p 1.5l
XFAIL: gdb.go/print.exp: p 0x1.1
PASS: gdb.go/print.exp: reject p 1.1x
PASS: gdb.go/print.exp: reject p 1.1ff
PASS: gdb.go/print.exp: reject p 1.1ll
UNTESTED: gdb.go/strings.exp: failed to prepare
UNTESTED: gdb.go/types.exp: failed to prepare
UNTESTED: gdb.go/unsafe.exp: failed to prepare
UNSUPPORTED: gdb.guile/guile.exp: guile support is disabled
PASS: gdb.guile/guile.exp: source source2.scm when guile disabled
PASS: gdb.guile/guile.exp: multi-line guile command - guile
PASS: gdb.guile/guile.exp: multi-line guile command - (print 23)
PASS: gdb.guile/guile.exp: multi-line guile command - end
UNSUPPORTED: gdb.guile/scm-arch.exp: Guile support is disabled.
UNSUPPORTED: gdb.guile/scm-block.exp: Guile support is disabled.
UNSUPPORTED: gdb.guile/scm-breakpoint.exp: Guile support is disabled.
UNSUPPORTED: gdb.guile/scm-cmd.exp: Guile support is disabled.
UNSUPPORTED: gdb.guile/scm-disasm.exp: Guile support is disabled.
UNSUPPORTED: gdb.guile/scm-equal.exp: Guile support is disabled.
UNSUPPORTED: gdb.guile/scm-error.exp: Guile support is disabled.
UNSUPPORTED: gdb.guile/scm-frame-args.exp: Guile support is disabled.
UNSUPPORTED: gdb.guile/scm-frame-inline.exp: Guile support is disabled.
UNSUPPORTED: gdb.guile/scm-frame.exp: Guile support is disabled.
UNSUPPORTED: gdb.guile/scm-gsmob.exp: Guile support is disabled.
UNSUPPORTED: gdb.guile/scm-iterator.exp: Guile support is disabled.
UNSUPPORTED: gdb.guile/scm-lazy-string.exp: Guile support is disabled.
UNSUPPORTED: gdb.guile/scm-math.exp: Guile support is disabled.
UNSUPPORTED: gdb.guile/scm-objfile-script.exp: Guile support is disabled.
UNSUPPORTED: gdb.guile/scm-objfile.exp: Guile support is disabled.
UNSUPPORTED: gdb.guile/scm-parameter.exp: Guile support is disabled.
UNSUPPORTED: gdb.guile/scm-ports.exp: Guile support is disabled.
UNSUPPORTED: gdb.guile/scm-pretty-print.exp: Guile support is disabled.
UNSUPPORTED: gdb.guile/scm-progspace.exp: Guile support is disabled.
UNSUPPORTED: gdb.guile/scm-symbol.exp: Guile support is disabled.
UNSUPPORTED: gdb.guile/scm-symtab.exp: Guile support is disabled.
UNSUPPORTED: gdb.guile/scm-type.exp: Guile support is disabled.
UNSUPPORTED: gdb.guile/scm-value-cc.exp: Guile support is disabled.
UNSUPPORTED: gdb.guile/scm-value.exp: Guile support is disabled.
UNSUPPORTED: gdb.guile/types-module.exp: Guile support is disabled.
PASS: gdb.linespec/break-ask.exp: set multiple-symbols ask
PASS: gdb.linespec/break-ask.exp: set filename-display absolute
PASS: gdb.linespec/break-ask.exp: break twodup absolute
PASS: gdb.linespec/break-ask.exp: 0
PASS: gdb.linespec/break-ask.exp: set filename-display relative
PASS: gdb.linespec/break-ask.exp: break twodup relative
PASS: gdb.linespec/break-ask.exp: 2
FAIL: gdb.linespec/break-ask.exp: expect breakpoint (GDB internal error)
FAIL: gdb.linespec/break-ask.exp: info source
FAIL: gdb.linespec/break-ask.exp: continue to breakpoint: body_elsewhere
PASS: gdb.linespec/break-ask.exp: break twodup relative other
PASS: gdb.linespec/break-ask.exp: 3
FAIL: gdb.linespec/break-ask.exp: expect breakpoint other (GDB internal error)
FAIL: gdb.linespec/break-ask.exp: info source other
FAIL: gdb.linespec/break-ask.exp: continue to breakpoint: body_elsewhere other
FAIL: gdb.linespec/keywords.exp: can't run to main
PASS: gdb.linespec/linespec.exp: set multiple-symbols to all for linespec tests
PASS: gdb.linespec/linespec.exp: single-location break using dir/file:line
PASS: gdb.linespec/linespec.exp: clear breakpoint using dir/file:line
PASS: gdb.linespec/linespec.exp: multi-location break using file:line
PASS: gdb.linespec/linespec.exp: multi-location break using duplicate function name
PASS: gdb.linespec/linespec.exp: multi-location break using duplicate function name and label
PASS: gdb.linespec/linespec.exp: complete condition
PASS: gdb.linespec/linespec.exp: disable pending breakpoints for linespec tests
PASS: gdb.linespec/linespec.exp: set breakpoint on non-existent function
PASS: gdb.linespec/linespec.exp: set breakpoint at all instances of NameSpace::overload
PASS: gdb.linespec/linespec.exp: set breakpoint at lspec.cc instance of NameSpace::overload
PASS: gdb.linespec/linespec.exp: set breakpoint at non-existent lspec.cc instance of NameSpace::overload
PASS: gdb.linespec/linespec.exp: set breakpoint at specific instance of NameSpace::overload
PASS: gdb.linespec/linespec.exp: set breakpoint in body.h
PASS: gdb.linespec/linespec.exp: set breakpoint in f1
PASS: gdb.linespec/linespec.exp: add inferior for linespec tests
PASS: gdb.linespec/linespec.exp: switch to inferior 2 for linespec tests
PASS: gdb.linespec/linespec.exp: set the new inferior file for linespec tests
PASS: gdb.linespec/linespec.exp: set breakpoint at main in both inferiors
PASS: gdb.linespec/ls-dollar.exp: set listsize 1
PASS: gdb.linespec/ls-dollar.exp: list $dollar_var
PASS: gdb.linespec/ls-dollar.exp: break $dollar_func
PASS: gdb.linespec/ls-dollar.exp: set var $theline = 20
PASS: gdb.linespec/ls-dollar.exp: list ls-dollar.cc:$theline
PASS: gdb.linespec/ls-dollar.exp: break ls-dollar.cc:$theline
PASS: gdb.linespec/ls-errs.exp: lang=C: set breakpoint pending off
PASS: gdb.linespec/ls-errs.exp: lang=C: set max-completions unlimited
FAIL: gdb.linespec/ls-errs.exp: lang=C: can't run to main
PASS: gdb.linespec/ls-errs.exp: lang=C++: set breakpoint pending off
PASS: gdb.linespec/ls-errs.exp: lang=C++: set max-completions unlimited
FAIL: gdb.linespec/ls-errs.exp: lang=C++: can't run to main
PASS: gdb.linespec/skip-two.exp: skip function dupname
FAIL: gdb.linespec/thread.exp: can't run to main
PASS: gdb.mi/gdb2549.exp: wrong arguments
PASS: gdb.mi/gdb2549.exp: no executable
PASS: gdb.mi/gdb2549.exp: breakpoint at main
UNRESOLVED: gdb.mi/gdb2549.exp: register values x
UNRESOLVED: gdb.mi/gdb2549.exp: register values f
UNRESOLVED: gdb.mi/gdb2549.exp: register values d
UNRESOLVED: gdb.mi/gdb2549.exp: register values o
FAIL: gdb.mi/gdb2549.exp: register values t (unexpected output)
PASS: gdb.mi/gdb669.exp: successfully compiled posix threads test case
PASS: gdb.mi/gdb669.exp: breakpoint at main
UNRESOLVED: gdb.mi/gdb669.exp: -thread-list-ids (at main)
UNRESOLVED: gdb.mi/gdb669.exp: info threads (at main)
FAIL: gdb.mi/gdb669.exp: finding MI result string (at main)
FAIL: gdb.mi/gdb669.exp: finding number of threads in MI output (at main)
FAIL: gdb.mi/gdb669.exp: next, try 0 (MI error)
FAIL: gdb.mi/gdb669.exp: next, try 0 (timeout)
PASS: gdb.mi/gdb669.exp: -thread-list-ids (try 0)
PASS: gdb.mi/gdb669.exp: info threads (try 0)
PASS: gdb.mi/gdb669.exp: finding MI result string (try 0)
PASS: gdb.mi/gdb669.exp: finding number of threads in MI output (try 0)
PASS: gdb.mi/gdb669.exp: got number of threads from MI (try 0)
PASS: gdb.mi/gdb669.exp: console and MI have same number of threads (try 0)
PASS: gdb.mi/gdb669.exp: -thread_list_ids (try 0)
PASS: gdb.mi/gdb669.exp: finding threads in MI output (try 0)
PASS: gdb.mi/gdb669.exp: MI and console have same threads (try 0)
FAIL: gdb.mi/gdb669.exp: next, try 1 (MI error)
FAIL: gdb.mi/gdb669.exp: next, try 1 (timeout)
FAIL: gdb.mi/gdb669.exp: -thread-list-ids (try 1) (unexpected output)
PASS: gdb.mi/gdb669.exp: info threads (try 1)
FAIL: gdb.mi/gdb669.exp: finding MI result string (try 1)
FAIL: gdb.mi/gdb669.exp: finding number of threads in MI output (try 1)
FAIL: gdb.mi/gdb669.exp: next, try 2 (MI error)
FAIL: gdb.mi/gdb669.exp: next, try 2 (timeout)
PASS: gdb.mi/gdb669.exp: -thread-list-ids (try 2)
PASS: gdb.mi/gdb669.exp: info threads (try 2)
PASS: gdb.mi/gdb669.exp: finding MI result string (try 2)
PASS: gdb.mi/gdb669.exp: finding number of threads in MI output (try 2)
PASS: gdb.mi/gdb669.exp: got number of threads from MI (try 2)
PASS: gdb.mi/gdb669.exp: console and MI have same number of threads (try 2)
PASS: gdb.mi/gdb669.exp: -thread_list_ids (try 2)
PASS: gdb.mi/gdb669.exp: finding threads in MI output (try 2)
PASS: gdb.mi/gdb669.exp: MI and console have same threads (try 2)
FAIL: gdb.mi/gdb669.exp: next, try 3 (MI error)
FAIL: gdb.mi/gdb669.exp: next, try 3 (unknown output after running)
PASS: gdb.mi/gdb669.exp: -thread-list-ids (try 3)
PASS: gdb.mi/gdb669.exp: info threads (try 3)
PASS: gdb.mi/gdb669.exp: finding MI result string (try 3)
PASS: gdb.mi/gdb669.exp: finding number of threads in MI output (try 3)
PASS: gdb.mi/gdb669.exp: got number of threads from MI (try 3)
PASS: gdb.mi/gdb669.exp: console and MI have same number of threads (try 3)
PASS: gdb.mi/gdb669.exp: -thread_list_ids (try 3)
PASS: gdb.mi/gdb669.exp: finding threads in MI output (try 3)
PASS: gdb.mi/gdb669.exp: MI and console have same threads (try 3)
PASS: gdb.mi/gdb680.exp: -data-list-register-names -1, try 0
PASS: gdb.mi/gdb680.exp: -data-list-register-names -1, try 1
PASS: gdb.mi/gdb680.exp: -data-list-register-names -1, try 2
PASS: gdb.mi/gdb680.exp: -data-list-register-names -1, try 3
PASS: gdb.mi/gdb680.exp: -data-list-register-names -1, try 4
PASS: gdb.mi/gdb701.exp: breakpoint at main
UNRESOLVED: gdb.mi/gdb701.exp: step over "foo = 0"
FAIL: gdb.mi/gdb701.exp: step over "foo = 0" (timeout)
UNRESOLVED: gdb.mi/gdb701.exp: create fooPtr
UNRESOLVED: gdb.mi/gdb701.exp: list children of fooPtr
FAIL: gdb.mi/gdb701.exp: list children of fooPtr.x (unexpected output)
FAIL: gdb.mi/gdb701.exp: list children of fooPtr.y (unexpected output)
FAIL: gdb.mi/gdb701.exp: list children of fooPtr.z (unexpected output)
PASS: gdb.mi/gdb792.exp: breakpoint at main
UNRESOLVED: gdb.mi/gdb792.exp: create var for class A
UNRESOLVED: gdb.mi/gdb792.exp: list children of class A
UNRESOLVED: gdb.mi/gdb792.exp: list children of A.public
UNRESOLVED: gdb.mi/gdb792.exp: list children of A.private
FAIL: gdb.mi/gdb792.exp: list children of A.protected (unexpected output)
FAIL: gdb.mi/gdb792.exp: list children of A.protected.b (unexpected output)
FAIL: gdb.mi/gdb792.exp: list children of A.protected.b.public (unexpected output)
FAIL: gdb.mi/gdb792.exp: list children of A.protected.b.private (unexpected output)
FAIL: gdb.mi/gdb792.exp: create var for class C which has baseclass A (unexpected output)
FAIL: gdb.mi/gdb792.exp: list children of class C (unexpected output)
UNRESOLVED: gdb.mi/mi-async-run.exp: send interrupt command
FAIL: gdb.mi/mi-async-run.exp: expect interrupt (timeout)
PASS: gdb.mi/mi-basics.exp: acceptance of MI operations
PASS: gdb.mi/mi-basics.exp: file-exec-and-symbols operation
PASS: gdb.mi/mi-basics.exp: file-exec-file operation
PASS: gdb.mi/mi-basics.exp: file-symbol-file operation
PASS: gdb.mi/mi-basics.exp: break-delete (all) operation
PASS: gdb.mi/mi-basics.exp: all breakpoints removed
PASS: gdb.mi/mi-basics.exp: environment-directory arg operation
PASS: gdb.mi/mi-basics.exp: environment-directory empty-string operation
PASS: gdb.mi/mi-basics.exp: environment-directory operation
PASS: gdb.mi/mi-basics.exp: environment-cd arg operation
PASS: gdb.mi/mi-basics.exp: environment-pwd operation
PASS: gdb.mi/mi-basics.exp: environment-path
PASS: gdb.mi/mi-basics.exp: environment-path no-args operation
PASS: gdb.mi/mi-basics.exp: environment-path dir1 dir2 operation
PASS: gdb.mi/mi-basics.exp: environment-path -r dir operation
PASS: gdb.mi/mi-basics.exp: environment-path -r operation
PASS: gdb.mi/mi-basics.exp: initial tty is mi_inferior_tty_name
PASS: gdb.mi/mi-basics.exp: set tty to /dev/pts/1
PASS: gdb.mi/mi-basics.exp: tty was set correctly
PASS: gdb.mi/mi-basics.exp: set tty to the empty string
PASS: gdb.mi/mi-basics.exp: make sure tty is empty
PASS: gdb.mi/mi-basics.exp: set tty to mi_inferior_tty_name (the way it was)
PASS: gdb.mi/mi-basics.exp: verify tty is correct
PASS: gdb.mi/mi-break.exp: mi-mode=main: break-insert -t operation
PASS: gdb.mi/mi-break.exp: mi-mode=main: insert temp breakpoint at basics.c:callee2
PASS: gdb.mi/mi-break.exp: mi-mode=main: insert temp breakpoint at basics.c:$line_callee3_head
PASS: gdb.mi/mi-break.exp: mi-mode=main: insert temp breakpoint at "<fullfilename>":$line_callee4_head
PASS: gdb.mi/mi-break.exp: mi-mode=main: list of breakpoints
PASS: gdb.mi/mi-break.exp: mi-mode=main: delete temp breakpoints
KFAIL: gdb.mi/mi-break.exp: mi-mode=main: break-insert -r operation (unexpected output) (PRMS: mi/14270)
KFAIL: gdb.mi/mi-break.exp: mi-mode=main: insert breakpoint with regexp callee2 (unexpected output) (PRMS: mi/14270)
KFAIL: gdb.mi/mi-break.exp: mi-mode=main: insert breakpoint with regexp callee (unexpected output) (PRMS: mi/14270)
KFAIL: gdb.mi/mi-break.exp: mi-mode=main: insert breakpoint with regexp .*llee (unexpected output) (PRMS: mi/14270)
KFAIL: gdb.mi/mi-break.exp: mi-mode=main: list of breakpoints (unexpected output) (PRMS: mi/14270)
PASS: gdb.mi/mi-break.exp: mi-mode=main: delete temp breakpoints
PASS: gdb.mi/mi-break.exp: mi-mode=main: insert breakpoint with ignore count at callme
UNRESOLVED: gdb.mi/mi-break.exp: mi-mode=main: run to breakpoint with ignore count (timeout)
UNRESOLVED: gdb.mi/mi-break.exp: mi-mode=main: breakpoint at nonexistent function
UNRESOLVED: gdb.mi/mi-break.exp: mi-mode=main: create varobj for function call
UNRESOLVED: gdb.mi/mi-break.exp: mi-mode=main: update varobj for function call
PASS: gdb.mi/mi-break.exp: mi-mode=main: breakpoint with garbage after location
PASS: gdb.mi/mi-break.exp: mi-mode=main: conditional breakpoint with garbage after location
FAIL: gdb.mi/mi-break.exp: mi-mode=main: test disabled creation (unexpected output)
PASS: gdb.mi/mi-break.exp: mi-mode=main: test disabled creation: cleanup
FAIL: gdb.mi/mi-break.exp: mi-mode=main: breakpoint commands: insert breakpoint at basics.c:callee2 (unexpected output)
PASS: gdb.mi/mi-break.exp: mi-mode=main: breakpoint commands: set commands
FAIL: gdb.mi/mi-break.exp: mi-mode=main: breakpoint commands: check that commands are set (unexpected output)
PASS: gdb.mi/mi-break.exp: mi-mode=main: breakpoint commands: clear commands
FAIL: gdb.mi/mi-break.exp: mi-mode=main: breakpoint commands: check that commands are cleared (unexpected output)
PASS: gdb.mi/mi-break.exp: mi-mode=main: breakpoint at main
UNRESOLVED: gdb.mi/mi-break.exp: mi-mode=main: breakpoint commands: insert breakpoint at basics.c:callee2, again
UNRESOLVED: gdb.mi/mi-break.exp: mi-mode=main: breakpoint commands: set commands
FAIL: gdb.mi/mi-break.exp: mi-mode=main: intermediate stop and continue, bp commands
FAIL: gdb.mi/mi-break.exp: mi-mode=main: intermediate stop and continue, mi running
FAIL: gdb.mi/mi-break.exp: mi-mode=main: continue to end (2)
PASS: gdb.mi/mi-break.exp: mi-mode=main: create local variable tpnum
PASS: gdb.mi/mi-break.exp: mi-mode=main: eval tpnum before tracepoint
FAIL: gdb.mi/mi-break.exp: mi-mode=main: break-insert -a operation (unexpected output)
PASS: gdb.mi/mi-break.exp: mi-mode=main: update tpnum
FAIL: gdb.mi/mi-break.exp: mi-mode=main: eval tpnum after tracepoint (unexpected output)
FAIL: gdb.mi/mi-break.exp: mi-mode=main: insert temp explicit breakpoint in main (unexpected output)
FAIL: gdb.mi/mi-break.exp: mi-mode=main: insert temp explicit breakpoint at basics.c:callee2 (unexpected output)
PASS: gdb.mi/mi-break.exp: mi-mode=main: insert temp explicit breakpoint at basics.c:32
PASS: gdb.mi/mi-break.exp: mi-mode=main: insert temp explicit breakpoint at "basics.c":23
FAIL: gdb.mi/mi-break.exp: mi-mode=main: list of explicit breakpoints (unexpected output)
PASS: gdb.mi/mi-break.exp: mi-mode=main: delete temp breakpoints
FAIL: gdb.mi/mi-break.exp: mi-mode=main: insert explicit conditional breakpoint in callee2 (unexpected output)
PASS: gdb.mi/mi-break.exp: mi-mode=separate: break-insert -t operation
PASS: gdb.mi/mi-break.exp: mi-mode=separate: insert temp breakpoint at basics.c:callee2
PASS: gdb.mi/mi-break.exp: mi-mode=separate: insert temp breakpoint at basics.c:$line_callee3_head
PASS: gdb.mi/mi-break.exp: mi-mode=separate: insert temp breakpoint at "<fullfilename>":$line_callee4_head
PASS: gdb.mi/mi-break.exp: mi-mode=separate: list of breakpoints
PASS: gdb.mi/mi-break.exp: mi-mode=separate: delete temp breakpoints
KFAIL: gdb.mi/mi-break.exp: mi-mode=separate: break-insert -r operation (unexpected output) (PRMS: mi/14270)
KFAIL: gdb.mi/mi-break.exp: mi-mode=separate: insert breakpoint with regexp callee2 (unexpected output) (PRMS: mi/14270)
KFAIL: gdb.mi/mi-break.exp: mi-mode=separate: insert breakpoint with regexp callee (unexpected output) (PRMS: mi/14270)
KFAIL: gdb.mi/mi-break.exp: mi-mode=separate: insert breakpoint with regexp .*llee (unexpected output) (PRMS: mi/14270)
KFAIL: gdb.mi/mi-break.exp: mi-mode=separate: list of breakpoints (unexpected output) (PRMS: mi/14270)
PASS: gdb.mi/mi-break.exp: mi-mode=separate: delete temp breakpoints
PASS: gdb.mi/mi-break.exp: mi-mode=separate: insert breakpoint with ignore count at callme
UNRESOLVED: gdb.mi/mi-break.exp: mi-mode=separate: run to breakpoint with ignore count (timeout)
UNRESOLVED: gdb.mi/mi-break.exp: mi-mode=separate: breakpoint at nonexistent function
UNRESOLVED: gdb.mi/mi-break.exp: mi-mode=separate: create varobj for function call
FAIL: gdb.mi/mi-break.exp: mi-mode=separate: update varobj for function call (timeout)
FAIL: gdb.mi/mi-break.exp: mi-mode=separate: breakpoint with garbage after location (timeout)
FAIL: gdb.mi/mi-break.exp: mi-mode=separate: conditional breakpoint with garbage after location (timeout)
FAIL: gdb.mi/mi-break.exp: mi-mode=separate: test disabled creation (timeout)
FAIL: gdb.mi/mi-break.exp: mi-mode=separate: test disabled creation: cleanup (timeout)
FAIL: gdb.mi/mi-break.exp: mi-mode=separate: breakpoint commands: insert breakpoint at basics.c:callee2 (timeout)
FAIL: gdb.mi/mi-break.exp: mi-mode=separate: breakpoint commands: set commands (timeout)
FAIL: gdb.mi/mi-break.exp: mi-mode=separate: breakpoint commands: check that commands are set (timeout)
FAIL: gdb.mi/mi-break.exp: mi-mode=separate: breakpoint commands: clear commands (timeout)
FAIL: gdb.mi/mi-break.exp: mi-mode=separate: breakpoint commands: check that commands are cleared (timeout)
UNRESOLVED: gdb.mi/mi-breakpoint-changed.exp: failed to compile
PASS: gdb.mi/mi-catch-load.exp: breakpoint at main
UNRESOLVED: gdb.mi/mi-catch-load.exp: catch-load: auto-solib-add on
UNRESOLVED: gdb.mi/mi-catch-load.exp: catch-load: catch load
FAIL: gdb.mi/mi-catch-load.exp: catch-load: solib-event stop
PASS: gdb.mi/mi-catch-load.exp: breakpoint at main
UNRESOLVED: gdb.mi/mi-catch-load.exp: catch-unload: auto-solib-add on
UNRESOLVED: gdb.mi/mi-catch-load.exp: catch-unload: catch unload
FAIL: gdb.mi/mi-catch-load.exp: catch-unload: solib-event stop
PASS: gdb.mi/mi-cli.exp: -interpreter-exec with no arguments
PASS: gdb.mi/mi-cli.exp: -interpreter-exec with one argument
PASS: gdb.mi/mi-cli.exp: -interpreter-exec with bogus interpreter
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console bogus
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "file $binfile"
PASS: gdb.mi/mi-cli.exp: breakpoint at main
UNRESOLVED: gdb.mi/mi-cli.exp: -interpreter-exec console "set args foobar"
UNRESOLVED: gdb.mi/mi-cli.exp: -interpreter-exec console "show args"
UNRESOLVED: gdb.mi/mi-cli.exp: -interpreter-exec console "break callee4"
FAIL: gdb.mi/mi-cli.exp: -interpreter-exec console "info break" (unexpected output)
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "set listsize 1"
FAIL: gdb.mi/mi-cli.exp: -interpreter-exec console "list" (unexpected output)
FAIL: gdb.mi/mi-cli.exp: continue to callee4 (unknown output after running)
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "delete 2"
FAIL: gdb.mi/mi-cli.exp: -interpreter-exec console "up" (unexpected output)
FAIL: gdb.mi/mi-cli.exp: -interpreter-exec console "down" (unexpected output)
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "frame 2"
PASS: gdb.mi/mi-cli.exp: -stack-select-frame 0
FAIL: gdb.mi/mi-cli.exp: check *stopped from CLI command (MI error)
FAIL: gdb.mi/mi-cli.exp: check *stopped from CLI command (unknown output after running)
FAIL: gdb.mi/mi-cli.exp: -exec-step to line $line_callee4_next_step (MI error)
FAIL: gdb.mi/mi-cli.exp: collect CLI output for -exec-step (timeout)
PASS: gdb.mi/mi-cli.exp: -exec-step does not produce CLI step output
FAIL: gdb.mi/mi-cli.exp: check *stopped from CLI command 2 (timeout)
FAIL: gdb.mi/mi-cli.exp: CLI finish: send CLI command (MI error)
FAIL: gdb.mi/mi-cli.exp: CLI finish: collect CLI output (timeout)
FAIL: gdb.mi/mi-cli.exp: CLI finish: check CLI output
FAIL: gdb.mi/mi-cli.exp: CLI finish: check MI output (unknown output after running)
PASS: gdb.mi/mi-cli.exp: -break-insert -t basics.c:$line_main_hello
FAIL: gdb.mi/mi-cli.exp: collect CLI output for breakpoint hit (timeout)
FAIL: gdb.mi/mi-cli.exp: breakpoint hit produces CLI output
FAIL: gdb.mi/mi-cli.exp: temporary breakpoint output hit in MI (unknown output after running)
FAIL: gdb.mi/mi-cli.exp: 34 next: run (unexpected output)
FAIL: gdb.mi/mi-cli.exp: 34 next: CLI output (timeout)
FAIL: gdb.mi/mi-cli.exp: 34 next: stop (timeout)
FAIL: gdb.mi/mi-cli.exp: -interpreter-exec console "list" at basics.c:$line_main_return (unexpected output)
PASS: gdb.mi/mi-cli.exp: -break-insert -t basics.c:$line_main_callme_2
FAIL: gdb.mi/mi-cli.exp: -exec-continue to line $line_main_callme_2 (unknown output after running)
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "set listsize 10"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "list" at basics.c:$line_main_callme_2
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "help set args"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "set $pc=0x0"
PASS: gdb.mi/mi-cmd-error.exp: failing sync execution command first (0 x 0): 1st: failing sync execution command
PASS: gdb.mi/mi-cmd-error.exp: failing sync execution command first (0 x 0): 2nd: failing sync execution command
PASS: gdb.mi/mi-cmd-error.exp: failing sync execution command first (0 x 1): 1st: failing sync execution command
PASS: gdb.mi/mi-cmd-error.exp: failing sync execution command first (0 x 1): 2nd: failing non-execution command
PASS: gdb.mi/mi-cmd-error.exp: failing sync execution command first (0 x 2): 1st: failing sync execution command
PASS: gdb.mi/mi-cmd-error.exp: failing sync execution command first (0 x 2): 2nd: non-failing command
PASS: gdb.mi/mi-cmd-error.exp: failing non-execution command first (1 x 0): 1st: failing non-execution command
PASS: gdb.mi/mi-cmd-error.exp: failing non-execution command first (1 x 0): 2nd: failing sync execution command
PASS: gdb.mi/mi-cmd-error.exp: failing non-execution command first (1 x 1): 1st: failing non-execution command
PASS: gdb.mi/mi-cmd-error.exp: failing non-execution command first (1 x 1): 2nd: failing non-execution command
PASS: gdb.mi/mi-cmd-error.exp: failing non-execution command first (1 x 2): 1st: failing non-execution command
PASS: gdb.mi/mi-cmd-error.exp: failing non-execution command first (1 x 2): 2nd: non-failing command
PASS: gdb.mi/mi-cmd-error.exp: non-failing command first (2 x 0): 1st: non-failing command
PASS: gdb.mi/mi-cmd-error.exp: non-failing command first (2 x 0): 2nd: failing sync execution command
PASS: gdb.mi/mi-cmd-error.exp: non-failing command first (2 x 1): 1st: non-failing command
PASS: gdb.mi/mi-cmd-error.exp: non-failing command first (2 x 1): 2nd: failing non-execution command
PASS: gdb.mi/mi-cmd-error.exp: non-failing command first (2 x 2): 1st: non-failing command
PASS: gdb.mi/mi-cmd-error.exp: non-failing command first (2 x 2): 2nd: non-failing command
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: breakpoint at main
UNRESOLVED: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set scheduler-locking on"
UNRESOLVED: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set scheduler-locking off"
UNRESOLVED: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set scheduler-locking step"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: interpreter-exec "set scheduler-locking on"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: interpreter-exec "set scheduler-locking off"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: interpreter-exec "set scheduler-locking step"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set scheduler-locking on" no event (requested by MI)
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "-exec-arguments foo" no event
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set scheduler-locking step" no event (requested by MI interp)
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set scheduler-locking stepr" no event
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set remotecache" warmup
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set remotecache on"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set remotecache off"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set remotecache" no event
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set check type" warmup
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set check type on"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set check type off"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set check type" no event
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set trace-notes foo"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set trace-notes bar"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set trace-notes bar" no event
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set remote exec-file foo"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set remote exec-file bar"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set remote exec-file bar" no event
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "maint dwarf always-disassemble on"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "maint dwarf always-disassemble off"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set ch type on"
PASS: gdb.mi/mi-condbreak-call-thr-state.exp: st: breakpoint at test
UNRESOLVED: gdb.mi/mi-condbreak-call-thr-state.exp: st: insert conditional breakpoint
UNRESOLVED: gdb.mi/mi-condbreak-call-thr-state.exp: st: insert end breakpoint
FAIL: gdb.mi/mi-condbreak-call-thr-state.exp: st: no spurious *running notifications (timeout)
PASS: gdb.mi/mi-condbreak-call-thr-state.exp: mt: successfully compiled posix threads test case
PASS: gdb.mi/mi-condbreak-call-thr-state.exp: mt: breakpoint at test
UNRESOLVED: gdb.mi/mi-condbreak-call-thr-state.exp: mt: insert conditional breakpoint
UNRESOLVED: gdb.mi/mi-condbreak-call-thr-state.exp: mt: insert end breakpoint
FAIL: gdb.mi/mi-condbreak-call-thr-state.exp: mt: no spurious *running notifications (timeout)
PASS: gdb.mi/mi-console.exp: breakpoint at main
UNRESOLVED: gdb.mi/mi-console.exp: Testing console output
FAIL: gdb.mi/mi-console.exp: finished step over hello (timeout)
PASS: gdb.mi/mi-detach.exp: breakpoint at main
UNRESOLVED: gdb.mi/mi-detach.exp: detach
PASS: gdb.mi/mi-disassemble.exp: breakpoint at main
UNRESOLVED: gdb.mi/mi-disassemble.exp:
UNRESOLVED: gdb.mi/mi-disassemble.exp: data-disassemble from pc to pc+12 assembly only
UNRESOLVED: gdb.mi/mi-disassemble.exp: data-disassemble file & line, assembly only
FAIL: gdb.mi/mi-disassemble.exp: data-disassemble from pc to pc+12 assembly with opcodes (unexpected output)
FAIL: gdb.mi/mi-disassemble.exp: data-disassemble file & line, assembly with opcodes (unexpected output)
FAIL: gdb.mi/mi-disassemble.exp: data-disassemble file, line assembly mixed (unexpected output)
FAIL: gdb.mi/mi-disassemble.exp: data-disassemble range assembly mixed (unexpected output)
FAIL: gdb.mi/mi-disassemble.exp: data-disassemble file, line assembly mixed with opcodes (unexpected output)
FAIL: gdb.mi/mi-disassemble.exp: data-disassemble range assembly mixed with opcodes (unexpected output)
PASS: gdb.mi/mi-disassemble.exp: data-disassemble bogus filename
PASS: gdb.mi/mi-disassemble.exp: data-disassemble bogus address
PASS: gdb.mi/mi-disassemble.exp: data-disassemble mix different args
PASS: gdb.mi/mi-disassemble.exp: data-disassemble wrong mode arg
FAIL: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number assembly only (unexpected output)
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number (zero lines) assembly only
FAIL: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number (more than main lines) assembly only (unexpected output)
FAIL: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number assembly mixed (unexpected output)
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number (zero lines) assembly mixed
FAIL: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number (more than main lines) assembly mixed (unexpected output)
UNTESTED: gdb.mi/mi-dprintf-pending.exp: failed to compile
PASS: gdb.mi/mi-dprintf.exp: breakpoint at main
UNRESOLVED: gdb.mi/mi-dprintf.exp: mi insert without location
UNRESOLVED: gdb.mi/mi-dprintf.exp: mi insert breakpoint without format string
UNRESOLVED: gdb.mi/mi-dprintf.exp: mi insert second breakpoint without format string
PASS: gdb.mi/mi-dprintf.exp: mi insert breakpoint main
PASS: gdb.mi/mi-dprintf.exp: explicit dprintf at main
PASS: gdb.mi/mi-dprintf.exp: explicit breakpoint at mi-dprintf.c:30
PASS: gdb.mi/mi-dprintf.exp: invalid explicit dprintf
PASS: gdb.mi/mi-dprintf.exp: mi insert dprintf foo
PASS: gdb.mi/mi-dprintf.exp: mi insert dprintf dp_location1
PASS: gdb.mi/mi-dprintf.exp: mi info dprintf
PASS: gdb.mi/mi-dprintf.exp: mi insert breakpoint bp_location1
UNRESOLVED: gdb.mi/mi-dprintf.exp: gdb: mi 1st dprintf (timeout)
FAIL: gdb.mi/mi-dprintf.exp: gdb: mi 1st dprintf stop (timeout)
FAIL: gdb.mi/mi-dprintf.exp: gdb: mi 2nd dprintf continue
FAIL: gdb.mi/mi-dprintf.exp: gdb: mi 2nd dprintf (timeout)
FAIL: gdb.mi/mi-dprintf.exp: gdb: mi 2nd dprintf stop (timeout)
UNRESOLVED: gdb.mi/mi-dprintf.exp: mi set dprintf style to call
UNRESOLVED: gdb.mi/mi-dprintf.exp: call: mi 1st dprintf (timeout)
FAIL: gdb.mi/mi-dprintf.exp: call: mi 1st dprintf stop (timeout)
FAIL: gdb.mi/mi-dprintf.exp: call: mi 2nd dprintf continue
FAIL: gdb.mi/mi-dprintf.exp: call: mi 2nd dprintf (timeout)
FAIL: gdb.mi/mi-dprintf.exp: call: mi 2nd dprintf stop (timeout)
UNRESOLVED: gdb.mi/mi-dprintf.exp: mi set dprintf-channel stderr
UNRESOLVED: gdb.mi/mi-dprintf.exp: mi set dprintf channel
UNRESOLVED: gdb.mi/mi-dprintf.exp: fprintf: mi 1st dprintf (timeout)
FAIL: gdb.mi/mi-dprintf.exp: fprintf: mi 1st dprintf stop (timeout)
FAIL: gdb.mi/mi-dprintf.exp: fprintf: mi 2nd dprintf continue (MI error)
FAIL: gdb.mi/mi-dprintf.exp: fprintf: mi 2nd dprintf (timeout)
FAIL: gdb.mi/mi-dprintf.exp: fprintf: mi 2nd dprintf stop (timeout)
FAIL: gdb.mi/mi-dprintf.exp: set dprintf style to agent
UNRESOLVED: gdb.mi/mi-dprintf.exp: mi set dprintf style to an unrecognized type
PASS: gdb.mi/mi-editing.exp: -interpreter-exec console "set editing on"
PASS: gdb.mi/mi-editing.exp: -interpreter-exec console "show editing"
PASS: gdb.mi/mi-eval.exp: breakpoint at callee4
UNRESOLVED: gdb.mi/mi-eval.exp: next at callee4
FAIL: gdb.mi/mi-eval.exp: next at callee4 (timeout)
UNRESOLVED: gdb.mi/mi-eval.exp: eval A
UNRESOLVED: gdb.mi/mi-eval.exp: eval &A
FAIL: gdb.mi/mi-eval.exp: eval A+3 (unexpected output)
FAIL: gdb.mi/mi-eval.exp: eval A + 3 (unexpected output)
PASS: gdb.mi/mi-exit-code.exp: -list-thread-groups before run shows no exit-code
PASS: gdb.mi/mi-exit-code.exp: first run: breakpoint at main
UNRESOLVED: gdb.mi/mi-exit-code.exp: first run: -list-thread-groups during run shows no exit-code
FAIL: gdb.mi/mi-exit-code.exp: first run: continuing to inferior exit
FAIL: gdb.mi/mi-exit-code.exp: first run: exit normally (timeout)
UNRESOLVED: gdb.mi/mi-exit-code.exp: first run: -list-thread-groups after exit shows exit-code
PASS: gdb.mi/mi-exit-code.exp: second run: breakpoint at main
UNRESOLVED: gdb.mi/mi-exit-code.exp: second run: write exit code
UNRESOLVED: gdb.mi/mi-exit-code.exp: second run: -list-thread-groups during run shows no exit-code
FAIL: gdb.mi/mi-exit-code.exp: second run: exit with code (inferior not stopped)
FAIL: gdb.mi/mi-exit-code.exp: second run: -list-thread-groups after exit shows exit-code (unexpected output)
PASS: gdb.mi/mi-file.exp: request path info of current source file (basics.c)
PASS: gdb.mi/mi-file.exp: Getting a list of source files.
PASS: gdb.mi/mi-fill-memory.exp: breakpoint at main
UNRESOLVED: gdb.mi/mi-fill-memory.exp: next at main
FAIL: gdb.mi/mi-fill-memory.exp: next at main (timeout)
UNRESOLVED: gdb.mi/mi-fill-memory.exp: no arguments
UNRESOLVED: gdb.mi/mi-fill-memory.exp: one argument missing
FAIL: gdb.mi/mi-fill-memory.exp: memory successfully written (unexpected output)
FAIL: gdb.mi/mi-fill-memory.exp: memory successfully filled (8 bytes) (unexpected output)
FAIL: gdb.mi/mi-fill-memory.exp: pattern correctly read from memory (unexpected output)
PASS: gdb.mi/mi-fullname-deleted.exp: set substitute-path
PASS: gdb.mi/mi-fullname-deleted.exp: fullname present
PASS: gdb.mi/mi-fullname-deleted.exp: substituted fullname
PASS: gdb.mi/mi-fullname-deleted.exp: compare_filenames_for_search does not match
PASS: gdb.mi/mi-fullname-deleted.exp: compare_filenames_for_search does match
PASS: gdb.mi/mi-hack-cli.exp: show architecture
PASS: gdb.mi/mi-hack-cli.exp: 47show architecture
PASS: gdb.mi/mi-i-cmd.exp: -list-features includes "info-gdb-mi-command"
PASS: gdb.mi/mi-i-cmd.exp: -info-gdb-mi-command unsupported-command
PASS: gdb.mi/mi-i-cmd.exp: -info-gdb-mi-command -unsupported-command
PASS: gdb.mi/mi-i-cmd.exp: -info-gdb-mi-command symbol-list-lines
PASS: gdb.mi/mi-i-cmd.exp: -info-gdb-mi-command -symbol-list-lines
UNSUPPORTED: gdb.mi/mi-info-os.exp: mi-info-os.exp
PASS: gdb.mi/mi-inheritance-syntax-error.exp: breakpoint at C::testLocation
UNRESOLVED: gdb.mi/mi-inheritance-syntax-error.exp: create var for THIS
UNRESOLVED: gdb.mi/mi-inheritance-syntax-error.exp: list children of THIS
UNRESOLVED: gdb.mi/mi-inheritance-syntax-error.exp: -var-info-path-expression var1.A
UNRESOLVED: gdb.mi/mi-inheritance-syntax-error.exp: -data-evaluate-expression 1
PASS: gdb.mi/mi-language.exp: -list-features should include "language-option"
PASS: gdb.mi/mi-language.exp: set lang ada
PASS: gdb.mi/mi-language.exp: sizeof expression using current language
PASS: gdb.mi/mi-language.exp: sizeof expression using C language
PASS: gdb.mi/mi-language.exp: set lang ada
PASS: gdb.mi/mi-language.exp: data-evaluate-expression with invalid language name
PASS: gdb.mi/mi-language.exp: data-evaluate-expression with language auto
PASS: gdb.mi/mi-language.exp: data-evaluate-expression with language local
PASS: gdb.mi/mi-language.exp: data-evaluate-expression with language unknown
PASS: gdb.mi/mi-linespec-err-cp.exp: -interpreter-exec console "set breakpoint pending off"
PASS: gdb.mi/mi-linespec-err-cp.exp: breakpoint at main
UNRESOLVED: gdb.mi/mi-linespec-err-cp.exp: set breakpoint
FAIL: gdb.mi/mi-linespec-err-cp.exp: breakpoint hit
FAIL: gdb.mi/mi-linespec-err-cp.exp: breakpoint hit (timeout)
UNRESOLVED: gdb.mi/mi-linespec-err-cp.exp:
PASS: gdb.mi/mi-logging.exp: breakpoint at main
UNRESOLVED: gdb.mi/mi-memory-changed.exp: insert breakpoint
UNRESOLVED: gdb.mi/mi-memory-changed.exp: continue to callee4 (timeout)
UNRESOLVED: gdb.mi/mi-memory-changed.exp: set var C = 4
UNRESOLVED: gdb.mi/mi-memory-changed.exp: create objvar for C
UNRESOLVED: gdb.mi/mi-memory-changed.exp: change C thru. varobj
FAIL: gdb.mi/mi-memory-changed.exp: change C thru. -data-write-memory-bytes (unexpected output)
PASS: gdb.mi/mi-memory-changed.exp: get address of main
UNSUPPORTED: gdb.mi/mi-nonstop-exit.exp: displaced stepping
UNSUPPORTED: gdb.mi/mi-nonstop.exp: displaced stepping
UNSUPPORTED: gdb.mi/mi-ns-stale-regcache.exp: displaced stepping
UNSUPPORTED: gdb.mi/mi-nsintrall.exp: displaced stepping
UNSUPPORTED: gdb.mi/mi-nsmoribund.exp: displaced stepping
UNSUPPORTED: gdb.mi/mi-nsthrexec.exp: displaced stepping
UNSUPPORTED: gdb.mi/mi-pending.exp: couldn't compile mi-pending.c: unrecognized error
UNTESTED: gdb.mi/mi-pending.exp: failed to compile
PASS: gdb.mi/mi-pthreads.exp: successfully compiled posix threads test case
PASS: gdb.mi/mi-pthreads.exp: breakpoint at done_making_threads
UNRESOLVED: gdb.mi/mi-pthreads.exp: -thread_list_ids (in check_mi_thread_command_set)
FAIL: gdb.mi/mi-pthreads.exp: finding threads in MI output (in check_mi_thread_command_set)
UNRESOLVED: gdb.mi/mi-pthreads.exp: check_mi_thread_command_set: -thread-select
UNRESOLVED: gdb.mi/mi-pthreads.exp: check_mi_thread_command_set: -thread-select 123456789
PASS: gdb.mi/mi-read-memory.exp: breakpoint at main
UNRESOLVED: gdb.mi/mi-read-memory.exp: next at main
FAIL: gdb.mi/mi-read-memory.exp: next at main (timeout)
UNRESOLVED: gdb.mi/mi-read-memory.exp: no arguments
UNRESOLVED: gdb.mi/mi-read-memory.exp: 3x2, one byte
FAIL: gdb.mi/mi-read-memory.exp: 3x2, one byte offset by -6 (unexpected output)
FAIL: gdb.mi/mi-read-memory.exp: expression in quotes (unexpected output)
FAIL: gdb.mi/mi-read-memory.exp: ascii and data (unexpected output)
FAIL: gdb.mi/mi-read-memory.exp: decimal (unexpected output)
FAIL: gdb.mi/mi-read-memory.exp: octal (unexpected output)
PASS: gdb.mi/mi-return.exp: breakpoint at callee4
UNRESOLVED: gdb.mi/mi-return.exp: delete all breakpoints
UNRESOLVED: gdb.mi/mi-return.exp: return from callee4 now
PASS: gdb.mi/mi-simplerun.exp: break-insert operation
PASS: gdb.mi/mi-simplerun.exp: insert breakpoint at basics.c:callee2
PASS: gdb.mi/mi-simplerun.exp: insert breakpoint at basics.c:$line_callee3_head
PASS: gdb.mi/mi-simplerun.exp: insert breakpoint at "<fullfilename>":$line_callee4_head
PASS: gdb.mi/mi-simplerun.exp: list of breakpoints
PASS: gdb.mi/mi-simplerun.exp: disabling of breakpoints
PASS: gdb.mi/mi-simplerun.exp: list of breakpoints, 16 disabled
UNRESOLVED: gdb.mi/mi-simplerun.exp: run to main (timeout)
FAIL: gdb.mi/mi-simplerun.exp: next at main
FAIL: gdb.mi/mi-simplerun.exp: next at main (timeout)
FAIL: gdb.mi/mi-simplerun.exp: step at main
FAIL: gdb.mi/mi-simplerun.exp: step at main (timeout)
FAIL: gdb.mi/mi-simplerun.exp: step to callee4
FAIL: gdb.mi/mi-simplerun.exp: step to callee4 (timeout)
FAIL: gdb.mi/mi-simplerun.exp: exec-finish
FAIL: gdb.mi/mi-simplerun.exp: exec-finish (timeout)
FAIL: gdb.mi/mi-simplerun.exp: continue to end
FAIL: gdb.mi/mi-simplerun.exp: continue to end (timeout)
UNTESTED: gdb.mi/mi-solib.exp: failed to compile
PASS: gdb.mi/mi-stack.exp: breakpoint at callee4
UNRESOLVED: gdb.mi/mi-stack.exp: stack frame listing
UNRESOLVED: gdb.mi/mi-stack.exp: stack frame listing 1 1
UNRESOLVED: gdb.mi/mi-stack.exp: stack frame listing 1 3
FAIL: gdb.mi/mi-stack.exp: stack frame listing wrong (unexpected output)
FAIL: gdb.mi/mi-stack.exp: selected frame listing (unexpected output)
FAIL: gdb.mi/mi-stack.exp: stack frame listing 1 300 (unexpected output)
FAIL: gdb.mi/mi-stack.exp: stack args listing 0 (unexpected output)
FAIL: gdb.mi/mi-stack.exp: stack args listing 0 1 1 (unexpected output)
FAIL: gdb.mi/mi-stack.exp: stack args listing 0 1 3 (unexpected output)
FAIL: gdb.mi/mi-stack.exp: stack args listing 1 (unexpected output)
FAIL: gdb.mi/mi-stack.exp: stack args listing 1 1 1 (unexpected output)
FAIL: gdb.mi/mi-stack.exp: stack args listing 1 1 3 (unexpected output)
PASS: gdb.mi/mi-stack.exp: stack args listing wrong
FAIL: gdb.mi/mi-stack.exp: stack args listing 1 1 300 (unexpected output)
FAIL: gdb.mi/mi-stack.exp: stack locals listing of names (unexpected output)
FAIL: gdb.mi/mi-stack.exp: next's in callee4 (MI error)
FAIL: gdb.mi/mi-stack.exp: next's in callee4 (timeout)
FAIL: gdb.mi/mi-stack.exp: stack locals listing of names and values (unexpected output)
FAIL: gdb.mi/mi-stack.exp: stack locals listing, simple types: names and values, complex type: names and types (unexpected output)
PASS: gdb.mi/mi-stack.exp: stack locals listing wrong
PASS: gdb.mi/mi-stack.exp: stack select frame 1
PASS: gdb.mi/mi-stack.exp: stack locals listing for new frame
PASS: gdb.mi/mi-stack.exp: stack locals for same frame (level 1)
FAIL: gdb.mi/mi-stack.exp: stack info-depth (unexpected output)
FAIL: gdb.mi/mi-stack.exp: stack info-depth 3 (unexpected output)
FAIL: gdb.mi/mi-stack.exp: stack info-depth 99 (unexpected output)
PASS: gdb.mi/mi-stack.exp: stack info-depth wrong usage
PASS: gdb.mi/mi-start.exp: -list-features includes "exec-run-start-option"
UNRESOLVED: gdb.mi/mi-start.exp: run to main (timeout)
PASS: gdb.mi/mi-stepi.exp: breakpoint at main
UNRESOLVED: gdb.mi/mi-stepi.exp: step-instruction at main
FAIL: gdb.mi/mi-stepi.exp: step-instruction at main (timeout)
FAIL: gdb.mi/mi-stepi.exp: step-instruction at main (line check)
FAIL: gdb.mi/mi-stepi.exp: next-instruction at main
FAIL: gdb.mi/mi-stepi.exp: next-instruction at main (timeout)
FAIL: gdb.mi/mi-stepi.exp: next-instruction at main (line check)
FAIL: gdb.mi/mi-stepi.exp: next-instruction at main 2
FAIL: gdb.mi/mi-stepi.exp: next-instruction at main 2 (timeout)
FAIL: gdb.mi/mi-stepi.exp: next-instruction at main 2 (line check)
PASS: gdb.mi/mi-stepn.exp: breakpoint at main
UNRESOLVED: gdb.mi/mi-syn-frame.exp: breakpoint at main
UNRESOLVED: gdb.mi/mi-syn-frame.exp: insert breakpoint foo
UNRESOLVED: gdb.mi/mi-syn-frame.exp: call inferior's function with a breakpoint set in it
UNRESOLVED: gdb.mi/mi-syn-frame.exp: backtrace from inferior function stopped at bp, showing gdb dummy frame
FAIL: gdb.mi/mi-syn-frame.exp: finished exec continue (timeout)
FAIL: gdb.mi/mi-syn-frame.exp: list stack frames (unexpected output)
FAIL: gdb.mi/mi-syn-frame.exp: insert breakpoint subroutine (unexpected output)
FAIL: gdb.mi/mi-syn-frame.exp: data evaluate expression (unexpected output)
FAIL: gdb.mi/mi-syn-frame.exp: list stack frames (unexpected output)
FAIL: gdb.mi/mi-syn-frame.exp: finished exec continue (timeout)
FAIL: gdb.mi/mi-syn-frame.exp: list stack frames (unexpected output)
FAIL: gdb.mi/mi-syn-frame.exp: call inferior function which raises exception (unexpected output)
FAIL: gdb.mi/mi-syn-frame.exp: backtrace from inferior function at exception (unexpected output)
PASS: gdb.mi/mi-threads-interrupt.exp: successfully compiled posix threads test case
PASS: gdb.mi/mi-threads-interrupt.exp: breakpoint at all_threads_created
UNRESOLVED: gdb.mi/mi-threads-interrupt.exp: check thread states
FAIL: gdb.mi/mi-threads-interrupt.exp: continue
FAIL: gdb.mi/mi-threads-interrupt.exp: interrupt reported (unknown output after running)
PASS: gdb.mi/mi-undefined-cmd.exp: -list-features should include "undefined-command-error-code"
PASS: gdb.mi/mi-undefined-cmd.exp: error code when executing undefined command
PASS: gdb.mi/mi-until.exp: break-insert operation
UNRESOLVED: gdb.mi/mi-until.exp: run to main (timeout)
UNRESOLVED: gdb.mi/mi-until.exp: break-delete 1
KFAIL: gdb.mi/mi-until.exp: until after while loop (PRMS: gdb/2104)
FAIL: gdb.mi/mi-until.exp: until after while loop (timeout)
FAIL: gdb.mi/mi-until.exp: until line number
FAIL: gdb.mi/mi-until.exp: until line number (timeout)
FAIL: gdb.mi/mi-until.exp: until line number:file
FAIL: gdb.mi/mi-until.exp: until line number:file (timeout)
FAIL: gdb.mi/mi-until.exp: until after current function
FAIL: gdb.mi/mi-until.exp: until after current function (timeout)
PASS: gdb.mi/mi-var-block.exp: breakpoint at do_block_tests
UNRESOLVED: gdb.mi/mi-var-block.exp: create local variable cb
UNRESOLVED: gdb.mi/mi-var-block.exp: try to create local variable foo
FAIL: gdb.mi/mi-var-block.exp: step at do_block_test 1 (MI error)
FAIL: gdb.mi/mi-var-block.exp: step at do_block_test 1 (timeout)
PASS: gdb.mi/mi-var-block.exp: delete var foo 1
FAIL: gdb.mi/mi-var-block.exp: create local variable foo (unexpected output)
FAIL: gdb.mi/mi-var-block.exp: step at do_block_test 2 (MI error)
FAIL: gdb.mi/mi-var-block.exp: step at do_block_test 2 (timeout)
FAIL: gdb.mi/mi-var-block.exp: update all vars: cb foo changed (unexpected output)
FAIL: gdb.mi/mi-var-block.exp: step at do_block_test 3 (MI error)
FAIL: gdb.mi/mi-var-block.exp: step at do_block_test 3 (unknown output after running)
FAIL: gdb.mi/mi-var-block.exp: create local variable inner_foo (unexpected output)
FAIL: gdb.mi/mi-var-block.exp: step at do_block_test 4 (MI error)
FAIL: gdb.mi/mi-var-block.exp: step at do_block_test 4 (timeout)
FAIL: gdb.mi/mi-var-block.exp: create local variable foo2 (unexpected output)
XFAIL: gdb.mi/mi-var-block.exp: update inner_foo: should be out of scope: KNOWN PROBLEM (unexpected output)
XFAIL: gdb.mi/mi-var-block.exp: evaluate inner_foo: should be out of scope: KNOWN PROBLEM (unexpected output)
FAIL: gdb.mi/mi-var-block.exp: update foo: did not change (unexpected output)
FAIL: gdb.mi/mi-var-block.exp: delete var inner_foo (unexpected output)
FAIL: gdb.mi/mi-var-block.exp: step at do_block_test 5 (MI error)
FAIL: gdb.mi/mi-var-block.exp: step at do_block_test 5 (timeout)
XFAIL: gdb.mi/mi-var-block.exp: update foo2: should be out of scope: KNOWN PROBLEM (unexpected output)
FAIL: gdb.mi/mi-var-block.exp: step at do_block_test 6 (MI error)
FAIL: gdb.mi/mi-var-block.exp: step at do_block_test 6 (timeout)
XFAIL: gdb.mi/mi-var-block.exp: update foo2 should be out of scope: KNOWN PROBLEM (unexpected output)
XFAIL: gdb.mi/mi-var-block.exp: update foo should be out of scope: KNOWN PROBLEM (unexpected output)
FAIL: gdb.mi/mi-var-block.exp: update cb (unexpected output)
FAIL: gdb.mi/mi-var-block.exp: delete var foo 2 (unexpected output)
FAIL: gdb.mi/mi-var-block.exp: delete var foo2 (unexpected output)
FAIL: gdb.mi/mi-var-block.exp: delete var cb (unexpected output)
PASS: gdb.mi/mi-var-child-f.exp: breakpoint at MAIN__
UNRESOLVED: gdb.mi/mi-var-child-f.exp: create local variable array
UNRESOLVED: gdb.mi/mi-var-child-f.exp: get children of array
UNRESOLVED: gdb.mi/mi-var-child-f.exp: get grandchildren of array (children of first element of second index)
PASS: gdb.mi/mi-var-child.exp: breakpoint at do_children_tests
UNRESOLVED: gdb.mi/mi-var-child.exp: run to 229 (set breakpoint)
FAIL: gdb.mi/mi-var-child.exp: run to 229 (exec-continue)
FAIL: gdb.mi/mi-var-child.exp: wait for stop (step to real start of do_children_test)
UNRESOLVED: gdb.mi/mi-var-child.exp: create local variable struct_declarations
UNRESOLVED: gdb.mi/mi-var-child.exp: get children of struct_declarations
UNRESOLVED: gdb.mi/mi-var-child.exp: get number of children of struct_declarations
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.integer (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.integer (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.character (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.character (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.char_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.char_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_int (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_int (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.func_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.func_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.func_ptr_struct (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.func_ptr_struct (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.func_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.func_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.u1 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.u1 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.1 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.1 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.2 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.2 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.3 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.3 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.4 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.4 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.5 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.5 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.6 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.6 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.7 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.7 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.8 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.8 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.9 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.9 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.u1.a (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.u1.a (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.u1.b (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.u1.b (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.u1.c (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.u1.c (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.u1.d (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.u1.d (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.g (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.g (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.h (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.h (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.i (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.i (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s1 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.f (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.f (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s2 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s1.d (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.d (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s1.e (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.e (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s1.func (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.func (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s1.foo (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.foo (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s2.array_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2.array_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s2.func (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2.func (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of struct_declarations.int_ptr_ptr.*int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.int_ptr_ptr.*int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: step to line $line_dct_123 (MI error)
FAIL: gdb.mi/mi-var-child.exp: step to line $line_dct_123 (timeout)
FAIL: gdb.mi/mi-var-child.exp: create local variable weird (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of weird (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of weird (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of weird.long_array (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of weird.long_array (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of weird.int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of weird.int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of weird.int_ptr_ptr.*int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of weird.int_ptr_ptr.*int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: create local variable weird->int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of weird->int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of weird->int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of weird->int_ptr_ptr.*weird->int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of weird->int_ptr_ptr.*weird->int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of weird->int_ptr_ptr.*weird->int_ptr_ptr.**weird->int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of weird->int_ptr_ptr.*weird->int_ptr_ptr.**weird->int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: is weird editable (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: is weird->int_ptr_ptr editable (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: is weird.int_ptr_ptr.*int_ptr_ptr editable (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: is weird.int_ptr_ptr.*int_ptr_ptr.**int_ptr_ptr editable (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: is weird.u1 editable (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: is weird.s2 editable (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: is struct_declarations.u1.a editable (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: is struct_declarations.u1.b editable (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: is struct_declarations.u1.c editable (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: is struct_declarations.long_array editable (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: is struct_declarations.long_array.0 editable (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: is struct_declarations editable (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: delete var weird (unexpected output)
PASS: gdb.mi/mi-var-child.exp: update all vars. None changed
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_123 + 1 (MI error)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_123 + 1 (timeout)
FAIL: gdb.mi/mi-var-child.exp: update all vars struct_declarations.integer (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_123 + 4 (MI error)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_123 + 4 (timeout)
FAIL: gdb.mi/mi-var-child.exp: update all vars struct_declarations.char_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_123 + 5 (MI error)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_123 + 5 (unknown output after running)
FAIL: gdb.mi/mi-var-child.exp: update all vars int_ptr_ptr and children changed (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_123 + 6 (MI error)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_123 + 6 (timeout)
FAIL: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.0 changed (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_123 + 7 (MI error)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_123 + 7 (timeout)
FAIL: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.1 changed (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_123 + 8 (MI error)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_123 + 8 (unknown output after running)
FAIL: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.2 changed (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_nothing (MI error)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_nothing (unknown output after running)
FAIL: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.3-9 changed (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_nothing + 1 (MI error)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_nothing + 1 (unknown output after running)
FAIL: gdb.mi/mi-var-child.exp: update all vars struct_declarations.func_ptr changed (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_nothing + 2 (MI error)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_nothing + 2 (timeout)
FAIL: gdb.mi/mi-var-child.exp: update all vars struct_declarations.func_ptr_struct changed (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_nothing + 3 (MI error)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_nothing + 3 (timeout)
FAIL: gdb.mi/mi-var-child.exp: update all vars struct_declarations.func_ptr_ptr changed (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_nothing + 4 (MI error)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_nothing + 4 (unknown output after running)
FAIL: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.10 changed, don't print values. (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_a0_0 (MI error)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_a0_0 (timeout)
FAIL: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.11 changed, print values. (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: listing of names and values of children (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: listing of children, simple types: names, type and values, complex types: names and types (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: delete var struct_declarations (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: delete var weird->int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 1 (MI error)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 1 (unknown output after running)
FAIL: gdb.mi/mi-var-child.exp: create local variable  psnp->char_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of psnp->char_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr.****psnp->char_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr.****psnp->char_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: create local variable  psnp->long_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of psnp->long_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of psnp->long_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr.****psnp->long_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr.****psnp->long_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: create local variable  psnp->ptrs (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of psnp->ptrs (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0 (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.next (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.next.ptrs (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 2 (MI error)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 2 (timeout)
FAIL: gdb.mi/mi-var-child.exp: update all vars psnp->char_ptr (and 0.char_ptr) changed (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 3 (MI error)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 3 (timeout)
FAIL: gdb.mi/mi-var-child.exp: update all vars psnp->next->char_ptr (and 1.char_ptr) changed (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 4 (MI error)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 4 (unknown output after running)
FAIL: gdb.mi/mi-var-child.exp: update all vars psnp->next->next->char_ptr (and 2.char_ptr) changed (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 5 (MI error)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 5 (timeout)
FAIL: gdb.mi/mi-var-child.exp: update all vars psnp->long_ptr (and 0.long_ptr) changed (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 6 (MI error)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 6 (timeout)
XFAIL: gdb.mi/mi-var-child.exp: update all vars psnp->next->long_ptr (and 1.long_ptr) changed (unexpected output)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 7 (MI error)
FAIL: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 7 (unknown output after running)
FAIL: gdb.mi/mi-var-child.exp: update all vars psnp->next->next->long_ptr (and 2.long_ptr) changed (unexpected output)
PASS: gdb.mi/mi-var-child.exp: run to mi-var-child.c:339 (set breakpoint)
UNRESOLVED: gdb.mi/mi-var-child.exp: wait for stop (child_deletion: step to 339)
FAIL: gdb.mi/mi-var-child.exp: child_deletion: go to line 339
FAIL: gdb.mi/mi-var-child.exp: child_deletion: step over 339
PASS: gdb.mi/mi-var-cmd.exp: create global variable
PASS: gdb.mi/mi-var-cmd.exp: update varobj before running inferior
PASS: gdb.mi/mi-var-cmd.exp: create non-existent variable
PASS: gdb.mi/mi-var-cmd.exp: create out of scope variable
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at do_locals_tests
UNRESOLVED: gdb.mi/mi-var-cmd.exp: run to 148 (set breakpoint)
FAIL: gdb.mi/mi-var-cmd.exp: run to 148 (exec-continue)
FAIL: gdb.mi/mi-var-cmd.exp: wait for stop (step to real start of do_locals_test)
UNRESOLVED: gdb.mi/mi-var-cmd.exp: create local variable linteger
UNRESOLVED: gdb.mi/mi-var-cmd.exp: create local variable lpinteger
UNRESOLVED: gdb.mi/mi-var-cmd.exp: create local variable lcharacter
FAIL: gdb.mi/mi-var-cmd.exp: create local variable lpcharacter (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: create local variable llong (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: create local variable lplong (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: create local variable lfloat (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: create local variable lpfloat (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: create local variable ldouble (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: create local variable lpdouble (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: create local variable lsimple (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: create local variable lpsimple (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: create local variable func (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: create lsimple.character (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: create lsimple->integer (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: create lsimple.integer (unexpected output)
PASS: gdb.mi/mi-var-cmd.exp: create int
PASS: gdb.mi/mi-var-cmd.exp: update all vars
FAIL: gdb.mi/mi-var-cmd.exp: step at do_locals_test (MI error)
FAIL: gdb.mi/mi-var-cmd.exp: step at do_locals_test (timeout)
FAIL: gdb.mi/mi-var-cmd.exp: update all vars: linteger changed (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (2) (MI error)
FAIL: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (2) (timeout)
FAIL: gdb.mi/mi-var-cmd.exp: update all vars: lpinteger changed (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (3) (MI error)
FAIL: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (3) (unknown output after running)
FAIL: gdb.mi/mi-var-cmd.exp: update all vars: lcharacter changed (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (4) (MI error)
FAIL: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (4) (timeout)
FAIL: gdb.mi/mi-var-cmd.exp: update all vars: lpcharacter changed (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (5) (MI error)
FAIL: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (5) (unknown output after running)
FAIL: gdb.mi/mi-var-cmd.exp: update all vars: many changed (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (6) (MI error)
FAIL: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (6) (unknown output after running)
FAIL: gdb.mi/mi-var-cmd.exp: update all vars: func and lpsimple changed (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (7) (MI error)
FAIL: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (7) (timeout)
FAIL: gdb.mi/mi-var-cmd.exp: update all vars: lsimple and others changed (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: assign to global_simple (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: assign to linteger (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: update all vars: linteger changed after assign (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: assign to linteger again, same value (unexpected output)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: linteger not changed after same assign
FAIL: gdb.mi/mi-var-cmd.exp: eval linteger (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: assign to lpinteger (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: update all vars: lpinteger changed after assign (unexpected output)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: no changes on second update
FAIL: gdb.mi/mi-var-cmd.exp: eval lpinteger (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: assign to linteger (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: assign to lpinteger (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: assign to lcharacter (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: eval lcharacter (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: assign to llong (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: eval llong (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: assign to llong (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: assign to lplong (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: eval lplong (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: assign to lplong (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: assign to lfloat (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: eval lfloat (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: assign to lfloat (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: assign to lpfloat (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: assign to ldouble (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: assign to func (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: assign to lsimple.character (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: assign to lsimple->integer (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: assign to lsimple.integer (unexpected output)
PASS: gdb.mi/mi-var-cmd.exp: var update
FAIL: gdb.mi/mi-var-cmd.exp: assign same value to func (unexpected output)
PASS: gdb.mi/mi-var-cmd.exp: assign same value to func (update)
FAIL: gdb.mi/mi-var-cmd.exp: create global variable array_ptr (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: assign array to pointer (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: assign array to pointer (update) (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: assign same array to pointer (unexpected output)
PASS: gdb.mi/mi-var-cmd.exp: assign same array to pointer (update)
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at subroutine1
FAIL: gdb.mi/mi-var-cmd.exp: mi runto subroutine1 (unknown output after running)
FAIL: gdb.mi/mi-var-cmd.exp: create i (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: create l (unexpected output)
PASS: gdb.mi/mi-var-cmd.exp: create linteger
FAIL: gdb.mi/mi-var-cmd.exp: step at subroutine1 (MI error)
FAIL: gdb.mi/mi-var-cmd.exp: step at subroutine1 (timeout)
XFAIL: gdb.mi/mi-var-cmd.exp: update all vars: changed FIXME (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: step at subroutine1 (2) (MI error)
FAIL: gdb.mi/mi-var-cmd.exp: step at subroutine1 (2) (timeout)
FAIL: gdb.mi/mi-var-cmd.exp: update all vars: i changed (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: step at subroutine1 (3) (MI error)
FAIL: gdb.mi/mi-var-cmd.exp: step at subroutine1 (3) (timeout)
FAIL: gdb.mi/mi-var-cmd.exp: update all vars: llong changed (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: next out of subroutine1 (MI error)
FAIL: gdb.mi/mi-var-cmd.exp: next out of subroutine1 (timeout)
FAIL: gdb.mi/mi-var-cmd.exp: update all vars: all now out of scope (unexpected output)
PASS: gdb.mi/mi-var-cmd.exp: delete var
FAIL: gdb.mi/mi-var-cmd.exp: delete var linteger (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: delete var lpinteger (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: delete var lcharacter (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: delete var lpcharacter (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: delete var llong (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: delete var lplong (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: delete var lfloat (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: delete var lpfloat (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: delete var ldouble (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: delete var lpdouble (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: delete var lsimple (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: delete var lpsimple (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: delete var func (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: delete var lsimple.character (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: delete var  lsimple->integer (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: delete var lsimple.integer (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: delete var i (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: delete var l (unexpected output)
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at do_special_tests
FAIL: gdb.mi/mi-var-cmd.exp: mi runto do_special_tests (unknown output after running)
FAIL: gdb.mi/mi-var-cmd.exp: create selected_a (unexpected output)
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at incr_a
FAIL: gdb.mi/mi-var-cmd.exp: mi runto incr_a (unknown output after running)
FAIL: gdb.mi/mi-var-cmd.exp: update selected_a in incr_a (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: step a line in incr_a (MI error)
FAIL: gdb.mi/mi-var-cmd.exp: step a line in incr_a (timeout)
FAIL: gdb.mi/mi-var-cmd.exp: return from incr_a to do_special_tests (MI error)
FAIL: gdb.mi/mi-var-cmd.exp: return from incr_a to do_special_tests (timeout)
FAIL: gdb.mi/mi-var-cmd.exp: update selected_a in do_special_tests (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: floating varobj invalidation (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: delete selected_a (unexpected output)
PASS: gdb.mi/mi-var-cmd.exp: delete array_ptr
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:367 (set breakpoint)
UNRESOLVED: gdb.mi/mi-var-cmd.exp: wait for stop (frozen: step to 367)
FAIL: gdb.mi/mi-var-cmd.exp: frozen: go to line 367
FAIL: gdb.mi/mi-var-cmd.exp: frozen: step over 367
UNRESOLVED: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:526 (set breakpoint)
UNRESOLVED: gdb.mi/mi-var-cmd.exp: wait for stop (bitfield: step to 526)
FAIL: gdb.mi/mi-var-cmd.exp: bitfield: go to line 526
FAIL: gdb.mi/mi-var-cmd.exp: bitfield: step over 526
UNRESOLVED: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:469 (set breakpoint)
UNRESOLVED: gdb.mi/mi-var-cmd.exp: wait for stop (floating: step to 469)
FAIL: gdb.mi/mi-var-cmd.exp: floating: go to line 469
FAIL: gdb.mi/mi-var-cmd.exp: floating: step over 469
UNRESOLVED: gdb.mi/mi-var-cmd.exp: inside breakpoint inside callee
FAIL: gdb.mi/mi-var-cmd.exp: continue to where i is initialized
FAIL: gdb.mi/mi-var-cmd.exp: continue to where i is initialized (timeout)
UNRESOLVED: gdb.mi/mi-var-cmd.exp: update F inside callee
UNRESOLVED: gdb.mi/mi-var-cmd.exp: check F inside callee
UNRESOLVED: gdb.mi/mi-var-cmd.exp: create null_ptr
UNRESOLVED: gdb.mi/mi-var-cmd.exp: update null_ptr
FAIL: gdb.mi/mi-var-cmd.exp: delete null_ptr (unexpected output)
PASS: gdb.mi/mi-var-cmd.exp: kill program before endvar
PASS: gdb.mi/mi-var-cmd.exp: create endvar
PASS: gdb.mi/mi-var-cmd.exp: update endvar
PASS: gdb.mi/mi-var-cmd.exp: delete endvar
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at do_locals_tests
UNRESOLVED: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: create varobj
UNRESOLVED: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: check initial value
UNRESOLVED: gdb.mi/mi-var-cmd.exp: breakpoint at main
UNRESOLVED: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: out of scope now
UNRESOLVED: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: out of scope now, not changed
UNRESOLVED: gdb.mi/mi-var-cmd.exp: breakpoint at do_locals_tests
FAIL: gdb.mi/mi-var-cmd.exp: mi runto do_locals_tests (MI error)
FAIL: gdb.mi/mi-var-cmd.exp: mi runto do_locals_tests (unknown output after running)
FAIL: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: in scope now (unexpected output)
FAIL: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: in scope now, not changed (unexpected output)
PASS: gdb.mi/mi-var-cp.exp: run to mi-var-cp.cc:19 (set breakpoint)
UNRESOLVED: gdb.mi/mi-var-cp.exp: wait for stop (reference_update: step to 19)
FAIL: gdb.mi/mi-var-cp.exp: reference_update: go to line 19
FAIL: gdb.mi/mi-var-cp.exp: reference_update: step over 19
UNRESOLVED: gdb.mi/mi-var-cp.exp: run to mi-var-cp.cc:45 (set breakpoint)
UNRESOLVED: gdb.mi/mi-var-cp.exp: wait for stop (base_in_reference: step to 45)
FAIL: gdb.mi/mi-var-cp.exp: base_in_reference: go to line 45
FAIL: gdb.mi/mi-var-cp.exp: base_in_reference: step over 45
UNRESOLVED: gdb.mi/mi-var-cp.exp: run to mi-var-cp.cc:81 (set breakpoint)
UNRESOLVED: gdb.mi/mi-var-cp.exp: wait for stop (reference_to_pointer: step to 81)
FAIL: gdb.mi/mi-var-cp.exp: reference_to_pointer: go to line 81
FAIL: gdb.mi/mi-var-cp.exp: reference_to_pointer: step over 81
UNRESOLVED: gdb.mi/mi-var-cp.exp: run to mi-var-cp.cc:104 (set breakpoint)
UNRESOLVED: gdb.mi/mi-var-cp.exp: wait for stop (reference_to_struct: step to 104)
FAIL: gdb.mi/mi-var-cp.exp: reference_to_struct: go to line 104
FAIL: gdb.mi/mi-var-cp.exp: reference_to_struct: step over 104
UNRESOLVED: gdb.mi/mi-var-cp.exp: run to mi-var-cp.cc:144 (set breakpoint)
UNRESOLVED: gdb.mi/mi-var-cp.exp: wait for stop (path_expression: step to 144)
FAIL: gdb.mi/mi-var-cp.exp: path_expression: go to line 144
FAIL: gdb.mi/mi-var-cp.exp: path_expression: step over 144
UNRESOLVED: gdb.mi/mi-var-cp.exp: break in anonymous_structs_and_unions
FAIL: gdb.mi/mi-var-cp.exp: continue to anonymous_structs breakpoint
FAIL: gdb.mi/mi-var-cp.exp: continue to anonymous_structs breakpoint (timeout)
UNRESOLVED: gdb.mi/mi-var-cp.exp: VT: create root varobj for a
UNRESOLVED: gdb.mi/mi-var-cp.exp: VT: list children of a1
UNRESOLVED: gdb.mi/mi-var-cp.exp: path expression for a1
UNRESOLVED: gdb.mi/mi-var-cp.exp: expression for a1
FAIL: gdb.mi/mi-var-cp.exp: VT: list children of a1.public (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: path expression for a1.public (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: expression for a1.public (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: VT: list children of a1.public.0_anonymous (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: path expression for a1.public.0_anonymous (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: expression for a1.public.0_anonymous (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: VT: list children of a1.public.1_anonymous (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: path expression for a1.public.1_anonymous (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: expression for a1.public.1_anonymous (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: VT: list children of a1.public.2_anonymous (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: path expression for a1.public.2_anonymous (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: expression for a1.public.2_anonymous (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: VT: list children of a1.public.0_anonymous.public (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: path expression for a1.public.0_anonymous.public (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: expression for a1.public.0_anonymous.public (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: VT: list children of a1.public.1_anonymous.public (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: path expression for a1.public.1_anonymous.public (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: expression for a1.public.1_anonymous.public (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: VT: list children of a1.public.2_anonymous.public (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: path expression for a1.public.2_anonymous.public (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: expression for a1.public.2_anonymous.public (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: path expression for a1.public.0_anonymous.public.b (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: expression for a1.public.0_anonymous.public.b (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: path expression for a1.public.1_anonymous.public.c (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: expression for a1.public.1_anonymous.public.c (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: path expression for a1.public.2_anonymous.public.d (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: expression for a1.public.2_anonymous.public.d (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: VT: list children of a1.public.2_anonymous.public.1_anonymous (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: path expression for a1.public.2_anonymous.public.1_anonymous (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: expression for a1.public.2_anonymous.public.1_anonymous (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: VT: list children of a1.public.2_anonymous.public.1_anonymous.public (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: path expression for a1.public.2_anonymous.public.1_anonymous.public (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: expression for a1.public.2_anonymous.public.1_anonymous.public (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: path expression for a1.public.2_anonymous.public.1_anonymous.public.e (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: expression for a1.public.2_anonymous.public.1_anonymous.public.e (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: VT: list children of a1.public.2_anonymous.public.1_anonymous.public.1_anonymous (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: path expression for a1.public.2_anonymous.public.1_anonymous.public.1_anonymous (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: expression for a1.public.2_anonymous.public.1_anonymous.public.1_anonymous (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: VT: list children of a1.public.2_anonymous.public.1_anonymous.public.2_anonymous (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: path expression for a1.public.2_anonymous.public.1_anonymous.public.2_anonymous (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: expression for a1.public.2_anonymous.public.1_anonymous.public.2_anonymous (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: VT: list children of a1.public.2_anonymous.public.1_anonymous.public.1_anonymous.public (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: path expression for a1.public.2_anonymous.public.1_anonymous.public.1_anonymous.public (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: expression for a1.public.2_anonymous.public.1_anonymous.public.1_anonymous.public (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: VT: list children of a1.public.2_anonymous.public.1_anonymous.public.2_anonymous.public (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: path expression for a1.public.2_anonymous.public.1_anonymous.public.2_anonymous.public (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: expression for a1.public.2_anonymous.public.1_anonymous.public.2_anonymous.public (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: path expression for a1.public.2_anonymous.public.1_anonymous.public.1_anonymous.public.f (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: expression for a1.public.2_anonymous.public.1_anonymous.public.1_anonymous.public.f (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: VT: list children of a1.public.2_anonymous.public.1_anonymous.public.1_anonymous.public.1_anonymous (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: path expression for a1.public.2_anonymous.public.1_anonymous.public.1_anonymous.public.1_anonymous (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: expression for a1.public.2_anonymous.public.1_anonymous.public.1_anonymous.public.1_anonymous (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: path expression for a1.public.2_anonymous.public.1_anonymous.public.2_anonymous.public.i (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: expression for a1.public.2_anonymous.public.1_anonymous.public.2_anonymous.public.i (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: path expression for a1.public.2_anonymous.public.1_anonymous.public.2_anonymous.public.j (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: expression for a1.public.2_anonymous.public.1_anonymous.public.2_anonymous.public.j (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: VT: list children of a1.public.2_anonymous.public.1_anonymous.public.1_anonymous.public.1_anonymous.public (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: path expression for a1.public.2_anonymous.public.1_anonymous.public.1_anonymous.public.1_anonymous.public (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: expression for a1.public.2_anonymous.public.1_anonymous.public.1_anonymous.public.1_anonymous.public (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: path expression for a1.public.2_anonymous.public.1_anonymous.public.1_anonymous.public.1_anonymous.public.g (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: expression for a1.public.2_anonymous.public.1_anonymous.public.1_anonymous.public.1_anonymous.public.g (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: path expression for a1.public.2_anonymous.public.1_anonymous.public.1_anonymous.public.1_anonymous.public.h (unexpected output)
FAIL: gdb.mi/mi-var-cp.exp: expression for a1.public.2_anonymous.public.1_anonymous.public.1_anonymous.public.1_anonymous.public.h (unexpected output)
PASS: gdb.mi/mi-var-create-rtti.exp: breakpoint at main
UNRESOLVED: gdb.mi/mi-var-create-rtti.exp:
UNRESOLVED: gdb.mi/mi-var-create-rtti.exp: -var-create sp1 * $sp
PASS: gdb.mi/mi-var-display.exp: break-insert operation
UNRESOLVED: gdb.mi/mi-var-display.exp: run to main (timeout)
UNRESOLVED: gdb.mi/mi-var-display.exp:
UNRESOLVED: gdb.mi/mi-var-display.exp: create local variable bar
UNRESOLVED: gdb.mi/mi-var-display.exp: info type variable bar
FAIL: gdb.mi/mi-var-display.exp: show format variable bar (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: eval variable bar (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: set format variable bar in zero-padded hexadecimal (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: set format variable bar in hex (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: eval variable bar with new format (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: assing to variable bar (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: set format variable bar in decimal (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: eval variable bar with new value (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: delete var bar (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: create local variable foo (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: info type variable foo (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: show format variable foo in natural (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: eval variable foo in natural (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: set format variable foo in octal (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: show format variable foo in octal (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: eval variable foo in octal (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: assing to variable foo (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: set format variable foo decimal (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: eval variable foo in decimal (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: eval variable foo in hex (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: show format variable foo after eval in hex (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: eval variable -f octal foo (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: show format variable foo after eval in octal (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: eval variable -f decimal foo (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: show format variable foo after eval in decimal (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: eval variable -f nat foo (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: show format variable foo after eval in natural (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: eval variable foo in binary (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: show format variable foo after eval in binary (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: delete var foo (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: create local variable weird (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: get children local variable weird (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: set format variable weird.func_ptr in hex (1) (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: show format variable weird.func_ptr (hex) (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: set format variable weird.func_ptr_ptr in hex (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: show format variable weird.func_ptr_ptr (hex) (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: set format variable weird.func_ptr in zero-padded hex (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: show format variable weird.func_ptr (zhex) (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: set format variable weird.func_ptr_ptr in zero-padded hex (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: show format variable weird.func_ptr_ptr (zhex) (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: set format variable weird (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: set format variable weird.integer (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: set format variable weird.character (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: set format variable weird.char_ptr (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: set format variable weird.long_int (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: set format variable weird.int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: set format variable weird.long_array (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: set format variable weird.func_ptr in hex (2) (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: set format variable weird.func_ptr_struct (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: set format variable weird.func_ptr_ptr in natural (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: set format variable weird.u1 (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: set format variable weird.s2 (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: delete var weird (unexpected output)
PASS: gdb.mi/mi-var-display.exp: break-insert operation 2
FAIL: gdb.mi/mi-var-display.exp: continue to do_special_tests (unknown output after running)
FAIL: gdb.mi/mi-var-display.exp: create local variable u (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: eval variable u (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: info type variable u (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: is u editable (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: get number of children of u (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: get children of u (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: create local variable anonu (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: eval variable anonu (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: info type variable anonu (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: is anonu editable (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: get number of children of anonu (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: get children of anonu (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: create local variable s (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: eval variable s (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: info type variable s (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: is s editable (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: get number of children of s (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: get children of s (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: create local variable anons (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: eval variable anons (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: info type variable anons (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: is anons editable (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: get number of children of anons (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: get children of anons (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: create local variable e (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: eval variable e (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: info type variable e (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: is e editable (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: get number of children of e (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: get children of e (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: create local variable anone (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: eval variable anone (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: create duplicate local variable anone (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: info type variable anone (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: is anone editable (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: get number of children of anone (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: get children of anone (unexpected output)
PASS: gdb.mi/mi-var-display.exp: print FP register
PASS: gdb.mi/mi-var-display.exp: breakpoint at incr_a
FAIL: gdb.mi/mi-var-display.exp: mi runto incr_a (unknown output after running)
FAIL: gdb.mi/mi-var-display.exp: create local variable a1 (unexpected output)
FAIL: gdb.mi/mi-var-display.exp: create variable a2 in different scope (unexpected output)
PASS: gdb.mi/mi-var-invalidate.exp: create global variable
PASS: gdb.mi/mi-var-invalidate.exp: breakpoint at do_locals_tests
UNRESOLVED: gdb.mi/mi-var-invalidate.exp: create local variable linteger
UNRESOLVED: gdb.mi/mi-var-invalidate.exp: create floating variable
PASS: gdb.mi/mi-var-invalidate.exp: breakpoint at main
UNRESOLVED: gdb.mi/mi-var-invalidate.exp: set format variable float_simple
UNRESOLVED: gdb.mi/mi-var-invalidate.exp: linteger not anymore in scope due to binary changes
UNRESOLVED: gdb.mi/mi-var-invalidate.exp: no type for invalid variable linteger (1)
FAIL: gdb.mi/mi-var-invalidate.exp: global_simple still alive (unexpected output)
PASS: gdb.mi/mi-var-invalidate.exp: type simpleton for valid variable global_simple
FAIL: gdb.mi/mi-var-invalidate.exp: linteger not valid anymore due to binary changes (unexpected output)
FAIL: gdb.mi/mi-var-invalidate.exp: no type for invalid variable linteger (2) (unexpected output)
PASS: gdb.mi/mi-var-invalidate.exp: global_simple not anymore in scope due to binary changes
PASS: gdb.mi/mi-var-invalidate.exp: no type for invalid variable global_simple
PASS: gdb.mi/mi-var-list-children-invalid-grandchild.exp: set print object on
PASS: gdb.mi/mi-var-list-children-invalid-grandchild.exp: breakpoint at main
UNRESOLVED: gdb.mi/mi-var-list-children-invalid-grandchild.exp: run to 41 (set breakpoint)
FAIL: gdb.mi/mi-var-list-children-invalid-grandchild.exp: run to 41 (exec-continue)
FAIL: gdb.mi/mi-var-list-children-invalid-grandchild.exp: wait for stop (continue to invalid pointer value)
UNRESOLVED: gdb.mi/mi-var-list-children-invalid-grandchild.exp: create variable object
UNRESOLVED: gdb.mi/mi-var-list-children-invalid-grandchild.exp: list children #1
UNRESOLVED: gdb.mi/mi-var-list-children-invalid-grandchild.exp: run to 43 (set breakpoint)
FAIL: gdb.mi/mi-var-list-children-invalid-grandchild.exp: wait for stop (continue to valid pointer value)
FAIL: gdb.mi/mi-var-list-children-invalid-grandchild.exp: update variable object (unexpected output)
FAIL: gdb.mi/mi-var-list-children-invalid-grandchild.exp: list children #2 (unexpected output)
PASS: gdb.mi/mi-var-rtti.exp: run to mi-var-rtti.cc:36 (set breakpoint)
UNRESOLVED: gdb.mi/mi-var-rtti.exp: wait for stop (use_rtti_for_ptr: step to 36)
FAIL: gdb.mi/mi-var-rtti.exp: use_rtti_for_ptr: go to line 36
FAIL: gdb.mi/mi-var-rtti.exp: use_rtti_for_ptr: step over 36
UNRESOLVED: gdb.mi/mi-var-rtti.exp: run to mi-var-rtti.cc:63 (set breakpoint)
UNRESOLVED: gdb.mi/mi-var-rtti.exp: wait for stop (use_rtti_for_ref: step to 63)
FAIL: gdb.mi/mi-var-rtti.exp: use_rtti_for_ref: go to line 63
FAIL: gdb.mi/mi-var-rtti.exp: use_rtti_for_ref: step over 63
UNRESOLVED: gdb.mi/mi-var-rtti.exp: run to mi-var-rtti.cc:93 (set breakpoint)
UNRESOLVED: gdb.mi/mi-var-rtti.exp: wait for stop (use_rtti_for_ptr_child: step to 93)
FAIL: gdb.mi/mi-var-rtti.exp: use_rtti_for_ptr_child: go to line 93
FAIL: gdb.mi/mi-var-rtti.exp: use_rtti_for_ptr_child: step over 93
UNRESOLVED: gdb.mi/mi-var-rtti.exp: run to mi-var-rtti.cc:148 (set breakpoint)
UNRESOLVED: gdb.mi/mi-var-rtti.exp: wait for stop (use_rtti_for_ref_child: step to 148)
FAIL: gdb.mi/mi-var-rtti.exp: use_rtti_for_ref_child: go to line 148
FAIL: gdb.mi/mi-var-rtti.exp: use_rtti_for_ref_child: step over 148
UNRESOLVED: gdb.mi/mi-var-rtti.exp: run to mi-var-rtti.cc:201 (set breakpoint)
UNRESOLVED: gdb.mi/mi-var-rtti.exp: wait for stop (use_rtti_with_multiple_inheritence: step to 201)
FAIL: gdb.mi/mi-var-rtti.exp: use_rtti_with_multiple_inheritence: go to line 201
FAIL: gdb.mi/mi-var-rtti.exp: use_rtti_with_multiple_inheritence: step over 201
UNRESOLVED: gdb.mi/mi-var-rtti.exp: run to mi-var-rtti.cc:250 (set breakpoint)
UNRESOLVED: gdb.mi/mi-var-rtti.exp: wait for stop (type_update_when_use_rtti: step to 250)
FAIL: gdb.mi/mi-var-rtti.exp: type_update_when_use_rtti: go to line 250
FAIL: gdb.mi/mi-var-rtti.exp: type_update_when_use_rtti: step over 250
UNRESOLVED: gdb.mi/mi-var-rtti.exp: run to mi-var-rtti.cc:306 (set breakpoint)
UNRESOLVED: gdb.mi/mi-var-rtti.exp: wait for stop (skip_type_update_when_not_use_rtti: step to 306)
FAIL: gdb.mi/mi-var-rtti.exp: skip_type_update_when_not_use_rtti: go to line 306
FAIL: gdb.mi/mi-var-rtti.exp: skip_type_update_when_not_use_rtti: step over 306
PASS: gdb.mi/mi-vla-c99.exp: insert breakpoint at line 28 after vla is filled
UNRESOLVED: gdb.mi/mi-vla-c99.exp: run to breakpoint at line 28 (timeout)
UNRESOLVED: gdb.mi/mi-vla-c99.exp: evaluate complete vla
UNRESOLVED: gdb.mi/mi-vla-c99.exp: evaluate vla[0]
UNRESOLVED: gdb.mi/mi-vla-c99.exp: evaluate vla[2]
FAIL: gdb.mi/mi-vla-c99.exp: evaluate vla[4] (unexpected output)
FAIL: gdb.mi/mi-vla-c99.exp: create local variable vla (unexpected output)
FAIL: gdb.mi/mi-vla-c99.exp: info type variable vla (unexpected output)
FAIL: gdb.mi/mi-vla-c99.exp: show format variable vla (unexpected output)
FAIL: gdb.mi/mi-vla-c99.exp: eval variable vla (unexpected output)
FAIL: gdb.mi/mi-vla-c99.exp: get children of vla (unexpected output)
PASS: gdb.mi/mi-vla-fortran.exp: 1
UNRESOLVED: gdb.mi/mi-vla-fortran.exp: run to breakpoint at line 23 (timeout)
UNRESOLVED: gdb.mi/mi-vla-fortran.exp: evaluate not allocated vla
UNRESOLVED: gdb.mi/mi-vla-fortran.exp: create local variable vla1_not_allocated
UNRESOLVED: gdb.mi/mi-vla-fortran.exp: info type variable vla1_not_allocated
FAIL: gdb.mi/mi-vla-fortran.exp: show format variable vla1_not_allocated (unexpected output)
FAIL: gdb.mi/mi-vla-fortran.exp: eval variable vla1_not_allocated (unexpected output)
FAIL: gdb.mi/mi-vla-fortran.exp: get children of vla1_not_allocated (unexpected output)
PASS: gdb.mi/mi-vla-fortran.exp: 2
UNRESOLVED: gdb.mi/mi-vla-fortran.exp: run to breakpoint at line 24 (timeout)
UNRESOLVED: gdb.mi/mi-vla-fortran.exp: evaluate allocated vla
UNRESOLVED: gdb.mi/mi-vla-fortran.exp: create local variable vla1_allocated
UNRESOLVED: gdb.mi/mi-vla-fortran.exp: info type variable vla1_allocated
FAIL: gdb.mi/mi-vla-fortran.exp: show format variable vla1_allocated (unexpected output)
FAIL: gdb.mi/mi-vla-fortran.exp: eval variable vla1_allocated (unexpected output)
FAIL: gdb.mi/mi-vla-fortran.exp: get children of vla1_allocated (unexpected output)
PASS: gdb.mi/mi-vla-fortran.exp: 3
UNRESOLVED: gdb.mi/mi-vla-fortran.exp: run to breakpoint at line 27 (timeout)
UNRESOLVED: gdb.mi/mi-vla-fortran.exp: evaluate filled vla
UNRESOLVED: gdb.mi/mi-vla-fortran.exp: 4
UNRESOLVED: gdb.mi/mi-vla-fortran.exp: run to breakpoint at line 30 (timeout)
UNRESOLVED: gdb.mi/mi-vla-fortran.exp: evaluate filled vla
UNRESOLVED: gdb.mi/mi-vla-fortran.exp: evaluate filled vla
UNRESOLVED: gdb.mi/mi-vla-fortran.exp: evaluate filled vla
FAIL: gdb.mi/mi-vla-fortran.exp: evaluate filled vla (unexpected output)
PASS: gdb.mi/mi-vla-fortran.exp: 5
UNRESOLVED: gdb.mi/mi-vla-fortran.exp: run to breakpoint at line 31 (timeout)
UNRESOLVED: gdb.mi/mi-vla-fortran.exp: evaluate not allocated vla
UNRESOLVED: gdb.mi/mi-vla-fortran.exp: 6
UNRESOLVED: gdb.mi/mi-vla-fortran.exp: run to breakpoint at line 36 (timeout)
FAIL: gdb.mi/mi-vla-fortran.exp: evaluate not associated vla (timeout)
UNRESOLVED: gdb.mi/mi-vla-fortran.exp: 7
UNRESOLVED: gdb.mi/mi-vla-fortran.exp: run to breakpoint at line 37 (timeout)
UNRESOLVED: gdb.mi/mi-vla-fortran.exp: evaluate associated vla
UNRESOLVED: gdb.mi/mi-vla-fortran.exp: create local variable pvla2_associated
UNRESOLVED: gdb.mi/mi-vla-fortran.exp: info type variable pvla2_associated
UNRESOLVED: gdb.mi/mi-vla-fortran.exp: show format variable pvla2_associated
UNRESOLVED: gdb.mi/mi-vla-fortran.exp: eval variable pvla2_associated
UNRESOLVED: gdb.mi/mi-vla-fortran.exp: 8
UNRESOLVED: gdb.mi/mi-vla-fortran.exp: run to breakpoint at line 42 (timeout)
UNRESOLVED: gdb.mi/mi-vla-fortran.exp: evaluate vla pointer set to null
UNSUPPORTED: gdb.mi/mi-watch-nonstop.exp: displaced stepping
PASS: gdb.mi/mi-watch.exp: mi-mode=main: wp-type=sw: hw watchpoints toggle
PASS: gdb.mi/mi-watch.exp: mi-mode=main: wp-type=sw: breakpoint at callee4
UNRESOLVED: gdb.mi/mi-watch.exp: mi-mode=main: wp-type=sw: break-watch operation
UNRESOLVED: gdb.mi/mi-watch.exp: mi-mode=main: wp-type=sw: list of watchpoints
FAIL: gdb.mi/mi-watch.exp: mi-mode=main: wp-type=sw: watchpoint trigger (unknown output after running)
FAIL: gdb.mi/mi-watch.exp: mi-mode=main: wp-type=sw: watchpoint trigger (unknown output after running)
PASS: gdb.mi/mi-watch.exp: mi-mode=main: wp-type=hw: hw watchpoints toggle
PASS: gdb.mi/mi-watch.exp: mi-mode=main: wp-type=hw: breakpoint at callee4
UNRESOLVED: gdb.mi/mi-watch.exp: mi-mode=main: wp-type=hw: break-watch operation
UNRESOLVED: gdb.mi/mi-watch.exp: mi-mode=main: wp-type=hw: list of watchpoints
FAIL: gdb.mi/mi-watch.exp: mi-mode=main: wp-type=hw: watchpoint trigger (unknown output after running)
FAIL: gdb.mi/mi-watch.exp: mi-mode=main: wp-type=hw: watchpoint trigger (unknown output after running)
PASS: gdb.mi/mi-watch.exp: mi-mode=separate: wp-type=sw: hw watchpoints toggle
PASS: gdb.mi/mi-watch.exp: mi-mode=separate: wp-type=sw: breakpoint at callee4
UNRESOLVED: gdb.mi/mi-watch.exp: mi-mode=separate: wp-type=sw: break-watch operation
UNRESOLVED: gdb.mi/mi-watch.exp: mi-mode=separate: wp-type=sw: list of watchpoints
FAIL: gdb.mi/mi-watch.exp: mi-mode=separate: wp-type=sw: watchpoint trigger
FAIL: gdb.mi/mi-watch.exp: mi-mode=separate: wp-type=sw: watchpoint trigger (timeout)
FAIL: gdb.mi/mi-watch.exp: mi-mode=separate: wp-type=sw: watchpoint trigger
FAIL: gdb.mi/mi-watch.exp: mi-mode=separate: wp-type=sw: watchpoint trigger (timeout)
PASS: gdb.mi/mi-watch.exp: mi-mode=separate: wp-type=hw: hw watchpoints toggle
PASS: gdb.mi/mi-watch.exp: mi-mode=separate: wp-type=hw: breakpoint at callee4
UNRESOLVED: gdb.mi/mi-watch.exp: mi-mode=separate: wp-type=hw: break-watch operation
UNRESOLVED: gdb.mi/mi-watch.exp: mi-mode=separate: wp-type=hw: list of watchpoints
FAIL: gdb.mi/mi-watch.exp: mi-mode=separate: wp-type=hw: watchpoint trigger
FAIL: gdb.mi/mi-watch.exp: mi-mode=separate: wp-type=hw: watchpoint trigger (timeout)
FAIL: gdb.mi/mi-watch.exp: mi-mode=separate: wp-type=hw: watchpoint trigger
FAIL: gdb.mi/mi-watch.exp: mi-mode=separate: wp-type=hw: watchpoint trigger (timeout)
PASS: gdb.mi/mi2-prompt.exp: console set prompt
PASS: gdb.mi/mi2-prompt.exp: -break-list
PASS: gdb.mi/mi2-prompt.exp: set prompt (banana)
PASS: gdb.mi/mi2-prompt.exp: interpreter-exec mi -break-list
PASS: gdb.mi/mi2-var-child.exp: breakpoint at do_children_tests
UNRESOLVED: gdb.mi/mi2-var-child.exp: run to 251 (set breakpoint)
FAIL: gdb.mi/mi2-var-child.exp: run to 251 (exec-continue)
FAIL: gdb.mi/mi2-var-child.exp: wait for stop (step to real start of do_children_test)
UNRESOLVED: gdb.mi/mi2-var-child.exp: create local variable struct_declarations
UNRESOLVED: gdb.mi/mi2-var-child.exp: get children of struct_declarations
UNRESOLVED: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.integer (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.integer (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.character (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.character (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_int (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_int (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.func_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.func_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.func_ptr_struct (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.func_ptr_struct (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.func_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.func_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.u1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.u1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.2 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.2 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.3 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.3 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.4 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.4 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.5 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.5 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.6 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.6 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.7 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.7 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.8 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.8 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.9 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.9 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.u1.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.u1.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.u1.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.u1.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.u1.c (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.u1.c (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.u1.d (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.u1.d (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.g (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.g (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.h (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.h (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.i (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.i (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.f (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.f (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s2 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s1.d (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.d (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s1.e (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.e (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s1.func (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.func (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s1.foo (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.foo (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s2.array_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2.array_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s2.func (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2.func (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of struct_declarations.int_ptr_ptr.*int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.int_ptr_ptr.*int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: step to line $line_dct_123 (MI error)
FAIL: gdb.mi/mi2-var-child.exp: step to line $line_dct_123 (timeout)
FAIL: gdb.mi/mi2-var-child.exp: create local variable weird (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of weird (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of weird (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of weird.long_array (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of weird.long_array (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of weird.int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of weird.int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of weird.int_ptr_ptr.*int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of weird.int_ptr_ptr.*int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: create local variable weird->int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of weird->int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of weird->int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of weird->int_ptr_ptr.*weird->int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of weird->int_ptr_ptr.*weird->int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of weird->int_ptr_ptr.*weird->int_ptr_ptr.**weird->int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of weird->int_ptr_ptr.*weird->int_ptr_ptr.**weird->int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: is weird editable (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: is weird->int_ptr_ptr editable (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: is weird.int_ptr_ptr.*int_ptr_ptr editable (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: is weird.int_ptr_ptr.*int_ptr_ptr.**int_ptr_ptr editable (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: is weird.u1 editable (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: is weird.s2 editable (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: is struct_declarations.u1.a editable (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: is struct_declarations.u1.b editable (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: is struct_declarations.u1.c editable (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: is struct_declarations.long_array editable (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: is struct_declarations.long_array.0 editable (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: is struct_declarations editable (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: delete var weird (unexpected output)
PASS: gdb.mi/mi2-var-child.exp: update all vars. None changed
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 1 (MI error)
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 1 (timeout)
FAIL: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.integer (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 4 (MI error)
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 4 (unknown output after running)
FAIL: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 5 (MI error)
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 5 (timeout)
FAIL: gdb.mi/mi2-var-child.exp: update all vars int_ptr_ptr and children changed (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 6 (MI error)
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 6 (timeout)
FAIL: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.long_array.0 changed (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 7 (MI error)
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 7 (timeout)
FAIL: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.long_array.1 changed (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 8 (MI error)
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 8 (timeout)
FAIL: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.long_array.2 changed (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_nothing (MI error)
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_nothing (unknown output after running)
FAIL: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.long_array.3-9 changed (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_nothing + 1 (MI error)
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_nothing + 1 (unknown output after running)
FAIL: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.func_ptr changed (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: delete var struct_declarations (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: delete var weird->int_ptr_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 1 (MI error)
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 1 (unknown output after running)
FAIL: gdb.mi/mi2-var-child.exp: create local variable  psnp->char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of psnp->char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr.****psnp->char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr.****psnp->char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: create local variable  psnp->long_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of psnp->long_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of psnp->long_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr.****psnp->long_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr.****psnp->long_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: create local variable  psnp->ptrs (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.next (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.next.ptrs (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 2 (MI error)
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 2 (timeout)
FAIL: gdb.mi/mi2-var-child.exp: update all vars psnp->char_ptr (and 0.char_ptr) changed (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 3 (MI error)
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 3 (unknown output after running)
FAIL: gdb.mi/mi2-var-child.exp: update all vars psnp->next->char_ptr (and 1.char_ptr) changed (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 4 (MI error)
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 4 (timeout)
FAIL: gdb.mi/mi2-var-child.exp: update all vars psnp->next->next->char_ptr (and 2.char_ptr) changed (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 5 (MI error)
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 5 (timeout)
FAIL: gdb.mi/mi2-var-child.exp: update all vars psnp->long_ptr (and 0.long_ptr) changed (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 6 (MI error)
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 6 (unknown output after running)
XFAIL: gdb.mi/mi2-var-child.exp: update all vars psnp->next->long_ptr (and 1.long_ptr) changed (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 7 (MI error)
FAIL: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 7 (timeout)
FAIL: gdb.mi/mi2-var-child.exp: update all vars psnp->next->next->long_ptr (and 2.long_ptr) changed (unexpected output)
PASS: gdb.mi/mi2-var-child.exp: break in do_anonymous_type_tests
PASS: gdb.mi/mi2-var-child.exp: break in do_nested_struct_union_tests
FAIL: gdb.mi/mi2-var-child.exp: continue to do_anonymous_type_tests breakpoint (unknown output after running)
FAIL: gdb.mi/mi2-var-child.exp: VT: create root varobj for ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of ptr1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of ptr1.*ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of ptr1.*ptr.1_anonymous (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of ptr1.*ptr.1_anonymous.c (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.c (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.c (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of ptr1.*ptr.1_anonymous.2_anonymous (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.c.*c (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.c.*c (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.d (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.d (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.e (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.e (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.f (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.f (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.g (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.g (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.h (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.h (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.h (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.h.*h (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.h.*h (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.h.*h (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.h.*h.**h (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.h.*h.**h (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.integer (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.integer (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.unsigned_integer (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.unsigned_integer (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.character (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.character (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.signed_character (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.signed_character (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.char_ptr.*char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.char_ptr.*char_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.0 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.0 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.2 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.2 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.3 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.3 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.4 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.4 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.5 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.5 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.6 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.6 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.7 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.7 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.8 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.8 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.9 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.9 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: create root varobj for v (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of v1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for v1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for v1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for v1.x (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for v1.x (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of v1.1_anonymous (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for v1.1_anonymous (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for v1.1_anonymous (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of v1.2_anonymous (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for v1.2_anonymous (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for v1.2_anonymous (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for v1.1_anonymous.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for v1.1_anonymous.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for v1.2_anonymous.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for v1.2_anonymous.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: Run till MI stops in do_nested_struct_union_tests (unknown output after running)
FAIL: gdb.mi/mi2-var-child.exp: VT: create root varobj for var (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of var1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for var1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for var1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of var1.a1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for var1.a1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for var1.a1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of var1.b1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for var1.b1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for var1.b1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of var1.u1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for var1.u1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for var1.u1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of var1.3_anonymous (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for var1.3_anonymous (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for var1.3_anonymous (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of var1.u2 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for var1.u2 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for var1.u2 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for var1.a1.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for var1.a1.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for var1.b1.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for var1.b1.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of var1.u1.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for var1.u1.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for var1.u1.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of var1.u1.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for var1.u1.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for var1.u1.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of var1.3_anonymous.a2 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for var1.3_anonymous.a2 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for var1.3_anonymous.a2 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of var1.3_anonymous.b2 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for var1.3_anonymous.b2 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for var1.3_anonymous.b2 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of var1.u2.a3 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for var1.u2.a3 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for var1.u2.a3 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of var1.u2.b3 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for var1.u2.b3 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for var1.u2.b3 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for var1.u1.a.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for var1.u1.a.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for var1.u1.b.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for var1.u1.b.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for var1.3_anonymous.a2.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for var1.3_anonymous.a2.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for var1.3_anonymous.b2.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for var1.3_anonymous.b2.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for var1.u2.a3.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for var1.u2.a3.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for var1.u2.b3.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for var1.u2.b3.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: create root varobj for var2 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of var21 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for var21 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for var21 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of var21.ab (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for var21.ab (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for var21.ab (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of var21.ab.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for var21.ab.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for var21.ab.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of var21.ab.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for var21.ab.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for var21.ab.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for var21.ab.a.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for var21.ab.a.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for var21.ab.b.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for var21.ab.b.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: create root varobj for ss_ptr (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of ss_ptr1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ss_ptr1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of ss_ptr1.a1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.a1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.a1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of ss_ptr1.b1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.b1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.b1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of ss_ptr1.u1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.u1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.u1 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of ss_ptr1.3_anonymous (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.3_anonymous (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.3_anonymous (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of ss_ptr1.u2 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.u2 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.u2 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.a1.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.a1.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.b1.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.b1.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of ss_ptr1.u1.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.u1.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.u1.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of ss_ptr1.u1.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.u1.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.u1.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of ss_ptr1.3_anonymous.a2 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.3_anonymous.a2 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.3_anonymous.a2 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of ss_ptr1.3_anonymous.b2 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.3_anonymous.b2 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.3_anonymous.b2 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of ss_ptr1.u2.a3 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.u2.a3 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.u2.a3 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: VT: list children of ss_ptr1.u2.b3 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.u2.b3 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.u2.b3 (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.u1.a.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.u1.a.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.u1.b.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.u1.b.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.3_anonymous.a2.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.3_anonymous.a2.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.3_anonymous.b2.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.3_anonymous.b2.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.u2.a3.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.u2.a3.a (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.u2.b3.b (unexpected output)
FAIL: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.u2.b3.b (unexpected output)
UNRESOLVED: gdb.mi/new-ui-mi-sync.exp: sync-command=continue: breakpoint at main
UNRESOLVED: gdb.mi/pr11022.exp: data-write-memory-bytes &x "01": breakpoint at main
UNRESOLVED: gdb.mi/pr11022.exp: data-write-memory-bytes &x "01": set breakpoint
UNRESOLVED: gdb.mi/pr11022.exp: data-write-memory-bytes &x "01": set watchpoint
FAIL: gdb.mi/pr11022.exp: data-write-memory-bytes &x "01": breakpoint hit (unknown output after running)
FAIL: gdb.mi/pr11022.exp: data-write-memory-bytes &x "01": watchpoint hit (unknown output after running)
FAIL: gdb.mi/pr11022.exp: data-write-memory-bytes &x "01": breakpoint hit 2 (unknown output after running)
FAIL: gdb.mi/pr11022.exp: data-write-memory-bytes &x "01": set x (unexpected output)
FAIL: gdb.mi/pr11022.exp: data-write-memory-bytes &x "01": watchpoint hit 2 (unknown output after running)
PASS: gdb.mi/pr11022.exp: data-write-memory &x x 4 "01": breakpoint at main
UNRESOLVED: gdb.mi/pr11022.exp: data-write-memory &x x 4 "01": set breakpoint
UNRESOLVED: gdb.mi/pr11022.exp: data-write-memory &x x 4 "01": set watchpoint
FAIL: gdb.mi/pr11022.exp: data-write-memory &x x 4 "01": breakpoint hit (unknown output after running)
FAIL: gdb.mi/pr11022.exp: data-write-memory &x x 4 "01": watchpoint hit (unknown output after running)
FAIL: gdb.mi/pr11022.exp: data-write-memory &x x 4 "01": breakpoint hit 2 (unknown output after running)
FAIL: gdb.mi/pr11022.exp: data-write-memory &x x 4 "01": set x (unexpected output)
FAIL: gdb.mi/pr11022.exp: data-write-memory &x x 4 "01": watchpoint hit 2 (unknown output after running)
PASS: gdb.mi/user-selected-context-sync.exp: successfully compiled posix threads test case
PASS: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_setup: breakpoint at main
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_setup: can't run to main
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_inferior: reset selection to thread 1.1 (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_inferior: reset selection to frame 0
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_inferior: flush CLI
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_inferior: flush MI
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_inferior: CLI select inferior
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_inferior: event on MI
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_inferior: CLI select inferior again
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_inferior: event on MI again
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_thread: reset selection to thread 1.1
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_thread: reset selection to frame 0
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_thread: flush CLI
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_thread: flush MI
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_thread: thread 1.2: select thread
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_thread: thread 1.2: select thread, event on MI
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_thread: thread 1.2: select thread again
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_thread: thread 1.2: select thread, event on MI again, ensure no output MI (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_thread: thread 1.2: thread without args
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_thread: thread 1.2: thread without args, event on MI, ensure no output MI (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_thread: thread 1.3: select thread
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_thread: thread 1.3: select thread, event on MI
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_thread: thread 1.3: select thread again
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_thread: thread 1.3: select thread again, event on MI, ensure no output MI (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_thread: thread 1.3: thread without args
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_thread: thread 1.3: thread without args, event on MI, ensure no output MI (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_frame: thread 1.2: reset selection to thread 1.2
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_frame: thread 1.2: reset selection to frame 0
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_frame: thread 1.2: flush CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_frame: thread 1.2: flush MI (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_frame: thread 1.2: select frame 1
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_frame: thread 1.2: select frame 1, event on MI
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_frame: thread 1.2: select frame 1 again
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_frame: thread 1.2: select frame 1 again, event on MI, ensure no output MI (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_frame: thread 1.2: frame without args
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_frame: thread 1.2: frame without args, event on MI, ensure no output MI (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_frame: thread 1.3: reset selection to thread 1.3
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_frame: thread 1.3: reset selection to frame 0
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_frame: thread 1.3: flush CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_frame: thread 1.3: flush MI (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_frame: thread 1.3: select frame 1
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_frame: thread 1.3: select frame 1, event on MI
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_frame: thread 1.3: frame without args
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_frame: thread 1.3: frame without args, event on MI, ensure no output MI (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_select_frame: thread 1.2: reset selection to thread 1.2
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_select_frame: thread 1.2: reset selection to frame 0
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_select_frame: thread 1.2: flush CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_select_frame: thread 1.2: flush MI (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_select_frame: thread 1.2: select frame 1
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_select_frame: thread 1.2: select frame 1, event on MI
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_select_frame: thread 1.2: select frame 1 again
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_select_frame: thread 1.2: select frame 1 again, event on MI, ensure no output MI (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_select_frame: thread 1.3: reset selection to thread 1.3
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_select_frame: thread 1.3: reset selection to frame 0
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_select_frame: thread 1.3: flush CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_select_frame: thread 1.3: flush MI (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_select_frame: thread 1.3: select frame 1
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_select_frame: thread 1.3: select frame 1, event on MI
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_up_down: reset selection to thread 1.2
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_up_down: reset selection to frame 0
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_up_down: flush CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_up_down: flush MI (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_up_down: frame up
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_up_down: frame up, event on MI
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_up_down: frame down
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_cli_up_down: frame down, event on MI
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_mi_thread_select: reset selection to thread 1.1
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_mi_thread_select: reset selection to frame 0
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_mi_thread_select: flush CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_mi_thread_select: flush MI (timeout)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_mi_thread_select: thread 1.2: -thread-select (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_mi_thread_select: thread 1.2: -thread-select, event on CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_mi_thread_select: thread 1.2: -thread-select again (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_mi_thread_select: thread 1.2: -thread-select again, event on CLI, ensure no output CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_mi_thread_select: thread 1.3: -thread-select (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_mi_thread_select: thread 1.3: -thread-select, event on CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_mi_thread_select: thread 1.3: -thread-select again (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_mi_thread_select: thread 1.3: -thread-select again, event on CLI, ensure no output CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_mi_thread_select: thread 1.2 with --thread: -thread-select (timeout)
KFAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_mi_thread_select: thread 1.2 with --thread: thread-select, event on cli (PRMS: gdb/20631)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_mi_stack_select_frame: thread 1.2: reset selection to thread 1.2
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_mi_stack_select_frame: thread 1.2: reset selection to frame 0
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_mi_stack_select_frame: thread 1.2: flush CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_mi_stack_select_frame: thread 1.2: flush MI (timeout)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_mi_stack_select_frame: thread 1.2: -stack-select-frame (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_mi_stack_select_frame: thread 1.2: -stack-select-frame, event on MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_mi_stack_select_frame: thread 1.2: -stack-select-frame again (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_mi_stack_select_frame: thread 1.2: -stack-select-frame again, event on MI, ensure no output CLI
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_mi_stack_select_frame: thread 1.3: reset selection to thread 1.3
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_mi_stack_select_frame: thread 1.3: reset selection to frame 0
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_mi_stack_select_frame: thread 1.3: flush CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_mi_stack_select_frame: thread 1.3: flush MI (timeout)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_mi_stack_select_frame: thread 1.3: -stack-select-frame (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: test_mi_stack_select_frame: thread 1.3: -stack-select-frame, event on MI
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_inferior: reset selection to thread 1.1
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_inferior: reset selection to frame 0
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_inferior: flush CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_inferior: flush MI (timeout)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_inferior: select inferior (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_inferior: select inferior, event on CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_inferior: select inferior again (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_inferior: select inferior again, event on CLI
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_thread: reset selection to thread 1.1
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_thread: reset selection to frame 0
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_thread: flush CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_thread: flush MI (timeout)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_thread: thread 1.2: select thread (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_thread: thread 1.2: select thread, event on CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_thread: thread 1.2: select thread again (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_thread: thread 1.2: select thread again, event on CLI, ensure no output CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_thread: thread 1.2: thread without args (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_thread: thread 1.2: thread without args, event on CLI, ensure no output CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_thread: thread 1.3: select thread (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_thread: thread 1.3: select thread, event on CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_thread: thread 1.3: select thread again (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_thread: thread 1.3: select thread again, event on CLI, ensure no output CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_thread: thread 1.3: thread without args (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_thread: thread 1.3: thread without args, event on CLI, ensure no output CLI
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.2: reset selection to thread 1.2
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.2: reset selection to frame 0
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.2: flush CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.2: flush MI (timeout)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.2: select frame 1 (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.2: select frame 1, event on CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.2: select frame 1 again (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.2: select frame 1 again, event on CLI, ensure no output CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.2: frame without args (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.2: frame without args, event on CLI, ensure no output CLI
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.3: reset selection to thread 1.3
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.3: reset selection to frame 0
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.3: flush CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.3: flush MI (timeout)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.3: select frame 1 (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.3: select frame 1, event on CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.3: frame without args (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.3: frame without args, event on CLI, ensure no output CLI
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_inferior: reset selection to thread 1.1
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_inferior: reset selection to frame 0
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_inferior: flush CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_inferior: flush MI (timeout)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_inferior: select inferior (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_inferior: select inferior, event on CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_inferior: select inferior again (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_inferior: select inferior again, event on CLI
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: reset selection to thread 1.1
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: reset selection to frame 0
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: flush CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: flush MI (timeout)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: thread 1.2: select thread (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: thread 1.2: select thread, event on CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: thread 1.2: select thread again (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: thread 1.2: select thread again, event on CLI, ensure no output CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: thread 1.2: thread without args (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: thread 1.2: thread without args, event on CLI, ensure no output CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: thread 1.3: select thread (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: thread 1.3: select thread, event on CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: thread 1.3: select thread again (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: thread 1.3: select thread again, event on CLI, ensure no output CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: thread 1.3: thread without args (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: thread 1.3: thread without args, event on CLI, ensure no output CLI
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.2: reset selection to thread 1.2
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.2: reset selection to frame 0
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.2: flush CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.2: flush MI (timeout)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.2: select frame 1 (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.2: select frame 1, event on CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.2: select frame 1 again (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.2: select frame 1 again, event on CLI, ensure no output CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.2: frame without args (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.2: frame without args, event on CLI, ensure no output CLI
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.3: reset selection to thread 1.3
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.3: reset selection to frame 0
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.3: flush CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.3: flush MI (timeout)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.3: select frame 1 (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.3: select frame 1, event on CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.3: frame without args (timeout)
UNRESOLVED: gdb.mi/user-selected-context-sync.exp: mode=all-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.3: frame without args, event on CLI, ensure no output CLI
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_setup: breakpoint at main
UNSUPPORTED: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_setup: non-stop mode not supported
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_setup: can't run to main
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_inferior: reset selection to thread 1.1
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_inferior: reset selection to frame 0
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_inferior: flush CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_inferior: flush MI (unexpected output)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_inferior: CLI select inferior
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_inferior: event on MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_inferior: CLI select inferior again
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_inferior: event on MI again
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_thread: reset selection to thread 1.1
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_thread: reset selection to frame 0
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_thread: flush CLI
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_thread: flush MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_thread: thread 1.2: select thread
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_thread: thread 1.2: select thread, event on MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_thread: thread 1.2: select thread again
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_thread: thread 1.2: select thread, event on MI again, ensure no output MI (unexpected output)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_thread: thread 1.2: thread without args
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_thread: thread 1.2: thread without args, event on MI, ensure no output MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_thread: thread 1.3: select thread
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_thread: thread 1.3: select thread, event on MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_thread: thread 1.3: select thread again
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_thread: thread 1.3: select thread again, event on MI, ensure no output MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_thread: thread 1.3: thread without args
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_thread: thread 1.3: thread without args, event on MI, ensure no output MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_frame: thread 1.2: reset selection to thread 1.2
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_frame: thread 1.2: reset selection to frame 0
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_frame: thread 1.2: flush CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_frame: thread 1.2: flush MI (unexpected output)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_frame: thread 1.2: select frame 1
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_frame: thread 1.2: select frame 1, event on MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_frame: thread 1.2: select frame 1 again
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_frame: thread 1.2: select frame 1 again, event on MI, ensure no output MI (unexpected output)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_frame: thread 1.2: frame without args
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_frame: thread 1.2: frame without args, event on MI, ensure no output MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_frame: thread 1.3: reset selection to thread 1.3
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_frame: thread 1.3: reset selection to frame 0
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_frame: thread 1.3: flush CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_frame: thread 1.3: flush MI (unexpected output)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_frame: thread 1.3: select frame 1
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_frame: thread 1.3: select frame 1, event on MI, ensure no output MI (unexpected output)
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_frame: thread 1.3: frame without args
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_frame: thread 1.3: frame without args, event on MI, ensure no output MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_select_frame: thread 1.2: reset selection to thread 1.2
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_select_frame: thread 1.2: reset selection to frame 0
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_select_frame: thread 1.2: flush CLI
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_select_frame: thread 1.2: flush MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_select_frame: thread 1.2: select frame 1
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_select_frame: thread 1.2: select frame 1, event on MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_select_frame: thread 1.2: select frame 1 again
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_select_frame: thread 1.2: select frame 1 again, event on MI, ensure no output MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_select_frame: thread 1.3: reset selection to thread 1.3
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_select_frame: thread 1.3: reset selection to frame 0
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_select_frame: thread 1.3: flush CLI
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_select_frame: thread 1.3: flush MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_select_frame: thread 1.3: select frame 1
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_select_frame: thread 1.3: select frame 1, event on MI, ensure no output MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_up_down: reset selection to thread 1.2
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_up_down: reset selection to frame 0
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_up_down: flush CLI
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_up_down: flush MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_up_down: frame up
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_up_down: frame up, event on MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_up_down: frame down
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_cli_up_down: frame down, event on MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_mi_thread_select: reset selection to thread 1.1
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_mi_thread_select: reset selection to frame 0
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_mi_thread_select: flush CLI
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_mi_thread_select: flush MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_mi_thread_select: thread 1.2: -thread-select (unexpected output)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_mi_thread_select: thread 1.2: -thread-select, event on CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_mi_thread_select: thread 1.2: -thread-select again (unexpected output)
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_mi_thread_select: thread 1.2: -thread-select again, event on CLI, ensure no output CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_mi_thread_select: thread 1.3: -thread-select (unexpected output)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_mi_thread_select: thread 1.3: -thread-select, event on CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_mi_thread_select: thread 1.3: -thread-select again (unexpected output)
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_mi_thread_select: thread 1.3: -thread-select again, event on CLI, ensure no output CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_mi_thread_select: thread 1.2 with --thread: -thread-select (unexpected output)
KFAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_mi_thread_select: thread 1.2 with --thread: thread-select, event on cli (PRMS: gdb/20631)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_mi_stack_select_frame: thread 1.2: reset selection to thread 1.2
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_mi_stack_select_frame: thread 1.2: reset selection to frame 0
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_mi_stack_select_frame: thread 1.2: flush CLI
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_mi_stack_select_frame: thread 1.2: flush MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_mi_stack_select_frame: thread 1.2: -stack-select-frame (unexpected output)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_mi_stack_select_frame: thread 1.2: -stack-select-frame, event on MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_mi_stack_select_frame: thread 1.2: -stack-select-frame again (unexpected output)
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_mi_stack_select_frame: thread 1.2: -stack-select-frame again, event on MI, ensure no output CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_mi_stack_select_frame: thread 1.3: reset selection to thread 1.3
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_mi_stack_select_frame: thread 1.3: reset selection to frame 0
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_mi_stack_select_frame: thread 1.3: flush CLI
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_mi_stack_select_frame: thread 1.3: flush MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_mi_stack_select_frame: thread 1.3: -stack-select-frame (unexpected output)
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: test_mi_stack_select_frame: thread 1.3: -stack-select-frame, event on MI, ensure no output CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_inferior: reset selection to thread 1.1
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_inferior: reset selection to frame 0
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_inferior: flush CLI
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_inferior: flush MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_inferior: select inferior (unexpected output)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_inferior: select inferior, event on CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_inferior: select inferior again (unexpected output)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_inferior: select inferior again, event on CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_thread: reset selection to thread 1.1
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_thread: reset selection to frame 0
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_thread: flush CLI
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_thread: flush MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_thread: thread 1.2: select thread (unexpected output)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_thread: thread 1.2: select thread, event on CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_thread: thread 1.2: select thread again (unexpected output)
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_thread: thread 1.2: select thread again, event on CLI, ensure no output CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_thread: thread 1.2: thread without args (unexpected output)
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_thread: thread 1.2: thread without args, event on CLI, ensure no output CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_thread: thread 1.3: select thread (unexpected output)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_thread: thread 1.3: select thread, event on CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_thread: thread 1.3: select thread again (unexpected output)
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_thread: thread 1.3: select thread again, event on CLI, ensure no output CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_thread: thread 1.3: thread without args (unexpected output)
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_thread: thread 1.3: thread without args, event on CLI, ensure no output CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.2: reset selection to thread 1.2
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.2: reset selection to frame 0
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.2: flush CLI
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.2: flush MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.2: select frame 1 (unexpected output)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.2: select frame 1, event on CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.2: select frame 1 again (unexpected output)
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.2: select frame 1 again, event on CLI, ensure no output CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.2: frame without args (unexpected output)
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.2: frame without args, event on CLI, ensure no output CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.3: reset selection to thread 1.3
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.3: reset selection to frame 0
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.3: flush CLI
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.3: flush MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.3: select frame 1 (unexpected output)
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.3: select frame 1, event on CLI, ensure no output CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.3: frame without args (unexpected output)
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=direct: test_cli_in_mi_frame: thread 1.3: frame without args, event on CLI, ensure no output CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_inferior: reset selection to thread 1.1
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_inferior: reset selection to frame 0
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_inferior: flush CLI
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_inferior: flush MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_inferior: select inferior (unexpected output)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_inferior: select inferior, event on CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_inferior: select inferior again (unexpected output)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_inferior: select inferior again, event on CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: reset selection to thread 1.1
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: reset selection to frame 0
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: flush CLI
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: flush MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: thread 1.2: select thread (unexpected output)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: thread 1.2: select thread, event on CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: thread 1.2: select thread again (unexpected output)
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: thread 1.2: select thread again, event on CLI, ensure no output CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: thread 1.2: thread without args (unexpected output)
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: thread 1.2: thread without args, event on CLI, ensure no output CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: thread 1.3: select thread (unexpected output)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: thread 1.3: select thread, event on CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: thread 1.3: select thread again (unexpected output)
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: thread 1.3: select thread again, event on CLI, ensure no output CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: thread 1.3: thread without args (unexpected output)
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_thread: thread 1.3: thread without args, event on CLI, ensure no output CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.2: reset selection to thread 1.2
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.2: reset selection to frame 0
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.2: flush CLI
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.2: flush MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.2: select frame 1 (unexpected output)
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.2: select frame 1, event on CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.2: select frame 1 again (unexpected output)
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.2: select frame 1 again, event on CLI, ensure no output CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.2: frame without args (unexpected output)
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.2: frame without args, event on CLI, ensure no output CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.3: reset selection to thread 1.3
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.3: reset selection to frame 0
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.3: flush CLI
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.3: flush MI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.3: select frame 1 (unexpected output)
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.3: select frame 1, event on CLI, ensure no output CLI
FAIL: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.3: frame without args (unexpected output)
PASS: gdb.mi/user-selected-context-sync.exp: mode=non-stop: exec_mode=interpreter-exec: test_cli_in_mi_frame: thread 1.3: frame without args, event on CLI, ensure no output CLI
UNRESOLVED: gdb.multi/base.exp: base.exp
FAIL: gdb.multi/dummy-frame-restore.exp: can't run to f1
UNSUPPORTED: gdb.multi/info-threads.exp: couldn't compile info-threads0.o: unrecognized error
UNTESTED: gdb.multi/info-threads.exp: failed to prepare
UNTESTED: gdb.multi/multi-arch-exec.exp: failed to prepare
UNTESTED: gdb.multi/multi-arch.exp: failed to prepare
FAIL: gdb.multi/multi-attach.exp: attach to program 1
PASS: gdb.multi/multi-attach.exp: backtrace 1
PASS: gdb.multi/multi-attach.exp: add second inferior
PASS: gdb.multi/multi-attach.exp: switch to second inferior
FAIL: gdb.multi/multi-attach.exp: attach to program 2
PASS: gdb.multi/multi-attach.exp: backtrace 2
PASS: gdb.multi/multi-attach.exp: kill inferior 2
PASS: gdb.multi/multi-attach.exp: inferior 1
PASS: gdb.multi/multi-attach.exp: kill inferior 1
PASS: gdb.multi/remove-inferiors.exp: add second inferior
PASS: gdb.multi/remove-inferiors.exp: switch to second inferior
PASS: gdb.multi/remove-inferiors.exp: can't remove current inferior
PASS: gdb.multi/remove-inferiors.exp: remove non-current inferior
PASS: gdb.multi/remove-inferiors.exp: load binary
FAIL: gdb.multi/remove-inferiors.exp: couldn't run to main.
PASS: gdb.multi/tids.exp: successfully compiled posix threads test case
PASS: gdb.multi/watchpoint-multi-exit.exp: dispose=kill: set follow-fork child
PASS: gdb.multi/watchpoint-multi-exit.exp: dispose=kill: set detach-on-fork off
FAIL: gdb.multi/watchpoint-multi-exit.exp: dispose=kill: can't run to child_function
PASS: gdb.multi/watchpoint-multi-exit.exp: dispose=detach: set follow-fork child
PASS: gdb.multi/watchpoint-multi-exit.exp: dispose=detach: set detach-on-fork off
FAIL: gdb.multi/watchpoint-multi-exit.exp: dispose=detach: can't run to child_function
PASS: gdb.multi/watchpoint-multi-exit.exp: dispose=exit: set follow-fork child
PASS: gdb.multi/watchpoint-multi-exit.exp: dispose=exit: set detach-on-fork off
FAIL: gdb.multi/watchpoint-multi-exit.exp: dispose=exit: can't run to child_function
PASS: gdb.multi/watchpoint-multi.exp: successfully compiled posix threads test case
PASS: gdb.multi/watchpoint-multi.exp: set breakpoint always-inserted on
FAIL: gdb.multi/watchpoint-multi.exp: start to main inferior 1 (GDB internal error)
PASS: gdb.multi/watchpoint-multi.exp: add inferior 2
PASS: gdb.multi/watchpoint-multi.exp: switch to inferior 2, first time
FAIL: gdb.multi/watchpoint-multi.exp: setting breakpoint at main
FAIL: gdb.multi/watchpoint-multi.exp: start to main inferior 2 (GDB internal error)
FAIL: gdb.multi/watchpoint-multi.exp: awatch c on inferior 2
PASS: gdb.multi/watchpoint-multi.exp: switch back to inferior 1
FAIL: gdb.multi/watchpoint-multi.exp: awatch b on inferior 1
PASS: gdb.multi/watchpoint-multi.exp: switch to inferior 2 again
FAIL: gdb.multi/watchpoint-multi.exp: catch c on inferior 2
FAIL: gdb.multi/watchpoint-multi.exp: catch marker_exit in inferior 2
PASS: gdb.multi/watchpoint-multi.exp: switch back to inferior 1 again
FAIL: gdb.multi/watchpoint-multi.exp: catch b on inferior 1
FAIL: gdb.multi/watchpoint-multi.exp: catch marker_exit in inferior 1
UNSUPPORTED: gdb.objc/basicclass.exp: couldn't compile basicclass.m: unrecognized error
UNSUPPORTED: gdb.objc/nondebug.exp: couldn't compile nondebug.m: unrecognized error
UNSUPPORTED: gdb.objc/objcdecode.exp: couldn't compile objcdecode.m: unrecognized error
PASS: gdb.objc/print.exp: set language objective-c
PASS: gdb.objc/print.exp: set language to "objective-c"
PASS: gdb.objc/print.exp: check fp + text
PASS: gdb.objc/print.exp: p 1.
PASS: gdb.objc/print.exp: p 1.5
PASS: gdb.objc/print.exp: p 1.f
PASS: gdb.objc/print.exp: p 1.5f
PASS: gdb.objc/print.exp: p 1.l
PASS: gdb.objc/print.exp: p 1.5l
XFAIL: gdb.objc/print.exp: p 0x1.1
PASS: gdb.objc/print.exp: reject p 1.1x
PASS: gdb.objc/print.exp: reject p 1.1ff
PASS: gdb.objc/print.exp: reject p 1.1ll
FAIL: gdb.opt/clobbered-registers-O2.exp: run to start_sequence
PASS: gdb.opt/inline-break.exp: break func1
PASS: gdb.opt/inline-break.exp: break func2
PASS: gdb.opt/inline-break.exp: break func3b
PASS: gdb.opt/inline-break.exp: break func4b
PASS: gdb.opt/inline-break.exp: break func5b
PASS: gdb.opt/inline-break.exp: break func6b
PASS: gdb.opt/inline-break.exp: break func7b
PASS: gdb.opt/inline-break.exp: break func8b
PASS: gdb.opt/inline-break.exp: print func1
PASS: gdb.opt/inline-break.exp: print func2
UNRESOLVED: gdb.opt/inline-bt.exp: skipping inline frame tests
PASS: gdb.opt/inline-cmds.exp: set listsize 1
UNRESOLVED: gdb.opt/inline-cmds.exp: skipping inline frame tests
UNRESOLVED: gdb.opt/inline-locals.exp: inline-bt.exp
UNTESTED: gdb.opt/solib-intra-step.exp: failed to compile
UNSUPPORTED: gdb.pascal/case-insensitive-symbols.exp: no pascal compiler found
UNTESTED: gdb.pascal/case-insensitive-symbols.exp: failed to compile
UNSUPPORTED: gdb.pascal/floats.exp: no pascal compiler found
UNTESTED: gdb.pascal/floats.exp: failed to compile
UNSUPPORTED: gdb.pascal/gdb11492.exp: no pascal compiler found
UNTESTED: gdb.pascal/gdb11492.exp: failed to compile
UNSUPPORTED: gdb.pascal/hello.exp: no pascal compiler found
UNSUPPORTED: gdb.pascal/integers.exp: no pascal compiler found
PASS: gdb.pascal/print.exp: set language pascal
PASS: gdb.pascal/print.exp: set language to "pascal"
PASS: gdb.pascal/print.exp: check fp + text
PASS: gdb.pascal/print.exp: p 1.
PASS: gdb.pascal/print.exp: p 1.5
PASS: gdb.pascal/print.exp: p 1.f
PASS: gdb.pascal/print.exp: p 1.5f
PASS: gdb.pascal/print.exp: p 1.l
PASS: gdb.pascal/print.exp: p 1.5l
XFAIL: gdb.pascal/print.exp: p 0x1.1
PASS: gdb.pascal/print.exp: reject p 1.1x
PASS: gdb.pascal/print.exp: reject p 1.1ff
PASS: gdb.pascal/print.exp: reject p 1.1ll
UNSUPPORTED: gdb.pascal/stub-method.exp: no pascal compiler found
PASS: gdb.pascal/types.exp: set language pascal
PASS: gdb.pascal/types.exp: set language to "pascal"
PASS: gdb.pascal/types.exp: pt 123
PASS: gdb.pascal/types.exp: pt TRUE
PASS: gdb.pascal/types.exp: pt FALSE
PASS: gdb.pascal/types.exp: pt 'a'
KFAIL: gdb.pascal/types.exp: pt 'a simple string' (PRMS: gdb/2326)
PASS: gdb.pascal/types.exp: pt .44
PASS: gdb.pascal/types.exp: pt 44.0
PASS: gdb.pascal/types.exp: pt 10e20
PASS: gdb.pascal/types.exp: pt 10E20
FAIL: gdb.python/lib-types.exp: can't run to main
FAIL: gdb.python/py-as-string.exp: couldn't run to main.
FAIL: gdb.python/py-bad-printers.exp: can't run to main
FAIL: gdb.python/py-block.exp: can't run to main
UNRESOLVED: gdb.python/py-breakpoint.exp: test_bkpt_basic: python print (gdb.breakpoints())
FAIL: gdb.python/py-breakpoint.exp: test_bkpt_basic: cannot run to main.
FAIL: gdb.python/py-breakpoint.exp: test_bkpt_deletion: cannot run to main.
FAIL: gdb.python/py-breakpoint.exp: test_bkpt_cond_and_cmds: cannot run to main.
FAIL: gdb.python/py-breakpoint.exp: test_bkpt_invisible: cannot run to main.
FAIL: gdb.python/py-breakpoint.exp: test_watchpoints: cannot run to main.
FAIL: gdb.python/py-breakpoint.exp: test_bkpt_internal: cannot run to main.
FAIL: gdb.python/py-breakpoint.exp: test_bkpt_eval_funcs: cannot run to main.
FAIL: gdb.python/py-breakpoint.exp: test_bkpt_temporary: cannot run to main.
PASS: gdb.python/py-breakpoint.exp: python gdb.Breakpoint("*main")
PASS: gdb.python/py-breakpoint.exp: int value of main
PASS: gdb.python/py-breakpoint.exp: python gdb.Breakpoint("  *{}".format(str(main_addr)))
PASS: gdb.python/py-breakpoint.exp: Check pending status of pending breakpoint
PASS: gdb.python/py-breakpoint.exp: Create event handler - python
PASS: gdb.python/py-breakpoint.exp: Create event handler - def note_event(arg):
PASS: gdb.python/py-breakpoint.exp: Create event handler -   global last_bp_event
PASS: gdb.python/py-breakpoint.exp: Create event handler -   last_bp_event = arg
PASS: gdb.python/py-breakpoint.exp: Create event handler - end
PASS: gdb.python/py-breakpoint.exp: python last_bp_event = None
PASS: gdb.python/py-breakpoint.exp: install breakpoint_created event listener
PASS: gdb.python/py-breakpoint.exp: install breakpoint_modified event listener
PASS: gdb.python/py-breakpoint.exp: install breakpoint_deleted event listener
PASS: gdb.python/py-breakpoint.exp: check for breakpoint_created event
PASS: gdb.python/py-breakpoint.exp: disable 1
PASS: gdb.python/py-breakpoint.exp: check for breakpoint_modified event
PASS: gdb.python/py-breakpoint.exp: delete 1
PASS: gdb.python/py-breakpoint.exp: check for breakpoint_deleted event
FAIL: gdb.python/py-cmd.exp: cannot run to main.
PASS: gdb.python/py-completion.exp: load python file
PASS: gdb.python/py-completion.exp: completefileinit completion
PASS: gdb.python/py-completion.exp: discard #1
PASS: gdb.python/py-completion.exp: completefilemethod completion
PASS: gdb.python/py-completion.exp: discard #2
PASS: gdb.python/py-completion.exp: completefilecommandcond completion
PASS: gdb.python/py-completion.exp: load python file again
PASS: gdb.python/py-completion.exp: list all completions of 'complete completel'
PASS: gdb.python/py-completion.exp: discard #3
PASS: gdb.python/py-completion.exp: list all completions of 'complete completelimit1 c'
PASS: gdb.python/py-completion.exp: discard #4
PASS: gdb.python/py-completion.exp: tab-complete 'completelimit1 c'
PASS: gdb.python/py-completion.exp: discard #5
PASS: gdb.python/py-completion.exp: list all completions of 'complete completelimit2 c'
XFAIL: gdb.python/py-error.exp: set host-charset IBM1047
UNTESTED: gdb.python/py-error.exp: main reached
UNTESTED: gdb.python/py-events.exp: failed to compile
PASS: gdb.python/py-evsignal.exp: successfully compiled posix threads test case
PASS: gdb.python/py-evsignal.exp: load python file
PASS: gdb.python/py-evsignal.exp: test-events
PASS: gdb.python/py-evsignal.exp: set non-stop on
UNSUPPORTED: gdb.python/py-evsignal.exp: non-stop mode is unsupported
UNSUPPORTED: gdb.python/py-evthreads.exp: displaced stepping
UNTESTED: gdb.python/py-finish-breakpoint.exp: failed to compile
FAIL: gdb.python/py-finish-breakpoint2.exp: cannot run to main.
FAIL: gdb.python/py-frame-inline.exp: can't run to function f
FAIL: gdb.python/py-frame.exp: can't run to main
PASS: gdb.python/py-framefilter-mi.exp: breakpoint at main
UNRESOLVED: gdb.python/py-framefilter-mi.exp: load python file
UNRESOLVED: gdb.python/py-framefilter-mi.exp: run to 46 (set breakpoint)
FAIL: gdb.python/py-framefilter-mi.exp: wait for stop (step to breakpoint)
FAIL: gdb.python/py-framefilter-mi.exp: stack-list-locals --all-values (unexpected output)
PASS: gdb.python/py-framefilter-mi.exp: enable frame filters
FAIL: gdb.python/py-framefilter-mi.exp: stack-list-locals --all-values frame filters enabled (unexpected output)
PASS: gdb.python/py-framefilter-mi.exp: run to 51 (set breakpoint)
FAIL: gdb.python/py-framefilter-mi.exp: wait for stop (step to breakpoint)
FAIL: gdb.python/py-framefilter-mi.exp: filtered stack listing (unexpected output)
FAIL: gdb.python/py-framefilter-mi.exp: filtered stack list 0 3 (unexpected output)
FAIL: gdb.python/py-framefilter-mi.exp: filtered stack list 22 24 (unexpected output)
FAIL: gdb.python/py-framefilter-mi.exp: stack-list-arguments 0 (unexpected output)
FAIL: gdb.python/py-framefilter-mi.exp: stack-list-arguments --no-frame-filters 0 (unexpected output)
FAIL: gdb.python/py-framefilter-mi.exp: stack-list-arguments 0 0 3 (unexpected output)
FAIL: gdb.python/py-framefilter-mi.exp: stack-list-arguments 0 22 27 (unexpected output)
FAIL: gdb.python/py-framefilter-mi.exp: stack-list-arguments 1 (unexpected output)
FAIL: gdb.python/py-framefilter-mi.exp: stack-list-arguments --no-frame-filters 1 (unexpected output)
FAIL: gdb.python/py-framefilter-mi.exp: stack-list-arguments 1 0 3 (unexpected output)
FAIL: gdb.python/py-framefilter-mi.exp: stack-list-arguments 1 22 27 (unexpected output)
FAIL: gdb.python/py-framefilter-mi.exp: stack-list-arguments 2 (unexpected output)
FAIL: gdb.python/py-framefilter-mi.exp: stack-list-arguments --no-frame-filters 2 (unexpected output)
FAIL: gdb.python/py-framefilter-mi.exp: stack-list-arguments 2 0 3 (unexpected output)
FAIL: gdb.python/py-framefilter-mi.exp: stack-list-arguments 2 22 27 (unexpected output)
FAIL: gdb.python/py-framefilter-mi.exp: stack-list-arguments --no-frame-filters 2 22 27 (unexpected output)
FAIL: gdb.python/py-framefilter-mi.exp: stack-list-locals --no-frame-filters 0 (unexpected output)
FAIL: gdb.python/py-framefilter-mi.exp: stack-list-locals --no-frame-filters 1 (unexpected output)
FAIL: gdb.python/py-framefilter-mi.exp: stack-list-locals --no-frame-filters 2 (unexpected output)
FAIL: gdb.python/py-framefilter-mi.exp: stack-list-locals --no-frame-filters --no-values (unexpected output)
FAIL: gdb.python/py-framefilter-mi.exp: stack-list-locals --no-frame-filters --all-values (unexpected output)
FAIL: gdb.python/py-framefilter-mi.exp: stack-list-locals --no-frame-filters --simple-values (unexpected output)
FAIL: gdb.python/py-framefilter-mi.exp: stack-list-locals 0 (unexpected output)
FAIL: gdb.python/py-framefilter-mi.exp: stack-list-locals 1 (unexpected output)
FAIL: gdb.python/py-framefilter-mi.exp: stack-list-locals 2 (unexpected output)
FAIL: gdb.python/py-framefilter-mi.exp: stack-list-variables --no-frame-filters 0 (unexpected output)
FAIL: gdb.python/py-framefilter-mi.exp: stack-list-variables 0 (unexpected output)
UNTESTED: gdb.python/py-framefilter.exp: py-framefilter.exp
PASS: gdb.python/py-function.exp: input convenience function - python
PASS: gdb.python/py-function.exp: input convenience function - class test_func (gdb.Function):
PASS: gdb.python/py-function.exp: input convenience function -   def __init__ (self):
PASS: gdb.python/py-function.exp: input convenience function -     super (test_func, self).__init__ ("test_func")
PASS: gdb.python/py-function.exp: input convenience function -   def invoke (self, arg):
PASS: gdb.python/py-function.exp: input convenience function -     return "test_func output, arg = %s" % arg.string ()
PASS: gdb.python/py-function.exp: input convenience function - test_func ()
PASS: gdb.python/py-function.exp: input convenience function - end
PASS: gdb.python/py-function.exp: call function
PASS: gdb.python/py-function.exp: input value-returning convenience function - python
PASS: gdb.python/py-function.exp: input value-returning convenience function - class Double (gdb.Function):
PASS: gdb.python/py-function.exp: input value-returning convenience function -   def __init__ (self):
PASS: gdb.python/py-function.exp: input value-returning convenience function -     super (Double, self).__init__ ("double")
PASS: gdb.python/py-function.exp: input value-returning convenience function -   def invoke (self, n):
PASS: gdb.python/py-function.exp: input value-returning convenience function -     return n*2
PASS: gdb.python/py-function.exp: input value-returning convenience function - Double ()
PASS: gdb.python/py-function.exp: input value-returning convenience function - end
PASS: gdb.python/py-function.exp: call value-returning function
PASS: gdb.python/py-function.exp: input int-returning function - python
PASS: gdb.python/py-function.exp: input int-returning function - class Yes(gdb.Function):
PASS: gdb.python/py-function.exp: input int-returning function -     def __init__(self):
PASS: gdb.python/py-function.exp: input int-returning function -         gdb.Function.__init__(self, 'yes')
PASS: gdb.python/py-function.exp: input int-returning function -     def invoke(self):
PASS: gdb.python/py-function.exp: input int-returning function -         return 1
PASS: gdb.python/py-function.exp: input int-returning function - Yes ()
PASS: gdb.python/py-function.exp: input int-returning function - end
PASS: gdb.python/py-function.exp: call yes with &&
PASS: gdb.python/py-function.exp: call yes with ||
PASS: gdb.python/py-function.exp: Test GDBError - python
PASS: gdb.python/py-function.exp: Test GDBError - class GDBError(gdb.Function):
PASS: gdb.python/py-function.exp: Test GDBError -     def __init__(self):
PASS: gdb.python/py-function.exp: Test GDBError -         gdb.Function.__init__(self, 'gdberror')
PASS: gdb.python/py-function.exp: Test GDBError -     def invoke(self):
PASS: gdb.python/py-function.exp: Test GDBError -         raise gdb.GdbError("This is a GdbError")
PASS: gdb.python/py-function.exp: Test GDBError - GDBError ()
PASS: gdb.python/py-function.exp: Test GDBError - end
PASS: gdb.python/py-function.exp: Test GdbError.  There should not be a stack trace
PASS: gdb.python/py-function.exp: Test Normal Error - python
PASS: gdb.python/py-function.exp: Test Normal Error - class NormalError(gdb.Function):
PASS: gdb.python/py-function.exp: Test Normal Error -     def __init__(self):
PASS: gdb.python/py-function.exp: Test Normal Error -         gdb.Function.__init__(self, 'normalerror')
PASS: gdb.python/py-function.exp: Test Normal Error -     def invoke(self):
PASS: gdb.python/py-function.exp: Test Normal Error -         raise RuntimeError("This is a Normal Error")
PASS: gdb.python/py-function.exp: Test Normal Error - NormalError ()
PASS: gdb.python/py-function.exp: Test Normal Error - end
PASS: gdb.python/py-function.exp: set python print-stack full
PASS: gdb.python/py-function.exp: Test a Runtime error.  There should be a stack trace.
PASS: gdb.python/py-function.exp: input command-calling function - python
PASS: gdb.python/py-function.exp: input command-calling function - class CallCommand(gdb.Function):
PASS: gdb.python/py-function.exp: input command-calling function -     def __init__(self):
PASS: gdb.python/py-function.exp: input command-calling function -         gdb.Function.__init__(self, 'call_command')
PASS: gdb.python/py-function.exp: input command-calling function -     def invoke(self):
PASS: gdb.python/py-function.exp: input command-calling function -         return gdb.execute('print 1', to_string=True)
PASS: gdb.python/py-function.exp: input command-calling function - CallCommand ()
PASS: gdb.python/py-function.exp: input command-calling function - end
PASS: gdb.python/py-function.exp: setting a value from a function which executes a command.
PASS: gdb.python/py-function.exp: setting a value from a function which executes a command, again.
PASS: gdb.python/py-inferior.exp: successfully compiled posix threads test case
FAIL: gdb.python/py-inferior.exp: can't run to main
FAIL: gdb.python/py-infthread.exp: can't run to main
PASS: gdb.python/py-lookup-type.exp: set language ada
PASS: gdb.python/py-lookup-type.exp: lookup type character using language ada
PASS: gdb.python/py-lookup-type.exp: set language c
PASS: gdb.python/py-lookup-type.exp: lookup type char using language c
PASS: gdb.python/py-lookup-type.exp: set language d
PASS: gdb.python/py-lookup-type.exp: lookup type ucent using language d
PASS: gdb.python/py-lookup-type.exp: set language fortran
PASS: gdb.python/py-lookup-type.exp: lookup type character using language fortran
PASS: gdb.python/py-lookup-type.exp: set language go
PASS: gdb.python/py-lookup-type.exp: lookup type int32 using language go
PASS: gdb.python/py-lookup-type.exp: set language modula-2
PASS: gdb.python/py-lookup-type.exp: lookup type CARDINAL using language modula-2
PASS: gdb.python/py-lookup-type.exp: set language opencl
PASS: gdb.python/py-lookup-type.exp: lookup type ushort using language opencl
PASS: gdb.python/py-lookup-type.exp: set language objective-c
PASS: gdb.python/py-lookup-type.exp: lookup type char using language objective-c
PASS: gdb.python/py-lookup-type.exp: set language opencl
PASS: gdb.python/py-lookup-type.exp: lookup type ushort using language opencl
PASS: gdb.python/py-lookup-type.exp: set language pascal
PASS: gdb.python/py-lookup-type.exp: lookup type char using language pascal
PASS: gdb.python/py-mi-events.exp: set safe-path
PASS: gdb.python/py-mi-events.exp: file-exec-and-symbols operation
PASS: gdb.python/py-mi-events.exp: breakpoint at main
UNRESOLVED: gdb.python/py-mi-events.exp: register events
UNRESOLVED: gdb.python/py-mi-events.exp: set the breakpoint
FAIL: gdb.python/py-mi-events.exp: continue (unknown output after running)
FAIL: gdb.python/py-mi-events.exp: python stop handler ran (unexpected output)
FAIL: gdb.python/py-mi-events.exp: python continue handler ran (unexpected output)
PASS: gdb.python/py-mi-objfile.exp: set safe-path
PASS: gdb.python/py-mi-objfile.exp: file-exec-and-symbols operation
PASS: gdb.python/py-mi.exp: breakpoint at main
UNRESOLVED: gdb.python/py-mi.exp:
UNRESOLVED: gdb.python/py-mi.exp: run to 335 (set breakpoint)
FAIL: gdb.python/py-mi.exp: wait for stop (step to breakpoint)
FAIL: gdb.python/py-mi.exp: create container varobj, no pretty-printing (unexpected output)
FAIL: gdb.python/py-mi.exp: examine container children=0, no pretty-printing (unexpected output)
FAIL: gdb.python/py-mi.exp: delete varobj (unexpected output)
FAIL: gdb.python/py-mi.exp: create nscont varobj, no pretty-printing (unexpected output)
FAIL: gdb.python/py-mi.exp: examine nscont children=0, no pretty-printing (unexpected output)
FAIL: gdb.python/py-mi.exp: delete varobj (unexpected output)
PASS: gdb.python/py-mi.exp: create string_1 varobj
FAIL: gdb.python/py-mi.exp: create estring varobj (unexpected output)
PASS: gdb.python/py-mi.exp: assign string_1 from string_2
FAIL: gdb.python/py-mi.exp: update string varobj after assignment (unexpected output)
FAIL: gdb.python/py-mi.exp: create container varobj (unexpected output)
FAIL: gdb.python/py-mi.exp: examine container children=0 (unexpected output)
FAIL: gdb.python/py-mi.exp: next over update 1 (MI error)
FAIL: gdb.python/py-mi.exp: next over update 1 (timeout)
FAIL: gdb.python/py-mi.exp: varobj update 1 (unexpected output)
FAIL: gdb.python/py-mi.exp: next over update 2 (MI error)
FAIL: gdb.python/py-mi.exp: next over update 2 (timeout)
FAIL: gdb.python/py-mi.exp: varobj update 2 (unexpected output)
FAIL: gdb.python/py-mi.exp: clear visualizer (unexpected output)
FAIL: gdb.python/py-mi.exp: varobj update after clearing (unexpected output)
FAIL: gdb.python/py-mi.exp: choose default visualizer (unexpected output)
FAIL: gdb.python/py-mi.exp: varobj update after choosing default (unexpected output)
FAIL: gdb.python/py-mi.exp: choose visualizer using expression (unexpected output)
FAIL: gdb.python/py-mi.exp: varobj update after choosing via expression (unexpected output)
FAIL: gdb.python/py-mi.exp: list varobj children after selecting child range (unexpected output)
FAIL: gdb.python/py-mi.exp: list varobj children after resetting child range (unexpected output)
FAIL: gdb.python/py-mi.exp: next over update 3 (MI error)
FAIL: gdb.python/py-mi.exp: next over update 3 (timeout)
FAIL: gdb.python/py-mi.exp: set update range (unexpected output)
FAIL: gdb.python/py-mi.exp: list children after setting update range (unexpected output)
FAIL: gdb.python/py-mi.exp: list selected children after setting range (unexpected output)
FAIL: gdb.python/py-mi.exp: list children after listing selected range (unexpected output)
FAIL: gdb.python/py-mi.exp: next over update 4 (MI error)
FAIL: gdb.python/py-mi.exp: next over update 4 (timeout)
FAIL: gdb.python/py-mi.exp: update after next with restricted range (unexpected output)
FAIL: gdb.python/py-mi.exp: set update range with non-zero start (unexpected output)
FAIL: gdb.python/py-mi.exp: update varobj with change outside selected range (unexpected output)
FAIL: gdb.python/py-mi.exp: next over update 5 (MI error)
FAIL: gdb.python/py-mi.exp: next over update 5 (timeout)
FAIL: gdb.python/py-mi.exp: create second container varobj (unexpected output)
FAIL: gdb.python/py-mi.exp: update varobj, no children requested (unexpected output)
FAIL: gdb.python/py-mi.exp: next over update 6 (MI error)
FAIL: gdb.python/py-mi.exp: next over update 6 (timeout)
FAIL: gdb.python/py-mi.exp: update varobj 2, no children requested (unexpected output)
PASS: gdb.python/py-mi.exp: run to 133 (set breakpoint)
FAIL: gdb.python/py-mi.exp: wait for stop (step to outer breakpoint)
FAIL: gdb.python/py-mi.exp: create outer varobj (unexpected output)
FAIL: gdb.python/py-mi.exp: list children of outer (unexpected output)
FAIL: gdb.python/py-mi.exp: list children of outer.s (unexpected output)
FAIL: gdb.python/py-mi.exp: next over outer update (MI error)
FAIL: gdb.python/py-mi.exp: next over outer update (timeout)
FAIL: gdb.python/py-mi.exp: update after updating element of outer (unexpected output)
PASS: gdb.python/py-mi.exp: run to 224 (set breakpoint)
FAIL: gdb.python/py-mi.exp: wait for stop (step to second breakpoint)
FAIL: gdb.python/py-mi.exp: update after type change (unexpected output)
PASS: gdb.python/py-mi.exp: run to 358 (set breakpoint)
FAIL: gdb.python/py-mi.exp: wait for stop (step to outer breakpoint)
FAIL: gdb.python/py-mi.exp: create nstype varobj (unexpected output)
FAIL: gdb.python/py-mi.exp: list children after setting update range (unexpected output)
FAIL: gdb.python/py-mi.exp: clear visualizer (unexpected output)
FAIL: gdb.python/py-mi.exp: varobj update after clearing (unexpected output)
FAIL: gdb.python/py-mi.exp: choose default visualizer (unexpected output)
FAIL: gdb.python/py-mi.exp: create nstype2 varobj (unexpected output)
FAIL: gdb.python/py-mi.exp: list children after setting exception flag (unexpected output)
FAIL: gdb.python/py-mi.exp: create me varobj (unexpected output)
FAIL: gdb.python/py-mi.exp: evaluate me varobj (unexpected output)
FAIL: gdb.python/py-mi.exp: printer whose children are returned as a list (unexpected output)
PASS: gdb.python/py-mi.exp: run to 256 (set breakpoint)
FAIL: gdb.python/py-mi.exp: wait for stop (step to breakpoint for bug 14741)
FAIL: gdb.python/py-mi.exp: create varobj for c (unexpected output)
FAIL: gdb.python/py-mi.exp: choose array visualizer for c (unexpected output)
FAIL: gdb.python/py-mi.exp: list children of c (unexpected output)
FAIL: gdb.python/py-mi.exp: next over change of array element (MI error)
FAIL: gdb.python/py-mi.exp: next over change of array element (timeout)
FAIL: gdb.python/py-mi.exp: update varobj after element change (unexpected output)
PASS: gdb.python/py-mi.exp: breakpoint at main
UNRESOLVED: gdb.python/py-mi.exp: run to 358 (set breakpoint)
FAIL: gdb.python/py-mi.exp: run to 358 (exec-continue)
FAIL: gdb.python/py-mi.exp: wait for stop (step to breakpoint)
UNRESOLVED: gdb.python/py-mi.exp: create fake varobj
UNRESOLVED: gdb.python/py-mi.exp: list children of fake
UNRESOLVED: gdb.python/py-mi.exp: list children fake.private
FAIL: gdb.python/py-mi.exp: Install visualizer on a cplus_fake_child (unexpected output)
PASS: gdb.python/py-objfile-script.exp: set auto-load safe-path
PASS: gdb.python/py-objfile-script.exp: info auto-load python-scripts
UNRESOLVED: gdb.python/py-objfile.exp: can't run to main
PASS: gdb.python/py-parameter.exp: python print (gdb.parameter ('directories'))
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - python
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - class TestParam (gdb.Parameter):
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -    """When enabled, test param does something useful. When disabled, does nothing."""
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -    show_doc = "Show the state of the boolean test-param"
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -    set_doc = "Set the state of the boolean test-param"
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -    def get_show_string (self, pvalue):
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       return "The state of the Test Parameter is " + pvalue
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -    def get_set_string (self):
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       val = "on"
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       if (self.value == False):
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -          val = "off"
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       return "Test Parameter has been set to " + val
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -    def __init__ (self, name):
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       super (TestParam, self).__init__ (name, gdb.COMMAND_DATA, gdb.PARAM_BOOLEAN)
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       self.value = True
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - test_param = TestParam ('print test-param')
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - end
PASS: gdb.python/py-parameter.exp: test parameter value
PASS: gdb.python/py-parameter.exp: show parameter on
PASS: gdb.python/py-parameter.exp: turn off parameter
PASS: gdb.python/py-parameter.exp: show parameter off
PASS: gdb.python/py-parameter.exp: test parameter value
PASS: gdb.python/py-parameter.exp: test show help
PASS: gdb.python/py-parameter.exp: test set help
PASS: gdb.python/py-parameter.exp: test general help
PASS: gdb.python/py-parameter.exp: enum gdb parameter - python
PASS: gdb.python/py-parameter.exp: enum gdb parameter - class TestEnumParam (gdb.Parameter):
PASS: gdb.python/py-parameter.exp: enum gdb parameter -    """When set, test param does something useful. When disabled, does nothing."""
PASS: gdb.python/py-parameter.exp: enum gdb parameter -    show_doc = "Show the state of the enum"
PASS: gdb.python/py-parameter.exp: enum gdb parameter -    set_doc = "Set the state of the enum"
PASS: gdb.python/py-parameter.exp: enum gdb parameter -    def get_show_string (self, pvalue):
PASS: gdb.python/py-parameter.exp: enum gdb parameter -       return "The state of the enum is " + pvalue
PASS: gdb.python/py-parameter.exp: enum gdb parameter -    def get_set_string (self):
PASS: gdb.python/py-parameter.exp: enum gdb parameter -       return "The state of the enum has been set to " + self.value
PASS: gdb.python/py-parameter.exp: enum gdb parameter -    def __init__ (self, name):
PASS: gdb.python/py-parameter.exp: enum gdb parameter -       super (TestEnumParam, self).__init__ (name, gdb.COMMAND_DATA, gdb.PARAM_ENUM, ["one", "two"])
PASS: gdb.python/py-parameter.exp: enum gdb parameter -       self.value = "one"
PASS: gdb.python/py-parameter.exp: enum gdb parameter - test_enum_param = TestEnumParam ('print test-enum-param')
PASS: gdb.python/py-parameter.exp: enum gdb parameter - end
PASS: gdb.python/py-parameter.exp: test enum parameter value
PASS: gdb.python/py-parameter.exp: show parameter is initial value
PASS: gdb.python/py-parameter.exp: set enum to two
PASS: gdb.python/py-parameter.exp: show parameter is new value
PASS: gdb.python/py-parameter.exp: test enum parameter value
PASS: gdb.python/py-parameter.exp: set invalid enum parameter
PASS: gdb.python/py-parameter.exp: file gdb parameter - python
PASS: gdb.python/py-parameter.exp: file gdb parameter - class TestFileParam (gdb.Parameter):
PASS: gdb.python/py-parameter.exp: file gdb parameter -    """When set, test param does something useful. When disabled, does nothing."""
PASS: gdb.python/py-parameter.exp: file gdb parameter -    show_doc = "Show the name of the file"
PASS: gdb.python/py-parameter.exp: file gdb parameter -    set_doc = "Set the name of the file"
PASS: gdb.python/py-parameter.exp: file gdb parameter -    def get_show_string (self, pvalue):
PASS: gdb.python/py-parameter.exp: file gdb parameter -       return "The name of the file is " + pvalue
PASS: gdb.python/py-parameter.exp: file gdb parameter -    def get_set_string (self):
PASS: gdb.python/py-parameter.exp: file gdb parameter -       return "The name of the file has been changed to " + self.value
PASS: gdb.python/py-parameter.exp: file gdb parameter -    def __init__ (self, name):
PASS: gdb.python/py-parameter.exp: file gdb parameter -       super (TestFileParam, self).__init__ (name, gdb.COMMAND_FILES, gdb.PARAM_FILENAME)
PASS: gdb.python/py-parameter.exp: file gdb parameter -       self.value = "foo.txt"
PASS: gdb.python/py-parameter.exp: file gdb parameter - test_file_param = TestFileParam ('test-file-param')
PASS: gdb.python/py-parameter.exp: file gdb parameter - end
PASS: gdb.python/py-parameter.exp: test file parameter value
PASS: gdb.python/py-parameter.exp: show initial file value
PASS: gdb.python/py-parameter.exp: set new file parameter
PASS: gdb.python/py-parameter.exp: show new file value
PASS: gdb.python/py-parameter.exp: test new file parameter value
PASS: gdb.python/py-parameter.exp: set test-file-param
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - python
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - class TestUndocParam (gdb.Parameter):
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -    def get_show_string (self, pvalue):
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       return "The state of the Test Parameter is " + pvalue
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -    def get_set_string (self):
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       val = "on"
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       if (self.value == False):
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -          val = "off"
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       return "Test Parameter has been set to " + val
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -    def __init__ (self, name):
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       super (TestUndocParam, self).__init__ (name, gdb.COMMAND_DATA, gdb.PARAM_BOOLEAN)
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       self.value = True
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - test_undoc_param = TestUndocParam ('print test-undoc-param')
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - end
PASS: gdb.python/py-parameter.exp: show parameter on
PASS: gdb.python/py-parameter.exp: turn off parameter
PASS: gdb.python/py-parameter.exp: show parameter off
PASS: gdb.python/py-parameter.exp: test parameter value
PASS: gdb.python/py-parameter.exp: test show help
PASS: gdb.python/py-parameter.exp: test set help
PASS: gdb.python/py-parameter.exp: test general help
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - python
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - class TestNodocParam (gdb.Parameter):
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -    def __init__ (self, name):
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       super (TestNodocParam, self).__init__ (name, gdb.COMMAND_DATA, gdb.PARAM_BOOLEAN)
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       self.value = True
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - test_nodoc_param = TestNodocParam ('print test-nodoc-param')
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - end
PASS: gdb.python/py-parameter.exp: show parameter on
PASS: gdb.python/py-parameter.exp: turn off parameter
PASS: gdb.python/py-parameter.exp: show parameter off
PASS: gdb.python/py-parameter.exp: test parameter value
PASS: gdb.python/py-parameter.exp: test show help
PASS: gdb.python/py-parameter.exp: test set help
PASS: gdb.python/py-parameter.exp: test general help
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - python
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - class TestParam (gdb.Parameter):
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -    """When enabled, test param does something useful. When disabled, does nothing."""
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -    show_doc = "State of the Test Parameter"
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -    set_doc = "Set the state of the Test Parameter"
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -    def __init__ (self, name):
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       super (TestParam, self).__init__ (name, gdb.COMMAND_DATA, gdb.PARAM_BOOLEAN)
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       self.value = True
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - test_param = TestParam ('print test-param')
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - end
PASS: gdb.python/py-parameter.exp: test parameter value
PASS: gdb.python/py-parameter.exp: show parameter on
PASS: gdb.python/py-parameter.exp: turn off parameter
PASS: gdb.python/py-parameter.exp: show parameter off
PASS: gdb.python/py-parameter.exp: test parameter value
PASS: gdb.python/py-parameter.exp: test show help
PASS: gdb.python/py-parameter.exp: test set help
PASS: gdb.python/py-parameter.exp: test general help
FAIL: gdb.python/py-pp-maint.exp: can't run to main
FAIL: gdb.python/py-pp-registration.exp: can't run to main
UNRESOLVED: gdb.python/py-progspace.exp: current progspace filename (None)
PASS: gdb.python/py-progspace.exp: python print (gdb.progspaces())
PASS: gdb.python/py-progspace.exp: python dir(gdb.current_progspace())
PASS: gdb.python/py-progspace.exp: Get current progspace
PASS: gdb.python/py-progspace.exp: current progspace filename (py-progspace)
PASS: gdb.python/py-progspace.exp: Set random attribute in progspace
PASS: gdb.python/py-progspace.exp: Verify set of random attribute in progspace
PASS: gdb.python/py-prompt.exp: GDB initializing first prompt
PASS: gdb.python/py-prompt.exp: show prompt gets the correct result
PASS: gdb.python/py-prompt.exp: retrieving the prompt causes no extra prompt_hook calls
PASS: gdb.python/py-prompt.exp: prompt_hook argument is default prompt.
PASS: gdb.python/py-prompt.exp: GDB initializing first prompt
PASS: gdb.python/py-prompt.exp: show prompt gets the correct result 2
PASS: gdb.python/py-prompt.exp: retrieving the prompt causes no extra prompt_hook calls 2
PASS: gdb.python/py-prompt.exp: prompt_hook argument is default prompt. 2
PASS: gdb.python/py-prompt.exp: GDB initializing first prompt
PASS: gdb.python/py-prompt.exp: show prompt gets the correct result 3
PASS: gdb.python/py-prompt.exp: retrieving the prompt causes no extra prompt_hook calls 3
PASS: gdb.python/py-prompt.exp: prompt_hook argument is default prompt. 3
PASS: gdb.python/py-prompt.exp: GDB initializing first prompt
PASS: gdb.python/py-prompt.exp: show prompt gets the correct result 4
PASS: gdb.python/py-prompt.exp: retrieving the prompt causes no extra prompt_hook calls 4
PASS: gdb.python/py-prompt.exp: prompt_hook argument is default prompt. 4
UNTESTED: gdb.python/py-record-btrace-threads.exp: skipping btrace tests
UNTESTED: gdb.python/py-record-btrace.exp: skipping btrace tests
UNTESTED: gdb.python/py-record-full.exp: skipping recording tests
PASS: gdb.python/py-recurse-unwind.exp: import python scripts
FAIL: gdb.python/py-recurse-unwind.exp: can't run to main
UNTESTED: gdb.python/py-rvalue-ref-value-cc.exp: couldn't run to main
UNTESTED: gdb.python/py-shared.exp: failed to compile
PASS: gdb.python/py-symbol.exp: Lookup main
PASS: gdb.python/py-symbol.exp: test main_func.is_function
PASS: gdb.python/py-symbol.exp: test lookup_global_symbol("junk")
PASS: gdb.python/py-symbol.exp: print value of main
PASS: gdb.python/py-symbol.exp: print line number of qq
PASS: gdb.python/py-symbol.exp: print value of qq
PASS: gdb.python/py-symbol.exp: print whether qq needs a frame
FAIL: gdb.python/py-symbol.exp: can't run to main
FAIL: gdb.python/py-symtab.exp: can't run to main
PASS: gdb.python/py-sync-interp.exp: attach and where
UNRESOLVED: gdb.python/py-type.exp: python print(gdb.lookup_type('char').array(1, 0))
PASS: gdb.python/py-type.exp: python print(gdb.lookup_type('char').array(1, -1))
PASS: gdb.python/py-type.exp: python print(gdb.lookup_type('int').optimized_out())
FAIL: gdb.python/py-type.exp: lang_c: continue to breakpoint: break to inspect struct and array.
PASS: gdb.python/py-type.exp: lang_c: test_fields: c typedef field list
PASS: gdb.python/py-type.exp: lang_c: test_fields: print value (st)
FAIL: gdb.python/py-type.exp: lang_c: test_fields: get value (st) from history
FAIL: gdb.python/py-type.exp: lang_c: test_fields: get fields from st.type
FAIL: gdb.python/py-type.exp: lang_c: test_fields: check number of fields (st)
FAIL: gdb.python/py-type.exp: lang_c: test_fields: check structure field a name
FAIL: gdb.python/py-type.exp: lang_c: test_fields: check structure field b name
FAIL: gdb.python/py-type.exp: lang_c: test_fields: init ss
FAIL: gdb.python/py-type.exp: lang_c: test_fields: get fields from ss.type
FAIL: gdb.python/py-type.exp: lang_c: test_fields: check length of ss_fields
FAIL: gdb.python/py-type.exp: lang_c: test_fields: Check ss_fields[0].name
FAIL: gdb.python/py-type.exp: lang_c: test_fields: Check ss_fields[1].name
FAIL: gdb.python/py-type.exp: lang_c: test_fields: Check that dir includes name
FAIL: gdb.python/py-type.exp: lang_c: test_fields: check number of fields (st.type)
FAIL: gdb.python/py-type.exp: lang_c: test_fields: check fields lookup by name
FAIL: gdb.python/py-type.exp: lang_c: test_fields: Check fields iteration over values
FAIL: gdb.python/py-type.exp: lang_c: test_fields: Check fields items list
FAIL: gdb.python/py-type.exp: lang_c: test_fields: check field name exists test
FAIL: gdb.python/py-type.exp: lang_c: test_fields: check field name nonexists test
FAIL: gdb.python/py-type.exp: lang_c: test_fields: check conversion to bool
FAIL: gdb.python/py-type.exp: lang_c: test_fields: python print (len (st.type['a'].type))
FAIL: gdb.python/py-type.exp: lang_c: test_fields: python print (st.type['a'].type.has_key ('x'))
FAIL: gdb.python/py-type.exp: lang_c: test_fields: python print (st.type['a'].type['x'])
FAIL: gdb.python/py-type.exp: lang_c: test_fields: python print (st.type['a'].type.keys ())
FAIL: gdb.python/py-type.exp: lang_c: test_fields: python print (not not st.type['a'].type)
PASS: gdb.python/py-type.exp: lang_c: test_fields: print value (ar)
FAIL: gdb.python/py-type.exp: lang_c: test_fields: get value (ar) from history
PASS: gdb.python/py-type.exp: lang_c: test_fields: python fields = ar.type.fields()
FAIL: gdb.python/py-type.exp: lang_c: test_fields: check the number of fields
FAIL: gdb.python/py-type.exp: lang_c: test_fields: check array field type
FAIL: gdb.python/py-type.exp: lang_c: test_fields: cast to array with one argument
FAIL: gdb.python/py-type.exp: lang_c: test_fields: cast to array with two arguments
FAIL: gdb.python/py-type.exp: lang_c: test_fields: python print (ar[0].type == ar[0].type)
PASS: gdb.python/py-type.exp: lang_c: test_fields: print value (vec_data_1)
FAIL: gdb.python/py-type.exp: lang_c: test_fields: get value (vec_data_1) from history
PASS: gdb.python/py-type.exp: lang_c: test_fields: print value (vec_data_2)
FAIL: gdb.python/py-type.exp: lang_c: test_fields: get value (vec_data_2) from history
FAIL: gdb.python/py-type.exp: lang_c: test_fields: set vec1
FAIL: gdb.python/py-type.exp: lang_c: test_fields: cast to vector with one argument
FAIL: gdb.python/py-type.exp: lang_c: test_fields: set vec2
FAIL: gdb.python/py-type.exp: lang_c: test_fields: cast to vector with two arguments
FAIL: gdb.python/py-type.exp: lang_c: test_fields: python print (vec1 == vec2)
FAIL: gdb.python/py-type.exp: lang_c: test_fields: set vec3
FAIL: gdb.python/py-type.exp: lang_c: test_fields: python print (vec1 == vec3)
PASS: gdb.python/py-type.exp: lang_c: test_fields: python print (len (gdb.parse_and_eval ('a_function').type.fields ()))
PASS: gdb.python/py-type.exp: lang_c: test_fields: python print (gdb.parse_and_eval ('a_function').type.fields ()[0].type)
PASS: gdb.python/py-type.exp: lang_c: test_fields: python print (gdb.parse_and_eval ('a_function').type.fields ()[1].type)
PASS: gdb.python/py-type.exp: lang_c: test_enum: print value (e)
FAIL: gdb.python/py-type.exp: lang_c: test_enum: get value (e) from history
FAIL: gdb.python/py-type.exp: lang_c: test_enum: extract type fields from e
FAIL: gdb.python/py-type.exp: lang_c: test_enum: check the number of enum fields
FAIL: gdb.python/py-type.exp: lang_c: test_enum: check enum field[0] name
FAIL: gdb.python/py-type.exp: lang_c: test_enum: check enum field[1]name
FAIL: gdb.python/py-type.exp: lang_c: test_enum: check the number of type fields
FAIL: gdb.python/py-type.exp: lang_c: test_enum: check enum field lookup by name (v1)
FAIL: gdb.python/py-type.exp: lang_c: test_enum: check enum field lookup by name (v3)
FAIL: gdb.python/py-type.exp: lang_c: test_enum: Check num fields iteration over values
FAIL: gdb.python/py-type.exp: lang_c: test_enum: Check enum fields items list
UNRESOLVED: gdb.python/py-type.exp: lang_cpp: continue to breakpoint: break to inspect struct and array.
PASS: gdb.python/py-type.exp: lang_cpp: test_fields: c++ typedef field list
PASS: gdb.python/py-type.exp: lang_cpp: test_fields: print value (c)
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: get value (c) from history
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: get fields from c.type
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: check number of fields (c)
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: check class field c name
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: check class field d name
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: python print (c.type == gdb.parse_and_eval('d').type)
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: python print (c.type == gdb.parse_and_eval('d').type.fields()[0].type)
PASS: gdb.python/py-type.exp: lang_cpp: test_fields: python print (len (gdb.parse_and_eval ('C::a_method').type.fields ()))
PASS: gdb.python/py-type.exp: lang_cpp: test_fields: python print (gdb.parse_and_eval ('C::a_method').type.fields ()[0].type)
PASS: gdb.python/py-type.exp: lang_cpp: test_fields: python print (gdb.parse_and_eval ('C::a_method').type.fields ()[1].type)
PASS: gdb.python/py-type.exp: lang_cpp: test_fields: python print (gdb.parse_and_eval ('C::a_method').type.fields ()[2].type)
PASS: gdb.python/py-type.exp: lang_cpp: test_fields: python print (len (gdb.parse_and_eval ('C::a_const_method').type.fields ()))
PASS: gdb.python/py-type.exp: lang_cpp: test_fields: python print (gdb.parse_and_eval ('C::a_const_method').type.fields ()[0].type)
PASS: gdb.python/py-type.exp: lang_cpp: test_fields: python print (gdb.parse_and_eval ('C::a_const_method').type.fields ()[1].type)
PASS: gdb.python/py-type.exp: lang_cpp: test_fields: python print (gdb.parse_and_eval ('C::a_const_method').type.fields ()[2].type)
PASS: gdb.python/py-type.exp: lang_cpp: test_fields: python print (len (gdb.parse_and_eval ('C::a_static_method').type.fields ()))
PASS: gdb.python/py-type.exp: lang_cpp: test_fields: python print (gdb.parse_and_eval ('C::a_static_method').type.fields ()[0].type)
PASS: gdb.python/py-type.exp: lang_cpp: test_fields: python print (gdb.parse_and_eval ('C::a_static_method').type.fields ()[1].type)
PASS: gdb.python/py-type.exp: lang_cpp: test_fields: print value (st)
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: get value (st) from history
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: get fields from st.type
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: check number of fields (st)
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: check structure field a name
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: check structure field b name
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: init ss
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: get fields from ss.type
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: check length of ss_fields
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: Check ss_fields[0].name
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: Check ss_fields[1].name
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: Check that dir includes name
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: check number of fields (st.type)
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: check fields lookup by name
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: Check fields iteration over values
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: Check fields items list
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: check field name exists test
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: check field name nonexists test
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: check conversion to bool
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: python print (len (st.type['a'].type))
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: python print (st.type['a'].type.has_key ('x'))
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: python print (st.type['a'].type['x'])
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: python print (st.type['a'].type.keys ())
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: python print (not not st.type['a'].type)
PASS: gdb.python/py-type.exp: lang_cpp: test_fields: print value (ar)
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: get value (ar) from history
PASS: gdb.python/py-type.exp: lang_cpp: test_fields: python fields = ar.type.fields()
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: check the number of fields
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: check array field type
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: cast to array with one argument
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: cast to array with two arguments
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: python print (ar[0].type == ar[0].type)
PASS: gdb.python/py-type.exp: lang_cpp: test_fields: print value (vec_data_1)
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: get value (vec_data_1) from history
PASS: gdb.python/py-type.exp: lang_cpp: test_fields: print value (vec_data_2)
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: get value (vec_data_2) from history
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: set vec1
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: cast to vector with one argument
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: set vec2
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: cast to vector with two arguments
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: python print (vec1 == vec2)
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: set vec3
FAIL: gdb.python/py-type.exp: lang_cpp: test_fields: python print (vec1 == vec3)
PASS: gdb.python/py-type.exp: lang_cpp: test_fields: python print (len (gdb.parse_and_eval ('a_function').type.fields ()))
PASS: gdb.python/py-type.exp: lang_cpp: test_fields: python print (gdb.parse_and_eval ('a_function').type.fields ()[0].type)
PASS: gdb.python/py-type.exp: lang_cpp: test_fields: python print (gdb.parse_and_eval ('a_function').type.fields ()[1].type)
PASS: gdb.python/py-type.exp: lang_cpp: test_base_class: print value (d)
FAIL: gdb.python/py-type.exp: lang_cpp: test_base_class: get value (d) from history
FAIL: gdb.python/py-type.exp: lang_cpp: test_base_class: extract type fields from d
FAIL: gdb.python/py-type.exp: lang_cpp: test_base_class: check the number of fields
FAIL: gdb.python/py-type.exp: lang_cpp: test_base_class: check base class (fields[0])
FAIL: gdb.python/py-type.exp: lang_cpp: test_base_class: check base class (fields[1])
PASS: gdb.python/py-type.exp: lang_cpp: test_range: on ranged value: print value (ar)
FAIL: gdb.python/py-type.exp: lang_cpp: test_range: on ranged value: get value (ar) from history
FAIL: gdb.python/py-type.exp: lang_cpp: test_range: on ranged value: check correct tuple length
FAIL: gdb.python/py-type.exp: lang_cpp: test_range: on ranged value: check range low bound
FAIL: gdb.python/py-type.exp: lang_cpp: test_range: on ranged value: check range high bound
PASS: gdb.python/py-type.exp: lang_cpp: test_range: on ranged type: print value (ar)
FAIL: gdb.python/py-type.exp: lang_cpp: test_range: on ranged type: get value (ar) from history
FAIL: gdb.python/py-type.exp: lang_cpp: test_range: on ranged type: get fields
FAIL: gdb.python/py-type.exp: lang_cpp: test_range: on ranged type: check range low bound
FAIL: gdb.python/py-type.exp: lang_cpp: test_range: on ranged type: check range high bound
PASS: gdb.python/py-type.exp: lang_cpp: test_range: on unranged value: print value (st)
FAIL: gdb.python/py-type.exp: lang_cpp: test_range: on unranged value: get value (st) from history
FAIL: gdb.python/py-type.exp: lang_cpp: test_range: on unranged value: check range for non ranged type.
PASS: gdb.python/py-type.exp: lang_cpp: get type of temvar
PASS: gdb.python/py-type.exp: lang_cpp: python print (ttype.template_argument(0))
PASS: gdb.python/py-type.exp: lang_cpp: python print (isinstance(ttype.template_argument(0), gdb.Type))
PASS: gdb.python/py-type.exp: lang_cpp: python print (ttype.template_argument(1))
PASS: gdb.python/py-type.exp: lang_cpp: python print (isinstance(ttype.template_argument(1), gdb.Value))
PASS: gdb.python/py-type.exp: lang_cpp: python print (ttype.template_argument(2))
PASS: gdb.python/py-type.exp: lang_cpp: test_enum: print value (e)
FAIL: gdb.python/py-type.exp: lang_cpp: test_enum: get value (e) from history
FAIL: gdb.python/py-type.exp: lang_cpp: test_enum: extract type fields from e
FAIL: gdb.python/py-type.exp: lang_cpp: test_enum: check the number of enum fields
FAIL: gdb.python/py-type.exp: lang_cpp: test_enum: check enum field[0] name
FAIL: gdb.python/py-type.exp: lang_cpp: test_enum: check enum field[1]name
FAIL: gdb.python/py-type.exp: lang_cpp: test_enum: check the number of type fields
FAIL: gdb.python/py-type.exp: lang_cpp: test_enum: check enum field lookup by name (v1)
FAIL: gdb.python/py-type.exp: lang_cpp: test_enum: check enum field lookup by name (v3)
FAIL: gdb.python/py-type.exp: lang_cpp: test_enum: Check num fields iteration over values
FAIL: gdb.python/py-type.exp: lang_cpp: test_enum: Check enum fields items list
PASS: gdb.python/py-typeprint.exp: load python file
PASS: gdb.python/py-typeprint.exp: basic test
PASS: gdb.python/py-typeprint.exp: raw test
PASS: gdb.python/py-typeprint.exp: disable type-printer string
PASS: gdb.python/py-typeprint.exp: whatis with disabled printer
PASS: gdb.python/py-typeprint.exp: info type-printers
PASS: gdb.python/py-typeprint.exp: enable type-printer string
PASS: gdb.python/py-typeprint.exp: whatis with enabled printer
PASS: gdb.python/py-typeprint.exp: whatis s
FAIL: gdb.python/py-unwind-maint.exp: can't run to main
PASS: gdb.python/py-value.exp: create boolean value
PASS: gdb.python/py-value.exp: create integer value
PASS: gdb.python/py-value.exp: create large unsigned 64-bit value
PASS: gdb.python/py-value.exp: large unsigned 64-bit int conversion to python
PASS: gdb.python/py-value.exp: create double value
PASS: gdb.python/py-value.exp: create 8-bit string value
PASS: gdb.python/py-value.exp: print 8-bit string
PASS: gdb.python/py-value.exp: verify type of 8-bit string
PASS: gdb.python/py-value.exp: test address attribute in non-addressable value
PASS: gdb.python/py-value.exp: add two integer values
PASS: gdb.python/py-value.exp: verify type of integer add result
PASS: gdb.python/py-value.exp: add two double values
PASS: gdb.python/py-value.exp: subtract two integer values
PASS: gdb.python/py-value.exp: subtract two double values
PASS: gdb.python/py-value.exp: multiply two integer values
PASS: gdb.python/py-value.exp: multiply two double values
PASS: gdb.python/py-value.exp: divide two integer values
PASS: gdb.python/py-value.exp: divide two double values
PASS: gdb.python/py-value.exp: take remainder of two integer values
PASS: gdb.python/py-value.exp: integer value raised to the power of another integer value
PASS: gdb.python/py-value.exp: double value raised to the power of integer value
PASS: gdb.python/py-value.exp: negated integer value
PASS: gdb.python/py-value.exp: positive integer value
PASS: gdb.python/py-value.exp: negated double value
PASS: gdb.python/py-value.exp: positive double value
PASS: gdb.python/py-value.exp: absolute of integer value
PASS: gdb.python/py-value.exp: absolute of double value
PASS: gdb.python/py-value.exp: subtract integer value from python integer
PASS: gdb.python/py-value.exp: verify type of mixed integer subtraction result
PASS: gdb.python/py-value.exp: add double value with python float
PASS: gdb.python/py-value.exp: subtract python integer from integer value
PASS: gdb.python/py-value.exp: add python float with double value
PASS: gdb.python/py-value.exp: print evalue
PASS: gdb.python/py-value.exp: python evalue = gdb.history (0)
PASS: gdb.python/py-value.exp: python print (int (evalue))
PASS: gdb.python/py-value.exp: add pointer value with python integer
PASS: gdb.python/py-value.exp: subtract python integer from pointer value
PASS: gdb.python/py-value.exp: subtract two pointer values
PASS: gdb.python/py-value.exp: use value as string index
PASS: gdb.python/py-value.exp: use value as tuple index
PASS: gdb.python/py-value.exp: use value as array index
PASS: gdb.python/py-value.exp: catch error in python type conversion
PASS: gdb.python/py-value.exp: catch throw of GDB error
PASS: gdb.python/py-value.exp: define function to test booleans - python
PASS: gdb.python/py-value.exp: define function to test booleans - def test_bool (val):
PASS: gdb.python/py-value.exp: define function to test booleans -   if val:
PASS: gdb.python/py-value.exp: define function to test booleans -     print ('yay')
PASS: gdb.python/py-value.exp: define function to test booleans -   else:
PASS: gdb.python/py-value.exp: define function to test booleans -     print ('nay')
PASS: gdb.python/py-value.exp: define function to test booleans - end
PASS: gdb.python/py-value.exp: check evaluation of true boolean value in expression
PASS: gdb.python/py-value.exp: check evaluation of false boolean value in expression
PASS: gdb.python/py-value.exp: check evaluation of true integer value in expression
PASS: gdb.python/py-value.exp: check evaluation of false integer value in expression
PASS: gdb.python/py-value.exp: check evaluation of true integer value in expression
PASS: gdb.python/py-value.exp: check evaluation of false integer value in expression
PASS: gdb.python/py-value.exp: less than, equal
PASS: gdb.python/py-value.exp: less than, less
PASS: gdb.python/py-value.exp: less than, greater
PASS: gdb.python/py-value.exp: less than, None
PASS: gdb.python/py-value.exp: less or equal, equal
PASS: gdb.python/py-value.exp: less or equal, less
PASS: gdb.python/py-value.exp: less or equal, greater
PASS: gdb.python/py-value.exp: less or equal, None
PASS: gdb.python/py-value.exp: equality of gdb.Values
PASS: gdb.python/py-value.exp: inequality of gdb.Values
PASS: gdb.python/py-value.exp: equality of gdb.Value with Python value
PASS: gdb.python/py-value.exp: inequality of gdb.Value with Python value
PASS: gdb.python/py-value.exp: inequality of gdb.Value with None
PASS: gdb.python/py-value.exp: inequality, false
PASS: gdb.python/py-value.exp: inequality, true
PASS: gdb.python/py-value.exp: inequality, None
PASS: gdb.python/py-value.exp: greater than, equal
PASS: gdb.python/py-value.exp: greater than, less
PASS: gdb.python/py-value.exp: greater than, greater
PASS: gdb.python/py-value.exp: greater than, None
PASS: gdb.python/py-value.exp: greater or equal, equal
PASS: gdb.python/py-value.exp: greater or equal, less
PASS: gdb.python/py-value.exp: greater or equal, greater
PASS: gdb.python/py-value.exp: greater or equal, None
PASS: gdb.python/py-value.exp: py-value in file.filename
PASS: gdb.python/py-value.exp: python print (gdb.objfiles()[0].pretty_printers)
PASS: gdb.python/py-value.exp: python gdb.objfiles()[0].pretty_printers = 0
PASS: gdb.python/py-value.exp: parse_and_eval constant test
PASS: gdb.python/py-value.exp: parse_and_eval simple expression test
PASS: gdb.python/py-value.exp: parse_and_eval type test
PASS: gdb.python/py-value.exp: Simple Python value dictionary - python
PASS: gdb.python/py-value.exp: Simple Python value dictionary - one = gdb.Value(1)
PASS: gdb.python/py-value.exp: Simple Python value dictionary - two = gdb.Value(2)
PASS: gdb.python/py-value.exp: Simple Python value dictionary - three = gdb.Value(3)
PASS: gdb.python/py-value.exp: Simple Python value dictionary - vdict = {one:"one str",two:"two str",three:"three str"}
PASS: gdb.python/py-value.exp: Simple Python value dictionary - end
PASS: gdb.python/py-value.exp: test dictionary hash
PASS: gdb.python/py-value.exp: test dictionary hash
PASS: gdb.python/py-value.exp: test dictionary hash
PASS: gdb.python/py-value.exp: test inbuilt hash
FAIL: gdb.python/py-value.exp: can't run to main
PASS: gdb.python/python.exp: multi-line python command - python
PASS: gdb.python/python.exp: multi-line python command - print (23)
PASS: gdb.python/python.exp: multi-line python command - end
PASS: gdb.python/python.exp: python interactive help: python; help(); end
PASS: gdb.python/python.exp: python interactive help: quit help
PASS: gdb.python/python.exp: show python command - define zzq
PASS: gdb.python/python.exp: show python command - python
PASS: gdb.python/python.exp: show python command - print (23)
PASS: gdb.python/python.exp: show python command - end
PASS: gdb.python/python.exp: show python command - end
PASS: gdb.python/python.exp: show python command - show user zzq
PASS: gdb.python/python.exp: indented multi-line python command - python
PASS: gdb.python/python.exp: indented multi-line python command - def foo ():
PASS: gdb.python/python.exp: indented multi-line python command -   print ('hello, world!')
PASS: gdb.python/python.exp: indented multi-line python command - foo ()
PASS: gdb.python/python.exp: indented multi-line python command - end
PASS: gdb.python/python.exp: source source2.py
PASS: gdb.python/python.exp: source -s source2.py
PASS: gdb.python/python.exp: source -s source2-symlink.py
PASS: gdb.python/python.exp: python print (gdb.current_objfile())
PASS: gdb.python/python.exp: python print (gdb.objfiles())
PASS: gdb.python/python.exp: pythonX.Y/lib-dynload/*.so
PASS: gdb.python/python.exp: python x = gdb.execute('printf "%d", 23', to_string = True)
PASS: gdb.python/python.exp: python print (x)
PASS: gdb.python/python.exp: post event insertion - python
PASS: gdb.python/python.exp: post event insertion - someVal = 0
PASS: gdb.python/python.exp: post event insertion - class Foo(object):
PASS: gdb.python/python.exp: post event insertion -   def __call__(self):
PASS: gdb.python/python.exp: post event insertion -     global someVal
PASS: gdb.python/python.exp: post event insertion -     someVal += 1
PASS: gdb.python/python.exp: post event insertion - gdb.post_event(Foo())
PASS: gdb.python/python.exp: post event insertion - end
PASS: gdb.python/python.exp: test post event execution
PASS: gdb.python/python.exp: test non callable class
PASS: gdb.python/python.exp: show height
PASS: gdb.python/python.exp: set height 10
PASS: gdb.python/python.exp: verify pagination beforehand
PASS: gdb.python/python.exp: verify pagination beforehand: q
PASS: gdb.python/python.exp: gdb.execute does not page
PASS: gdb.python/python.exp: verify pagination afterwards
PASS: gdb.python/python.exp: verify pagination afterwards: q
PASS: gdb.python/python.exp: set height 0
PASS: gdb.python/python.exp: collect help from uiout
PASS: gdb.python/python.exp: verify help to uiout
PASS: gdb.python/python.exp: Attempt to aquire thread with no inferior
PASS: gdb.python/python.exp: ensure that no threads are returned
PASS: gdb.python/python.exp: register atexit function - python
PASS: gdb.python/python.exp: register atexit function - import atexit
PASS: gdb.python/python.exp: register atexit function - def printit(arg):
PASS: gdb.python/python.exp: register atexit function -   print (arg)
PASS: gdb.python/python.exp: register atexit function - atexit.register(printit, 'good bye world')
PASS: gdb.python/python.exp: register atexit function - end
PASS: gdb.python/python.exp: atexit handling
FAIL: gdb.python/python.exp: can't run to main
PASS: gdb.rust/expr.exp: set var $something = 27
PASS: gdb.rust/expr.exp: set language rust
PASS: gdb.rust/expr.exp: set language to "rust"
PASS: gdb.rust/expr.exp: print 9__97
PASS: gdb.rust/expr.exp: print -5
PASS: gdb.rust/expr.exp: print +5
PASS: gdb.rust/expr.exp: print +-+-5
PASS: gdb.rust/expr.exp: print 3_2i32
PASS: gdb.rust/expr.exp: print 32i64
PASS: gdb.rust/expr.exp: print 8u8
PASS: gdb.rust/expr.exp: print 0x1f
PASS: gdb.rust/expr.exp: print 0o07
PASS: gdb.rust/expr.exp: print 0o70
PASS: gdb.rust/expr.exp: print 0b1_111
PASS: gdb.rust/expr.exp: print 32usize
PASS: gdb.rust/expr.exp: print 0x_4
PASS: gdb.rust/expr.exp: print 'z'
PASS: gdb.rust/expr.exp: print '\t'
PASS: gdb.rust/expr.exp: print '\n'
PASS: gdb.rust/expr.exp: print '\r'
PASS: gdb.rust/expr.exp: print '\\'
PASS: gdb.rust/expr.exp: print '\0'
PASS: gdb.rust/expr.exp: print '\''
PASS: gdb.rust/expr.exp: print '\"'
PASS: gdb.rust/expr.exp: print '\xff'
PASS: gdb.rust/expr.exp: print '\xFF'
PASS: gdb.rust/expr.exp: print '\u{F0eF}'
PASS: gdb.rust/expr.exp: print b'z'
PASS: gdb.rust/expr.exp: print b'\xfe'
PASS: gdb.rust/expr.exp: print b'\t'
PASS: gdb.rust/expr.exp: print b'\n'
PASS: gdb.rust/expr.exp: print b'\r'
PASS: gdb.rust/expr.exp: print b'\\'
PASS: gdb.rust/expr.exp: print b'\0'
PASS: gdb.rust/expr.exp: print b'\''
PASS: gdb.rust/expr.exp: print b'\"'
PASS: gdb.rust/expr.exp: print b'\xff'
PASS: gdb.rust/expr.exp: print 23.5
PASS: gdb.rust/expr.exp: print 23.5e1
PASS: gdb.rust/expr.exp: print 2e4
PASS: gdb.rust/expr.exp: print 2_E+4_f64
PASS: gdb.rust/expr.exp: print 5e-1
PASS: gdb.rust/expr.exp: print 5e-1f32
PASS: gdb.rust/expr.exp: print false
PASS: gdb.rust/expr.exp: print true
PASS: gdb.rust/expr.exp: print 1+2
PASS: gdb.rust/expr.exp: print 1i32 + 2i32
PASS: gdb.rust/expr.exp: print 2.0 - 1.0
PASS: gdb.rust/expr.exp: print !false
PASS: gdb.rust/expr.exp: print !true
PASS: gdb.rust/expr.exp: print !0u8
PASS: gdb.rust/expr.exp: print 7 * 7
PASS: gdb.rust/expr.exp: print 7usize * 7usize
PASS: gdb.rust/expr.exp: print 42 / 7
PASS: gdb.rust/expr.exp: print 42 % 7
PASS: gdb.rust/expr.exp: print 1.0 / 2.0
PASS: gdb.rust/expr.exp: print 1 < 2
PASS: gdb.rust/expr.exp: print !(1 < 2)
PASS: gdb.rust/expr.exp: print 3 + 4 * 7
PASS: gdb.rust/expr.exp: print 1 > 2
PASS: gdb.rust/expr.exp: print 1 | 2
PASS: gdb.rust/expr.exp: print 1 & 2
PASS: gdb.rust/expr.exp: print 3 & 2
PASS: gdb.rust/expr.exp: print 3 ^ 2
PASS: gdb.rust/expr.exp: print (1 < 0) || true
PASS: gdb.rust/expr.exp: print (1 > 0) && false
PASS: gdb.rust/expr.exp: print 'z' == 'z'
PASS: gdb.rust/expr.exp: print '\u{1016f}' != 'q'
PASS: gdb.rust/expr.exp: print 32 <= 32
PASS: gdb.rust/expr.exp: print 32 >= 32
PASS: gdb.rust/expr.exp: print 1 << 5
PASS: gdb.rust/expr.exp: print 32usize >> 5
PASS: gdb.rust/expr.exp: ptype 32i32 as f64
PASS: gdb.rust/expr.exp: ptype 0xf9f9f9f90000
PASS: gdb.rust/expr.exp: print ()
PASS: gdb.rust/expr.exp: print [1,2,3,4]
PASS: gdb.rust/expr.exp: ptype [1,2,3,4]
PASS: gdb.rust/expr.exp: print [mut 1,2,3,4]
FAIL: gdb.rust/expr.exp: print b"hi rust"
FAIL: gdb.rust/expr.exp: print b"\xddhi bob"
FAIL: gdb.rust/expr.exp: print b"has\0nul"
FAIL: gdb.rust/expr.exp: print br##"hi"##
PASS: gdb.rust/expr.exp: print br##"hi
PASS: gdb.rust/expr.exp: print br##"hi"
PASS: gdb.rust/expr.exp: print br##"hi"#
PASS: gdb.rust/expr.exp: print $something
PASS: gdb.rust/expr.exp: print $_isvoid($nosuchvariable)
PASS: gdb.rust/expr.exp: print $_isvoid($something)
PASS: gdb.rust/expr.exp: print [23usize; 4]
PASS: gdb.rust/expr.exp: ptype [23usize; 4]
PASS: gdb.rust/expr.exp: print [mut 23usize; 4]
PASS: gdb.rust/expr.exp: print r#
PASS: gdb.rust/expr.exp: printf "%d %d\n", 23+1, 23-1
UNTESTED: gdb.rust/generics.exp: failed to prepare
UNTESTED: gdb.rust/methods.exp: failed to prepare
UNTESTED: gdb.rust/modules.exp: failed to prepare
UNTESTED: gdb.rust/simple.exp: failed to prepare
UNRESOLVED: gdb.stabs/gdb11479.exp: can't run to main forced_stabs
FAIL: gdb.stabs/gdb11479.exp: can't run to main natural_debug_format
PASS: gdb.stabs/weird.exp: weirdx.o read without error
PASS: gdb.stabs/weird.exp: stabs found
PASS: gdb.stabs/weird.exp: variable var0 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (var0)
PASS: gdb.stabs/weird.exp: variable var1 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (var1)
PASS: gdb.stabs/weird.exp: variable var2 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (var2)
PASS: gdb.stabs/weird.exp: variable var3 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (var3)
PASS: gdb.stabs/weird.exp: variable attr32 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr32)
PASS: gdb.stabs/weird.exp: variable attr33 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr33)
PASS: gdb.stabs/weird.exp: variable attr35 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr35)
PASS: gdb.stabs/weird.exp: variable attr36 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr36)
PASS: gdb.stabs/weird.exp: variable attr37 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr37)
PASS: gdb.stabs/weird.exp: variable attr38 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr38)
PASS: gdb.stabs/weird.exp: variable attr39 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr39)
PASS: gdb.stabs/weird.exp: variable attr41 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr41)
PASS: gdb.stabs/weird.exp: variable attr42 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr42)
PASS: gdb.stabs/weird.exp: variable attr43 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr43)
PASS: gdb.stabs/weird.exp: variable attr44 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr44)
PASS: gdb.stabs/weird.exp: variable attr46 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr46)
PASS: gdb.stabs/weird.exp: variable attr47 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr47)
PASS: gdb.stabs/weird.exp: variable attr58 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr58)
PASS: gdb.stabs/weird.exp: variable attr59 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr59)
PASS: gdb.stabs/weird.exp: variable attr60 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr60)
PASS: gdb.stabs/weird.exp: variable attr61 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr61)
PASS: gdb.stabs/weird.exp: variable attr62 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr62)
PASS: gdb.stabs/weird.exp: variable attr63 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr63)
PASS: gdb.stabs/weird.exp: variable attr64 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr64)
PASS: gdb.stabs/weird.exp: variable attr65 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr65)
PASS: gdb.stabs/weird.exp: variable attr66 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr66)
PASS: gdb.stabs/weird.exp: variable attr67 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr67)
PASS: gdb.stabs/weird.exp: variable attr68 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr68)
PASS: gdb.stabs/weird.exp: variable attr69 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr69)
PASS: gdb.stabs/weird.exp: variable attr70 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr70)
PASS: gdb.stabs/weird.exp: variable attr71 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr71)
PASS: gdb.stabs/weird.exp: variable attr72 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr72)
PASS: gdb.stabs/weird.exp: variable attr73 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr73)
PASS: gdb.stabs/weird.exp: variable attr74 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr74)
PASS: gdb.stabs/weird.exp: variable attr75 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr75)
PASS: gdb.stabs/weird.exp: variable attr76 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr76)
PASS: gdb.stabs/weird.exp: variable attr77 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr77)
PASS: gdb.stabs/weird.exp: variable attr78 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr78)
PASS: gdb.stabs/weird.exp: variable attr79 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr79)
PASS: gdb.stabs/weird.exp: variable attr80 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr80)
PASS: gdb.stabs/weird.exp: variable attr81 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr81)
PASS: gdb.stabs/weird.exp: variable attr82 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr82)
PASS: gdb.stabs/weird.exp: variable attr83 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr83)
PASS: gdb.stabs/weird.exp: variable attr84 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr84)
PASS: gdb.stabs/weird.exp: variable attr85 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr85)
PASS: gdb.stabs/weird.exp: variable attr86 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr86)
PASS: gdb.stabs/weird.exp: variable attr87 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr87)
PASS: gdb.stabs/weird.exp: variable attr88 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr88)
PASS: gdb.stabs/weird.exp: variable attr89 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr89)
PASS: gdb.stabs/weird.exp: variable attr90 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr90)
PASS: gdb.stabs/weird.exp: variable attr91 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr91)
PASS: gdb.stabs/weird.exp: variable attr92 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr92)
PASS: gdb.stabs/weird.exp: variable attr93 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr93)
PASS: gdb.stabs/weird.exp: variable attr94 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr94)
PASS: gdb.stabs/weird.exp: variable attr95 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr95)
PASS: gdb.stabs/weird.exp: variable attr96 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr96)
PASS: gdb.stabs/weird.exp: variable attr97 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr97)
PASS: gdb.stabs/weird.exp: variable attr98 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr98)
PASS: gdb.stabs/weird.exp: variable attr99 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr99)
PASS: gdb.stabs/weird.exp: variable attr100 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr100)
PASS: gdb.stabs/weird.exp: variable attr101 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr101)
PASS: gdb.stabs/weird.exp: variable attr102 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr102)
PASS: gdb.stabs/weird.exp: variable attr103 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr103)
PASS: gdb.stabs/weird.exp: variable attr104 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr104)
PASS: gdb.stabs/weird.exp: variable attr105 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr105)
PASS: gdb.stabs/weird.exp: variable attr106 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr106)
PASS: gdb.stabs/weird.exp: variable attr107 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr107)
PASS: gdb.stabs/weird.exp: variable attr108 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr108)
PASS: gdb.stabs/weird.exp: variable attr109 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr109)
PASS: gdb.stabs/weird.exp: variable attr110 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr110)
PASS: gdb.stabs/weird.exp: variable attr111 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr111)
PASS: gdb.stabs/weird.exp: variable attr112 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr112)
PASS: gdb.stabs/weird.exp: variable attr113 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr113)
PASS: gdb.stabs/weird.exp: variable attr114 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr114)
PASS: gdb.stabs/weird.exp: variable attr115 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr115)
PASS: gdb.stabs/weird.exp: variable attr116 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr116)
PASS: gdb.stabs/weird.exp: variable attr117 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr117)
PASS: gdb.stabs/weird.exp: variable attr118 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr118)
PASS: gdb.stabs/weird.exp: variable attr119 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr119)
PASS: gdb.stabs/weird.exp: variable attr120 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr120)
PASS: gdb.stabs/weird.exp: variable attr121 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr121)
PASS: gdb.stabs/weird.exp: variable attr122 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr122)
PASS: gdb.stabs/weird.exp: variable attr123 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr123)
PASS: gdb.stabs/weird.exp: variable attr124 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr124)
PASS: gdb.stabs/weird.exp: variable attr125 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr125)
PASS: gdb.stabs/weird.exp: variable attr126 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr126)
PASS: gdb.stabs/weird.exp: 'e' constant on non-enum type
PASS: gdb.stabs/weird.exp: whatis const69
PASS: gdb.stabs/weird.exp: 'e' constant with embedded type
PASS: gdb.stabs/weird.exp: char constant
PASS: gdb.stabs/weird.exp: string constant 1
PASS: gdb.stabs/weird.exp: string constant 2
PASS: gdb.stabs/weird.exp: string constant 3
PASS: gdb.stabs/weird.exp: string constant 4
PASS: gdb.stabs/weird.exp: p bad_neg0
PASS: gdb.stabs/weird.exp: ptype on inttype
PASS: gdb.stabs/weird.exp: unrecognized floating point type
PASS: gdb.stabs/weird.exp: print very big integer
PASS: gdb.stabs/weird.exp: whatis consth
PASS: gdb.stabs/weird.exp: whatis consth2
XFAIL: gdb.stabs/weird.exp: print struct constant
PASS: gdb.stabs/weird.exp: print bad_type0
PASS: gdb.stabs/weird.exp: print bad_type1
XFAIL: gdb.stabs/weird.exp: array0 with strange index
XFAIL: gdb.stabs/weird.exp: array1 with strange index
PASS: gdb.stabs/weird.exp: whatis one_var (known failure in gdb 4.10)
PASS: gdb.stabs/weird.exp: whatis one_var test 2
PASS: gdb.stabs/weird.exp: whatis two_var (known failure in gdb 4.10)
PASS: gdb.stabs/weird.exp: whatis two_var test 2
XFAIL: gdb.stabs/weird.exp: whatis pointer_to_int_var
XFAIL: gdb.stabs/weird.exp: whatis intp_var
PASS: gdb.stabs/weird.exp: p common0var0
XFAIL: gdb.stabs/weird.exp: p common0var1
XFAIL: gdb.stabs/weird.exp: p common0var2
PASS: gdb.threads/attach-many-short-lived-threads.exp: successfully compiled posix threads test case
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 1: attach (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 1: no new threads (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 1: set breakpoint always-inserted on (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 1: break break_fn (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 1: break at break_fn: 1 (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 1: break at break_fn: 2 (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 1: break at break_fn: 3 (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 1: reset timer in the inferior (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 1: print seconds_left (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 1: detach (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 1: set breakpoint always-inserted off (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 1: delete all breakpoints in delete_breakpoints (timeout)
UNRESOLVED: gdb.threads/attach-many-short-lived-threads.exp: iter 2: attach (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 2: no new threads (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 2: set breakpoint always-inserted on (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 2: break break_fn (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 2: break at break_fn: 1 (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 2: break at break_fn: 2 (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 2: break at break_fn: 3 (got interactive prompt)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 2: reset timer in the inferior
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 2: print seconds_left
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 2: detach
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 2: set breakpoint always-inserted off
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 3: attach (got interactive prompt)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 3: no new threads (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 3: set breakpoint always-inserted on (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 3: break break_fn (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 3: break at break_fn: 1 (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 3: break at break_fn: 2 (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 3: break at break_fn: 3 (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 3: reset timer in the inferior (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 3: print seconds_left (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 3: detach (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 3: set breakpoint always-inserted off (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 4: attach (got interactive prompt)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 4: no new threads (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 4: set breakpoint always-inserted on (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 4: break break_fn (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 4: break at break_fn: 1 (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 4: break at break_fn: 2 (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 4: break at break_fn: 3 (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 4: reset timer in the inferior (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 4: print seconds_left (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 4: detach (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 4: set breakpoint always-inserted off
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 5: attach (got interactive prompt)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 5: no new threads (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 5: set breakpoint always-inserted on (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 5: break break_fn (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 5: break at break_fn: 1 (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 5: break at break_fn: 2 (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 5: break at break_fn: 3 (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 5: reset timer in the inferior (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 5: print seconds_left (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 5: detach (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 5: set breakpoint always-inserted off (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 6: attach (got interactive prompt)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 6: no new threads (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 6: set breakpoint always-inserted on (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 6: break break_fn (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 6: break at break_fn: 1 (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 6: break at break_fn: 2 (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 6: break at break_fn: 3 (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 6: reset timer in the inferior (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 6: print seconds_left (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 6: detach (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 6: set breakpoint always-inserted off (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 7: attach (got interactive prompt)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 7: no new threads (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 7: set breakpoint always-inserted on (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 7: break break_fn (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 7: break at break_fn: 1 (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 7: break at break_fn: 2 (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 7: break at break_fn: 3 (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 7: reset timer in the inferior (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 7: print seconds_left (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 7: detach (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 7: set breakpoint always-inserted off (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 8: attach (got interactive prompt)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 8: no new threads (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 8: set breakpoint always-inserted on (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 8: break break_fn (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 8: break at break_fn: 1 (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 8: break at break_fn: 2 (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 8: break at break_fn: 3 (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 8: reset timer in the inferior (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 8: print seconds_left (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 8: detach (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 8: set breakpoint always-inserted off
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 9: attach (got interactive prompt)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 9: no new threads (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 9: set breakpoint always-inserted on (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 9: break break_fn (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 9: break at break_fn: 1 (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 9: break at break_fn: 2 (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 9: break at break_fn: 3 (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 9: reset timer in the inferior (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 9: print seconds_left (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 9: detach (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 9: set breakpoint always-inserted off (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 10: attach (got interactive prompt)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 10: no new threads (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 10: set breakpoint always-inserted on (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 10: break break_fn (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 10: break at break_fn: 1 (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 10: break at break_fn: 2 (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 10: break at break_fn: 3 (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 10: kill process (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 10: set breakpoint always-inserted off (timeout)
FAIL: gdb.threads/attach-many-short-lived-threads.exp: iter 10: delete all breakpoints in delete_breakpoints (got interactive prompt)
UNRESOLVED: gdb.threads/bp_in_thread.exp: successfully compiled posix threads test case
PASS: gdb.threads/bp_in_thread.exp: breakpoint on noreturn
FAIL: gdb.threads/bp_in_thread.exp: run to noreturn
PASS: gdb.threads/break-while-running.exp: successfully compiled posix threads test case
PASS: gdb.threads/break-while-running.exp: w/ithr: always-inserted off: all-stop: set non-stop off
PASS: gdb.threads/break-while-running.exp: w/ithr: always-inserted off: all-stop: set breakpoint always-inserted off
PASS: gdb.threads/break-while-running.exp: w/ithr: always-inserted off: non-stop: set non-stop on
PASS: gdb.threads/break-while-running.exp: w/ithr: always-inserted off: non-stop: set breakpoint always-inserted off
PASS: gdb.threads/break-while-running.exp: w/ithr: always-inserted on: all-stop: set non-stop off
PASS: gdb.threads/break-while-running.exp: w/ithr: always-inserted on: all-stop: set breakpoint always-inserted on
PASS: gdb.threads/break-while-running.exp: w/ithr: always-inserted on: non-stop: set non-stop on
PASS: gdb.threads/break-while-running.exp: w/ithr: always-inserted on: non-stop: set breakpoint always-inserted on
PASS: gdb.threads/break-while-running.exp: wo/ithr: always-inserted off: all-stop: set non-stop off
PASS: gdb.threads/break-while-running.exp: wo/ithr: always-inserted off: all-stop: set breakpoint always-inserted off
PASS: gdb.threads/break-while-running.exp: wo/ithr: always-inserted off: non-stop: set non-stop on
PASS: gdb.threads/break-while-running.exp: wo/ithr: always-inserted off: non-stop: set breakpoint always-inserted off
PASS: gdb.threads/break-while-running.exp: wo/ithr: always-inserted on: all-stop: set non-stop off
PASS: gdb.threads/break-while-running.exp: wo/ithr: always-inserted on: all-stop: set breakpoint always-inserted on
PASS: gdb.threads/break-while-running.exp: wo/ithr: always-inserted on: non-stop: set non-stop on
PASS: gdb.threads/break-while-running.exp: wo/ithr: always-inserted on: non-stop: set breakpoint always-inserted on
PASS: gdb.threads/continue-pending-after-query.exp: successfully compiled posix threads test case
PASS: gdb.threads/continue-pending-status.exp: successfully compiled posix threads test case
UNTESTED: gdb.threads/continue-pending-status.exp: could not run to main
UNSUPPORTED: gdb.threads/create-fail.exp: couldn't compile create-fail.c: unrecognized error
PASS: gdb.threads/execl.exp: successfully compiled posix threads test case
PASS: gdb.threads/execl.exp: set breakpoint at execl
FAIL: gdb.threads/execl.exp: continue to exec
FAIL: gdb.threads/execl.exp: info threads before exec
FAIL: gdb.threads/execl.exp: continue across exec
PASS: gdb.threads/execl.exp: info threads after exec
PASS: gdb.threads/execl.exp: info threads after exec
FAIL: gdb.threads/execl.exp: continue until exit
PASS: gdb.threads/fork-plus-threads.exp: detach-on-fork=on: successfully compiled posix threads test case
FAIL: gdb.threads/fork-plus-threads.exp: detach-on-fork=on: can't run to main
PASS: gdb.threads/fork-plus-threads.exp: detach-on-fork=off: successfully compiled posix threads test case
FAIL: gdb.threads/fork-plus-threads.exp: detach-on-fork=off: can't run to main
PASS: gdb.threads/forking-threads-plus-breakpoint.exp: successfully compiled posix threads test case
PASS: gdb.threads/forking-threads-plus-breakpoint.exp: probe displaced-stepping support: set displaced on
FAIL: gdb.threads/forking-threads-plus-breakpoint.exp: probe displaced-stepping support: can't run to main
FAIL: gdb.threads/forking-threads-plus-breakpoint.exp: cond_bp_target=1: detach_on_fork=on: displaced=on: can't run to main
FAIL: gdb.threads/forking-threads-plus-breakpoint.exp: cond_bp_target=1: detach_on_fork=on: displaced=off: can't run to main
FAIL: gdb.threads/forking-threads-plus-breakpoint.exp: cond_bp_target=0: detach_on_fork=on: displaced=on: can't run to main
FAIL: gdb.threads/forking-threads-plus-breakpoint.exp: cond_bp_target=0: detach_on_fork=on: displaced=off: can't run to main
PASS: gdb.threads/gcore-stale-thread.exp: successfully compiled posix threads test case
PASS: gdb.threads/gcore-stale-thread.exp: set non-stop on
PASS: gdb.threads/gcore-thread.exp: successfully compiled posix threads test case
UNSUPPORTED: gdb.threads/gcore-thread.exp: couldn't compile gcore-thread.o: unrecognized error
PASS: gdb.threads/gcore-thread.exp: successfully compiled posix threads test case
UNTESTED: gdb.threads/gcore-thread.exp: could not run to main
PASS: gdb.threads/hand-call-in-threads.exp: successfully compiled posix threads test case
FAIL: gdb.threads/hand-call-in-threads.exp: can't run to main
PASS: gdb.threads/hand-call-new-thread.exp: successfully compiled posix threads test case
UNSUPPORTED: gdb.threads/ia64-sigill.exp: couldn't compile ia64-sigill.c: unrecognized error
PASS: gdb.threads/info-threads-cur-sal.exp: successfully compiled posix threads test case
PASS: gdb.threads/interrupt-while-step-over.exp: successfully compiled posix threads test case
FAIL: gdb.threads/interrupt-while-step-over.exp: can't run to main
PASS: gdb.threads/interrupted-hand-call.exp: successfully compiled posix threads test case
FAIL: gdb.threads/interrupted-hand-call.exp: can't run to main
PASS: gdb.threads/kill.exp: threaded: successfully compiled posix threads test case
FAIL: gdb.threads/kill.exp: threaded: run to main
FAIL: gdb.threads/kill.exp: non-threaded: run to main
PASS: gdb.threads/killed.exp: successfully compiled posix threads test case
FAIL: gdb.threads/killed.exp: run program to completion (GDB internal error)
PASS: gdb.threads/killed.exp: GDB exits after multi-threaded program exits messily
PASS: gdb.threads/leader-exit.exp: successfully compiled posix threads test case
PASS: gdb.threads/local-watch-wrong-thread.exp: successfully compiled posix threads test case
FAIL: gdb.threads/local-watch-wrong-thread.exp: can't run to main
PASS: gdb.threads/manythreads.exp: successfully compiled posix threads test case
PASS: gdb.threads/manythreads.exp: set print sevenbit-strings
PASS: gdb.threads/manythreads.exp: shell stty intr '^C'
PASS: gdb.threads/manythreads.exp: first continue
FAIL: gdb.threads/manythreads.exp: stop threads 1
FAIL: gdb.threads/manythreads.exp: info threads
PASS: gdb.threads/manythreads.exp: give a name to the thread
PASS: gdb.threads/manythreads.exp: check thread name
PASS: gdb.threads/manythreads.exp: second continue
PASS: gdb.threads/manythreads.exp: check for duplicate SIGINT
FAIL: gdb.threads/manythreads.exp: stop threads 2
PASS: gdb.threads/manythreads.exp: GDB exits after stopping multithreaded program
UNTESTED: gdb.threads/multi-create-ns-info-thr.exp: failed to prepare
UNSUPPORTED: gdb.threads/multi-create.exp: couldn't compile multi-create.c: unrecognized error
PASS: gdb.threads/multiple-step-overs.exp: successfully compiled posix threads test case
PASS: gdb.threads/multiple-step-overs.exp: displaced=off: step: thread 1
FAIL: gdb.threads/multiple-step-overs.exp: displaced=off: step: step
PASS: gdb.threads/multiple-step-overs.exp: displaced=off: next: thread 1
FAIL: gdb.threads/multiple-step-overs.exp: displaced=off: next: next
PASS: gdb.threads/multiple-step-overs.exp: displaced=off: continue: thread 1
FAIL: gdb.threads/multiple-step-overs.exp: displaced=off: continue: continue
PASS: gdb.threads/multiple-step-overs.exp: displaced=off: signal thr1: thread 1
PASS: gdb.threads/multiple-step-overs.exp: displaced=off: signal thr1: queue-signal SIGUSR1
PASS: gdb.threads/multiple-step-overs.exp: displaced=off: signal thr1: switch back to thread 1
FAIL: gdb.threads/multiple-step-overs.exp: displaced=off: signal thr1: continue to sigusr1_handler
FAIL: gdb.threads/multiple-step-overs.exp: displaced=off: signal thr2: thread 2
PASS: gdb.threads/multiple-step-overs.exp: displaced=off: signal thr2: queue-signal SIGUSR1
PASS: gdb.threads/multiple-step-overs.exp: displaced=off: signal thr2: switch back to thread 1
FAIL: gdb.threads/multiple-step-overs.exp: displaced=off: signal thr2: continue to sigusr1_handler
FAIL: gdb.threads/multiple-step-overs.exp: displaced=off: signal thr3: thread 3
PASS: gdb.threads/multiple-step-overs.exp: displaced=off: signal thr3: queue-signal SIGUSR1
PASS: gdb.threads/multiple-step-overs.exp: displaced=off: signal thr3: switch back to thread 1
FAIL: gdb.threads/multiple-step-overs.exp: displaced=off: signal thr3: continue to sigusr1_handler
PASS: gdb.threads/multiple-step-overs.exp: displaced=on: step: thread 1
FAIL: gdb.threads/multiple-step-overs.exp: displaced=on: step: step
PASS: gdb.threads/multiple-step-overs.exp: displaced=on: next: thread 1
FAIL: gdb.threads/multiple-step-overs.exp: displaced=on: next: next
PASS: gdb.threads/multiple-step-overs.exp: displaced=on: continue: thread 1
FAIL: gdb.threads/multiple-step-overs.exp: displaced=on: continue: continue
PASS: gdb.threads/multiple-step-overs.exp: displaced=on: signal thr1: thread 1
PASS: gdb.threads/multiple-step-overs.exp: displaced=on: signal thr1: queue-signal SIGUSR1
PASS: gdb.threads/multiple-step-overs.exp: displaced=on: signal thr1: switch back to thread 1
FAIL: gdb.threads/multiple-step-overs.exp: displaced=on: signal thr1: continue to sigusr1_handler
FAIL: gdb.threads/multiple-step-overs.exp: displaced=on: signal thr2: thread 2
PASS: gdb.threads/multiple-step-overs.exp: displaced=on: signal thr2: queue-signal SIGUSR1
PASS: gdb.threads/multiple-step-overs.exp: displaced=on: signal thr2: switch back to thread 1
FAIL: gdb.threads/multiple-step-overs.exp: displaced=on: signal thr2: continue to sigusr1_handler
FAIL: gdb.threads/multiple-step-overs.exp: displaced=on: signal thr3: thread 3
PASS: gdb.threads/multiple-step-overs.exp: displaced=on: signal thr3: queue-signal SIGUSR1
PASS: gdb.threads/multiple-step-overs.exp: displaced=on: signal thr3: switch back to thread 1
FAIL: gdb.threads/multiple-step-overs.exp: displaced=on: signal thr3: continue to sigusr1_handler
PASS: gdb.threads/names.exp: successfully compiled posix threads test case
PASS: gdb.threads/next-bp-other-thread.exp: successfully compiled posix threads test case
PASS: gdb.threads/next-while-other-thread-longjmps.exp: successfully compiled posix threads test case
FAIL: gdb.threads/next-while-other-thread-longjmps.exp: can't run to main
PASS: gdb.threads/no-unwaited-for-left.exp: successfully compiled posix threads test case
PASS: gdb.threads/non-ldr-exc-1.exp: successfully compiled posix threads test case
PASS: gdb.threads/non-ldr-exc-2.exp: successfully compiled posix threads test case
PASS: gdb.threads/non-ldr-exc-3.exp: successfully compiled posix threads test case
PASS: gdb.threads/non-ldr-exc-4.exp: successfully compiled posix threads test case
PASS: gdb.threads/non-ldr-exit.exp: successfully compiled posix threads test case
FAIL: gdb.threads/non-ldr-exit.exp: can't run to main
PASS: gdb.threads/non-stop-fair-events.exp: successfully compiled posix threads test case
PASS: gdb.threads/non-stop-fair-events.exp: set non-stop on
PASS: gdb.threads/pending-step.exp: successfully compiled posix threads test case
FAIL: gdb.threads/pending-step.exp: can't run to main
PASS: gdb.threads/print-threads.exp: successfully compiled posix threads test case
PASS: gdb.threads/print-threads.exp: set print sevenbit-strings
PASS: gdb.threads/print-threads.exp: set width 0
PASS: gdb.threads/print-threads.exp: shell stty intr '^C'
PASS: gdb.threads/print-threads.exp: break thread_function
FAIL: gdb.threads/print-threads.exp: set var slow = 0
FAIL: gdb.threads/print-threads.exp: all threads ran once
PASS: gdb.threads/print-threads.exp: break thread_function (2)
FAIL: gdb.threads/print-threads.exp: set var slow = 1
FAIL: gdb.threads/print-threads.exp: all threads ran once
PASS: gdb.threads/print-threads.exp: break thread_function (3)
FAIL: gdb.threads/print-threads.exp: set var slow = 1 (2)
FAIL: gdb.threads/print-threads.exp: setting breakpoint at kill
FAIL: gdb.threads/print-threads.exp: all threads ran once
PASS: gdb.threads/process-dies-while-detaching.exp: single-process: detach: successfully compiled posix threads test case
FAIL: gdb.threads/process-dies-while-detaching.exp: single-process: detach: detach: can't run to main
FAIL: gdb.threads/process-dies-while-detaching.exp: single-process: detach: watchpoint: can't run to main
FAIL: gdb.threads/process-dies-while-detaching.exp: single-process: detach: killed outside: can't run to main
PASS: gdb.threads/process-dies-while-detaching.exp: single-process: continue: successfully compiled posix threads test case
FAIL: gdb.threads/process-dies-while-detaching.exp: single-process: continue: detach: can't run to main
FAIL: gdb.threads/process-dies-while-detaching.exp: single-process: continue: watchpoint: can't run to main
FAIL: gdb.threads/process-dies-while-detaching.exp: single-process: continue: killed outside: can't run to main
PASS: gdb.threads/process-dies-while-detaching.exp: multi-process: detach: successfully compiled posix threads test case
FAIL: gdb.threads/process-dies-while-detaching.exp: multi-process: detach: detach: can't run to main
FAIL: gdb.threads/process-dies-while-detaching.exp: multi-process: detach: watchpoint: can't run to main
FAIL: gdb.threads/process-dies-while-detaching.exp: multi-process: detach: killed outside: can't run to main
PASS: gdb.threads/process-dies-while-detaching.exp: multi-process: continue: successfully compiled posix threads test case
FAIL: gdb.threads/process-dies-while-detaching.exp: multi-process: continue: detach: can't run to main
FAIL: gdb.threads/process-dies-while-detaching.exp: multi-process: continue: watchpoint: can't run to main
FAIL: gdb.threads/process-dies-while-detaching.exp: multi-process: continue: killed outside: can't run to main
PASS: gdb.threads/process-dies-while-handling-bp.exp: successfully compiled posix threads test case
FAIL: gdb.threads/process-dies-while-handling-bp.exp: non_stop=on: cond_bp_target=1: can't run to main
FAIL: gdb.threads/process-dies-while-handling-bp.exp: non_stop=on: cond_bp_target=0: can't run to main
FAIL: gdb.threads/process-dies-while-handling-bp.exp: non_stop=off: cond_bp_target=1: can't run to main
FAIL: gdb.threads/process-dies-while-handling-bp.exp: non_stop=off: cond_bp_target=0: can't run to main
PASS: gdb.threads/pthread_cond_wait.exp: successfully compiled posix threads test case
PASS: gdb.threads/pthread_cond_wait.exp: breakpoint on break_me
FAIL: gdb.threads/pthread_cond_wait.exp: run to break_me
FAIL: gdb.threads/pthread_cond_wait.exp: backtrace in blocked thread
PASS: gdb.threads/pthreads.exp: successfully compiled posix threads test case
PASS: gdb.threads/pthreads.exp: set print sevenbit-strings
PASS: gdb.threads/pthreads.exp: set width 0
PASS: gdb.threads/pthreads.exp: shell stty intr '^C'
PASS: gdb.threads/queue-signal.exp: successfully compiled posix threads test case
FAIL: gdb.threads/queue-signal.exp: can't run to main
PASS: gdb.threads/schedlock.exp: successfully compiled posix threads test case
PASS: gdb.threads/schedlock.exp: shell stty intr '^C'
PASS: gdb.threads/schedlock.exp: set print sevenbit-strings
PASS: gdb.threads/schedlock.exp: set width 0
PASS: gdb.threads/schedlock.exp: scheduler locking set to none
FAIL: gdb.threads/schedlock.exp: continue to breakpoint: all threads started
FAIL: gdb.threads/schedlock.exp: listed args (before initial)
PASS: gdb.threads/schedlock.exp: continue (initial)
FAIL: gdb.threads/schedlock.exp: stop all threads (initial) (timeout)
FAIL: gdb.threads/schedlock.exp: setting breakpoint at 80 if arg != 0
PASS: gdb.threads/schedlock.exp: continue to breakpoint: return to loop (initial)
FAIL: gdb.threads/schedlock.exp: listed args (after initial)
FAIL: gdb.threads/schedlock.exp: all threads alive (2/2 did not run)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=continue: find current thread (before)
PASS: gdb.threads/schedlock.exp: schedlock=on: cmd=continue: set scheduler-locking on
PASS: gdb.threads/schedlock.exp: schedlock=on: cmd=continue: continue (with lock)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=continue: stop all threads (with lock) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=continue: setting breakpoint at 80 if arg != 0
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=continue: continue to breakpoint: return to loop (with lock) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=continue: delete all breakpoints in delete_breakpoints (timeout)
UNRESOLVED: gdb.threads/schedlock.exp: schedlock=on: cmd=continue: find current thread (after) (timeout)
PASS: gdb.threads/schedlock.exp: schedlock=on: cmd=continue: continue does not change thread
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=continue: listed args (after) (timeout)
PASS: gdb.threads/schedlock.exp: schedlock=on: cmd=continue: other threads didn't run - locked
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=step: set scheduler-locking off (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=step: setting breakpoint at 80 if arg != 0 (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=step: continue to breakpoint: return to loop (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=step: delete all breakpoints in delete_breakpoints (timeout)
UNRESOLVED: gdb.threads/schedlock.exp: schedlock=off: cmd=step: find current thread (before) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=step: print call_function = 0 (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=step: listed args (before) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=step: step to increment (0) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=step: step to increment (1) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=step: step to increment (2) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=step: step to increment (3) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=step: step to increment (4) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=step: step to increment (5) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=step: step to increment (6) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=step: step to increment (7) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=step: step to increment (8) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=step: step to increment (9) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=step: find current thread (after) (timeout)
PASS: gdb.threads/schedlock.exp: schedlock=off: cmd=step: step does not change thread
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=step: listed args (after) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=step: other threads ran - unlocked
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=0: set scheduler-locking off (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=0: setting breakpoint at 80 if arg != 0 (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=0: continue to breakpoint: return to loop (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=0: delete all breakpoints in delete_breakpoints (timeout)
UNRESOLVED: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=0: find current thread (before) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=0: print call_function = 0 (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=0: listed args (before) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=0: next to increment (0) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=0: next to increment (1) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=0: next to increment (2) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=0: next to increment (3) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=0: next to increment (4) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=0: next to increment (5) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=0: next to increment (6) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=0: next to increment (7) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=0: next to increment (8) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=0: next to increment (9) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=0: find current thread (after) (timeout)
PASS: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=0: next does not change thread
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=0: listed args (after) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=0: other threads ran - unlocked
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=1: set scheduler-locking off (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=1: setting breakpoint at 80 if arg != 0 (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=1: continue to breakpoint: return to loop (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=1: delete all breakpoints in delete_breakpoints (timeout)
UNRESOLVED: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=1: find current thread (before) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=1: print call_function = 1 (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=1: listed args (before) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=1: next to increment (0) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=1: next to increment (1) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=1: next to increment (2) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=1: next to increment (3) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=1: next to increment (4) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=1: next to increment (5) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=1: next to increment (6) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=1: next to increment (7) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=1: next to increment (8) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=1: next to increment (9) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=1: find current thread (after) (timeout)
PASS: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=1: next does not change thread
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=1: listed args (after) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=off: cmd=next: call_function=1: other threads ran - unlocked
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=step: set scheduler-locking off (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=step: setting breakpoint at 80 if arg != 0 (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=step: continue to breakpoint: return to loop (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=step: delete all breakpoints in delete_breakpoints (timeout)
UNRESOLVED: gdb.threads/schedlock.exp: schedlock=step: cmd=step: find current thread (before) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=step: set scheduler-locking step (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=step: print call_function = 0 (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=step: listed args (before) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=step: step to increment (0) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=step: step to increment (1) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=step: step to increment (2) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=step: step to increment (3) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=step: step to increment (4) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=step: step to increment (5) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=step: step to increment (6) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=step: step to increment (7) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=step: step to increment (8) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=step: step to increment (9) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=step: find current thread (after) (timeout)
PASS: gdb.threads/schedlock.exp: schedlock=step: cmd=step: step does not change thread
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=step: listed args (after) (timeout)
PASS: gdb.threads/schedlock.exp: schedlock=step: cmd=step: other threads didn't run - locked
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=0: set scheduler-locking off (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=0: setting breakpoint at 80 if arg != 0 (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=0: continue to breakpoint: return to loop (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=0: delete all breakpoints in delete_breakpoints (timeout)
UNRESOLVED: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=0: find current thread (before) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=0: set scheduler-locking step (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=0: print call_function = 0 (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=0: listed args (before) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=0: next to increment (0) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=0: next to increment (1) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=0: next to increment (2) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=0: next to increment (3) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=0: next to increment (4) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=0: next to increment (5) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=0: next to increment (6) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=0: next to increment (7) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=0: next to increment (8) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=0: next to increment (9) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=0: find current thread (after) (timeout)
PASS: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=0: next does not change thread
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=0: listed args (after) (timeout)
PASS: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=0: other threads didn't run - locked
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=1: set scheduler-locking off (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=1: setting breakpoint at 80 if arg != 0 (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=1: continue to breakpoint: return to loop (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=1: delete all breakpoints in delete_breakpoints (timeout)
UNRESOLVED: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=1: find current thread (before) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=1: set scheduler-locking step (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=1: print call_function = 1 (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=1: listed args (before) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=1: next to increment (0) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=1: next to increment (1) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=1: next to increment (2) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=1: next to increment (3) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=1: next to increment (4) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=1: next to increment (5) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=1: next to increment (6) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=1: next to increment (7) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=1: next to increment (8) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=1: next to increment (9) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=1: find current thread (after) (timeout)
PASS: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=1: next does not change thread
FAIL: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=1: listed args (after) (timeout)
PASS: gdb.threads/schedlock.exp: schedlock=step: cmd=next: call_function=1: other threads didn't run - locked
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=step: set scheduler-locking off (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=step: setting breakpoint at 80 if arg != 0 (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=step: continue to breakpoint: return to loop (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=step: delete all breakpoints in delete_breakpoints (timeout)
UNRESOLVED: gdb.threads/schedlock.exp: schedlock=on: cmd=step: find current thread (before) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=step: set scheduler-locking on (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=step: print call_function = 0 (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=step: listed args (before) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=step: step to increment (0) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=step: step to increment (1) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=step: step to increment (2) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=step: step to increment (3) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=step: step to increment (4) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=step: step to increment (5) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=step: step to increment (6) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=step: step to increment (7) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=step: step to increment (8) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=step: step to increment (9) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=step: find current thread (after) (timeout)
PASS: gdb.threads/schedlock.exp: schedlock=on: cmd=step: step does not change thread
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=step: listed args (after) (timeout)
PASS: gdb.threads/schedlock.exp: schedlock=on: cmd=step: other threads didn't run - locked
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=0: set scheduler-locking off (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=0: setting breakpoint at 80 if arg != 0 (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=0: continue to breakpoint: return to loop (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=0: delete all breakpoints in delete_breakpoints (timeout)
UNRESOLVED: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=0: find current thread (before) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=0: set scheduler-locking on (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=0: print call_function = 0 (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=0: listed args (before) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=0: next to increment (0) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=0: next to increment (1) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=0: next to increment (2) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=0: next to increment (3) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=0: next to increment (4) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=0: next to increment (5) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=0: next to increment (6) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=0: next to increment (7) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=0: next to increment (8) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=0: next to increment (9) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=0: find current thread (after) (timeout)
PASS: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=0: next does not change thread
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=0: listed args (after) (timeout)
PASS: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=0: other threads didn't run - locked
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=1: set scheduler-locking off (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=1: setting breakpoint at 80 if arg != 0 (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=1: continue to breakpoint: return to loop (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=1: delete all breakpoints in delete_breakpoints (timeout)
UNRESOLVED: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=1: find current thread (before) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=1: set scheduler-locking on (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=1: print call_function = 1 (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=1: listed args (before) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=1: next to increment (0) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=1: next to increment (1) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=1: next to increment (2) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=1: next to increment (3) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=1: next to increment (4) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=1: next to increment (5) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=1: next to increment (6) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=1: next to increment (7) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=1: next to increment (8) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=1: next to increment (9) (timeout)
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=1: find current thread (after) (timeout)
PASS: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=1: next does not change thread
FAIL: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=1: listed args (after) (timeout)
PASS: gdb.threads/schedlock.exp: schedlock=on: cmd=next: call_function=1: other threads didn't run - locked
UNSUPPORTED: gdb.threads/siginfo-threads.exp: couldn't compile siginfo-threads.c: unrecognized error
PASS: gdb.threads/signal-command-handle-nopass.exp: successfully compiled posix threads test case
FAIL: gdb.threads/signal-command-handle-nopass.exp: step-over yes: can't run to main
FAIL: gdb.threads/signal-command-handle-nopass.exp: step-over no: can't run to main
PASS: gdb.threads/signal-command-multiple-signals-pending.exp: successfully compiled posix threads test case
FAIL: gdb.threads/signal-command-multiple-signals-pending.exp: schedlock off: can't run to main
FAIL: gdb.threads/signal-command-multiple-signals-pending.exp: schedlock on: can't run to main
PASS: gdb.threads/signal-delivered-right-thread.exp: successfully compiled posix threads test case
FAIL: gdb.threads/signal-delivered-right-thread.exp: continue: can't run to main
FAIL: gdb.threads/signal-delivered-right-thread.exp: signal 0: can't run to main
PASS: gdb.threads/signal-sigtrap.exp: successfully compiled posix threads test case
FAIL: gdb.threads/signal-sigtrap.exp: sigtrap thread 1: can't run to thread_function
FAIL: gdb.threads/signal-sigtrap.exp: sigtrap thread 2: can't run to thread_function
PASS: gdb.threads/signal-while-stepping-over-bp-other-thread.exp: successfully compiled posix threads test case
UNSUPPORTED: gdb.threads/sigstep-threads.exp: couldn't compile sigstep-threads.c: unrecognized error
UNTESTED: gdb.threads/sigstep-threads.exp: failed to compile
PASS: gdb.threads/sigthread.exp: successfully compiled posix threads test case
FAIL: gdb.threads/sigthread.exp: can't run to main
UNSUPPORTED: gdb.threads/staticthreads.exp: couldn't compile staticthreads.c: unrecognized error
UNSUPPORTED: gdb.threads/staticthreads.exp: couldn't compile staticthreads.c: unrecognized error
PASS: gdb.threads/step-bg-decr-pc-switch-thread.exp: successfully compiled posix threads test case
PASS: gdb.threads/step-over-lands-on-breakpoint.exp: successfully compiled posix threads test case
PASS: gdb.threads/step-over-trips-on-watchpoint.exp: successfully compiled posix threads test case
PASS: gdb.threads/stepi-random-signal.exp: successfully compiled posix threads test case
PASS: gdb.threads/switch-threads.exp: successfully compiled posix threads test case
FAIL: gdb.threads/switch-threads.exp: continue to breakpoint: continue to thread_func
FAIL: gdb.threads/switch-threads.exp: next
PASS: gdb.threads/thread-execl.exp: successfully compiled posix threads test case
PASS: gdb.threads/thread-execl.exp: non-stop: set non-stop 1
PASS: gdb.threads/thread-find.exp: successfully compiled posix threads test case
PASS: gdb.threads/thread-find.exp: set print sevenbit-strings
FAIL: gdb.threads/thread-find.exp: continue to breakpoint: main thread's sleep
PASS: gdb.threads/thread-find.exp: name thread 1
FAIL: gdb.threads/thread-find.exp: name thread 2
FAIL: gdb.threads/thread-find.exp: name thread 3
FAIL: gdb.threads/thread-find.exp: name thread 4
FAIL: gdb.threads/thread-find.exp: name thread 5
FAIL: gdb.threads/thread-find.exp: name thread 6
PASS: gdb.threads/thread-find.exp: collect thread id
PASS: gdb.threads/thread-find.exp: collect process id
PASS: gdb.threads/thread-find.exp: collect lwp id
FAIL: gdb.threads/thread-find.exp: find thread name 6
FAIL: gdb.threads/thread-find.exp: find thread name 5
FAIL: gdb.threads/thread-find.exp: find thread name 4
FAIL: gdb.threads/thread-find.exp: find thread name 3
FAIL: gdb.threads/thread-find.exp: find thread name 2
PASS: gdb.threads/thread-find.exp: find thread name 1
PASS: gdb.threads/thread-find.exp: no thread
FAIL: gdb.threads/thread-find.exp: test regular exp
FAIL: gdb.threads/thread-find.exp: info threads 2 4 6
FAIL: gdb.threads/thread-find.exp: info threads 3-5
PASS: gdb.threads/thread-find.exp: test inverted range
FAIL: gdb.threads/thread-find.exp: info threads 3-3
PASS: gdb.threads/thread-find.exp: info thread foo
PASS: gdb.threads/thread-find.exp: info thread foo -1
PASS: gdb.threads/thread-specific-bp.exp: successfully compiled posix threads test case
UNTESTED: gdb.threads/thread-specific-bp.exp: all-stop: could not run to main
PASS: gdb.threads/thread-specific-bp.exp: set non-stop mode
UNTESTED: gdb.threads/thread-specific-bp.exp: non-stop: could not run to main
PASS: gdb.threads/thread-specific.exp: successfully compiled posix threads test case
PASS: gdb.threads/thread-specific.exp: set print sevenbit-strings
PASS: gdb.threads/thread-specific.exp: set width 0
PASS: gdb.threads/thread-specific.exp: thread var when not running
PASS: gdb.threads/thread-specific.exp: gthread var when not running
FAIL: gdb.threads/thread-specific.exp: continue to breakpoint: all threads started
FAIL: gdb.threads/thread-specific.exp: get threads list (no threads)
PASS: gdb.threads/thread-unwindonsignal.exp: successfully compiled posix threads test case
FAIL: gdb.threads/thread-unwindonsignal.exp: can't run to main
PASS: gdb.threads/thread_check.exp: successfully compiled posix threads test case
FAIL: gdb.threads/thread_check.exp: can't run to main
PASS: gdb.threads/threadapply.exp: successfully compiled posix threads test case
PASS: gdb.threads/threadapply.exp: b 62
PASS: gdb.threads/threadapply.exp: continue
PASS: gdb.threads/threadapply.exp: macro details
PASS: gdb.threads/threadapply.exp: defining macro
PASS: gdb.threads/threadapply.exp: set backtrace limit 3
FAIL: gdb.threads/threadapply.exp: thread apply all backthread
FAIL: gdb.threads/threadapply.exp: step to the thread_function
FAIL: gdb.threads/threadapply.exp: go up in the stack frame
FAIL: gdb.threads/threadapply.exp: run a simple print command on all threads
FAIL: gdb.threads/threadapply.exp: go down and check selected frame
FAIL: gdb.threads/threadapply.exp: thread apply all: can't run to main
FAIL: gdb.threads/threadapply.exp: thread apply 1.1 1.2 1.3: can't run to main
PASS: gdb.threads/threxit-hop-specific.exp: successfully compiled posix threads test case
FAIL: gdb.threads/threxit-hop-specific.exp: continue to thread start
FAIL: gdb.threads/threxit-hop-specific.exp: set thread specific breakpoint
FAIL: gdb.threads/threxit-hop-specific.exp: get past the thread specific breakpoint
PASS: gdb.threads/tid-reuse.exp: successfully compiled posix threads test case
FAIL: gdb.threads/tid-reuse.exp: can't run to main
PASS: gdb.threads/tls-nodebug.exp: successfully compiled posix threads test case
FAIL: gdb.threads/tls-nodebug.exp: can't run to main
PASS: gdb.threads/tls-shared.exp: successfully compiled posix threads test case
UNSUPPORTED: gdb.threads/tls-shared.exp: couldn't compile tls-main.c: unrecognized error
PASS: gdb.threads/tls-so_extern.exp: successfully compiled posix threads test case
UNSUPPORTED: gdb.threads/tls-so_extern.exp: couldn't compile tls-so_extern_main.c: unrecognized error
PASS: gdb.threads/tls-var.exp: successfully compiled posix threads test case
PASS: gdb.threads/tls.exp: successfully compiled posix threads test case
PASS: gdb.threads/tls.exp: print a_thread_local
FAIL: gdb.threads/tls.exp: can't run to main
PASS: gdb.threads/watchpoint-fork.exp: parent: singlethreaded: show detach-on-fork
PASS: gdb.threads/watchpoint-fork.exp: parent: singlethreaded: set follow-fork-mode parent
PASS: gdb.threads/watchpoint-fork.exp: parent: singlethreaded: show follow-fork-mode
PASS: gdb.threads/watchpoint-fork.exp: parent: singlethreaded: handle SIGUSR1 nostop noprint pass
UNTESTED: gdb.threads/watchpoint-fork.exp: watchpoint-fork: child
PASS: gdb.threads/watchthreads.exp: successfully compiled posix threads test case
FAIL: gdb.threads/watchthreads.exp: watch args[0]
FAIL: gdb.threads/watchthreads.exp: watch args[1]
FAIL: gdb.threads/watchthreads.exp: threaded watch loop
FAIL: gdb.threads/watchthreads.exp: first watchpoint on args[0] hit
FAIL: gdb.threads/watchthreads.exp: first watchpoint on args[1] hit
FAIL: gdb.threads/watchthreads.exp: watchpoint on args[0] hit in thread
FAIL: gdb.threads/watchthreads.exp: watchpoint on args[1] hit in thread
FAIL: gdb.threads/watchthreads.exp: combination of threaded watchpoints = 30
PASS: gdb.threads/watchthreads2.exp: successfully compiled posix threads test case
PASS: gdb.threads/watchthreads2.exp: breakpoint on thread_started
FAIL: gdb.threads/watchthreads2.exp: run to thread_started
FAIL: gdb.threads/watchthreads2.exp: run to thread_started
FAIL: gdb.threads/watchthreads2.exp: run to thread_started
FAIL: gdb.threads/watchthreads2.exp: run to thread_started
FAIL: gdb.threads/watchthreads2.exp: all threads started
PASS: gdb.threads/wp-replication.exp: successfully compiled posix threads test case
FAIL: gdb.threads/wp-replication.exp: failed to run to main
FAIL: gdb.trace/actions-changed.exp: can't run to main to check for trace support
PASS: gdb.trace/actions.exp: 5.1a: set three tracepoints, no actions
PASS: gdb.trace/actions.exp: 5.1b: set actions for first tracepoint
PASS: gdb.trace/actions.exp: 5.1c: verify actions set for first tracepoint
PASS: gdb.trace/actions.exp: 5.1d: set actions for second tracepoint
PASS: gdb.trace/actions.exp: 5.1e: verify actions set for second tracepoint
PASS: gdb.trace/actions.exp: 5.2a: set actions for last (default) tracepoint
PASS: gdb.trace/actions.exp: 5.2b: verify actions set for second tracepoint
PASS: gdb.trace/actions.exp: 5.3a: reset actions for first tracepoint
PASS: gdb.trace/actions.exp: 5.3b: verify actions set for first tracepoint
PASS: gdb.trace/actions.exp: 5.4: 'end' command out of context
PASS: gdb.trace/actions.exp: 5.5a: set empty actions for first tracepoint
PASS: gdb.trace/actions.exp: 5.5c: verify NO actions for first tracepoint
PASS: gdb.trace/actions.exp: 5.6: actions for invalid tracepoint number
PASS: gdb.trace/actions.exp: 5.7: invalid action
PASS: gdb.trace/actions.exp: 5.8a: help actions
PASS: gdb.trace/actions.exp: 5.8b: help collect
PASS: gdb.trace/actions.exp: 5.8c: help while-stepping
PASS: gdb.trace/actions.exp: 5.8d: help end
PASS: gdb.trace/actions.exp: 5.9a: set default-collect
PASS: gdb.trace/actions.exp: 5.9b: show default-collect
PASS: gdb.trace/actions.exp: 5.9c: set default-collect
PASS: gdb.trace/actions.exp: create a trace state variable
PASS: gdb.trace/actions.exp: 5.10a: set teval action for first tracepoint
PASS: gdb.trace/actions.exp: 5.10a: set teval action for second tracepoint
PASS: gdb.trace/actions.exp: 5.10a: verify teval actions set for two tracepoints
FAIL: gdb.trace/actions.exp: (GDB internal error)
FAIL: gdb.trace/actions.exp: can't run to main
PASS: gdb.trace/ax.exp: maint agent 12
PASS: gdb.trace/ax.exp: maint agent gdb_char_test
PASS: gdb.trace/ax.exp: maint agent gdb_arr_test[12]
PASS: gdb.trace/ax.exp: maint agent gdb_arr_test[gdb_short_test]
PASS: gdb.trace/ax.exp: maint agent gdb_struct1_test
PASS: gdb.trace/ax.exp: maint agent gdb_struct1_test.s
PASS: gdb.trace/ax.exp: maint agent gdb_struct1_test.arr[gdb_struct1_test.c]
PASS: gdb.trace/ax.exp: maint agent gdb_structp_test
PASS: gdb.trace/ax.exp: maint agent gdb_structp_test->l
PASS: gdb.trace/ax.exp: maint agent gdb_structp_test->bfield
PASS: gdb.trace/ax.exp: maint agent gdb_long_test + gdb_short_test
PASS: gdb.trace/ax.exp: maint agent gdb_long_test - gdb_short_test
PASS: gdb.trace/ax.exp: maint agent gdb_long_test * gdb_short_test
PASS: gdb.trace/ax.exp: maint agent gdb_long_test / gdb_short_test
PASS: gdb.trace/ax.exp: maint agent gdb_structp_test + 1
PASS: gdb.trace/ax.exp: maint agent gdb_long_test == gdb_short_test
PASS: gdb.trace/ax.exp: maint agent gdb_long_test != gdb_short_test
PASS: gdb.trace/ax.exp: maint agent gdb_long_test < gdb_short_test
PASS: gdb.trace/ax.exp: maint agent gdb_long_test <= gdb_short_test
PASS: gdb.trace/ax.exp: maint agent gdb_long_test > gdb_short_test
PASS: gdb.trace/ax.exp: maint agent gdb_long_test >= gdb_short_test
PASS: gdb.trace/ax.exp: maint agent &gdb_long_test == &gdb_short_test
PASS: gdb.trace/ax.exp: maint agent &gdb_long_test < &gdb_short_test
PASS: gdb.trace/ax.exp: maint agent (unsigned char)1L
PASS: gdb.trace/ax.exp: maint agent-eval 12
PASS: gdb.trace/ax.exp: maint agent-eval gdb_char_test
PASS: gdb.trace/ax.exp: maint agent-eval gdb_arr_test[12]
PASS: gdb.trace/ax.exp: maint agent-eval gdb_arr_test[gdb_short_test]
PASS: gdb.trace/ax.exp: maint agent-eval gdb_struct1_test
PASS: gdb.trace/ax.exp: maint agent-eval gdb_struct1_test.s
PASS: gdb.trace/ax.exp: maint agent-eval gdb_struct1_test.arr[gdb_struct1_test.c]
PASS: gdb.trace/ax.exp: maint agent-eval gdb_structp_test
PASS: gdb.trace/ax.exp: maint agent-eval gdb_structp_test->l
PASS: gdb.trace/ax.exp: maint agent-eval gdb_structp_test->bfield
PASS: gdb.trace/ax.exp: maint agent-eval gdb_long_test + gdb_short_test
PASS: gdb.trace/ax.exp: maint agent-eval gdb_long_test - gdb_short_test
PASS: gdb.trace/ax.exp: maint agent-eval gdb_long_test * gdb_short_test
PASS: gdb.trace/ax.exp: maint agent-eval gdb_long_test / gdb_short_test
PASS: gdb.trace/ax.exp: maint agent-eval gdb_structp_test + 1
PASS: gdb.trace/ax.exp: maint agent-eval gdb_long_test == gdb_short_test
PASS: gdb.trace/ax.exp: maint agent-eval gdb_long_test != gdb_short_test
PASS: gdb.trace/ax.exp: maint agent-eval gdb_long_test < gdb_short_test
PASS: gdb.trace/ax.exp: maint agent-eval gdb_long_test <= gdb_short_test
PASS: gdb.trace/ax.exp: maint agent-eval gdb_long_test > gdb_short_test
PASS: gdb.trace/ax.exp: maint agent-eval gdb_long_test >= gdb_short_test
PASS: gdb.trace/ax.exp: maint agent-eval &gdb_long_test == &gdb_short_test
PASS: gdb.trace/ax.exp: maint agent-eval &gdb_long_test < &gdb_short_test
FAIL: gdb.trace/backtrace.exp: can't run to main to check for trace support
UNTESTED: gdb.trace/change-loc.exp: failed to compile
FAIL: gdb.trace/circ.exp: can't run to main to check for trace support
UNSUPPORTED: gdb.trace/collection.exp: current target does not support trace
PASS: gdb.trace/deltrace.exp: set tracepoint 1
PASS: gdb.trace/deltrace.exp: set tracepoint 2
PASS: gdb.trace/deltrace.exp: set tracepoint 3
PASS: gdb.trace/deltrace.exp: 3.1a: set three tracepoints
PASS: gdb.trace/deltrace.exp: 3.1b: delete all tracepoints
PASS: gdb.trace/deltrace.exp: 3.2a: set three tracepoints
PASS: gdb.trace/deltrace.exp: 3.2b: delete first tracepoint
PASS: gdb.trace/deltrace.exp: 3.2c: verify delete first tracepoint
PASS: gdb.trace/deltrace.exp: 3.2d: delete second tracepoint
PASS: gdb.trace/deltrace.exp: 3.2e: verify delete second tracepoint
PASS: gdb.trace/deltrace.exp: 3.2f: delete third tracepoint
PASS: gdb.trace/deltrace.exp: 3.2g: verify delete third tracepoint
PASS: gdb.trace/deltrace.exp: 3.3a: set three tracepoints
PASS: gdb.trace/deltrace.exp: 3.3b: delete three tracepoints
PASS: gdb.trace/deltrace.exp: 3.3c: verify delete three tracepoints
PASS: gdb.trace/deltrace.exp: 3.4: delete invalid tracepoint number
PASS: gdb.trace/deltrace.exp: 3.5: delete tracepoint number zero
PASS: gdb.trace/deltrace.exp: 3.6: help delete tracepoints
UNSUPPORTED: gdb.trace/disconnected-tracing.exp: target does not support reconnect
PASS: gdb.trace/ftrace-lock.exp: successfully compiled posix threads test case
FAIL: gdb.trace/ftrace-lock.exp: can't run to main to check for trace support
FAIL: gdb.trace/ftrace.exp: can't run to main to check for trace support
PASS: gdb.trace/infotrace.exp: 2.1: info tracepoints (all)
PASS: gdb.trace/infotrace.exp: 2.2a: info tracepoint 1 (gdb_c_test)
PASS: gdb.trace/infotrace.exp: 2.2b: info tracepoint 2 (gdb_asm_test)
PASS: gdb.trace/infotrace.exp: 2.3: info tracepoint (invalid tracepoint number)
PASS: gdb.trace/infotrace.exp: 2.4: info trace rejects multiple tracepoint numbers
PASS: gdb.trace/infotrace.exp: 2.5: help info tracepoints
PASS: gdb.trace/infotrace.exp: collect on tracepoint 1
FAIL: gdb.trace/infotrace.exp: (GDB internal error)
FAIL: gdb.trace/infotrace.exp: can't run to main
FAIL: gdb.trace/mi-trace-frame-collected.exp: can't run to main to check for trace support
PASS: gdb.trace/mi-trace-save.exp: -trace-save with missing argument
PASS: gdb.trace/mi-trace-save.exp: -trace-save with too many arguments
PASS: gdb.trace/mi-trace-save.exp: -trace-save with wrong option
FAIL: gdb.trace/mi-trace-unavailable.exp: can't run to main to check for trace support
PASS: gdb.trace/mi-traceframe-changed.exp: tfile: select trace file
PASS: gdb.trace/mi-traceframe-changed.exp: tfile: tfind 0
PASS: gdb.trace/mi-traceframe-changed.exp: tfile: tfind 0 again
PASS: gdb.trace/mi-traceframe-changed.exp: tfile: tfind end
PASS: gdb.trace/mi-traceframe-changed.exp: tfile: -trace-find frame-number 0
FAIL: gdb.trace/mi-traceframe-changed.exp: can't run to main to check for trace support
UNTESTED: gdb.trace/mi-tracepoint-changed.exp: failed to compile
PASS: gdb.trace/mi-tsv-changed.exp: create delete modify: tvariable $tvar1
PASS: gdb.trace/mi-tsv-changed.exp: create delete modify: tvariable $tvar1 modified
PASS: gdb.trace/mi-tsv-changed.exp: create delete modify: tvariable $tvar1 modified without notification
PASS: gdb.trace/mi-tsv-changed.exp: create delete modify: tvariable $tvar2
PASS: gdb.trace/mi-tsv-changed.exp: create delete modify: delete tvariable $tvar2
PASS: gdb.trace/mi-tsv-changed.exp: create delete modify: delete all tvariables
FAIL: gdb.trace/mi-tsv-changed.exp: create delete modify: can't run to main to check for trace support
FAIL: gdb.trace/mi-tsv-changed.exp: can't run to main to check for trace support
UNSUPPORTED: gdb.trace/no-attach-trace.exp: current target does not support trace
UNSUPPORTED: gdb.trace/packetlen.exp: current target does not support trace
UNSUPPORTED: gdb.trace/passc-dyn.exp: current target does not support trace
PASS: gdb.trace/passcount.exp: 4.1a: set three tracepoints, passcounts all zero
PASS: gdb.trace/passcount.exp: 4.1b: set 1st tracepoint's passcount to two
PASS: gdb.trace/passcount.exp: 4.1c: verify 1st tracepoint's passcount set to two
PASS: gdb.trace/passcount.exp: 4.1d: set 2nd tracepoint's passcount to four
PASS: gdb.trace/passcount.exp: 4.1c: verify 2nd tracepoint's passcount set to four
PASS: gdb.trace/passcount.exp: 4.2b: set last (default) tp's passcount to six
PASS: gdb.trace/passcount.exp: 4.2b: verify last (default) tp's passcount set to six
PASS: gdb.trace/passcount.exp: 4.4a: reset last (default) tp's passcount to seven
PASS: gdb.trace/passcount.exp: 4.4a: verify reset last (default) tp's passcount to seven
PASS: gdb.trace/passcount.exp: 4.4b: reset second tracepoint's passcount to five
PASS: gdb.trace/passcount.exp: 4.4c: verify reset second tracepoint's passcount to five
PASS: gdb.trace/passcount.exp: 4.20a: set all three passcounts to three
PASS: gdb.trace/passcount.exp: 4.20a: set all three passcounts to three
PASS: gdb.trace/passcount.exp: 4.20a: reset all three passcounts to four
PASS: gdb.trace/passcount.exp: 4.20b: reset all three passcounts to four
PASS: gdb.trace/passcount.exp: 4.6: set passcount to zero
PASS: gdb.trace/passcount.exp: 4.6: set passcount to zero
PASS: gdb.trace/passcount.exp: 4.7: set passcount to large number (32767)
PASS: gdb.trace/passcount.exp: 4.7: set passcount to large number (32767)
PASS: gdb.trace/passcount.exp: 4.8: invalid tracepoint number in passcount
PASS: gdb.trace/passcount.exp: 4.9: help passcount
UNTESTED: gdb.trace/pending.exp: failed to compile
FAIL: gdb.trace/pr16508.exp: can't run to main to check for trace support
FAIL: gdb.trace/qtro.exp: can't run to main to check for trace support
FAIL: gdb.trace/range-stepping.exp: can't run to main to check for trace support
FAIL: gdb.trace/read-memory.exp: can't run to main to check for trace support
UNSUPPORTED: gdb.trace/report.exp: current target does not support trace
PASS: gdb.trace/save-trace.exp: set passcount for tracepoint 1
PASS: gdb.trace/save-trace.exp: set condition for tracepoint 1
PASS: gdb.trace/save-trace.exp: set actions for tracepoint 1
PASS: gdb.trace/save-trace.exp: set passcount for tracepoint 2
PASS: gdb.trace/save-trace.exp: set condition for tracepoint 2
PASS: gdb.trace/save-trace.exp: set actions for tracepoint 2
PASS: gdb.trace/save-trace.exp: set passcount for tracepoint 3
PASS: gdb.trace/save-trace.exp: set condition for tracepoint 3
PASS: gdb.trace/save-trace.exp: set actions for tracepoint 3
PASS: gdb.trace/save-trace.exp: set passcount for tracepoint 4
PASS: gdb.trace/save-trace.exp: set condition for tracepoint 4
PASS: gdb.trace/save-trace.exp: set actions for tracepoint 4
PASS: gdb.trace/save-trace.exp: set passcount for tracepoint 5
PASS: gdb.trace/save-trace.exp: set condition for tracepoint 5
PASS: gdb.trace/save-trace.exp: set actions for tracepoint 5
PASS: gdb.trace/save-trace.exp: set passcount for tracepoint 6
PASS: gdb.trace/save-trace.exp: set condition for tracepoint 6
PASS: gdb.trace/save-trace.exp: set actions for tracepoint 6
PASS: gdb.trace/save-trace.exp: set a fast tracepoint
PASS: gdb.trace/save-trace.exp: set default-collect
PASS: gdb.trace/save-trace.exp: verify trace setup
PASS: gdb.trace/save-trace.exp: verify default-collect
PASS: gdb.trace/save-trace.exp: relative: save tracepoint definitions
PASS: gdb.trace/save-trace.exp: relative: clear default-collect
PASS: gdb.trace/save-trace.exp: relative: delete tracepoints
PASS: gdb.trace/save-trace.exp: relative: read back saved tracepoints
PASS: gdb.trace/save-trace.exp: relative: verify recovered tracepoints
PASS: gdb.trace/save-trace.exp: relative: verify default-collect
PASS: gdb.trace/save-trace.exp: absolute: save tracepoint definitions
PASS: gdb.trace/save-trace.exp: absolute: clear default-collect
PASS: gdb.trace/save-trace.exp: absolute: delete tracepoints
PASS: gdb.trace/save-trace.exp: absolute: read back saved tracepoints
PASS: gdb.trace/save-trace.exp: absolute: verify recovered tracepoints
PASS: gdb.trace/save-trace.exp: absolute: verify default-collect
PASS: gdb.trace/save-trace.exp: verify help save tracepoints
FAIL: gdb.trace/signal.exp: can't run to main to check for trace support
UNTESTED: gdb.trace/stap-trace.exp: failed to compile
FAIL: gdb.trace/status-stop.exp: can't run to main to check for trace support
UNTESTED: gdb.trace/strace.exp: UST library or headers are not installed
PASS: gdb.trace/tfile.exp: target tfile tfile-basic.tf
PASS: gdb.trace/tfile.exp: info tracepoints on trace file
PASS: gdb.trace/tfile.exp: tfind 0 on trace file
PASS: gdb.trace/tfile.exp: print testglob on trace file
PASS: gdb.trace/tfile.exp: print testglob2 on trace file
PASS: gdb.trace/tfile.exp: print constglob on trace file
PASS: gdb.trace/tfile.exp: disassemble main
PASS: gdb.trace/tfile.exp: print nonconstglob on trace file
PASS: gdb.trace/tfile.exp: tfind does not find a second frame in trace file
PASS: gdb.trace/tfile.exp: tstatus on trace file
PASS: gdb.trace/tfile.exp: leave tfind mode
PASS: gdb.trace/tfile.exp: no stack if no traceframe selected
PASS: gdb.trace/tfile.exp: no registers if no traceframe selected
PASS: gdb.trace/tfile.exp: target tfile tfile-error.tf
PASS: gdb.trace/tfile.exp: tstatus on error trace file
PASS: gdb.trace/tfile.exp: interpreter-exec mi "-target-select tfile tfile-basic.tf"
PASS: gdb.trace/tfile.exp: -trace-status
PASS: gdb.trace/tfile.exp: complete-command 'target tfile'
PASS: gdb.trace/tfind.exp: 6.2: help tstart
PASS: gdb.trace/tfind.exp: 7.2: help tstop
PASS: gdb.trace/tfind.exp: 8.38: help tfind
PASS: gdb.trace/tfind.exp: 8.38: help tfind PC
PASS: gdb.trace/tfind.exp: 8.38: help tfind end
PASS: gdb.trace/tfind.exp: 8.38: help tfind none
PASS: gdb.trace/tfind.exp: 8.38: help tfind line
PASS: gdb.trace/tfind.exp: 8.38: help tfind start
PASS: gdb.trace/tfind.exp: 8.38: help tfind range
PASS: gdb.trace/tfind.exp: 8.38: help tfind tracepoint
UNSUPPORTED: gdb.trace/tfind.exp: current target does not support trace
FAIL: gdb.trace/trace-break.exp: can't run to main to check for trace support
FAIL: gdb.trace/trace-buffer-size.exp: can't run to main to check for trace support
FAIL: gdb.trace/trace-condition.exp: can't run to main to check for trace support
FAIL: gdb.trace/trace-enable-disable.exp: can't run to main to check for trace support
PASS: gdb.trace/trace-mt.exp: successfully compiled posix threads test case
FAIL: gdb.trace/trace-mt.exp: can't run to main to check for trace support
PASS: gdb.trace/tracecmd.exp: 1.0: help tracepoints
PASS: gdb.trace/tracecmd.exp: 1.1a: set tracepoint at sourceline
PASS: gdb.trace/tracecmd.exp: 1.1b: trace sourcefile:line
PASS: gdb.trace/tracecmd.exp: set breakpoint pending off
PASS: gdb.trace/tracecmd.exp: 1.2a: trace invalid line in sourcefile
PASS: gdb.trace/tracecmd.exp: 1.2b: reject invalid line in srcfile
PASS: gdb.trace/tracecmd.exp: 1.3a: trace invalid source file
PASS: gdb.trace/tracecmd.exp: 1.3b: reject invalid srcfile
PASS: gdb.trace/tracecmd.exp: 1.4a: trace function by name
PASS: gdb.trace/tracecmd.exp: 1.4b: trace function by name
PASS: gdb.trace/tracecmd.exp: 1.5a: trace invalid function
PASS: gdb.trace/tracecmd.exp: 1.5b: reject invalid srcfile
PASS: gdb.trace/tracecmd.exp: 1.6a: trace at specific address
PASS: gdb.trace/tracecmd.exp: 1.6b: verify trace at specific address
PASS: gdb.trace/tracecmd.exp: 1.7a: trace at function label (before prologue)
PASS: gdb.trace/tracecmd.exp: 1.7b: verify trace at specific address
PASS: gdb.trace/tracecmd.exp: 1.9: trace <no arguments>
PASS: gdb.trace/tracecmd.exp: 1.11a: conditional tracepoint
PASS: gdb.trace/tracecmd.exp: 1.11b: verify conditional tracepoint
PASS: gdb.trace/tracecmd.exp: 1.14: help trace
PASS: gdb.trace/tracecmd.exp: declined to set a fast tracepoint
UNTESTED: gdb.trace/tspeed.exp: failed to compile
FAIL: gdb.trace/tstatus.exp: can't run to main to check for trace support
PASS: gdb.trace/tsv.exp: tsave command properly supports -r argument
PASS: gdb.trace/tsv.exp: create a trace state variable
PASS: gdb.trace/tsv.exp: create a trace state variable with initial value
PASS: gdb.trace/tsv.exp: change initial value of a trace state variable
PASS: gdb.trace/tsv.exp: create a trace state variable with expression
PASS: gdb.trace/tsv.exp: init trace state variable to a 64-bit value
PASS: gdb.trace/tsv.exp: tvariable syntax error, not empty variable name
PASS: gdb.trace/tsv.exp: tvariable syntax error, bad name
PASS: gdb.trace/tsv.exp: tvariable syntax error, bad name 2
PASS: gdb.trace/tsv.exp: tvariable syntax error, bad name 3
PASS: gdb.trace/tsv.exp: tvariable syntax error, not an assignment
PASS: gdb.trace/tsv.exp: tvariable creation fails with invalid expression
PASS: gdb.trace/tsv.exp: List tvariables
PASS: gdb.trace/tsv.exp: Print a trace state variable before run
PASS: gdb.trace/tsv.exp: delete trace state variable
PASS: gdb.trace/tsv.exp: List tvariables after deletion
PASS: gdb.trace/tsv.exp: Delete all trace state variables
PASS: gdb.trace/tsv.exp: list tvariables after deleting all
UNSUPPORTED: gdb.trace/tsv.exp: current target does not support trace
UNSUPPORTED: gdb.trace/unavailable.exp: current target does not support trace
UNSUPPORTED: gdb.trace/while-dyn.exp: current target does not support trace
PASS: gdb.trace/while-stepping.exp: 5.12: set a tracepoint, stepcount is zero
PASS: gdb.trace/while-stepping.exp: 5.12: set stepcount to 12
PASS: gdb.trace/while-stepping.exp: 5.12: info trace shows "while-stepping"
PASS: gdb.trace/while-stepping.exp: 5.14: while-stepping null stepcount
PASS: gdb.trace/while-stepping.exp: 5.15: while-stepping rejects zero stepcount
PASS: gdb.trace/while-stepping.exp: 5.16: step without collecting anything
PASS: gdb.trace/while-stepping.exp: 5.16: confirm actions, step without collecting anything
FAIL: gdb.trace/while-stepping.exp: (GDB internal error)
FAIL: gdb.trace/while-stepping.exp: can't run to main
PASS: gdb.tui/completion.exp: set max-completions unlimited
PASS: gdb.tui/completion.exp: completion of layout names: tab completion
PASS: gdb.tui/completion.exp: completion of layout names: quit command input
PASS: gdb.tui/completion.exp: completion of focus command: tab completion
PASS: gdb.tui/completion.exp: completion of focus command: quit command input
PASS: gdb.tui/tui-disasm-long-lines.exp: layout asm
PASS: gdb.tui/tui-layout.exp: execution=0: layout=asm: layout command
PASS: gdb.tui/tui-layout.exp: execution=0: layout=reg: layout command
PASS: gdb.tui/tui-layout.exp: execution=0: layout=src: layout command
PASS: gdb.tui/tui-layout.exp: execution=0: layout=split: layout command
FAIL: gdb.tui/tui-layout.exp: execution=1: layout=asm: can't run to main
FAIL: gdb.tui/tui-layout.exp: execution=1: layout=reg: can't run to main
FAIL: gdb.tui/tui-layout.exp: execution=1: layout=src: can't run to main
FAIL: gdb.tui/tui-layout.exp: execution=1: layout=split: can't run to main
PASS: gdb.tui/tui-nl-filtered-output.exp: tui enable
PASS: gdb.tui/tui-nl-filtered-output.exp: set pagination on
PASS: gdb.tui/tui-nl-filtered-output.exp: set height 2000
PASS: gdb.tui/tui-nl-filtered-output.exp: correct line breaks
PASS: gdb.xml/maint_print_struct.exp: setting a new tdesc having only a structure
PASS: gdb.xml/maint_print_struct.exp: printing tdesc with a structure and a bitfield
PASS: gdb.xml/tdesc-arch.exp: read valid architectures
PASS: gdb.xml/tdesc-arch.exp: read default architecture
PASS: gdb.xml/tdesc-arch.exp: set tdesc filename tdesc-arch.xml (first architecture)
PASS: gdb.xml/tdesc-arch.exp: show architecture (first architecture)
PASS: gdb.xml/tdesc-arch.exp: set tdesc filename tdesc-arch.xml (second architecture)
PASS: gdb.xml/tdesc-arch.exp: show architecture (second architecture)
PASS: gdb.xml/tdesc-arch.exp: set tdesc filename tdesc-arch.xml (invalid architecture)
PASS: gdb.xml/tdesc-arch.exp: show architecture (invalid architecture)
PASS: gdb.xml/tdesc-errors.exp: set tdesc filename gdb.xml/tdesc-bogus.xml
PASS: gdb.xml/tdesc-errors.exp: set tdesc filename gdb.xml/tdesc-unknown.xml
PASS: gdb.xml/tdesc-regs.exp: set tdesc file single-reg.xml
PASS: gdb.xml/tdesc-regs.exp: cd to directory holding xml
PASS: gdb.xml/tdesc-regs.exp: set tdesc filename test-extra-regs.xml - from extra-regs.xml
PASS: gdb.xml/tdesc-regs.exp: ptype $extrareg
PASS: gdb.xml/tdesc-regs.exp: ptype $uintreg
PASS: gdb.xml/tdesc-regs.exp: ptype $vecreg
PASS: gdb.xml/tdesc-regs.exp: ptype $unionreg
PASS: gdb.xml/tdesc-regs.exp: ptype $unionreg.v4
PASS: gdb.xml/tdesc-regs.exp: ptype $structreg
PASS: gdb.xml/tdesc-regs.exp: ptype $structreg.v4
PASS: gdb.xml/tdesc-regs.exp: ptype $bitfields
PASS: gdb.xml/tdesc-regs.exp: ptype $flags
PASS: gdb.xml/tdesc-regs.exp: ptype $mixed_flags
PASS: gdb.xml/tdesc-regs.exp: set tdesc filename test-regs.xml - from core-only.xml
PASS: gdb.xml/tdesc-regs.exp: ptype $extrareg
PASS: gdb.xml/tdesc-xinclude.exp: set tdesc filename gdb.xml/includes.xml
PASS: gdb.xml/tdesc-xinclude.exp: set tdesc filename gdb.xml/bad-include.xml
PASS: gdb.xml/tdesc-xinclude.exp: set tdesc filename gdb.xml/loop.xml
# of expected passes		6974
# of unexpected failures	4598
# of expected failures		25
# of known failures		19
# of unresolved testcases	499
# of untested testcases		150
# of unsupported tests		237
