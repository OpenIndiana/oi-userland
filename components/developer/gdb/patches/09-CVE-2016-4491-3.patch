From b9da89d161e3903faa335f444af2bf05e40f926e Mon Sep 17 00:00:00 2001
From: mark <mark@138bc75d-0d04-0410-961f-82ee72b054a4>
Date: Mon, 13 Mar 2017 18:26:47 +0000
Subject: [PATCH] Merge libiberty: Initialize d_printing in all
 cplus_demangle_fill_* functions.

While integrating the d_printing recursion guard change into gdb I
noticed we forgot to initialize the demangle_component d_printing
field in cplus_demangle_fill_{name,extended_operator,ctor,dtor}.
As is done in cplus_demangle_fill_{component,builtin_type,operator}.
It happened to work because in gcc all demangle_components were
allocated through d_make_empty. But gdb has its own allocation
mechanism (as might other users).

libiberty/ChangeLog:

       * cp-demangle.c (cplus_demangle_fill_name): Initialize
       demangle_component d_printing.
       (cplus_demangle_fill_extended_operator): Likewise.
       (cplus_demangle_fill_ctor): Likewise.
       (cplus_demangle_fill_dtor): Likewise.

gdb/ChangeLog:

       * cp-name-parser.y (make_empty): Initialize d_printing to zero.
---
 gdb/ChangeLog           | 4 ++++
 gdb/cp-name-parser.y    | 1 +
 libiberty/ChangeLog     | 8 ++++++++
 libiberty/cp-demangle.c | 4 ++++
 4 files changed, 17 insertions(+)

#diff --git a/gdb/ChangeLog b/gdb/ChangeLog
#index e4c4432..7de2498 100644
#--- a/gdb/ChangeLog
#+++ b/gdb/ChangeLog
#@@ -1,3 +1,7 @@
#+2017-03-13  Mark Wielaard  <mark@klomp.org>
#+
#+	* cp-name-parser.y (make_empty): Initialize d_printing to zero.
#+
# 2017-03-10  Keith Seitz  <keiths@redhat.com>
# 
# 	PR c++/8218
Index: gdb-7.11.1/gdb/cp-name-parser.y
===================================================================
--- gdb-7.11.1.orig/gdb/cp-name-parser.y	2017-06-09 14:29:31.868179386 -0400
+++ gdb-7.11.1/gdb/cp-name-parser.y	2017-06-09 14:29:31.868179386 -0400
@@ -201,6 +201,7 @@ make_empty (enum demangle_component_type
 {
   struct demangle_component *ret = d_grab ();
   ret->type = d_type;
+  ret->d_printing = 0;
   return ret;
 }
 
Index: gdb-7.11.1/libiberty/cp-demangle.c
===================================================================
--- gdb-7.11.1.orig/libiberty/cp-demangle.c	2017-06-09 14:29:31.868179386 -0400
+++ gdb-7.11.1/libiberty/cp-demangle.c	2017-06-09 14:29:31.868179386 -0400
@@ -829,6 +829,7 @@ cplus_demangle_fill_name (struct demangl
 {
   if (p == NULL || s == NULL || len == 0)
     return 0;
+  p->d_printing = 0;
   p->type = DEMANGLE_COMPONENT_NAME;
   p->u.s_name.s = s;
   p->u.s_name.len = len;
@@ -844,6 +845,7 @@ cplus_demangle_fill_extended_operator (s
 {
   if (p == NULL || args < 0 || name == NULL)
     return 0;
+  p->d_printing = 0;
   p->type = DEMANGLE_COMPONENT_EXTENDED_OPERATOR;
   p->u.s_extended_operator.args = args;
   p->u.s_extended_operator.name = name;
@@ -863,6 +865,7 @@ cplus_demangle_fill_ctor (struct demangl
       || (int) kind < gnu_v3_complete_object_ctor
       || (int) kind > gnu_v3_object_ctor_group)
     return 0;
+  p->d_printing = 0;
   p->type = DEMANGLE_COMPONENT_CTOR;
   p->u.s_ctor.kind = kind;
   p->u.s_ctor.name = name;
@@ -882,6 +885,7 @@ cplus_demangle_fill_dtor (struct demangl
       || (int) kind < gnu_v3_deleting_dtor
       || (int) kind > gnu_v3_object_dtor_group)
     return 0;
+  p->d_printing = 0;
   p->type = DEMANGLE_COMPONENT_DTOR;
   p->u.s_dtor.kind = kind;
   p->u.s_dtor.name = name;
