--- llvm-3.3.src/tools/clang/lib/Frontend/InitHeaderSearch.cpp.orig	2013-06-24 22:02:16.496113150 +0400
+++ llvm-3.3.src/tools/clang/lib/Frontend/InitHeaderSearch.cpp	2013-06-24 22:04:09.683488600 +0400
@@ -434,7 +434,7 @@
                                 "", "", "", triple);
     break;
   case llvm::Triple::Solaris:
-    AddGnuCPlusPlusIncludePaths("/usr/gcc/4.5/include/c++/4.5.2/",
+    AddGnuCPlusPlusIncludePaths("/usr/gcc/4.9/include/c++/4.9.3/",
                                 "i386-pc-solaris2.11", "", "", triple);
     // Solaris - Fall though..
   case llvm::Triple::AuroraUX:
--- llvm-3.4.1.src/include/llvm/Support/Host.h.~1~	2014-06-27 15:06:03.176685020 +0400
+++ llvm-3.4.1.src/include/llvm/Support/Host.h	2014-06-27 15:05:52.437081894 +0400
@@ -18,6 +18,8 @@
 
 #if defined(__linux__) || defined(__GNU__)
 #include <endian.h>
+#elif defined(__sun)
+#include <sys/isa_defs.h>
 #else
 #if !defined(BYTE_ORDER) && !defined(LLVM_ON_WIN32)
 #include <machine/endian.h>
--- llvm-3.4.1.src/tools/clang/lib/Driver/Tools.cpp.~1~	2014-04-12 00:31:24.000000000 +0400
+++ llvm-3.4.1.src/tools/clang/lib/Driver/Tools.cpp	2014-06-27 14:56:12.384535432 +0400
@@ -5175,7 +5175,7 @@
   }
 
   const char *Exec =
-    Args.MakeArgString(getToolChain().GetProgramPath("as"));
+    Args.MakeArgString(getToolChain().GetProgramPath("gas"));
   C.addCommand(new Command(JA, *this, Exec, CmdArgs));
 }
 
@@ -5186,18 +5186,19 @@
                                   const ArgList &Args,
                                   const char *LinkingOutput) const {
   // FIXME: Find a real GCC, don't hard-code versions here
-  std::string GCCLibPath = "/usr/gcc/4.5/lib/gcc/";
+  std::string GCCLibPath = "/usr/gcc/4.9/lib/gcc/";
   const llvm::Triple &T = getToolChain().getTriple();
   std::string LibPath = "/usr/lib/";
   llvm::Triple::ArchType Arch = T.getArch();
+  std::string SUNld="/usr/ccs/bin/ld";
   switch (Arch) {
   case llvm::Triple::x86:
     GCCLibPath +=
-        ("i386-" + T.getVendorName() + "-" + T.getOSName()).str() + "/4.5.2/";
+        ("i386-" + T.getVendorName() + "-" + T.getOSName()).str() + "/4.9.3/";
     break;
   case llvm::Triple::x86_64:
     GCCLibPath += ("i386-" + T.getVendorName() + "-" + T.getOSName()).str();
-    GCCLibPath += "/4.5.2/amd64/";
+    GCCLibPath += "/4.9.3/amd64/";
     LibPath += "amd64/";
     break;
   default:
@@ -5247,8 +5248,10 @@
       CmdArgs.push_back(Args.MakeArgString(LibPath + "values-Xa.o"));
       CmdArgs.push_back(Args.MakeArgString(GCCLibPath + "crtbegin.o"));
     }
+    /* //seems to be not necessary after fixing 3849 implement __cxa_atexit/__cxa_finalize
     if (getToolChain().getDriver().CCCIsCXX())
       CmdArgs.push_back(Args.MakeArgString(LibPath + "cxa_finalize.o"));
+    */
   }
 
   CmdArgs.push_back(Args.MakeArgString("-L" + GCCLibPath));
@@ -5281,7 +5284,7 @@
   addProfileRT(getToolChain(), Args, CmdArgs, getToolChain().getTriple());
 
   const char *Exec =
-    Args.MakeArgString(getToolChain().GetProgramPath("ld"));
+    Args.MakeArgString(SUNld);
   C.addCommand(new Command(JA, *this, Exec, CmdArgs));
 }
 
