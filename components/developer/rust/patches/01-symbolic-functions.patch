--- rustc-1.73.0-src/src/llvm-project/llvm/tools/llvm-shlib/CMakeLists.txt	2023-10-03 04:52:43.000000000 +0200
+++ rustc-1.73.0-src/src/llvm-project/llvm/tools/llvm-shlib/CMakeLists.txt.new	2023-11-24 11:02:10.507061505 +0100
@@ -51,13 +51,13 @@
       # Solaris ld does not accept global: *; so there is no way to version *all* global symbols
       set(LIB_NAMES -Wl,--version-script,${LLVM_LIBRARY_DIR}/tools/llvm-shlib/simple_version_script.map ${LIB_NAMES})
     endif()
-    if (NOT MINGW)
+#    if (NOT MINGW)
       # Optimize function calls for default visibility definitions to avoid PLT and
       # reduce dynamic relocations.
       # Note: for -fno-pic default, the address of a function may be different from
       # inside and outside libLLVM.so.
-      target_link_options(LLVM PRIVATE LINKER:-Bsymbolic-functions)
-    endif()
+#      target_link_options(LLVM PRIVATE LINKER:-Bsymbolic-functions)
+#    endif()
   elseif("${CMAKE_SYSTEM_NAME}" STREQUAL "Darwin")
     set(LIB_NAMES -Wl,-all_load ${LIB_NAMES})
   endif()
--- rustc-1.73.0-src/src/llvm-project/clang/tools/clang-shlib/CMakeLists.txt	2023-10-03 04:52:39.000000000 +0200
+++ rustc-1.73.0-src/src/llvm-project/clang/tools/clang-shlib/CMakeLists.txt.new	2023-11-24 11:04:12.544195252 +0100
@@ -50,9 +50,9 @@
                   ${_DEPS})
 # Optimize function calls for default visibility definitions to avoid PLT and
 # reduce dynamic relocations.
-if (NOT APPLE AND NOT MINGW)
-  target_link_options(clang-cpp PRIVATE LINKER:-Bsymbolic-functions)
-endif()
+#if (NOT APPLE AND NOT MINGW)
+#  target_link_options(clang-cpp PRIVATE LINKER:-Bsymbolic-functions)
+#endif()
 if (MINGW OR CYGWIN)
   # The clang-cpp DLL is supposed to export all symbols (except for ones
   # that are explicitly hidden). Normally, this is what happens anyway, but
