.\" tidy man page for the Tidy Sourceforge project
.TH tidy 1 "1 Feb 2007" "HTML Tidy 1.0.0" "User commands"

.SH NAME
\fBtidy\fR - validate, correct, and pretty-print HTML files
.br
.SH SYNOPSIS
\fBtidy\fR [option ...] [file ...] [option ...] [file ...]
.SH DESCRIPTION
Tidy reads HTML, XHTML and XML files and writes cleaned up markup.  For
HTML variants, it detects and corrects many common coding errors and
strives to produce visually equivalent markup that is both W3C
compliant and works on most browsers. A common use of Tidy is to
convert plain HTML to XHTML.  For generic XML files, Tidy is limited to
correcting basic well-formedness errors and pretty printing.
.LP
If no input file is specified, Tidy reads the standard input.  If no
output file is specified, Tidy writes the tidied markup to the standard
output.  If no error file is specified, Tidy writes messages to the
standard error.
For command line options that expect a numerical argument, a default is
assumed if no meaningful value can be found.
.SH OPTIONS

.SS File manipulation

.TP
\fB-output <file>\fR, \fB-o <file>\fR
write output to the specified <file>
(\fIoutput-file: <file>\fR)
.TP
\fB-config <file>\fR
set configuration options from the specified <file>

.TP
\fB-file <file>\fR, \fB-f <file>\fR
write errors to the specified <file>
(\fIerror-file: <file>\fR)
.TP
\fB-modify\fR, \fB-m\fR
modify the original input files
(\fIwrite-back: yes\fR)
.SS Processing directives

.TP
\fB-indent\fR, \fB-i\fR
indent element content
(\fIindent: auto\fR)
.TP
\fB-wrap <column>\fR, \fB-w <column>\fR
wrap text at the specified <column>. 0 is assumed if <column> is
missing. When this option is omitted, the default of the configuration
option "wrap" applies.
(\fIwrap: <column>\fR)
.TP
\fB-upper\fR, \fB-u\fR
force tags to upper case
(\fIuppercase-tags: yes\fR)
.TP
\fB-clean\fR, \fB-c\fR
replace FONT, NOBR and CENTER tags by CSS
(\fIclean: yes\fR)
.TP
\fB-bare\fR, \fB-b\fR
strip out smart quotes and em dashes, etc.
(\fIbare: yes\fR)
.TP
\fB-numeric\fR, \fB-n\fR
output numeric rather than named entities
(\fInumeric-entities: yes\fR)
.TP
\fB-errors\fR, \fB-e\fR
only show errors
(\fImarkup: no\fR)
.TP
\fB-quiet\fR, \fB-q\fR
suppress nonessential output
(\fIquiet: yes\fR)
.TP
\fB-omit\fR
omit optional end tags
(\fIhide-endtags: yes\fR)
.TP
\fB-xml\fR
specify the input is well formed XML
(\fIinput-xml: yes\fR)
.TP
\fB-asxml\fR, \fB-asxhtml\fR
convert HTML to well formed XHTML
(\fIoutput-xhtml: yes\fR)
.TP
\fB-ashtml\fR
force XHTML to well formed HTML
(\fIoutput-html: yes\fR)
.TP
\fB-access <level>\fR
do additional accessibility checks (<level> = 0, 1, 2, 3). 0 is assumed
if <level> is missing.
(\fIaccessibility-check: <level>\fR)
.SS Character encodings

.TP
\fB-raw\fR
output values above 127 without conversion to entities

.TP
\fB-ascii\fR
use ISO-8859-1 for input, US-ASCII for output

.TP
\fB-latin0\fR
use ISO-8859-15 for input, US-ASCII for output

.TP
\fB-latin1\fR
use ISO-8859-1 for both input and output

.TP
\fB-iso2022\fR
use ISO-2022 for both input and output

.TP
\fB-utf8\fR
use UTF-8 for both input and output

.TP
\fB-mac\fR
use MacRoman for input, US-ASCII for output

.TP
\fB-win1252\fR
use Windows-1252 for input, US-ASCII for output

.TP
\fB-ibm858\fR
use IBM-858 (CP850+Euro) for input, US-ASCII for output

.TP
\fB-utf16le\fR
use UTF-16LE for both input and output

.TP
\fB-utf16be\fR
use UTF-16BE for both input and output

.TP
\fB-utf16\fR
use UTF-16 for both input and output

.TP
\fB-big5\fR
use Big5 for both input and output

.TP
\fB-shiftjis\fR
use Shift_JIS for both input and output

.TP
\fB-language <lang>\fR
set the two-letter language code <lang> (for future use)
(\fIlanguage: <lang>\fR)
.SS Miscellaneous

.TP
\fB-version\fR, \fB-v\fR
show the version of Tidy

.TP
\fB-help\fR, \fB-h\fR, \fB-?\fR
list the command line options

.TP
\fB-xml-help\fR
list the command line options in XML format

.TP
\fB-help-config\fR
list all configuration options

.TP
\fB-xml-config\fR
list all configuration options in XML format

.TP
\fB-show-config\fR
list the current configuration settings

.SH USAGE
.LP
Use \fB--\fR\fIoptionX valueX\fR for the detailed configuration option
"optionX" with argument "valueX".  See also below under \fBDetailed
Configuration Options\fR as to how to conveniently group all such
options in a single config file.
.LP
Input/Output default to stdin/stdout respectively. Single letter
options apart from \fB-f\fR and \fB-o\fR may be combined as in:
.LP
.in 1i
\fBtidy -f errs.txt -imu foo.html\fR
.LP
For further info on HTML see \fIhttp://www.w3.org/MarkUp\fR.
.LP
For more information about HTML Tidy, visit the project home page at
\fIhttp://tidy.sourceforge.net\fR.  Here, you will find links to
documentation, mailing lists (with searchable archives) and links to
report bugs.
.SH ENVIRONMENT
.TP
.B HTML_TIDY
Name of the default configuration file.  This should be an absolute
path, since you will probably invoke \fBtidy\fR from different
directories.  The value of HTML_TIDY will be parsed after the
compiled-in default (defined with -DTIDY_CONFIG_FILE), but before any
of the files specified using \fB-config\fR.
.SH "EXIT STATUS"
.IP 0
All input files were processed successfully.
.IP 1
There were warnings.
.IP 2
There were errors.

.SH ______________________________
.SH "  "
.SH "DETAILED CONFIGURATION OPTIONS"
This section describes the Detailed (i.e., "expanded") Options, which
may be specified by preceding each option with \fB--\fR at the command
line, followed by its desired value, OR by placing the options and
values in a configuration file, and telling tidy to read that file with
the \fB-config\fR standard option.
.SH SYNOPSIS
\fBtidy --\fR\fIoption1 \fRvalue1 \fB--\fIoption2 \fRvalue2 [standard
options ...]
.br
\fBtidy -config \fIconfig-file \fR[standard options ...]
.SH WARNING
The options detailed here do not include the "standard" command-line
options (i.e., those preceded by a single '\fB-\fR') described above in
the first section of this man page.
.SH DESCRIPTION
A list of options for configuring the behavior of Tidy, which can be
passed either on the command line, or specified in a configuration
file.
.LP
A Tidy configuration file is simply a text file, where each option
is listed on a separate line in the form
.LP
.in 1i
\fBoption1\fR: \fIvalue1\fR
.br
\fBoption2\fR: \fIvalue2\fR
.br
etc.
.LP
The permissible values for a given option depend on the option's
\fBType\fR.  There are five types: \fIBoolean\fR, \fIAutoBool\fR,
\fIDocType\fR, \fIEnum\fR, and \fIString\fR. Boolean types allow any of
\fIyes/no, y/n, true/false, t/f, 1/0\fR.  AutoBools allow \fIauto\fR in
addition to the values allowed by Booleans.  Integer types take
non-negative integers.  String types generally have no defaults, and
you should provide them in non-quoted form (unless you wish the output
to contain the literal quotes).
.LP
Enum, Encoding, and DocType "types" have a fixed repertoire of items;
consult the \fIExample\fR[s] provided below for the option[s] in
question.
.LP
You only need to provide options and values for those whose defaults
you wish to override, although you may wish to include some
already-defaulted options and values for the sake of documentation and
explicitness.
.LP
Here is a sample config file, with at least one example of each of the
five Types:
.LP
\fI
    // sample Tidy configuration options
    output-xhtml: yes
    add-xml-decl: no
    doctype: strict
    char-encoding: ascii
    indent: auto
    wrap: 76
    repeated-attributes: keep-last
    error-file: errs.txt
\fR
.LP
Below is a summary and brief description of each of the options. They
are listed alphabetically within each category.  There are five
categories: \fIHTML, XHTML, XML\fR options, \fIDiagnostics\fR options,
\fIPretty Print\fR options, \fICharacter Encoding\fR options, and
\fIMiscellaneous\fR options.
.LP
.SH OPTIONS

.SS HTML, XHTML, XML options:

.TP
\fBadd-xml-decl\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should add the XML declaration when
outputting XML or XHTML. Note that if the input already includes an
<?xml ... ?> declaration then this option will be ignored. If the
encoding for the output is different from "ascii", one of the utf
encodings or "raw", the declaration is always added as required by the
XML standard.


.rj 1
\fBSee also\fR: \fIchar-encoding\fR, \fIoutput-encoding\fR
.TP
\fBadd-xml-space\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should add xml:space="preserve" to
elements such as <PRE>, <STYLE> and <SCRIPT> when generating XML. This
is needed if the whitespace in such elements is to be parsed
appropriately without having access to the DTD.
.TP
\fBalt-text\fR

Type:    \fIString\fR
.br
Default: \fI-\fR
.br
Default: \fI-\fR

This option specifies the default "alt=" text Tidy uses for <IMG>
attributes. This feature is dangerous as it suppresses further
accessibility warnings. You are responsible for making your documents
accessible to people who can not see the images!
.TP
\fBassume-xml-procins\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should change the parsing of processing
instructions to require ?> as the terminator rather than >. This option
is automatically set if the input is in XML.
.TP
\fBbare\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should strip Microsoft specific HTML from
Word 2000 documents, and output spaces rather than non-breaking spaces
where they exist in the input.
.TP
\fBclean\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should strip out surplus presentational
tags and attributes replacing them by style rules and structural markup
as appropriate. It works well on the HTML saved by Microsoft Office
products.
.TP
\fBcss-prefix\fR

Type:    \fIString\fR
.br
Default: \fI-\fR
.br
Default: \fI-\fR

This option specifies the prefix that Tidy uses for styles rules. By
default, "c" will be used.
.TP
\fBdoctype\fR

Type:    \fIDocType\fR
.br
Default: \fIauto\fR
.br
Example: \fIomit, auto, strict, transitional, user\fR

This option specifies the DOCTYPE declaration generated by Tidy. If set
to "omit" the output won't contain a DOCTYPE declaration. If set to
"auto" (the default) Tidy will use an educated guess based upon the
contents of the document. If set to "strict", Tidy will set the DOCTYPE
to the strict DTD. If set to "loose", the DOCTYPE is set to the loose
(transitional) DTD. Alternatively, you can supply a string for the
formal public identifier (FPI).
.br

.br
For example:
.br
doctype: "-//ACME//DTD HTML 3.14159//EN"
.br

.br
If you specify the FPI for an XHTML document, Tidy will set the system
identifier to the empty string. For an HTML document, Tidy adds a
system identifier only if one was already present in order to preserve
the processing mode of some browsers. Tidy leaves the DOCTYPE for
generic XML documents unchanged. \fI--doctype omit\fR implies
\fI--numeric-entities yes\fR.
.TP
\fBdrop-empty-paras\fR

Type:    \fIBoolean\fR
.br
Default: \fIyes\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should discard empty paragraphs.
.TP
\fBdrop-font-tags\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should discard <FONT> and <CENTER> tags
without creating the corresponding style rules. This option can be set
independently of the clean option.
.TP
\fBdrop-proprietary-attributes\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should strip out proprietary attributes,
such as MS data binding attributes.
.TP
\fBenclose-block-text\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should insert a <P> element to enclose
any text it finds in any element that allows mixed content for HTML
transitional but not HTML strict.
.TP
\fBenclose-text\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should enclose any text it finds in the
body element within a <P> element. This is useful when you want to take
existing HTML and use it with a style sheet.
.TP
\fBescape-cdata\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should convert <![CDATA[]]> sections to
normal text.
.TP
\fBfix-backslash\fR

Type:    \fIBoolean\fR
.br
Default: \fIyes\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should replace backslash characters
"\fI\\\fR" in URLs by forward slashes "\fI/\fR".
.TP
\fBfix-bad-comments\fR

Type:    \fIBoolean\fR
.br
Default: \fIyes\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should replace unexpected hyphens with
"=" characters when it comes across adjacent hyphens. The default is
yes. This option is provided for users of Cold Fusion which uses the
comment syntax: <!--- --->
.TP
\fBfix-uri\fR

Type:    \fIBoolean\fR
.br
Default: \fIyes\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should check attribute values that carry
URIs for illegal characters and if such are found, escape them as HTML
4 recommends.
.TP
\fBhide-comments\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should print out comments.
.TP
\fBhide-endtags\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should omit optional end-tags when
generating the pretty printed markup. This option is ignored if you are
outputting to XML.
.TP
\fBindent-cdata\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should indent <![CDATA[]]> sections.
.TP
\fBinput-xml\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should use the XML parser rather than the
error correcting HTML parser.
.TP
\fBjoin-classes\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should combine class names to generate a
single new class name, if multiple class assignments are detected on an
element.


.rj 1
\fBSee also\fR: \fIjoin-styles\fR, \fIrepeated-attributes\fR
.TP
\fBjoin-styles\fR

Type:    \fIBoolean\fR
.br
Default: \fIyes\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should combine styles to generate a
single new style, if multiple style values are detected on an element.


.rj 1
\fBSee also\fR: \fIjoin-classes\fR, \fIrepeated-attributes\fR
.TP
\fBliteral-attributes\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should ensure that whitespace characters
within attribute values are passed through unchanged.
.TP
\fBlogical-emphasis\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should replace any occurrence of <I> by
<EM> and any occurrence of <B> by <STRONG>. In both cases, the
attributes are preserved unchanged. This option can be set
independently of the clean and drop-font-tags options.
.TP
\fBlower-literals\fR

Type:    \fIBoolean\fR
.br
Default: \fIyes\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should convert the value of an attribute
that takes a list of predefined values to lower case. This is required
for XHTML documents.
.TP
\fBmerge-divs\fR

Type:    \fIAutoBool\fR
.br
Default: \fIauto\fR
.br
Example: \fIauto, y/n, yes/no, t/f, true/false, 1/0\fR

Can be used to modify behavior of -c (--clean yes) option. This option
specifies if Tidy should merge nested <div> such as
"<div><div>...</div></div>". If set to "auto", the attributes of the
inner <div> are moved to the outer one. As well, nested <div> with ID
attributes are not merged. If set to "yes", the attributes of the inner
<div> are discarded with the exception of "class" and "style".


.rj 1
\fBSee also\fR: \fIclean\fR
.TP
\fBncr\fR

Type:    \fIBoolean\fR
.br
Default: \fIyes\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should allow numeric character
references.
.TP
\fBnew-blocklevel-tags\fR

Type:    \fITag names\fR
.br
Default: \fI-\fR
.br
Example: \fItagX, tagY, ...\fR

This option specifies new block-level tags. This option takes a space
or comma separated list of tag names. Unless you declare new tags, Tidy
will refuse to generate a tidied file if the input includes previously
unknown tags. Note you can't change the content model for elements such
as <TABLE>, <UL>, <OL> and <DL>.


.rj 1
\fBSee also\fR: \fInew-empty-tags\fR, \fInew-inline-tags\fR,
\fInew-pre-tags\fR
.TP
\fBnew-empty-tags\fR

Type:    \fITag names\fR
.br
Default: \fI-\fR
.br
Example: \fItagX, tagY, ...\fR

This option specifies new empty inline tags. This option takes a space
or comma separated list of tag names. Unless you declare new tags, Tidy
will refuse to generate a tidied file if the input includes previously
unknown tags. Remember to also declare empty tags as either inline or
blocklevel.


.rj 1
\fBSee also\fR: \fInew-blocklevel-tags\fR, \fInew-inline-tags\fR,
\fInew-pre-tags\fR
.TP
\fBnew-inline-tags\fR

Type:    \fITag names\fR
.br
Default: \fI-\fR
.br
Example: \fItagX, tagY, ...\fR

This option specifies new non-empty inline tags. This option takes a
space or comma separated list of tag names. Unless you declare new
tags, Tidy will refuse to generate a tidied file if the input includes
previously unknown tags.


.rj 1
\fBSee also\fR: \fInew-blocklevel-tags\fR, \fInew-empty-tags\fR,
\fInew-pre-tags\fR
.TP
\fBnew-pre-tags\fR

Type:    \fITag names\fR
.br
Default: \fI-\fR
.br
Example: \fItagX, tagY, ...\fR

This option specifies new tags that are to be processed in exactly the
same way as HTML's <PRE> element. This option takes a space or comma
separated list of tag names. Unless you declare new tags, Tidy will
refuse to generate a tidied file if the input includes previously
unknown tags. Note you can not as yet add new CDATA elements (similar
to <SCRIPT>).


.rj 1
\fBSee also\fR: \fInew-blocklevel-tags\fR, \fInew-empty-tags\fR,
\fInew-inline-tags\fR
.TP
\fBnumeric-entities\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should output entities other than the
built-in HTML entities (&amp;, &lt;, &gt; and &quot;) in the numeric
rather than the named entity form.


.rj 1
\fBSee also\fR: \fIdoctype\fR
.TP
\fBoutput-html\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should generate pretty printed output,
writing it as HTML.
.TP
\fBoutput-xhtml\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should generate pretty printed output,
writing it as extensible HTML. This option causes Tidy to set the
DOCTYPE and default namespace as appropriate to XHTML. If a DOCTYPE or
namespace is given they will checked for consistency with the content
of the document. In the case of an inconsistency, the corrected values
will appear in the output. For XHTML, entities can be written as named
or numeric entities according to the setting of the "numeric-entities"
option. The original case of tags and attributes will be preserved,
regardless of other options.
.TP
\fBoutput-xml\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should pretty print output, writing it as
well-formed XML. Any entities not defined in XML 1.0 will be written as
numeric entities to allow them to be parsed by a XML parser. The
original case of tags and attributes will be preserved, regardless of
other options.
.TP
\fBquote-ampersand\fR

Type:    \fIBoolean\fR
.br
Default: \fIyes\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should output unadorned & characters as
&amp;.
.TP
\fBquote-marks\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should output " characters as &quot; as
is preferred by some editing environments. The apostrophe character '
is written out as &#39; since many web browsers don't yet support
&apos;.
.TP
\fBquote-nbsp\fR

Type:    \fIBoolean\fR
.br
Default: \fIyes\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should output non-breaking space
characters as entities, rather than as the Unicode character value 160
(decimal).
.TP
\fBrepeated-attributes\fR

Type:    \fIenum\fR
.br
Default: \fIkeep-last\fR
.br
Example: \fIkeep-first, keep-last\fR

This option specifies if Tidy should keep the first or last attribute,
if an attribute is repeated, e.g. has two align attributes.


.rj 1
\fBSee also\fR: \fIjoin-classes\fR, \fIjoin-styles\fR
.TP
\fBreplace-color\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should replace numeric values in color
attributes by HTML/XHTML color names where defined, e.g. replace
"#ffffff" with "white".
.TP
\fBshow-body-only\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should print only the contents of the
body tag as an HTML fragment. Useful for incorporating existing whole
pages as a portion of another page.
.TP
\fBuppercase-attributes\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should output attribute names in upper
case. The default is no, which results in lower case attribute names,
except for XML input, where the original case is preserved.
.TP
\fBuppercase-tags\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should output tag names in upper case.
The default is no, which results in lower case tag names, except for
XML input, where the original case is preserved.
.TP
\fBword-2000\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should go to great pains to strip out all
the surplus stuff Microsoft Word 2000 inserts when you save Word
documents as "Web pages". Doesn't handle embedded images or VML. You
should consider using Word's "Save As: Web Page, Filtered".
.SS Diagnostics options:

.TP
\fBaccessibility-check\fR

Type:    \fIenum\fR
.br
Default: \fI0 (Tidy Classic)\fR
.br
Example: \fI0 (Tidy Classic), 1 (Priority 1 Checks), 2 (Priority 2
Checks), 3 (Priority 3 Checks)\fR

This option specifies what level of accessibility checking, if any,
that Tidy should do. Level 0 is equivalent to Tidy Classic's
accessibility checking. For more information on Tidy's accessibility
checking, visit the Adaptive Technology Resource Centre at the
University of Toronto at
\fIhttp://www.aprompt.ca/Tidy/accessibilitychecks.html\fR.
.TP
\fBshow-errors\fR

Type:    \fIInteger\fR
.br
Default: \fI6\fR
.br
Example: \fI0, 1, 2, ...\fR

This option specifies the number Tidy uses to determine if further
errors should be shown. If set to 0, then no errors are shown.
.TP
\fBshow-warnings\fR

Type:    \fIBoolean\fR
.br
Default: \fIyes\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should suppress warnings. This can be
useful when a few errors are hidden in a flurry of warnings.
.SS Pretty Print options:

.TP
\fBbreak-before-br\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should output a line break before each
<BR> element.
.TP
\fBindent\fR

Type:    \fIAutoBool\fR
.br
Default: \fIno\fR
.br
Example: \fIauto, y/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should indent block-level tags. If set to
"auto", this option causes Tidy to decide whether or not to indent the
content of tags such as TITLE, H1-H6, LI, TD, TD, or P depending on
whether or not the content includes a block-level element. You are
advised to avoid setting indent to yes as this can expose layout bugs
in some browsers.


.rj 1
\fBSee also\fR: \fIindent-spaces\fR
.TP
\fBindent-attributes\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should begin each attribute on a new
line.
.TP
\fBindent-spaces\fR

Type:    \fIInteger\fR
.br
Default: \fI2\fR
.br
Example: \fI0, 1, 2, ...\fR

This option specifies the number of spaces Tidy uses to indent content,
when indentation is enabled.


.rj 1
\fBSee also\fR: \fIindent\fR
.TP
\fBmarkup\fR

Type:    \fIBoolean\fR
.br
Default: \fIyes\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should generate a pretty printed version
of the markup. Note that Tidy won't generate a pretty printed version
if it finds significant errors (see force-output).
.TP
\fBpunctuation-wrap\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should line wrap after some Unicode or
Chinese punctuation characters.
.TP
\fBsplit\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

Currently not used. Tidy Classic only.
.TP
\fBtab-size\fR

Type:    \fIInteger\fR
.br
Default: \fI8\fR
.br
Example: \fI0, 1, 2, ...\fR

This option specifies the number of columns that Tidy uses between
successive tab stops. It is used to map tabs to spaces when reading the
input. Tidy never outputs tabs.
.TP
\fBvertical-space\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should add some empty lines for
readability.
.TP
\fBwrap\fR

Type:    \fIInteger\fR
.br
Default: \fI68\fR
.br
Example: \fI0 (no wrapping), 1, 2, ...\fR

This option specifies the right margin Tidy uses for line wrapping.
Tidy tries to wrap lines so that they do not exceed this length. Set
wrap to zero if you want to disable line wrapping.
.TP
\fBwrap-asp\fR

Type:    \fIBoolean\fR
.br
Default: \fIyes\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should line wrap text contained within
ASP pseudo elements, which look like: <% ... %>.
.TP
\fBwrap-attributes\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should line wrap attribute values, for
easier editing. This option can be set independently of
wrap-script-literals.


.rj 1
\fBSee also\fR: \fIwrap-script-literals\fR
.TP
\fBwrap-jste\fR

Type:    \fIBoolean\fR
.br
Default: \fIyes\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should line wrap text contained within
JSTE pseudo elements, which look like: <# ... #>.
.TP
\fBwrap-php\fR

Type:    \fIBoolean\fR
.br
Default: \fIyes\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should line wrap text contained within
PHP pseudo elements, which look like: <?php ... ?>.
.TP
\fBwrap-script-literals\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should line wrap string literals that
appear in script attributes. Tidy wraps long script string literals by
inserting a backslash character before the line break.


.rj 1
\fBSee also\fR: \fIwrap-attributes\fR
.TP
\fBwrap-sections\fR

Type:    \fIBoolean\fR
.br
Default: \fIyes\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should line wrap text contained within
<![ ... ]> section tags.
.SS Character Encoding options:

.TP
\fBascii-chars\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

Can be used to modify behavior of -c (--clean yes) option. If set to
"yes" when using -c, &emdash;, &rdquo;, and other named character
entities are downgraded to their closest ascii equivalents.


.rj 1
\fBSee also\fR: \fIclean\fR
.TP
\fBchar-encoding\fR

Type:    \fIEncoding\fR
.br
Default: \fIascii\fR
.br
Example: \fIraw, ascii, latin0, latin1, utf8, iso2022, mac, win1252,
ibm858, utf16le, utf16be, utf16, big5, shiftjis\fR

This option specifies the character encoding Tidy uses for both the
input and output. For ascii, Tidy will accept Latin-1 (ISO-8859-1)
character values, but will use entities for all characters whose value
> 127. For raw, Tidy will output values above 127 without translating
them into entities. For latin1, characters above 255 will be written as
entities. For utf8, Tidy assumes that both input and output is encoded
as UTF-8. You can use iso2022 for files encoded using the ISO-2022
family of encodings e.g. ISO-2022-JP. For mac and win1252, Tidy will
accept vendor specific character values, but will use entities for all
characters whose value > 127.


.rj 1
\fBSee also\fR: \fIinput-encoding\fR, \fIoutput-encoding\fR
.TP
\fBinput-encoding\fR

Type:    \fIEncoding\fR
.br
Default: \fIlatin1\fR
.br
Example: \fIraw, ascii, latin0, latin1, utf8, iso2022, mac, win1252,
ibm858, utf16le, utf16be, utf16, big5, shiftjis\fR

This option specifies the character encoding Tidy uses for the input.
See char-encoding for more info.


.rj 1
\fBSee also\fR: \fIchar-encoding\fR
.TP
\fBlanguage\fR

Type:    \fIString\fR
.br
Default: \fI-\fR
.br
Default: \fI-\fR

Currently not used, but this option specifies the language Tidy uses
(for instance "en").
.TP
\fBnewline\fR

Type:    \fIenum\fR
.br
Default: \fI\fIPlatform dependent\fR\fR
.br
Example: \fILF, CRLF, CR\fR

The default is appropriate to the current platform: CRLF on PC-DOS,
MS-Windows and OS/2, CR on Classic Mac OS, and LF everywhere else (Unix
and Linux).
.TP
\fBoutput-bom\fR

Type:    \fIAutoBool\fR
.br
Default: \fIauto\fR
.br
Example: \fIauto, y/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should write a Unicode Byte Order Mark
character (BOM; also known as Zero Width No-Break Space; has value of
U+FEFF) to the beginning of the output; only for UTF-8 and UTF-16
output encodings. If set to "auto", this option causes Tidy to write a
BOM to the output only if a BOM was present at the beginning of the
input. A BOM is always written for XML/XHTML output using UTF-16 output
encodings.
.TP
\fBoutput-encoding\fR

Type:    \fIEncoding\fR
.br
Default: \fIascii\fR
.br
Example: \fIraw, ascii, latin0, latin1, utf8, iso2022, mac, win1252,
ibm858, utf16le, utf16be, utf16, big5, shiftjis\fR

This option specifies the character encoding Tidy uses for the output.
See char-encoding for more info. May only be different from
input-encoding for Latin encodings (ascii, latin0, latin1, mac,
win1252, ibm858).


.rj 1
\fBSee also\fR: \fIchar-encoding\fR
.SS Miscellaneous options:

.TP
\fBerror-file\fR

Type:    \fIString\fR
.br
Default: \fI-\fR
.br
Default: \fI-\fR

This option specifies the error file Tidy uses for errors and warnings.
Normally errors and warnings are output to "stderr".


.rj 1
\fBSee also\fR: \fIoutput-file\fR
.TP
\fBforce-output\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should produce output even if errors are
encountered. Use this option with care - if Tidy reports an error, this
means Tidy was not able to, or is not sure how to, fix the error, so
the resulting output may not reflect your intention.
.TP
\fBgnu-emacs\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should change the format for reporting
errors and warnings to a format that is more easily parsed by GNU
Emacs.
.TP
\fBgnu-emacs-file\fR

Type:    \fIString\fR
.br
Default: \fI-\fR
.br
Default: \fI-\fR

Used internally.
.TP
\fBkeep-time\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should keep the original modification
time of files that Tidy modifies in place. The default is no. Setting
the option to yes allows you to tidy files without causing these files
to be uploaded to a web server when using a tool such as SiteCopy. Note
this feature is not supported on some platforms.
.TP
\fBoutput-file\fR

Type:    \fIString\fR
.br
Default: \fI-\fR
.br
Default: \fI-\fR

This option specifies the output file Tidy uses for markup. Normally
markup is written to "stdout".


.rj 1
\fBSee also\fR: \fIerror-file\fR
.TP
\fBquiet\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should output the summary of the numbers
of errors and warnings, or the welcome or informational messages.
.TP
\fBslide-style\fR

Type:    \fIString\fR
.br
Default: \fI-\fR
.br
Default: \fI-\fR

Currently not used. Tidy Classic only.
.TP
\fBtidy-mark\fR

Type:    \fIBoolean\fR
.br
Default: \fIyes\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should add a meta element to the document
head to indicate that the document has been tidied. Tidy won't add a
meta element if one is already present.
.TP
\fBwrite-back\fR

Type:    \fIBoolean\fR
.br
Default: \fIno\fR
.br
Example: \fIy/n, yes/no, t/f, true/false, 1/0\fR

This option specifies if Tidy should write back the tidied markup to
the same file it read from. You are advised to keep copies of important
files before tidying them, as on rare occasions the result may not be
what you expect.
.SH "SEE ALSO"
HTML Tidy Project Page at \fIhttp://tidy.sourceforge.net\fR
.SH AUTHOR
\fBTidy\fR was written by Dave Raggett <\fIdsr@w3.org\fR>, and is now
maintained and developed by the Tidy team at
\fIhttp://tidy.sourceforge.net/\fR.  It is released under the \fIMIT
Licence\fR.
.LP
Generated automatically with HTML Tidy released on 1 September 2005.
