Testing 'true' at line number 8
Testing 'false' at line number 12
Testing 'null' at line number 16
Testing '1' at line number 20
Testing '-1' at line number 25
Testing '{}' at line number 31
Testing '[]' at line number 35
Testing '{x: -1}' at line number 39
Testing '.' at line number 46
Testing '"Aa\r\n\t\b\f\u03bc"' at line number 52
Testing '.' at line number 56
Testing '"inter\("pol" + "ation")"' at line number 60
Testing '@text,@json,([1,.] | (@csv, @tsv)),@html,@uri,@sh,@base64' at line number 64
Testing '@base64' at line number 76
Testing '@uri' at line number 80
Testing '@html "<b>\(.)</b>"' at line number 84
Testing '[.[]|tojson|fromjson]' at line number 88
Testing '{a: 1}' at line number 96
Testing '{a,b,(.d):.a,e:.b}' at line number 100
Testing '{"a",b,"a$\(1+1)"}' at line number 104
Testing '.foo' at line number 112
Testing '.foo | .bar' at line number 116
Testing '.foo.bar' at line number 120
Testing '.foo_bar' at line number 124
Testing '.["foo"].bar' at line number 128
Testing '."foo"."bar"' at line number 132
Testing '[.[]|.foo?]' at line number 136
Testing '[.[]|.foo?.bar?]' at line number 140
Testing '[..]' at line number 144
Testing '[.[]|.[]?]' at line number 148
Testing '[.[]|.[1:3]?]' at line number 152
Testing 'try (.foo[-1] = 0) catch .' at line number 160
Testing 'try (.foo[-2] = 0) catch .' at line number 164
Testing '.[-1] = 5' at line number 168
Testing '.[-2] = 5' at line number 172
Testing '.[]' at line number 180
Testing '1,1' at line number 186
Testing '1,.' at line number 191
Testing '[.]' at line number 196
Testing '[[2]]' at line number 200
Testing '[{}]' at line number 204
Testing '[.[]]' at line number 208
Testing '[(.,1),((.,.[]),(2,3))]' at line number 212
Testing '[([5,5][]),.,.[]]' at line number 216
Testing '{x: (1,2)},{x:3} | .x' at line number 220
Testing '.[-2]' at line number 226
Testing '[range(0;10)]' at line number 230
Testing '[range(0;10;3)]' at line number 234
Testing '[range(0;10;-1)]' at line number 238
Testing '[range(0;-5;-1)]' at line number 242
Testing '[while(.<100; .*2)]' at line number 246
Testing '[(label $here | .[] | if .>1 then break $here else . end), "hi!"]' at line number 250
Testing '[(label $here | .[] | if .>1 then break $here else . end), "hi!"]' at line number 254
Testing '. as $foo | break $foo' at line number 259
Testing '[.[]|[.,1]|until(.[0] < 1; [.[0] - 1, .[1] * .[0]])|.[1]]' at line number 262
Testing '[label $out | foreach .[] as $item ([3, null]; if .[0] < 1 then break $out else [.[0] -1, $item] end; .[1])]' at line number 266
Testing '[foreach range(5) as $item (0; $item)]' at line number 270
Testing '[foreach .[] as [$i, $j] (0; . + $i - $j)]' at line number 274
Testing '[foreach .[] as {a:$a} (0; . + $a; -.)]' at line number 278
Testing '[limit(3; .[])]' at line number 282
Testing '[first(range(.)), last(range(.)), nth(0; range(.)), nth(5; range(.)), try nth(-1; range(.)) catch .]' at line number 286
Testing '[limit(5,7; range(9))]' at line number 296
Testing '[nth(5,7; range(9;0;-1))]' at line number 301
Testing '[range(0,1,2;4,3,2;2,3)]' at line number 306
Testing '[range(3,5)]' at line number 311
Testing '[(index(",","|"), rindex(",","|")), indices(",","|")]' at line number 316
Testing 'join(",","/")' at line number 321
Testing '[.[]|join("a")]' at line number 326
Testing 'flatten(3,2,1)' at line number 331
Testing '[.[3:2], .[-5:4], .[:-2], .[-2:], .[3:3][1:], .[10:]]' at line number 342
Testing '[.[3:2], .[-5:4], .[:-2], .[-2:], .[3:3][1:], .[10:]]' at line number 346
Testing 'del(.[2:4],.[0],.[-2:])' at line number 350
Testing '.[2:4] = ([], ["a","b"], ["a","b","c"])' at line number 354
Testing '1 as $x | 2 as $y | [$x,$y,$x]' at line number 365
Testing '[1,2,3][] as $x | [[4,5,6,7][$x]]' at line number 369
Testing '42 as $x | . | . | . + 432 | $x + 1' at line number 375
Testing '1 as $x | [$x,$x,$x as $x | $x]' at line number 379
Testing '[1, {c:3, d:4}] as [$a, {c:$b, b:$c}] | $a, $b, $c' at line number 383
Testing '. as {as: $kw, "str": $str, ("e"+"x"+"p"): $exp} | [$kw, $str, $exp]' at line number 389
Testing '.[] as [$a, $b] | [$b, $a]' at line number 393
Testing '. as $i | . as [$i] | $i' at line number 398
Testing '. as [$i] | . as $i | $i' at line number 402
Testing '. as [] | null' at line number 407
Testing '. as {} | null' at line number 411
Testing '1+1' at line number 420
Testing '1+1' at line number 424
Testing '2-1' at line number 428
Testing '2-(-1)' at line number 432
Testing '1e+0+0.001e3' at line number 436
Testing '.+4' at line number 440
Testing '.+null' at line number 444
Testing 'null+.' at line number 448
Testing '.a+.b' at line number 452
Testing '[1,2,3] + [.]' at line number 456
Testing '{"a":1} + {"b":2} + {"c":3}' at line number 460
Testing '"asdf" + "jkl;" + . + . + .' at line number 464
Testing '"\u0000\u0020\u0000" + .' at line number 468
Testing '42 - .' at line number 472
Testing '[1,2,3,4,1] - [.,3]' at line number 476
Testing '[10 * 20, 20 / .]' at line number 480
Testing '1 + 2 * 2 + 10 / 2' at line number 484
Testing '[16 / 4 / 2, 16 / 4 * 2, 16 - 4 - 2, 16 - 4 + 2]' at line number 488
Testing '25 % 7' at line number 492
Testing '49732 % 472' at line number 496
Testing '1 + tonumber + ("10" | tonumber)' at line number 500
Testing '[{"a":42},.object,10,.num,false,true,null,"b",[1,4]] | .[] as $x | [$x == .[]]' at line number 504
Testing '[.[] | length]' at line number 516
Testing 'map(keys)' at line number 520
Testing '[1,2,empty,3,empty,4]' at line number 524
Testing 'map(add)' at line number 528
Testing 'map_values(.+1)' at line number 532
Testing 'def f: . + 1; def g: def g: . + 100; f | g | f; (f | g), g' at line number 541
Testing 'def f: (1000,2000); f' at line number 546
Testing 'def f(a;b;c;d;e;f): [a+1,b,c,d,e,f]; f(.[0];.[1];.[0];.[0];.[0];.[0])' at line number 551
Testing 'def a: 0; . | a' at line number 556
Testing 'def f(a;b;c;d;e;f;g;h;i;j): [j,i,h,g,f,e,d,c,b,a]; f(.[0];.[1];.[2];.[3];.[4];.[5];.[6];.[7];.[8];.[9])' at line number 561
Testing '([1,2] + [4,5])' at line number 565
Testing 'true' at line number 569
Testing 'null,1,null' at line number 573
Testing '[1,2,3]' at line number 579
Testing '[.[]|floor]' at line number 583
Testing '[.[]|sqrt]' at line number 587
Testing '(add / length) as $m | map((. - $m) as $d | $d * $d) | add / length | sqrt' at line number 591
Testing 'atan * 4 * 1000000|floor / 1000000' at line number 600
Testing '[(3.141592 / 2) * (range(0;20) / 20)|cos * 1000000|floor / 1000000]' at line number 604
Testing '[(3.141592 / 2) * (range(0;20) / 20)|sin * 1000000|floor / 1000000]' at line number 608
Testing 'def f(x): x | x; f([.], . + [42])' at line number 613
Testing 'def f: .+1; def g: f; def f: .+100; def f(a):a+.+11; [(g|f(20)), f]' at line number 621
Testing 'def id(x):x; 2000 as $x | def f(x):1 as $x | id([$x, x, x]); def g(x): 100 as $x | f($x,$x+x); g($x)' at line number 626
Testing 'def x(a;b): a as $a | b as $b | $a + $b; def y($a;$b): $a + $b; def check(a;b): [x(a;b)] == [y(a;b)]; check(.[];.[]*2)' at line number 631
Testing '[[20,10][1,0] as $x | def f: (100,200) as $y | def g: [$x + $y, .]; . + $x | g; f[0] | [f][0][1] | f]' at line number 637
Testing 'def fac: if . == 1 then 1 else . * (. - 1 | fac) end; [.[] | fac]' at line number 642
Testing 'reduce .[] as $x (0; . + $x)' at line number 652
Testing 'reduce .[] as [$i, {j:$j}] (0; . + $i - $j)' at line number 656
Testing 'reduce [[1,2,10], [3,4,10]][] as [$i,$j] (0; . + $i * $j)' at line number 660
Testing '. as $dot|any($dot[];not)' at line number 664
Testing '. as $dot|any($dot[];not)' at line number 668
Testing '. as $dot|all($dot[];.)' at line number 672
Testing '. as $dot|all($dot[];.)' at line number 676
Testing 'path(.foo[0,1])' at line number 684
Testing 'path(.[] | select(.>3))' at line number 689
Testing 'path(.)' at line number 693
Testing 'try path(.a | map(select(.b == 0))) catch .' at line number 697
Testing 'try path(.a | map(select(.b == 0)) | .[0]) catch .' at line number 701
Testing 'try path(.a | map(select(.b == 0)) | .c) catch .' at line number 705
Testing 'try path(.a | map(select(.b == 0)) | .[]) catch .' at line number 709
Testing 'path(.a[path(.b)[0]])' at line number 713
Testing '[paths]' at line number 717
Testing '[leaf_paths]' at line number 721
Testing '["foo",1] as $p | getpath($p), setpath($p; 20), delpaths([$p])' at line number 725
Testing 'map(getpath([2])), map(setpath([2]; 42)), map(delpaths([[2]]))' at line number 731
Testing 'map(delpaths([[0,"foo"]]))' at line number 737
Testing '["foo",1] as $p | getpath($p), setpath($p; 20), delpaths([$p])' at line number 741
Testing 'delpaths([[-200]])' at line number 747
Testing 'del(.), del(empty), del((.foo,.bar,.baz) | .[2,3,0]), del(.foo[0], .bar[0], .foo, .baz.bar[0].x)' at line number 751
Testing '.message = "goodbye"' at line number 761
Testing '.foo = .bar' at line number 765
Testing '.foo |= .+1' at line number 769
Testing '.[] += 2, .[] *= 2, .[] -= 2, .[] /= 2, .[] %=2' at line number 773
Testing '[.[] % 7]' at line number 781
Testing '.foo += .foo' at line number 785
Testing '.[0].a |= {"old":., "new":(.+1)}' at line number 789
Testing 'def inc(x): x |= .+1; inc(.[].a)' at line number 793
Testing '.[2][3] = 1' at line number 797
Testing '.foo[2].bar = 1' at line number 801
Testing 'try ((map(select(.a == 1))[].b) = 10) catch .' at line number 805
Testing 'try ((map(select(.a == 1))[].a) |= .+1) catch .' at line number 809
Testing 'def x: .[1,2]; x=10' at line number 813
Testing 'try (def x: reverse; x=10) catch .' at line number 817
Testing '[.[] | if .foo then "yep" else "nope" end]' at line number 825
Testing '[.[] | if .baz then "strange" elif .foo then "yep" else "nope" end]' at line number 829
Testing '[.[] | [.foo[] // .bar]]' at line number 836
Testing '.[] //= .[0]' at line number 840
Testing '.[] | [.[0] and .[1], .[0] or .[1]]' at line number 844
Testing '[.[] | not]' at line number 851
Testing '[10 > 0, 10 > 10, 10 > 20, 10 < 0, 10 < 10, 10 < 20]' at line number 856
Testing '[10 >= 0, 10 >= 10, 10 >= 20, 10 <= 0, 10 <= 10, 10 <= 20]' at line number 860
Testing '[ 10 == 10, 10 != 10, 10 != 11, 10 == 11]' at line number 865
Testing '["hello" == "hello", "hello" != "hello", "hello" == "world", "hello" != "world" ]' at line number 869
Testing '[[1,2,3] == [1,2,3], [1,2,3] != [1,2,3], [1,2,3] == [4,5,6], [1,2,3] != [4,5,6]]' at line number 873
Testing '[{"foo":42} == {"foo":42},{"foo":42} != {"foo":42}, {"foo":42} != {"bar":42}, {"foo":42} == {"bar":42}]' at line number 877
Testing '[{"foo":[1,2,{"bar":18},"world"]} == {"foo":[1,2,{"bar":18},"world"]},{"foo":[1,2,{"bar":18},"world"]} == {"foo":[1,2,{"bar":19},"world"]}]' at line number 882
Testing '[("foo" | contains("foo")), ("foobar" | contains("foo")), ("foo" | contains("foobar"))]' at line number 887
Testing '[.[]|try if . == 0 then error("foo") elif . == 1 then .a elif . == 2 then empty else . end catch .]' at line number 892
Testing '[.[]|(.a, .a)?]' at line number 896
Testing '[[.[]|[.a,.a]]?]' at line number 900
Testing 'try error("\($__loc__)") catch .' at line number 904
Testing '[.[]|startswith("foo")]' at line number 909
Testing '[.[]|endswith("foo")]' at line number 913
Testing '[.[] | split(", ")]' at line number 917
Testing 'split("")' at line number 921
Testing '[.[]|ltrimstr("foo")]' at line number 925
Testing '[.[]|rtrimstr("foo")]' at line number 929
Testing '[(index(","), rindex(",")), indices(",")]' at line number 933
Testing 'indices(1)' at line number 937
Testing 'indices([1,2])' at line number 941
Testing 'indices([1,2])' at line number 945
Testing 'indices(", ")' at line number 949
Testing '[.[]|split(",")]' at line number 953
Testing '[.[]|split(", ")]' at line number 957
Testing '[.[] * 3]' at line number 961
Testing '[.[] / ","]' at line number 965
Testing '[.[] / ", "]' at line number 969
Testing 'map(.[1] as $needle | .[0] | contains($needle))' at line number 973
Testing 'map(.[1] as $needle | .[0] | contains($needle))' at line number 977
Testing '[({foo: 12, bar:13} | contains({foo: 12})), ({foo: 12} | contains({})), ({foo: 12, bar:13} | contains({baz:14}))]' at line number 981
Testing '{foo: {baz: 12, blap: {bar: 13}}, bar: 14} | contains({bar: 14, foo: {blap: {}}})' at line number 985
Testing '{foo: {baz: 12, blap: {bar: 13}}, bar: 14} | contains({bar: 14, foo: {blap: {bar: 14}}})' at line number 989
Testing 'sort' at line number 993
Testing '(sort_by(.b) | sort_by(.a)), sort_by(.a, .b), sort_by(.b, .c), group_by(.b), group_by(.a + .b - .c == 2)' at line number 997
Testing 'unique' at line number 1005
Testing 'unique' at line number 1009
Testing '[min, max, min_by(.[1]), max_by(.[1]), min_by(.[2]), max_by(.[2])]' at line number 1013
Testing '[min,max,min_by(.),max_by(.)]' at line number 1017
Testing '.foo[.baz]' at line number 1021
Testing '.[] | .error = "no, it's OK"' at line number 1025
Testing '[{a:1}] | .[] | .a=999' at line number 1029
Testing 'to_entries' at line number 1033
Testing 'from_entries' at line number 1037
Testing 'from_entries' at line number 1041
Testing 'with_entries(.key |= "KEY_" + .)' at line number 1045
Testing 'map(has("foo"))' at line number 1049
Testing 'map(has(2))' at line number 1053
Testing 'keys' at line number 1057
Testing '[][.]' at line number 1061
Testing 'map([1,2][0:.])' at line number 1065
Testing '{"k": {"a": 1, "b": 2}} * .' at line number 1071
Testing '{"k": {"a": 1, "b": 2}, "hello": {"x": 1}} * .' at line number 1075
Testing '{"k": {"a": 1, "b": 2}, "hello": 1} * .' at line number 1079
Testing '{"a": {"b": 1}, "c": {"d": 2}, "e": 5} * .' at line number 1083
Testing '[.[]|arrays]' at line number 1087
Testing '[.[]|objects]' at line number 1091
Testing '[.[]|iterables]' at line number 1095
Testing '[.[]|scalars]' at line number 1099
Testing '[.[]|values]' at line number 1103
Testing '[.[]|booleans]' at line number 1107
Testing '[.[]|nulls]' at line number 1111
Testing 'flatten' at line number 1115
Testing 'flatten(0)' at line number 1119
Testing 'flatten(2)' at line number 1123
Testing 'flatten(2)' at line number 1127
Testing 'try flatten(-1) catch .' at line number 1131
Testing 'transpose' at line number 1135
Testing 'ascii_upcase' at line number 1139
Testing 'bsearch(4)' at line number 1143
Testing '[strptime("%Y-%m-%dT%H:%M:%SZ")|(.,mktime)]' at line number 1147
Testing 'strftime("%Y-%m-%dT%H:%M:%SZ")' at line number 1151
Testing 'strftime("%A, %B %e, %Y")' at line number 1155
Testing 'gmtime' at line number 1159
Testing 'import "a" as foo; import "b" as bar; def fooa: foo::a; [fooa, bar::a, bar::b, foo::a]' at line number 1164
Testing 'import "c" as foo; [foo::a, foo::c]' at line number 1168
Testing 'include "c"; [a, c]' at line number 1172
Testing 'modulemeta' at line number 1176
Testing 'import "syntaxerror" as e; .' at line number 1181
Testing '%::wat' at line number 1185
Testing 'import "test_bind_order" as check; check::check' at line number 1188
Testing 'try -. catch .' at line number 1192
Testing 'try join(",") catch .' at line number 1196
Testing 'try join(",") catch .' at line number 1200
Testing '{if:0,and:1,or:2,then:3,else:4,elif:5,end:6,as:7,def:8,reduce:9,foreach:10,try:11,catch:12,label:13,import:14,include:15,module:16}' at line number 1204
Testing 'try (1/.) catch .' at line number 1208
Testing 'try (1%.) catch .' at line number 1212
Testing '1/0' at line number 1217
Testing '[range(-52;52;1)] as $powers | [$powers[]|pow(2;.)|log2] == $powers' at line number 1221
Testing '[range(-99/2;99/2;1)] as $orig | [$orig[]|pow(2;.)|log2] as $back | ($orig|keys)[]|. as $k | (($orig|.[$k])-($back|.[$k]))|if . < 0 then . * -1 else . end|select(.>.00005)' at line number 1225
Testing '}' at line number 1229
Testing '(.[{}] = 0)?' at line number 1232
267 of 267 tests passed (0 malformed)
