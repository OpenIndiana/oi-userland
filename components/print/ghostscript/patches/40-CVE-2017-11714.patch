From: Markus Koschany <apo@debian.org>
Date: Mon, 31 Jul 2017 20:23:42 +0200
Subject: CVE-2017-11714

Bug-Debian: https://bugs.debian.org/869977
Origin: http://git.ghostscript.com/?p=ghostpdl.git;a=commit;h=671fd59eb657743aa86fbc1895cb15872a317caa
---
 psi/ztoken.c | 14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

diff --git a/psi/ztoken.c b/psi/ztoken.c
index 5213f94..58cc626 100644
--- ghostscript-9.00/psi/ztoken.c.~1~	2017-08-29 12:18:05.145661193 +0000
+++ ghostscript-9.00/psi/ztoken.c	2017-08-29 12:20:46.188906217 +0000
@@ -105,6 +105,12 @@
     int code;
     ref token;
 
+    /* Since we might free pstate below, and we're dealing with
+     * gc memory referenced by the stack, we need to explicitly
+     * remove the reference to pstate from the stack, otherwise
+     * the garbager will fall over
+     */
+    make_null(osp);
     /* Note that scan_token may change osp! */
     pop(1);			/* remove the file or scanner state */
 again:
@@ -181,8 +187,14 @@
 static int
 tokenexec_continue(i_ctx_t *i_ctx_p, scanner_state * pstate, bool save)
 {
-    os_ptr op;
+    os_ptr op = osp;
     int code;
+    /* Since we might free pstate below, and we're dealing with
+     * gc memory referenced by the stack, we need to explicitly
+     * remove the reference to pstate from the stack, otherwise
+     * the garbager will fall over
+     */
+    make_null(osp);
     /* Note that scan_token may change osp! */
     pop(1);
 again:
