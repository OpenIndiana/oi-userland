# Description: fix heap overflows via crafted jp2 file
# Origin: vendor, https://bugzilla.redhat.com/attachment.cgi?id=961994&action=diff
# Bug-Debian: https://bugs.debian.org/772036
# Bug-RedHat: https://bugzilla.redhat.com/show_bug.cgi?id=1167537
# Author: Tomas Hoger <thoger@redhat.com>

diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' ghostscript-8.71.dfsg.1~/jasper/src/libjasper/jpc/jpc_dec.c ghostscript-8.71.dfsg.1/jasper/src/libjasper/jpc/jpc_dec.c
--- ghostscript-8.71.dfsg.1~/jasper/src/libjasper/jpc/jpc_dec.c	2014-12-05 15:45:59.000000000 -0500
+++ ghostscript-8.71.dfsg.1/jasper/src/libjasper/jpc/jpc_dec.c	2014-12-05 15:47:13.214854754 -0500
@@ -1295,7 +1295,7 @@
 	jpc_coc_t *coc = &ms->parms.coc;
 	jpc_dec_tile_t *tile;
 
-	if (JAS_CAST(int, coc->compno) > dec->numcomps) {
+	if (JAS_CAST(int, coc->compno) >= dec->numcomps) {
 		jas_eprintf(
 		  "invalid component number in COC marker segment\n");
 		return -1;
@@ -1322,7 +1322,7 @@
 	jpc_rgn_t *rgn = &ms->parms.rgn;
 	jpc_dec_tile_t *tile;
 
-	if (JAS_CAST(int, rgn->compno) > dec->numcomps) {
+	if (JAS_CAST(int, rgn->compno) >= dec->numcomps) {
 		jas_eprintf(
 		  "invalid component number in RGN marker segment\n");
 		return -1;
@@ -1372,7 +1372,7 @@
 	jpc_qcc_t *qcc = &ms->parms.qcc;
 	jpc_dec_tile_t *tile;
 
-	if (JAS_CAST(int, qcc->compno) > dec->numcomps) {
+	if (JAS_CAST(int, qcc->compno) >= dec->numcomps) {
 		jas_eprintf(
 		  "invalid component number in QCC marker segment\n");
 		return -1;
