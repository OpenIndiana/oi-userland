# Description: CVE-2014-8138: heap overflow in jp2_decode()
# Origin: vendor, https://bugzilla.redhat.com/attachment.cgi?id=967280
# Bug-Debian: https://bugs.debian.org/773463
# Bug-RedHat: https://bugzilla.redhat.com/show_bug.cgi?id=1173162
# Forwarded: no
# Author: Tomas Hoger <thoger@redhat.com>
# Last-Update: 2014-12-20

diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' ghostscript-8.71.dfsg.1~/jasper/src/libjasper/jp2/jp2_dec.c ghostscript-8.71.dfsg.1/jasper/src/libjasper/jp2/jp2_dec.c
--- ghostscript-8.71.dfsg.1~/jasper/src/libjasper/jp2/jp2_dec.c	2015-01-22 13:04:35.000000000 -0500
+++ ghostscript-8.71.dfsg.1/jasper/src/libjasper/jp2/jp2_dec.c	2015-01-22 13:04:42.909802756 -0500
@@ -447,6 +447,11 @@
 	/* Determine the type of each component. */
 	if (dec->cdef) {
 		for (i = 0; i < dec->numchans; ++i) {
+			/* Is the channel number reasonable? */
+			if (dec->cdef->data.cdef.ents[i].channo >= dec->numchans) {
+				jas_eprintf("error: invalid channel number in CDEF box\n");
+				goto error;
+			}
 			jas_image_setcmpttype(dec->image,
 			  dec->chantocmptlut[dec->cdef->data.cdef.ents[i].channo],
 			  jp2_getct(jas_image_clrspc(dec->image),
