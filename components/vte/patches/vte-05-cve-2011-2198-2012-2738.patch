--- vte-0.26.2/src/table.c.old	Tue Jan 13 12:54:05 2015
+++ vte-0.26.2/src/table.c	Tue Jan 13 12:55:23 2015
@@ -550,7 +550,7 @@
 		if (G_UNLIKELY (*array == NULL)) {
 			*array = g_value_array_new(1);
 		}
-		g_value_set_long(&value, total);
+		g_value_set_long(&value, CLAMP (total, 0, G_MAXUSHORT));
 		g_value_array_append(*array, &value);
 	} while (i++ < arginfo->length);
 	g_value_unset(&value);
--- vte-0.26.2/src/vteseq.c.old	Tue Jan 13 12:26:44 2015
+++ vte-0.26.2/src/vteseq.c	Tue Jan 13 12:52:14 2015
@@ -532,9 +532,10 @@
 
 /* Call another function a given number of times, or once. */
 static void
-vte_sequence_handler_multiple(VteTerminal *terminal,
-			      GValueArray *params,
-			      VteTerminalSequenceHandler handler)
+vte_sequence_handler_multiple_limited(VteTerminal *terminal,
+				      GValueArray *params,
+				      VteTerminalSequenceHandler handler,
+				      glong max)
 {
 	long val = 1;
 	int i;
@@ -544,7 +545,7 @@
 		value = g_value_array_get_nth(params, 0);
 		if (G_VALUE_HOLDS_LONG(value)) {
 			val = g_value_get_long(value);
-			val = MAX(val, 1);	/* FIXME: vttest. */
+			val = CLAMP(val, 1, max);	/* FIXME: vttest. */
 		}
 	}
 	for (i = 0; i < val; i++)
@@ -551,7 +552,23 @@
 		handler (terminal, NULL);
 }
 
+static void
+vte_sequence_handler_multiple(VteTerminal *terminal,
+                              GValueArray *params,
+                              VteTerminalSequenceHandler handler)
+{
+  vte_sequence_handler_multiple_limited(terminal, params, handler, G_MAXUSHORT);
+}
 
+static void
+vte_sequence_handler_multiple_r(VteTerminal *terminal,
+                                GValueArray *params,
+                                VteTerminalSequenceHandler handler)
+{
+  vte_sequence_handler_multiple_limited(terminal, params, handler,
+					terminal->column_count - terminal->pvt->screen->cursor_current.col);
+}
+
 /* Manipulate certain terminal attributes. */
 static void
 vte_sequence_handler_decset_internal(VteTerminal *terminal,
@@ -1375,7 +1392,7 @@
 static void
 vte_sequence_handler_DC (VteTerminal *terminal, GValueArray *params)
 {
-	vte_sequence_handler_multiple(terminal, params, vte_sequence_handler_dc);
+	vte_sequence_handler_multiple_r(terminal, params, vte_sequence_handler_dc);
 }
 
 /* Delete a line at the current cursor position. */
@@ -1570,7 +1587,7 @@
 static void
 vte_sequence_handler_IC (VteTerminal *terminal, GValueArray *params)
 {
-	vte_sequence_handler_multiple(terminal, params, vte_sequence_handler_ic);
+	vte_sequence_handler_multiple_r(terminal, params, vte_sequence_handler_ic);
 }
 
 /* Begin insert mode. */
@@ -1768,7 +1785,7 @@
 static void
 vte_sequence_handler_RI (VteTerminal *terminal, GValueArray *params)
 {
-	vte_sequence_handler_multiple(terminal, params, vte_sequence_handler_nd);
+	vte_sequence_handler_multiple_r(terminal, params, vte_sequence_handler_nd);
 }
 
 /* Save cursor (position). */
@@ -2760,8 +2777,7 @@
 {
 	GValue *value;
 	VteScreen *screen;
-	long param, end, row;
-	int i;
+	long param, end, row, i, limit;
 	screen = terminal->pvt->screen;
 	/* The default is one. */
 	param = 1;
@@ -2779,7 +2795,12 @@
 	} else {
 		end = screen->insert_delta + terminal->row_count - 1;
 	}
-	/* Insert the new lines at the cursor. */
+	/* Only allow to insert as many lines as there are between this row
+	 * and the end of the scrolling region. See bug #676090.
+	 */
+	limit = end - row + 1;
+	param = MIN (param, limit);
+
 	for (i = 0; i < param; i++) {
 		/* Clear a line off the end of the region and add one to the
 		 * top of the region. */
@@ -2800,8 +2821,7 @@
 {
 	GValue *value;
 	VteScreen *screen;
-	long param, end, row;
-	int i;
+	long param, end, row, i, limit;
 
 	screen = terminal->pvt->screen;
 	/* The default is one. */
@@ -2820,6 +2840,13 @@
 	} else {
 		end = screen->insert_delta + terminal->row_count - 1;
 	}
+
+	/* Only allow to delete as many lines as there are between this row
+	 * and the end of the scrolling region. See bug #676090.
+	 */
+	limit = end - row + 1;
+	param = MIN (param, limit);
+
 	/* Clear them from below the current cursor. */
 	for (i = 0; i < param; i++) {
 		/* Insert a line at the end of the region and remove one from
