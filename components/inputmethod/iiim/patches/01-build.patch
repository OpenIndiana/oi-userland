--- im-sdk/iiimxcf/xiiimp.so/iiimp/iiimpIM.h	2010-07-20 11:17:19.000000000 +0400
+++ im-sdk/iiimxcf/xiiimp.so/iiimp/iiimpIM.h	2015-03-18 22:18:22.525621094 +0300
@@ -261,7 +261,11 @@
 extern void my_strfreev (char **);
 #endif /* HAS_IIIM_PROPERTIES */
 
+#ifndef _SETVKBTARGET_DEFINED
+#define _SETVKBTARGET_DEFINED
 extern void SetVKBTarget(XicCommon);
+#endif
+
 extern void RegisterVKBFilter(XicCommon);
 extern void UnregisterVKBFilter(XicCommon);
 
--- im-sdk/iiimxcf/xiiimp.so/iiimp/iiimcfFun.c	2009-08-05 10:47:37.000000000 +0400
+++ im-sdk/iiimxcf/xiiimp.so/iiimp/iiimcfFun.c	2015-03-18 22:16:36.911039139 +0300
@@ -40,6 +40,11 @@
 
 */
 
+#ifndef _SETVKBTARGET_DEFINED
+#define _SETVKBTARGET_DEFINED
+static void SetVKBTarget();
+#endif
+
 #include "iiimpReq.h"
 #include "iiimpIM.h"
 #include "guiIM.h"
@@ -57,6 +62,7 @@
 #include <stdio.h>
 #include <locale.h>
 #include <string.h>
+#include <strings.h>
 #include <sys/utsname.h>
 #include <iiimcf.h>
 #include <langinfo.h>
--- im-sdk/iiimgcf/gtkimcontextiiim.c.1	2015-03-18 23:01:56.994114765 +0300
+++ im-sdk/iiimgcf/gtkimcontextiiim.c	2015-03-18 23:03:03.756444278 +0300
@@ -1048,9 +1048,10 @@
 
 static gchar **get_lang_array(gint *limit) {
   gint n;
+  int i;
   gchar *lang_list = get_lang_list();
   gchar **array = g_strsplit_set(lang_list, ";", -1);
-  for (int i = 0;; i++) {
+  for (i = 0;; i++) {
     if (array[i] == NULL) {
       *limit = i;
       break;
--- im-sdk/iiimsf/src/IMKeyUtils.cpp.1	2015-03-18 23:15:34.678659582 +0300
+++ im-sdk/iiimsf/src/IMKeyUtils.cpp	2015-03-18 23:16:09.980301651 +0300
@@ -41,6 +41,7 @@
 */
 #include "IMLog.hh"
 #include "IMKeyUtils.hh"
+#include <strings.h>
 
 /*******************************************************************************
                                  IMKeySpec
--- im-sdk/iiimsf/src/LECustomData.cpp.~1~	2015-03-19 00:18:57.887620644 +0300
+++ im-sdk/iiimsf/src/LECustomData.cpp	2015-03-19 00:20:38.860767823 +0300
@@ -135,7 +135,7 @@
     }
     size_t left = ICONV_BUF_SIZ;
     char *out_buf = iconv_buf;
-    size_t ret = iconv (utf16to8_cd, &in_buf, &in_size, &out_buf, &left);
+    size_t ret = iconv (utf16to8_cd, (char**)&in_buf, &in_size, &out_buf, &left);
     if (ret != (size_t)-1) {
       iconv_buf[ICONV_BUF_SIZ - left] = '\0';
       return strdup (iconv_buf);
