diff -ruNa ibus-1.3.9.org/bus/connection.c ibus-1.3.9/bus/connection.c
--- ibus-1.3.9.org/bus/connection.c	2009-11-24 11:37:12.000000000 +0900
+++ ibus-1.3.9/bus/connection.c	2010-01-18 15:38:29.364596150 +0900
@@ -27,8 +27,7 @@
    (G_TYPE_INSTANCE_GET_PRIVATE ((o), BUS_TYPE_CONNECTION, BusConnectionPrivate))
 
 /* BusConnectionPriv */
-struct _BusConnectionPrivate {
-};
+struct _BusConnectionPrivate ;
 typedef struct _BusConnectionPrivate BusConnectionPrivate;
 
 // static guint            _signals[LAST_SIGNAL] = { 0 };
diff -ruNa ibus-1.3.9.org/bus/inputcontext.c ibus-1.3.9/bus/inputcontext.c
--- ibus-1.3.9.org/bus/inputcontext.c	2010-08-11 10:27:32.430968000 +0800
+++ ibus-1.3.9/ibus/inputcontext.c	2010-08-11 10:31:06.641113000 +0800
@@ -1119,11 +1119,15 @@
     return context->has_focus;
 }
 
+static BusInputContext *target_context = NULL;
+
 void
 bus_input_context_focus_in (BusInputContext *context)
 {
     g_assert (BUS_IS_INPUT_CONTEXT (context));
 
+    target_context = context;
+
     if (context->has_focus)
         return;
 
@@ -1163,6 +1167,30 @@
 }
 
 void
+bus_input_context_send_text_to_last_focused (IBusText *text)
+{
+    if (target_context) {
+        bus_input_context_send_signal (target_context,
+                                       "CommitText",
+                                       IBUS_TYPE_TEXT, &text,
+                                       G_TYPE_INVALID);
+    }
+}
+
+void
+bus_input_context_send_key_to_last_focused (guint keyval, guint keycode, guint state)
+{
+    if (target_context) {
+        bus_input_context_send_signal (target_context,
+                                       "ForwardKeyEvent",
+                                       G_TYPE_UINT, &keyval,
+                                       G_TYPE_UINT, &keycode,
+                                       G_TYPE_UINT, &state,
+                                       G_TYPE_INVALID);
+    }
+}
+
+void
 bus_input_context_focus_out (BusInputContext *context)
 {
     g_assert (BUS_IS_INPUT_CONTEXT (context));
