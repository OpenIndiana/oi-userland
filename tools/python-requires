#! /usr/bin/python
#
# This file and its contents are supplied under the terms of the
# Common Development and Distribution License ("CDDL"), version 1.0.
# You may only use this file in accordance with the terms of version
# 1.0 of the CDDL.
#
# A full copy of the text of the CDDL should have accompanied this
# source.  A copy of the CDDL is also available via the Internet at
# http://www.illumos.org/license/CDDL.
#

#
# Copyright 2022 Marcel Telka
#

#
# Print requirements for a package.
# Evaluated and normalized.
# With optional EXTRA parameter passed print requirements for such extra only.
#

import sys
import re

try:
    try:
        from importlib.metadata import requires
    except ImportError:
        from importlib_metadata import requires
    from packaging.requirements import Requirement
    from packaging.markers import UndefinedEnvironmentName
except:
    exit()

if len(sys.argv) < 2:
    exit()

e = {'extra': sys.argv[2]} if len(sys.argv) > 2 else None
# packaging up to 21.3 raises UndefinedEnvironmentName when extra is not
# defined in environment, but marker contains it.  This should change in new
# packaging once released.  See https://github.com/pypa/packaging/pull/550.  To
# workaround this (so we do not need to handle exceptions) we pass empty extra
# in environment when we do not want any extra.
noe = {'extra': ''}

try:
    for req in requires(sys.argv[1]):
        r = Requirement(req)
        m = r.marker
        if (not m and not e) or m and ((not e and m.evaluate(noe)) or (e and not m.evaluate(noe) and m.evaluate(e))):
            print(re.sub(r"[-_.]+", "-", r.name).lower())
except:
    pass
